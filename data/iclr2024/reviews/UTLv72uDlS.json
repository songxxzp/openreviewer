[
    {
        "id": "pMWinsqQw9",
        "forum": "UTLv72uDlS",
        "replyto": "UTLv72uDlS",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission8232/Reviewer_NFTL"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission8232/Reviewer_NFTL"
        ],
        "content": {
            "summary": {
                "value": "This paper studies control problems in which a neural network policy must satisfy a signal temporal logical formula on a long time horizon. The specific contributions are twofold: (1) a differentiable technique for evaluating the temporal logic formula, and (2) a lower-complexity approach to evaluating gradients which also reduces the chances of exploding gradient issues. Simulation experiments illustrate the relative impact of these two techniques."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "- The problem of long-horizon planning is certainly challenging and important, and there is a gap in the literature here with regard to learning to satisfy temporal logic specifications.\n- The proposed technique for smoothing the specification is intuitive and easy to follow. (The same cannot be said of the gradient approximation scheme.)\n- The proposed approaches appear to handle the tested scenarios well, and tradeoffs are readily apparent and well explained."
            },
            "weaknesses": {
                "value": "- nit: there are quite a few sporadic syntax and grammar issues, e.g. in the first paragraph there are two instances of improper spacing near punctuation marks. Similar issues around references: you may consider using the \\citep{} option for parenthetical citations.\n- In Section 3, the paper clearly states that a condition must be satisfied for all initial states, yet the training objective is an expectation measured at only a finite number of samples. The appendix contains an abrupt mention of this point which leads me to believe there is more going on here, but it is a fairly serious omission from the main text and is also not really clarified in the appendix.\n- In \u201cChallenge 1\u201d and elsewhere, it is asserted that existing frameworks for stochastic optimization cannot handle non-smooth objectives. This is patently false: every ReLU network ever has been non-smooth, and yet SGD/Adam/\u2026 seem to do just fine. Obviously, there is also a rich theory in non-smooth optimization, sub-gradient methods, etc. My objection here is mainly that the paper just asserts that smoothness is critical without ever supporting that claim.\n- Where is the proof of Lemma 1? It seems important, but is nowhere to be found. Same for the equation at the bottom of page 4.\n- The modified swish and soft plus functions below Ex. 1 appear to be non-smooth, and what smoothness there is derives only from numerical precision issues. This is less than satisfying. Surely if we are hitting numerical precision issues that points to something more subtle going on, right? For example, it is well-documented in the literature that unstable closed loop dynamics yield exploding gradients in these kinds of policy optimization problems. \n- What is the parameter \\bar\\rho in Alg. 1? (nit: note also that \u201cAlgo\u201d is not a common abbreviation for Algorithm. I believe the IEEE standard, at at least, is \u201cAlg.\u201d)\n- I do not follow the entire discussion of the gradient approximation scheme. Fig. 1 makes sense to me and I follow that part of the discussion, but my concern is that the sampling discussion following Definition 2 (and especially the part to the right of Alg. 2) is completely uninterpretable to me. A couple direct questions:\n    - Is the matrix S actually being approximated at specific rows, or are entire rows being left out?\n    - How is it more efficient to compute the gradient at a sampled point? Doesn\u2019t this essentially require backpropagating through all time steps from the end of time to the beginning, regardless of whether or not you are going to then throw away some of the gradient information?\n- Please help me to understand the last sentence before Section 4. Didn\u2019t the guarantees come from simply evaluating the (potentially smoothed) STL formula from every initial condition\u2014i.e., the optimization objective? Why does it matter if we change the algorithm used to approximate gradients?\n- nit: \"dubins\" should be capitalized in the first paragraph of section 4. \n- The authors point to quite a lot of closely related work in this space: I feel that the experiments should benchmark the proposed approaches against one or two of these recent methods. The \u201ccomparison\u201d paragraph on page 8 alludes to one such comparison, but it seems like a straw man because of the radical difference in performance. If this is not a straw man comparison, the paper should do a much clearer job of establishing why the baseline is a strong baseline. \n    - Relatedly, I would be interested to see how much of a difference the smoothed STL formula makes in learning (essentially an ablation of the first contribution of this paper)."
            },
            "questions": {
                "value": "please see above"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission8232/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1697912145758,
        "cdate": 1697912145758,
        "tmdate": 1699637023085,
        "mdate": 1699637023085,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "5JulOFUYdQ",
        "forum": "UTLv72uDlS",
        "replyto": "UTLv72uDlS",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission8232/Reviewer_pDd8"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission8232/Reviewer_pDd8"
        ],
        "content": {
            "summary": {
                "value": "This paper presents an algorithm of synthesizing neural policies for signal temporal logic specifications. Since RNNs over long\ntime horizon has problems of exploding and vanishing gradients, two main claimed features are proposed: smooth operators for robustness representation and a sampling-based approach to approximate the gradient."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "1. The related work is well-written and the authors are aware of many recent developments.\n2. The paper is well-presented and easy to follow.\n3. The proposed features and algorithm are effective.\n4. The benchmarking environments are standard and convincing in the community."
            },
            "weaknesses": {
                "value": "My main concern lies in the experimental comparison. I think the authors are recommended to compare with some other baselines because readers are not sure how good are the learned policies on benchmarks. I would suggest to compare with the standard MPC approach using Mixed Integer Linear Program (MILP) [1] to see if the learned policies are close to the optimal policies returned by MILP or not. \n\nMILP has high computational complexity but still can be practically well-solved using tools like Gurobi --- so the benefits and potential drawbacks of neural net based STL synthesis over MILP should be clarified and also compared in practice.\n\n[1] Vasumathi Raman, Alexandre Donz\u00e9, Mehdi Maasoumy, Richard M Murray, Alberto SangiovanniVincentelli, and Sanjit A Seshia. Model predictive control with signal temporal logic specifications. In Proc. of CDC, pp. 81\u201387. IEEE, 2014."
            },
            "questions": {
                "value": "I do not have question."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "5: You are absolutely certain about your assessment. You are very familiar with the related work and checked the math/other details carefully."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission8232/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission8232/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission8232/Reviewer_pDd8"
                ]
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission8232/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698612231177,
        "cdate": 1698612231177,
        "tmdate": 1699637022967,
        "mdate": 1699637022967,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "LL2FeGMwjZ",
        "forum": "UTLv72uDlS",
        "replyto": "UTLv72uDlS",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission8232/Reviewer_Ga35"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission8232/Reviewer_Ga35"
        ],
        "content": {
            "summary": {
                "value": "This paper addresses the problem of finding a controller satisfying a given Signal Temporal Logic (STL) specification in a given environment. The algorithm proceeds by sampling trajectories from a known environment given a parameterized policy after which a smoothened differentiable temporal logic structure is used to provide feedback. The policy is then updated using this feedback signal until a positive robustness score is reached indicating the specification is satisfied. The paper further introduces a technique to handle long horizon problems by approximating the gradient with fewer samples after identifying the critical predicate. Experimental results compare the effectiveness of these two methods over a range of task horizons and problems."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "- Provides a lower bound to STL evaluation using differentiable computation graphs that fit well into neural network architectures.\n- Addresses the vanishing gradient problem for long horizon tasks by means of sampling the gradients at given time steps."
            },
            "weaknesses": {
                "value": "- Lack of comparisons made to the state-of-the-art methods [1,2,3] for control using STL. The presented algorithms are shown without reporting results on enough competing methods. This brings into question the relative benefits of the given approach.\n- The motivation for a smooth lower bound on the STL score is mentioned but not sufficiently justified (viz. empirically). It would be interesting to see how far the STL2NN method would work without the approximations provided by STL2LB in Algorithm 1. Another useful smoothing technique could be as introduced in [3].\n- Assumes differentiability of the simulator environment and knowledge of its transition functions to calculate the policy parameter gradients. This may be infeasible in many problems.\n\nReferences:\n\n[1] Backpropagation through Signal Temporal Logic Specifications: Infusing Logical Structure into Gradient-Based Methods, Leung et al., WAFR 2020\n\n[2]  Robust Counterexample-guided Optimization for Planning from Differentiable Temporal Logic, Dawson & Fan, 2022\n\n[3] A Smooth Robustness Measure of Signal Temporal Logic for Symbolic Control, Gilpin et al., LCSS 2021"
            },
            "questions": {
                "value": "1. In which steps in Algorithm 2 is the critical predicate $h^*$ and $k^*$ used? This is not entirely clear to me.\n2. Is it possible to include comparisons to other algorithms in the same environment such as [1]? If not, why is that the case?\n3. The introduction mentions  an RNN-based implementation, but this is not explained further in the text. Could there be a section in the appendix with more implementation details? Is there a clear benefit versus not using a fully connected network with the observation (and say the current time) as input being the policy?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "5: marginally below the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission8232/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission8232/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission8232/Reviewer_Ga35"
                ]
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission8232/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698796344074,
        "cdate": 1698796344074,
        "tmdate": 1699637022787,
        "mdate": 1699637022787,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "W8HPoP5Hsc",
        "forum": "UTLv72uDlS",
        "replyto": "UTLv72uDlS",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission8232/Reviewer_xgYh"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission8232/Reviewer_xgYh"
        ],
        "content": {
            "summary": {
                "value": "The authors propose an algorithm for optimizing neural network control policies to satisfy STL specifications on their behavior. They build on prior work in differentiating through a smoothed approximation of the STL robustness signal, adding two core contributions. First, they propose a smooth approximation scheme which guarantees a lower bound on the true robustness while avoiding numerical issues. Second they propose a gradient approximation scheme to manage issues with gradients exploding or vanishing over long temporal horizons, involving evaluating the gradient of the trajectory wrt to policy parameters only at certain timesteps."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "1 poor"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "- The paper tackles an important challenge of enabling STL-based training over long temporal horizons without running into the challenges such as vanishing gradients.\n- The background on STL and STL robustness was thorough and helpful, though this may have come at the expense of having not enough room to clearly explain the core contributions of this work.\n- The experimental results on show promising results in effectively satisfying STL formulae for reasonably high-dimensional systems over long temporal horizons."
            },
            "weaknesses": {
                "value": "- The paper was difficult to follow. In particular, section 3.3 detailing the sampling based approximation of the gradient was quite hard to understand. A figure to help illustrate the trajectory subsampling approach would significantly improve the clarity of the paper.\n- The impact of STL2LB as compared to other strategies to smooth STL formulae was not clearly demonstrated.\n- The experimental comparisons were very limited: quantitative comparisons were only presented against ablations of the proposed approach, and not against many of the other cited works on training NN policies to satisfy STL objectives. In addition, there was no comparison against an approach which used the critical predicate-based time sampling, but without the waypoint functions. Thus it was not clear what improvement the critical predicate-based sampling strategy had over random time sampling.\n- The paper would be strengthened with theoretical results detailing what factors impact the quality of the sampling-based gradient approximation."
            },
            "questions": {
                "value": "- Do you have empirical results investigating how well the sampling-based gradient strategy approximates the true gradient?\n- The solution to the computational problems with the swish and softplus functions seems to break differentiability, especially in the case of the swish function. Would this lead to issues during optimization?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "2: You are willing to defend your assessment, but it is quite likely that you did not understand the central parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 4,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission8232/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1699227061652,
        "cdate": 1699227061652,
        "tmdate": 1699637022639,
        "mdate": 1699637022639,
        "license": "CC BY 4.0",
        "version": 2
    }
]