[
    {
        "id": "fcFsLxVQJc",
        "forum": "4iPw1klFWa",
        "replyto": "4iPw1klFWa",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission3828/Reviewer_hP8B"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission3828/Reviewer_hP8B"
        ],
        "content": {
            "summary": {
                "value": "This paper proposes to approximate feedforward layers with kernels, thereby achieving better computational efficiency and sometimes better accuracy. This paper empirically verifies their claim on many vision and language datasets over various architectures."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "This paper is well-written, easy to follow, and empirical results seem strong."
            },
            "weaknesses": {
                "value": "The main weakness of the paper is that I am not convinced by whether SNNK can practically replace feed forward layers in practice. See Questions for more details"
            },
            "questions": {
                "value": "1. This paper talks a lot about achieving computational efficiency through dimensionality reduction (if m << d). Could I achieve the same effect by using a feed forward layer but simply reducing the latent dimension from d to m?\n2. Could the authors share empirical evidence that replacing feedforward layers with SNNK indeed results in faster training?\n3. In my understanding if SNNK were to replace feed forward layers then there should be an experiment whether the authors replace every feed forward network in Transformers with SNNK and report the results?\n4. Is there any particular reason as to why the SNNK adapted architectures in Figure 2 look the way they are? In other words, how might one understand the interplay between SNNK and feed forward layers in the same architecture?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "details_of_ethics_concerns": {
                "value": "N/A"
            },
            "rating": {
                "value": "5: marginally below the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission3828/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698437478245,
        "cdate": 1698437478245,
        "tmdate": 1699636340571,
        "mdate": 1699636340571,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "b9oeLQuzFa",
        "forum": "4iPw1klFWa",
        "replyto": "4iPw1klFWa",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission3828/Reviewer_YEib"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission3828/Reviewer_YEib"
        ],
        "content": {
            "summary": {
                "value": "This paper introduces scalable neural network kernels (SNNKs), which disentangle the inputs and parameters of a feedforward layer before connecting them via a dot product kernel. The key ideas are:\n\n- SNNKs approximate regular feedforward layers but with reduced parameters by replacing the weight matrix with a low-dimensional embedding. This allows compression of the layer. \n\n- They introduce universal random feature maps to instantiate different SNNK variants based on the Fourier transform of the activation function.\n\n- SNNKs can express more complex relationships beyond standard feedforward layers. They demonstrate this with a ReLU-SNNK layer related to arc-cosine kernels.\n\n- SNNKs enable a neural network bundling process to compactify model architectures. In the extreme case, the entire network can be expressed as a two-tower computation.\n\n- For certain losses like MSE, the optimal parameters of a fully bundled network can be solved in closed form, bypassing backpropagation.\n\n- Experiments validate SNNKs on tasks ranging from kernel approximation to Transformer fine-tuning. SNNK adapters match baseline accuracy with 5x fewer parameters.\n\n- Bundled SNNK models maintain accuracy while reducing parameters 30x. Closed-form solutions for regression produce strong results.\n\nIn summary, the paper provides a thorough theoretical analysis of SNNKs along with empirical validation. The ideas open interesting research directions in model compression, faster training, and expressive power beyond standard neural network layers."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "Here are some of the main strengths of this paper:\n\n- It makes an insightful connection between scalable kernel methods and neural network layers, introducing a novel perspective on feedforward layers.\n\n- The concept of SNNKs is very clearly presented along with detailed theoretical analysis and constructions.\n\n- The Fourier transform based universal random feature mechanism to instantiate SNNKs is interesting and useful.\n\n- SNNKs provably increase expressive power over standard layers, as shown through the analysis of the ReLU-SNNK layer. \n\n- The neural network bundling process enabled by SNNKs is an impactful idea for model compression and acceleration.\n\n- The paper provides extensive empirical validation ranging from synthetic data to large Transformer models across vision and language.\n\n- Both model compression and training acceleration are demonstrated convincingly through the experiments.\n\n- The writing is clear, incremental, and easy to follow. Theoretical concepts are explained intuitively.\n\nOverall, the solid theoretical foundation, novel perspectives introduced, and thorough experimentation are major strengths. The paper makes well-motivated connections between areas leading to useful techniques for efficient deep learning."
            },
            "weaknesses": {
                "value": "Some potential weaknesses or limitations of this paper:\n\n- The focus is on feedforward fully-connected layers, not convolutional or recurrent layers commonly used in modern networks.\n\n- Experiments are limited to standard datasets and models; more complex domains like bioinformatics are not evaluated. \n\n- There is no investigation into how SNNKs affect representation learning or generalization. The emphasis is on compression.\n\n- Optimization and learning dynamics with SNNKs are not analyzed, apart from the fully bundled case.\n\n- The work does not connect to broader topics like kernel methods or metric learning. \n\n- Ablation studies teasing apart the contributions of different components could be more detailed.\n\n- The writing in parts of the theory and experiments lacks clarity or intuitive explanations.\n\n- Practical guidance on hyperparameter selection and tuning SNNKs is limited.\n\n- Applications beyond efficiency, like using SNNKs for privacy or interpretability, are not explored.\n\n- Potential negative results or limitations of SNNKs compared to standard layers are not discussed.\n\nIn summary, the lack of experiments on more complex data and models, limited analysis of learning dynamics, and minimal connections to related areas are notable weaknesses. However, the paper makes excellent contributions within its defined scope."
            },
            "questions": {
                "value": "Please comment on the issues raised in the weaknesses part."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "5: marginally below the acceptance threshold"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission3828/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698443712068,
        "cdate": 1698443712068,
        "tmdate": 1699636340487,
        "mdate": 1699636340487,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "j7zMZk8Rau",
        "forum": "4iPw1klFWa",
        "replyto": "4iPw1klFWa",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission3828/Reviewer_uu7e"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission3828/Reviewer_uu7e"
        ],
        "content": {
            "summary": {
                "value": "The paper introduces Structurally Neural Network Kernels (SNNK), a novel approach to modeling interactions in neural networks. By exploiting the low-rank nature of neural networks, SNNKs offer a significant reduction in parameter count. When used in multilayer perceptrons and transformer models, SNNKs consistently outperformed traditional baselines across multiple datasets, including synthetic data, toy experiments, UCI datasets, GLUE, and CIFAR. A primary advantage is the reduction in storage requirements without compromising accuracy. The work suggests SNNK layers can be integrated seamlessly with other popular techniques, providing both efficiency and enhanced performance, making them a promising tool for neural network architectures."
            },
            "soundness": {
                "value": "4 excellent"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "4 excellent"
            },
            "strengths": {
                "value": "The paper introduces a new computational model, the scalable neural network kernels (SNNK), providing a novel approach to efficient neural network design, particularly for replacing feedforward layers in MLPs.\n\nThe design of SNNKs ensures that inputs and parameters are disentangled, leading to efficient final computations via a dot-product kernel, which can greatly reduce computational overhead.\n\nThe bundling process highlighted in the paper leads to the compactification of the neural network stack, suggesting potential storage savings and efficiency improvements.\n\nThe paper does not rely solely on theoretical claims but provides empirical analysis, spanning from pointwise kernel estimation to practical application scenarios like training Transformers with adapters, strengthening the validity of the proposed methodology."
            },
            "weaknesses": {
                "value": "The authors should provide some explanation or intuition why their model doesn\u2019t work well in the some of the experiments they have performed.\n\nThe analysis of how deep of a feed forward network can be approximated using the proposed method should be analyzed in further details. \n\nCan scalable neural network kernel be applied in any scenario or there are some specific scenarios when SKNN won\u2019t work well. Authors should discuss about such datasets/models. If there is none, then authors should also discuss that. They can include some of the experiments involving ImageNet datasets and other models to further support the claim.  \n\nIt would be great to analyse how well the SKNN generalizes to the unseen datasets or in general generalizability as compared to normal network network,"
            },
            "questions": {
                "value": "I have mentioned my concerns I the weakness. Authors can go over the points mentioned in the weakness and clarify them."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "8: accept, good paper"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission3828/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698796972328,
        "cdate": 1698796972328,
        "tmdate": 1699636340387,
        "mdate": 1699636340387,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "Ioz9uV39qo",
        "forum": "4iPw1klFWa",
        "replyto": "4iPw1klFWa",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission3828/Reviewer_zChr"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission3828/Reviewer_zChr"
        ],
        "content": {
            "summary": {
                "value": "The paper introduces Scalable Neural Network Kernels (SNNKs), a novel alternative to regular feedforward layers (FFLs) in neural network architectures. These SNNKs, while approximating the behavior of FFLs, bring in computational advantages by separating the inputs from the neural network's parameters and then connecting them through a dot-product kernel.\n\nThe primary contribution is the conceptualization of SNNKs that can mimic FFLs but have better computational attributes. Unlike traditional FFLs, these kernels can capture complex relationships beyond just the functions of the dot-products of parameter-input vectors.\n\nThe authors propose a bundling process utilizing SNNKs to condense the architecture of deep neural networks. This leads to compression benefits, and when fully implemented, it results in a bundled network. Interestingly, for specific loss functions like mean squared error, optimal parameters for this bundled network can be explicitly derived, potentially bypassing the need for backpropagation.\n\nAn auxiliary outcome of the research is the introduction of a mechanism called \"universal random features,\" which is instrumental in formulating various SNNK variants. This mechanism also holds significance in scalable kernel methods.\n\nThe paper goes on to offer a thorough empirical evaluation of the proposed ideas, ranging from point-wise kernel estimation to the fine-tuning of Transformers using new adapter layers inspired by SNNKs. Remarkably, their method achieves up to a 5x reduction in trainable parameters while retaining competitive accuracy."
            },
            "soundness": {
                "value": "4 excellent"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "4 excellent"
            },
            "strengths": {
                "value": "The paper introduces the concept of Scalable Neural Network Kernels (SNNKs), a fresh take on neural network architecture. This novel approach to approximating regular feedforward layers (FFLs) with computational benefits showcases a high degree of originality. The \"neural network bundling process\" and the notion of a fully bundled network present innovative methods for condensing deep neural network architectures. The \"universal random features\" mechanism, which aids in the formulation of various SNNK variants, is another original contribution.\n\nThe research maintains a high standard of quality, underpinned by a combination of rigorous theoretical foundations and empirical evaluations. Extensive experiments have been conducted across various architectures and datasets, ensuring that the proposed methods are tested in diverse scenarios. The results, especially the reduction in trainable parameters without significant performance losses, stand testament to the quality of the work.\n\nThe paper is structured well, with a clear delineation between theoretical concepts, methodologies, and experimental results. While the document is dense with technical details, the authors have made efforts to explain concepts clearly, aided by visual representations where necessary. The inclusion of a comprehensive list of references and contextualization relative to prior work adds to the clarity, helping readers understand the evolution and significance of the presented ideas.\n\nThe versatility of SNNKs, as demonstrated by their applicability in various architectures (from PINNs to Transformers), signifies their broad utility. By addressing the computational challenges associated with traditional kernel methods and FFLs, the paper offers solutions that could pave the way for more efficient and scalable neural network models in the future."
            },
            "weaknesses": {
                "value": "The paper could benefit from a more direct comparison of SNNKs with other existing solutions or methods aimed at network compression or efficiency. Highlighting the unique advantages of SNNKs over these methods would further solidify its significance.\n\nThe paper could delve deeper into the robustness of the SNNK approach. Are there scenarios where the approximation might break down? Understanding the edge cases and potential pitfalls would be crucial for practitioners looking to adopt this method.\n\nProviding more explicit details about the implementation, hyperparameters used, or potential challenges faced during the experiments would be beneficial for researchers aiming to replicate or build upon the work."
            },
            "questions": {
                "value": "The paper mentions that SNNKs can approximate FFLs. Could you provide more insight into the approximation error? In what scenarios might the approximation be suboptimal, and how does the error scale with the depth or complexity of the network?\n\nit would be helpful to understand more about the bundling process's efficiency. How does the network's performance vary as more layers are bundled, especially in deeper architectures?\n\nIn the experiments where SNNKs achieved up to a 5x reduction in trainable parameters, were there any notable trade-offs in terms of latency, inference time, or other metrics?\n\nCould you elaborate on the key differences between the \"universal random features\" mechanism and traditional random feature approaches? What are the primary advantages of this new mechanism?\n\nWhen applying SNNKs to Transformers, especially in the pooler layer linearization, were there any specific challenges or nuances encountered, given the attention mechanisms and positional encodings in such models?\n\nGiven the focus on computational efficiency, were there any hardware-specific optimizations or considerations when implementing SNNKs? How do SNNKs perform across different hardware platforms, like CPUs, GPUs, and TPUs?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "8: accept, good paper"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 4,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission3828/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698804605990,
        "cdate": 1698804605990,
        "tmdate": 1699636340306,
        "mdate": 1699636340306,
        "license": "CC BY 4.0",
        "version": 2
    }
]