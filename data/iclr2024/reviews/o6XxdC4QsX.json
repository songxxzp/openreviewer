[
    {
        "id": "A5QZ3pq5ld",
        "forum": "o6XxdC4QsX",
        "replyto": "o6XxdC4QsX",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission4866/Reviewer_Z4ry"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission4866/Reviewer_Z4ry"
        ],
        "content": {
            "summary": {
                "value": "This paper unveils the STUDENTEVAL benchmark, a distinctive tool tailored for gauging the proficiency of Code LLMs using prompts penned by novice programmers. Encompassing 1,749 student-crafted descriptions spanning 48 coding challenges, STUDENTEVAL proves to be a more discerning measure of model performance than its contemporaries. Delving deeper, the authors discern that even the most apt student prompts can guide models towards churning out a diverse range of semantically varied programs. In summation, this paper heralds a new dawn for the LLM community. It not only introduces a benchmark of novel design but also illuminates the avenues through which LLMs can be fine-tuned to adeptly interpret and act upon prompts from budding programmers, especially in the realm of code assistance."
            },
            "soundness": {
                "value": "4 excellent"
            },
            "presentation": {
                "value": "4 excellent"
            },
            "contribution": {
                "value": "4 excellent"
            },
            "strengths": {
                "value": "1. **Innovative Benchmark Design**: The paper introduces the STUDENTEVAL benchmark, which stands out due to several unique features. Distinctly, it capitalizes on prompts penned by novice programmers, a departure from conventional benchmarks that typically rely on prompts from seasoned professionals. Moreover, the incorporation of multiple prompts for each problem facilitates a more granular evaluation of model efficacy. A key insight unveiled by the authors is that even the most adept student prompts can inadvertently steer models towards producing a spectrum of semantically varied codes \u2014 a revelation that is groundbreaking in its own right.\n\n2. **Clarity and Structure**: The document is impeccably articulated, boasting a lucid narrative complemented by logically sequenced sections and sub-sections. There's commendable transparency in detailing the benchmark's design, its evaluative approach, and the models chosen for the assessment. The analysis, particularly of the prompts, is rendered in an approachable fashion, ensuring it is digestible for a broad readership.\n\n3. **Significant Contributions**: This work makes pivotal strides on multiple fronts. Foremost, the STUDENTEVAL benchmark sets a new gold standard for appraising Code LLMs, especially with prompts emanating from fledgling programmers. By offering multiple prompts for each challenge and delving into the intricacies of prompt quality, the paper sheds light on the intricate art and science of crafting potent prompts for Code LLMs. Additionally, the rigorous evaluation of 12 state-of-the-art Code LLMs furnishes a valuable yardstick for comparative model performance."
            },
            "weaknesses": {
                "value": "1. **Absence of Error Case Analysis**: Though the paper effectively evaluates Code LLMs' performance on the STUDENTEVAL benchmark, it falls short in providing a meticulous dissection of the specific errors manifested by these models. A more comprehensive insight into the precise nature and categories of mistakes these LLMs are prone to would have been invaluable.\n\n2. **Scale Impact on Noisy Prompts**: The paper lacks a systematic exploration of the influence of model scale, especially concerning the noisy nature of student-written prompts. A deeper dive into understanding the types of errors LLMs are susceptible to, and how these errors could potentially be mitigated as the model scales (from 1B to 34B and upwards to ~200B like ChatGPT), would have enriched the analysis.\n\n3. **Cultural Diversity Overlooked**: The authors rightly acknowledge the paper as a \"snapshot of early CS education in the USA during the 2020s.\" However, a potential oversight lies in the lack of discussion surrounding the impact of cultural diversity on prompts and, by extension, on LLMs. Given that students from varying cultural backgrounds, including native English speakers and non-native English speakers, could possess distinct cognitive frameworks, their interaction with LLMs and their prompt construction might differ. In this benchmark dataset, a deeper exploration of how these cultural nuances influence LLM's prompt interpretation would have been a compelling addition to the paper."
            },
            "questions": {
                "value": "Please see weaknesses. I will update my evaluation after the discussion."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "details_of_ethics_concerns": {
                "value": "N.A."
            },
            "rating": {
                "value": "5: marginally below the acceptance threshold"
            },
            "confidence": {
                "value": "5: You are absolutely certain about your assessment. You are very familiar with the related work and checked the math/other details carefully."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission4866/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698465610220,
        "cdate": 1698465610220,
        "tmdate": 1699636470511,
        "mdate": 1699636470511,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "LlgQJhA8Mz",
        "forum": "o6XxdC4QsX",
        "replyto": "o6XxdC4QsX",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission4866/Reviewer_8Caj"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission4866/Reviewer_8Caj"
        ],
        "content": {
            "summary": {
                "value": "This paper presents a new Code LLM benchmark dataset, containing 1,749 student-written prompts over 58 problems. The authors evaluate different code LLMs on the benchmark, and have several empirical findings."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "- A evaluation dataset for code LLMs is constructed.\n- One key difference of the constructed benchmark is that multiple prompts for one program problem are provided. This leads to quality analysis of prompts, and thus has the value to teach students/developers how to write better prompts.\n- Based on the analysis of different prompts, some findings are summarized."
            },
            "weaknesses": {
                "value": "- The dataset contains only 58 problems. As a comparison, the MBPP benchmark consists of around 1,000 programming problems.\n\n- The authors claim that the STUDENTEVAL is a new benchmark for evaluating code LLMs. But why shall we use low-quality prompts to test LLMs? What makes it necessary? The authors may consider to re-organize the paper in this vein.\n\n- Although the authors list a few findings based on the analysis of the prompts, most of the findings are not very interesting and actionable. It would be better if the authors could summarize the key findings that are beneficial for future prompt writing."
            },
            "questions": {
                "value": "- The authors claim that the STUDENTEVAL is a new benchmark for evaluating code LLMs. But why shall we use low-quality prompts to test LLMs? What makes it necessary?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "5: marginally below the acceptance threshold"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission4866/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission4866/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission4866/Reviewer_8Caj"
                ]
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission4866/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698760547942,
        "cdate": 1698760547942,
        "tmdate": 1699636470415,
        "mdate": 1699636470415,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "ZlofE9avUv",
        "forum": "o6XxdC4QsX",
        "replyto": "o6XxdC4QsX",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission4866/Reviewer_RtHt"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission4866/Reviewer_RtHt"
        ],
        "content": {
            "summary": {
                "value": "This paper presents a benchmark for written prompts in the context of CS education who have completed only one Python course. The authors collected 1,749 prompts for 48 problems, written by 80 students.\nThe authors empirically evaluated prompts with nine code LLMs."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "4 excellent"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "1. Dataset paper for benchmarking prompts for CS education\n2. Different prompts for the same problem may identify students' weakness"
            },
            "weaknesses": {
                "value": "This paper has limitations from two perspectives: LLM benchmarking and CS education.\n\nFrom an LLM benchmarking perspective, the authors claimed that the dataset contains an average of 36 prompts per problem (Section 1: Introduction). \n\nHowever, as presented in Table 1 in the main paper and Table 2 in the Appendix, the prompts are mostly unreliable as shown by pass@1. Thus, evaluating the variation of prompting for a single problem is not reliable.\n\nFrom a CS education perspective, it is not clear whether the authors assessed i)how students' prompts for the same problem evolved, ii) did the students understood the underlying programming concepts and iii) did students understand why their prompt passed/failed.\nAn easier approach could have been done by deploying an online survey to assess underlying programming concepts."
            },
            "questions": {
                "value": "N/A"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission4866/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission4866/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission4866/Reviewer_RtHt"
                ]
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission4866/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698878607058,
        "cdate": 1698878607058,
        "tmdate": 1699636470342,
        "mdate": 1699636470342,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "c5cFThPKTA",
        "forum": "o6XxdC4QsX",
        "replyto": "o6XxdC4QsX",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission4866/Reviewer_4LKr"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission4866/Reviewer_4LKr"
        ],
        "content": {
            "summary": {
                "value": "Existing benchmarks to evaluate the performance of Code LLMs are run on professional and well-designed prompts written by experienced programmers. However, it\u2019s challenging for a beginner user to write prompts in an expert fashion, which creates a discrepancy in studying and leveraging the power of Code LLMs. Therefore, the authors proposed a new Code LLM benchmark called StudentEval which is written by beginner programmers. They collected 1749 written prompts for 48 programming problems and investigated the key components toward successful prompts with diverse Code LLMs."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "* Originality: This benchmark is novel and more practical since most users are non-expert programmers who are not able to write correct and professional prompts to guide LLM to generate high-quality inference outputs. This fills the gap between other existing benchmarks and the usage of normal users. \n* Significance: In practical scenarios, not all the users are experienced programmers. The proposed benchmark closes the gap between well-designed prompts and more intuitive prompts generated by normal users. Besides, collected prompts are multiple for each question and the analysis in this paper can serve as a guidance for improving the usage of Code LLMs."
            },
            "weaknesses": {
                "value": "* The way to select 48 problems can be ad-hoc and impacts the authority of evaluating Code LLM performance seriously. Especially when the problems are selected by the familiarity. \n* The description and takeaways in Figure 6 should be improved. Colors in (a) are hard to understand the story behind it.\n* In Section 5.4, the authors mention prompt reliability, but the way that StudentEval deals with lucky prompt is not missing. Is there any calibration or selection in StudentEval?\n* The main results or findings in the analysis should be written more clearly and organized in a better way."
            },
            "questions": {
                "value": "* How does StudentEval deal with lucky prompt? Are they still included in the benchmark?\n* Is StudentEval helpful to improve Code LLM performance when they are used to train the model?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 4,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission4866/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698881224420,
        "cdate": 1698881224420,
        "tmdate": 1699636470267,
        "mdate": 1699636470267,
        "license": "CC BY 4.0",
        "version": 2
    }
]