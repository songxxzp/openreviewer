[
    {
        "id": "NWDteP3gMY",
        "forum": "h7nOCxFsPg",
        "replyto": "h7nOCxFsPg",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission356/Reviewer_GF8k"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission356/Reviewer_GF8k"
        ],
        "content": {
            "summary": {
                "value": "The paper suggests utilizing tractable probabilistic models (TPMs) in graph representation learning. More precisely, the proposed graph-induced sum-product networks (GSPNs) are a class of hierarchies of sum-product networks (SPNs) that are capable of answering many types of probabilistic queries in a polynomial time in the size of the model. Further, the authors show that GSPNs are capable of dealing with missing data in the graph. The theoretical results are complemented by empirical experiments, where the authors show that are GSPNs are competitive on the tasks of scarce supervision, modeling data distributions with missing values, and graph classification."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "I was unable to grasp every detail of the paper due to my limited knowledge of some of the topics, so please take my review with a grain of salt.\n\nThe main contribution of the paper is introducing the GSPN framework on the active area of graph representation learning with the following important properties:\n- Efficiently computable probabilistic queries\n- The ability to deal with missing data\n- The ability to approximate the joint distribution over the random variables, where the graph can have arbitrary structure\n\nFurther, the empirical experiments demonstrate that the proposed class of structures is not only theoretically interesting but also in practice."
            },
            "weaknesses": {
                "value": "The paper could be more polished:\n- As per formatting instructions, the citations should be in parenthesis when they are not part of a sentence.\n- \"The neighborhood of a vertex $v$ is the set $N_v = \\lbrace u \\in V | (u, v) \\in E\\rbrace$ of incoming edges\": the neighborhood is not a set of edges but vertices.\n- Section 6 starts with a lorem ipsum paragraph"
            },
            "questions": {
                "value": "If I understood correctly, a small height L of the trees for graphs with a large diameter (consider, e.g., an n-cycle) would result in the trees containing only few of the vertices of the graph. On the other hand, a large L leads to an exponential blowup in the size of the trees, which is computationally infeasible. Is having the trees contain only few of the vertices of the graph detrimental, and if yes, then how harmful is it?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "2: You are willing to defend your assessment, but it is quite likely that you did not understand the central parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission356/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission356/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission356/Reviewer_GF8k"
                ]
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission356/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698323305924,
        "cdate": 1698323305924,
        "tmdate": 1699635962769,
        "mdate": 1699635962769,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "nrcyJAIUsJ",
        "forum": "h7nOCxFsPg",
        "replyto": "h7nOCxFsPg",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission356/Reviewer_KgLo"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission356/Reviewer_KgLo"
        ],
        "content": {
            "summary": {
                "value": "The paper suggests a framework for using Sum-Product Networks (SPNs) as Deep Graph Networks (DGNs). That is, the framework establish methods for representing a computation graph, such as the ones used in neural network architectures, as an SPN. The practical motivations for the work comes from DGNs, in general: (i) having overconfident predictions due to lack of uncertainty consideration, (ii) ad-hoc imputation method of missing data due to lack of probabilistic queries.\nThe authors suggest solving these issues by representing a DGN as a hierarchy of interconnected SPN and, therefore, being capable of answering probabilistic queries in a tractable manner."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "4 excellent"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "* Tractable inference in DGNs: the tractable assumption over input distributions and SPN graphical properties enforcement allows for tractable probabilistic inference. This feature allows for a sound way of dealing with missing data.\n* Probabilistic modeling of distributions over vertexes is beneficial in some specific applications, as it seems to be the case in the chemical domain. These are encouraging results for graph-based solutions in downstream tasks.\n* Throughout and convincing experiments while exploiting well-established deep learning techniques such as residual connections."
            },
            "weaknesses": {
                "value": "* The manuscript would benefit from a theoretical discussion on the implications of generating tree SPNs from induced graphs, for instance, when capturing cyclic information.\n* The paper does a good job motivating the work from the DGN perspective by bringing tractable probabilistic inference capabilities. However, the manuscript's relevance could be improved by highlighting the other way around: novel theoretical results to SPNs.\n* Please fix the \"Scarce Supervision\" paragraph under Section 6: it currently contains a \"Lorem ipsum\" placeholder."
            },
            "questions": {
                "value": "* How do imputation methods compare with the formal way of dealing with missing data through probabilistic inference?\n* Could you comment on the empirical convergence of the model? Was the model susceptible to variations on parameter initialization? And how did hyper-parameters were tuned?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission356/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698993718409,
        "cdate": 1698993718409,
        "tmdate": 1699635962678,
        "mdate": 1699635962678,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "UuFbxEbVEI",
        "forum": "h7nOCxFsPg",
        "replyto": "h7nOCxFsPg",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission356/Reviewer_ReHv"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission356/Reviewer_ReHv"
        ],
        "content": {
            "summary": {
                "value": "While sum-product networks have been well-studied and proven to be efficient in tractable learning and answering probabilistic queries, all previous studies focus on data in the standard forms (e.g. numerical values or discrete classes). However, it has not been well-studied for graph representation learning and related areas. This paper introduces a new probabilistic framework Graph-Induced Sum-Product Networks (GSPNs), which achieves efficiency and efficacy by utilizing hierarchies of SPNs that allow transferable parameters. Extensive experiments are conducted to analyze the role of hyper-parameters and the model's ability to answer probabilisitic queries."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "This paper studies an interesting and important problem, which is probabilistic queries for graph learning. Like standard sum-product networks, GSPNs can properly marginalize out missing data in graphs and provide more interpretability, in contrast to deep graph neural networks.\n\nThe construction of the networks (page 4 to 6) is detailed, and the hierarchical relationship is well-described. The optimization objective (Equation 1) is expected.\n\nSection 4.2 emphasizes a major advantage of GSPNs, or probabilistic circuits in general, which is the ability to infer with incomplete data. The content in the section also provides the justifications on why certain operations are chosen (summing the average predictions of each mixture in the top SPN)."
            },
            "weaknesses": {
                "value": "The writing of the beginning of Chapter 4 and Section 4.1 could be improved to a reasonable extent. The construction of the tree is highly technical and such a compact text makes the understanding difficult. The authors may consider the following two improvements: 1) write the process in a more rigorous way like a mathematics or TCS paper, i.e. formal definitions of the function $m(\\cdot)$ and the heights $\\ell$ of the tree; 2) add more figures to illustrate the construction process.\n\nThe subject of sum-product networks has a rich theoretical background, while this paper has little theoretical justifications, unless I missed anything. Many operations (such as the construction of the tree, transforming parameters, and summing top SPNs for inference with incomplete data in Section 4.2) are only justified in the hand-wavy way. Although ML is a highly empirical subject, probabilistic circuits are involved for interpretable inference and therefore, a reasonable amount of theoretical justifications may be necessary."
            },
            "questions": {
                "value": "1. Please refer to the second paragraph in the weakness section in case I missed any substantial theoretical justifications.\n\n2. For Equation 1 on page 4, what exactly is the function $m_v(\\cdot)$? Also, since $n_1$ is the root, it makes sense so that all other nodes are conditioned. However, when we infer other nodes, e.g. $m_v(n_2)$, do we try to optimize $\\log \\prod_{v \\in V} P_{\\Theta} (x_{m_v(n_2)} | x_{m_v(n_2)}, \\cdots ) $?\n\n3. In Section 4.2, how is the equation $x_v^{mis} = \\sum_{i}^{C} \\mathbb{E} [X_1^{mis} | Q_1^L = i] \\times h_1^L(i) $ derived?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "5: marginally below the acceptance threshold"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission356/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1699382812266,
        "cdate": 1699382812266,
        "tmdate": 1699635962612,
        "mdate": 1699635962612,
        "license": "CC BY 4.0",
        "version": 2
    }
]