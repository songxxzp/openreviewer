[
    {
        "id": "oqb0arY6HR",
        "forum": "bcHty5VvkQ",
        "replyto": "bcHty5VvkQ",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission7405/Reviewer_RFb8"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission7405/Reviewer_RFb8"
        ],
        "content": {
            "summary": {
                "value": "> **TL;DR:** The proposed SkipDecode algorithm achieves significant inference speedups (2x to 5x) across various tasks and LLM model sizes while maintaining negligible performance regression. However, the algorithm has limitations, which are clearly stated and helpful. Addressing my concerns and questions would improve my score.\n\nThe paper introduces SkipDecode, a novel token-level early exit strategy designed to enhance the efficiency of autoregressive large language models (LLMs) in natural language generation tasks. The existing token-level early exit methods have limitations when applied to batch inferencing and Key-Value caching, as they require waiting for the last token in a batch to exit, hindering practicality. SkipDecode overcomes these constraints by enabling each token in a batch to exit independently at each sequence position, ensuring a monotonically decreasing exit point. This approach prioritizes computational resources on upper layers, allowing later tokens to benefit from earlier token computations. Experimental results demonstrate that SkipDecode achieves significant inference speedups (2x to 5x) across various tasks and LLM model sizes while maintaining negligible performance regression. This approach not only supports batch processing and KV caching but also identifies the saturation point of hidden states, contributing to a more efficient and sustainable AI ecosystem."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "* **S.1.** The paper is well written and the illustrations are informative.\n* **S.2.** The SkipDecode algorithm is novel, effective and compatible with many existing inference optimization techniques.\n* **S.3.** The SkipDecode algorithm outperforms previous algorithms and is evaluated on several datasets with two different LLM sizes.\n* **S.4.** The SkipDecode algorithm shows promising speedups and the paper clearly states its limitations."
            },
            "weaknesses": {
                "value": "* **W.1.** The experiments are conducted solely on a single neural architecture. Providing results on other neural architectures (such as ENcoder-Decoder) would help.\n* **W.2.** The SkipDecode algorithm is compared to a single algorithm and the provided results are limited. While the SkipDecode algorithm was evaluated on three different datasets with three different evaluation metrics on each, the comparison evaluation includes only two different datasets with a single metric for each dataset. Adding more comparison results would help.\n* **W.3.** The paper was easy to follow, however, I find some information missing. Addressing my questions would improve my score.\n\nTypos:\n* saturatedSchuster -->saturated Schuster\n* Wile our method --> While our method"
            },
            "questions": {
                "value": "* **Q.1.** How are the min_exit_layer and max_exit_layer chosen?\n* **Q.2.** What is the degradation of quality of using batch-wise exit-point function instead of a per example-wise?\n* **Q.3.** What is the gain of using Skipping instead of Early-Termination? If the function is monotonic decreasing wouldn't that solve the problem for Early-Termination?\n* **Q.4.** How is the speed-up and quality affected by the sequence-length hyperparameter? Why was is chosen to be the median? How would this work in a general chat-bot fashion where the generated sequence length can largely vary?\n* **Q.5.** Do the speedups include the prompt computation time?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission7405/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698322073521,
        "cdate": 1698322073521,
        "tmdate": 1699636887572,
        "mdate": 1699636887572,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "GH98pYOhOI",
        "forum": "bcHty5VvkQ",
        "replyto": "bcHty5VvkQ",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission7405/Reviewer_rBkT"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission7405/Reviewer_rBkT"
        ],
        "content": {
            "summary": {
                "value": "The authors claim that there is a problem with early exit methods like CALM as they create K,V cache issues. The authors propose a simple solution - predefine exit location for each token based on the sequence length. The strategy is based on the claim \"later tokens are easier to generate than the first tokens\"."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "1. The approch is simple. Directly applicable without a requiring a lot of low level implementation.\n2. Is the loss per token a valid proxy for \"hardness\" ?"
            },
            "weaknesses": {
                "value": "1. I am still a bit unconvinced that fixing a schedule for early exit is good approach for reducing the computation. To an extent won't a better approach be do it based on the context rather than forcing it.\n2. The second is the validaty of the claim that\"KV cache\" generation is a massive bottleneck. Yes I agree it might makeup for unpredictable tail latencies, but can authors do an analysis of illustrating the problem.\n3. I understand the authors perspective of performing fine-tuning. However, do authors think it is a viable approach in real world, especially as the model sizes keep increasing. How would authors go about creating a dataset which reperesent real world examples.\n\n4. I am having a hard-time understanding Table-4. I have spent close to 15 minutes trying to understand the Table and reading text around. There are no lables, no descriptions what the numbers mean and how do you go about fixing speedup. Please improve the presentation.\n\nAll in all, I think I like the idea. However, I am still somewhat on the fence about this paper. I understand the problem about K,V cache with CALM. However, wouldn't just generating K,V cache solve that problem as well. How much proportion of time is regeneration of K,V cache is something I would like to understand.\nLooking forward to reading the authors response. Thank you for your great work."
            },
            "questions": {
                "value": "Please see the weakness section"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission7405/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission7405/Reviewer_rBkT",
                    "ICLR.cc/2024/Conference/Submission7405/Senior_Area_Chairs"
                ]
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission7405/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698778562605,
        "cdate": 1698778562605,
        "tmdate": 1700839086151,
        "mdate": 1700839086151,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "QUze0sWKMb",
        "forum": "bcHty5VvkQ",
        "replyto": "bcHty5VvkQ",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission7405/Reviewer_HbUe"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission7405/Reviewer_HbUe"
        ],
        "content": {
            "summary": {
                "value": "This work investigates token-level early exit for large language models. Existing approaches are an ill fit for batch inference and KV cache. To address these two challenges, the authors propose two designs: a shared exit point for every token in a batch at each sequence position for batching; a monotonic decrease in exit point for KV cache. The authors evaluate their method on three generation datasets using the OPT model."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "This work investigates an important problem, and provides a practical design for the batching serving setting."
            },
            "weaknesses": {
                "value": "-> This work only considers the finetuning setting, whereas LLM is particular interesting for its in-context learning ability. \n\n-> The authors only discussed established direction such as distillation and quantization, but no recent works on compressing LLM nor efficient inference of LLM in Section 4.\n\nLin, Ji, et al. \"AWQ: Activation-aware Weight Quantization for LLM Compression and Acceleration.\" arXiv preprint arXiv:2306.00978 (2023).\n\nXiao, Guangxuan, et al. \"Smoothquant: Accurate and efficient post-training quantization for large language models.\" International Conference on Machine Learning. PMLR, 2023.\n\nFrantar, Elias, et al. \"Gptq: Accurate post-training quantization for generative pre-trained transformers.\" arXiv preprint arXiv:2210.17323 (2022).\n\nSheng, Ying, et al. \"FlexGen: High-Throughput Generative Inference of Large Language Models with a Single GPU.\" (2023)\n\nLiu, Zichang, et al. \"Deja vu: Contextual sparsity for efficient llms at  inference time.\" International Conference on Machine Learning. PMLR, 2023.\n\nZhang, Zhenyu, et al. \"H_2 O: Heavy-Hitter Oracle for Efficient Generative Inference of Large Language Models.\" arXiv preprint arXiv:2306.14048 (2023).\n\nLiu, Zichang, et al. \"Scissorhands: Exploiting the Persistence of Importance Hypothesis for LLM KV Cache Compression at Test Time.\" arXiv preprint arXiv:2305.17118 (2023).\n\n\n-> Minor: I believe if use \\citep can put the citation inside bracket, which will make the pdf much easier to read."
            },
            "questions": {
                "value": "What is special about E2E?  Why E2E seems to have a significantly better performance? I think this will help us understand when this method works."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "5: marginally below the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission7405/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698814296435,
        "cdate": 1698814296435,
        "tmdate": 1699636887343,
        "mdate": 1699636887343,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "AkOYUKn0vX",
        "forum": "bcHty5VvkQ",
        "replyto": "bcHty5VvkQ",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission7405/Reviewer_zrR5"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission7405/Reviewer_zrR5"
        ],
        "content": {
            "summary": {
                "value": "This work proposes SkipDecode, an early-exit method for speeding up the inference of autoregressive models. This method works by setting a fixed schedule for skipping earlier layers depending on the number of generated tokens. Authors validate the performance of SkipDecode by testing it on OPT models for several generative tasks, showing speedups over prior methods such as CALM."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "* The work proposes an original way to simplify early-exit adaptive generation techniques that addresses their shortcomings. The method is conceptually simple yet efficient in practice.\n* Overall, the paper is well-written and the key contributions are clear.\n* The empirical results for studied models and datasets appear promising: in some cases, there are negligible accuracy degradations even with a 5x speedup."
            },
            "weaknesses": {
                "value": "* For a work that claims practical performance speedups of deep learning inference, it should be important to comprehensively evaluate the real-world increase in speed compared to the baselines. However, I have found that part of the experiments to be missing multiple crucial details, for example, the type of hardware used to run the experiments, the batch size during generation, and the metric that was used to obtain the numbers for true speedup (was it latency, throughput, or something else?). Also, apparently there is no real-world speedup comparison between SkipDecode and CALM-DEC.\n* The choice of datasets could also be more comprehensive: currently, 2/3 problems are related to summarization with quite long prompts, and another is structure-to-text conversion. To give a broader view of whether SkipDecode performs reliably well across different problems, it would be useful to include tasks with different input-output relations and sequence length (for example, machine translation experiments from the CALM paper)\n* There are quite a few typos in the submission: for example, \"figure 2\" -> \"Figure 2\" at the bottom of page 3, \"e2e dataset\" -> \"E2E dataset\" and \"figure 3\" -> \"Figure 3\" on page 6, \"SkipDecodemodels\" -> \"SkipDecode models\" on page 8.\n* Lastly, I think that the OPT family of models is not fully representative of the architecture variations used today (for example, LLaMA models with multi-query attention), and the current findings about embedding saturation might not transfer to larger or more recent models."
            },
            "questions": {
                "value": "* If I understood correctly, each of the experiments you ran involved finetuning the model on a target dataset. However, in practice, model providers might often serve a single model for many different applications: for example, this means that the average prompt/response lengths can vary dramatically. Is it possible to extend SkipDecode to such a scenario?\n* Which hardware did you use to run your experiments and how did you measure the true speedup?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "5: marginally below the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 4,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission7405/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1699545124309,
        "cdate": 1699545124309,
        "tmdate": 1699636887228,
        "mdate": 1699636887228,
        "license": "CC BY 4.0",
        "version": 2
    }
]