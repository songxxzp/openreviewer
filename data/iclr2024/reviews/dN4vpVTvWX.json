[
    {
        "id": "KIWYOgCHCJ",
        "forum": "dN4vpVTvWX",
        "replyto": "dN4vpVTvWX",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission85/Reviewer_K7dY"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission85/Reviewer_K7dY"
        ],
        "content": {
            "summary": {
                "value": "This work studies generating high-fidelity textures of 3D  shapes. \n\nIt introduces TUVF that generates textures in a learnable UV sphere space, which allows the texture to be disentangled from the underlying shape and transferable to other shapes from the same category. \n\nIt uses a sampled texture code that represents a particular appearance style adaptable to different shapes and generates the texture in a canonical UV sphere space. It learns a canonical surface auto-encoder that maps any point on a canonical UV sphere to a point and normal on an object\u2019s surface, which is transformed to indicator function values using the Poisson Surface Reconstruction algorithm and further transformed to density. This step is learned by Chamfer Distance on the surface points and the L2 losses on the indicator grid. Finally, the texture is learned by neural rendering with a patch-based discriminator.\n\nThe correspondence between the UV space and the 3D shape is automatically established during training."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "TUVF achieves much more realistic, high-fidelity, and diverse 3D consistent textures compared to previous approaches.\n\nIt achieves state-of-the-art results in both the experiments on synthetic and real-world object datasets.\n\nIt improves texture control and editing.\n\nThe use of the Poisson Surface Reconstruction algorithm is very interesting and contributes insights for the community."
            },
            "weaknesses": {
                "value": "There still exist distortions in texture.\n\nThe contribution of texture generation is limited due to recent text-driven texture synthesis work, such as Text2Tex and TEXTure: Text-Guided Texturing of 3D Shapes."
            },
            "questions": {
                "value": "My main concern is about the contribution. The contribution of this work versus the work of text-driven texture synthesis should be further clarified."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "8: accept, good paper"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission85/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission85/Reviewer_K7dY",
                    "ICLR.cc/2024/Conference/Submission85/Senior_Area_Chairs"
                ]
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission85/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698250723645,
        "cdate": 1698250723645,
        "tmdate": 1700655221151,
        "mdate": 1700655221151,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "aQk5y2iyJ0",
        "forum": "dN4vpVTvWX",
        "replyto": "dN4vpVTvWX",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission85/Reviewer_VxE5"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission85/Reviewer_VxE5"
        ],
        "content": {
            "summary": {
                "value": "This paper proposes a method to learn a category-level latent space of both canonical surface and UV texture fields, from a 3D shape dataset and an unpaired collection of 2D images depicting this category of shapes. There are mostly three model components: (1) a canonical surface autoencoder that encodes the ground-truth shape into a latent code, which then gets decoded into points on a sphere, (2) a generative model that produces texture features conditioned on the style code, and (3) a differentiable radiance field rendering module that renders the generated texture onto the autoencoded shape, producing an image that can be compared against real images of the same shape category.\n\nFor the canonical surface autoencoder, Chamfer distance is used in this autoencoding task, and the latent code learned should ideally \"instruct\" us where on the canonical sphere each surface point falls onto, therefore providing a common space to anchor all shapes within the class (i.e., dense correspondence). The authors opted to turn point clouds into density volumes with differentiable Poisson surface reconstruction.\n\nFor the texture feature generator, the authors adopted StyleGAN-like style injection and made sure there's no interaction between neighboring pixels since vicinity in the UV space is often not physically meaning. RGB colors are not explicitly decoded from these features until the final rendering.\n\nFor the differentiable rendering module, the authors chose to adopt volume rendering even if the native shape representation is mesh from ShapeNet. Because of that, the authors discussed how to efficiently sample rays (rendering only near the object surface), convert point clouds into volume density (with differentiable Poisson surface reconstruction), and define radiance fields for points (via interpolating nearest surface points).\n\nThe authors show reasonable qualitative results where they can transfer texture to another shape in the category, make 3D-consistent texture edits, and find dense correspondence among shapes in the same class."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "The paper does a good job presenting what is done with helpful visuals and is easy to follow.\n\nIt also tackles an interesting problem where one needs to learn a canonical space for a category shapes and simultaneously put textures onto the shapes, without paired 3D-2D data. By leveraging autoencoding and adversarial learning, the model learns meaningful patterns/correlations without explicit, direct supervision.\n\nDense correspondence emerging from autoencoding is also interesting and makes sense."
            },
            "weaknesses": {
                "value": "I have two significant concerns that need addressing before I can consider raising my ratings.\n\nWhile I understand how canonical surface autoencoding eventually leads to a mapping between a given shape and the canonical sphere, for rigid shapes like cars and airplanes, one can project the shape onto an enclosing sphere, e.g., via raycasting from the sphere to the shape, to obtain similar mappings -- \"similar\" as in all cars' front bumpers mostly map to the same location on the canonical sphere. If this simple approach produces similar results, the whole canonical surface autoencoding part becomes invalid. \n\nI understand the authors also show mappings learned for non-rigid objects like humans and animals, but these are all parametric models (SMPL or SMAL or whatever), so the canonical space for them is by definition well established and doesn't benefit from this work.\n\nThe second major concern is the whole deal of converting meshes or point clouds into density volumes. Volumetric approaches like NeRF are cool but I don't think everything needs to or should be volumetric. If we already have meshes, why throw away the face information, go into the point cloud regime, and then make the points volumetric? Each of these steps is lossy and complicates the method in an unnecessary way in my opinion. A concrete, much simpler alternative is retaining the face information for the points on the canonical sphere and use the same faces in the decoded shape. Then, we don't need differentiable surface reconstruction to return to the mesh domain in a suboptimal manner. What confuses me further is the adoption of volume rendering. With this alternative I proposed, one simply renders the mesh, which will be much more computationally efficient.\n\nIf these two concerns/confusions don't get cleared up, I view this paper as over-engineering a problem that could be tackled in a cleaner and simpler way, possibly also compromising the final quality given the extra lossy steps taken."
            },
            "questions": {
                "value": "As mentioned in \"Weaknesses,\" can we produce a mapping without learning by just raycasting from an enclosing sphere or something similar? I can see self-occlusion might be a blocker, but the learned mapping is not perfect either; this simpler alternative seems to deserve a try. \n\nWhy do we go through the complicated pipeline to make the shape volumetric? This looks like an even more severe issue than the first question. I hope we have a good justification (or I'm misunderstanding the paper); our community would hate to see \"volumetric == cool\" as the motivation."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission85/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission85/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission85/Reviewer_VxE5"
                ]
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission85/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698731305003,
        "cdate": 1698731305003,
        "tmdate": 1700633967038,
        "mdate": 1700633967038,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "aPG6ro6ABs",
        "forum": "dN4vpVTvWX",
        "replyto": "dN4vpVTvWX",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission85/Reviewer_KY39"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission85/Reviewer_KY39"
        ],
        "content": {
            "summary": {
                "value": "This paper proposes a textured shape generation method based on learned UV mapper and neural texture features. \nThe training is supervised by images rendered on 2D space. \nAfter training the method can support random textured generation for a given shape, texture editing, and texture transfer. \nThough the proposed pipeline is supported with a large mount of qualitative and quantitative results. \nI find is that the paper's technical contribution is little and the results shown in the paper are OK but not exciting(not comparable to recent diffusion based method). \nMost aspects have already been explored by previous papers(some important references are missing). \nIn addition, the intuition of using neural radiance field is really unclear. \nI do not feel using neural radiance field can bring any benefit since every property before the rendering is on the surface. \nThus, I am leaning towards rejection but also listen suggestions from other reviewers."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "The paper is overall clear with a good structure. \nReaders can follow the text easily.\nThe paper shows a lot of results and comparisons, which makes the pipeline more convincing. \nDetails of the network architecture are given in the supp, making reproduction easier."
            },
            "weaknesses": {
                "value": "The biggest issue is that the paper is not novel. \nMost part in the paper has been explored in previous papers. \nThough well combined, it only produces OK results instead of exciting results. \nFor example, recent PointUVDiffusion (Texture Generation on 3D Meshes with Point-UV Diffusion) can generate very realistic textures for a 3D shape.\nThough this paper can support more things like texture transfer via its UV mapper. \nBut actually, correspondence between shapes can also be obtained by postprocessing.\nSo I am wondering how the method compares to PointUVDiffusion.\n\nAnother issue is the intuition of using NeRF. \nThough NeRF is hot and can reconstruct 3D scenes very well and provide vivid results, for this given task, I strongly feel that NeRF is not necessary because everything before the rendering process is defined on the surface. \nWhy not use surface-based rendering?\nIs there any benefit to using NeRF (for example, view-dependent texture)? I do not see such results.\nFor example, AUV-Net learns an aligned UV space, which is pretty similar to the proposed pipeline, though it does not use a neural radiance field. \nSo I think comparing it to AUV-Net should be necessary to prove the advantage of NeRF. \n\nA formulation of the rendering process would be better in Sec. 3.2 or Sec3.3.\n\nReference:\nSINE: Semantic-driven Image-based NeRF Editing with Prior-guided Editing Field"
            },
            "questions": {
                "value": "See the weakness section."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "details_of_ethics_concerns": {
                "value": "n/a"
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "5: You are absolutely certain about your assessment. You are very familiar with the related work and checked the math/other details carefully."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission85/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission85/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission85/Reviewer_KY39"
                ]
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission85/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698848184207,
        "cdate": 1698848184207,
        "tmdate": 1700695316260,
        "mdate": 1700695316260,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "U3SWCvdvXH",
        "forum": "dN4vpVTvWX",
        "replyto": "dN4vpVTvWX",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission85/Reviewer_9F5H"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission85/Reviewer_9F5H"
        ],
        "content": {
            "summary": {
                "value": "This paper proposes a novel approach for generating novel texture given a 3D shape. The key idea of this paper is to learn correspondence between UV coordinates and 3D points and apply a generative model in the UV space. The correspondence associates the generated texture features with the actual 3D location on the surface. It enables differential volume rendering wrt. the texture features. The authors use an adversarial learning setup on respective renderings.\nFor the geometry, they used the 3D cars and chairs from the ShapeNet dataset and photoshapes and CompCars datasets are used as 2D GT. A qualitative and quantitative comparison to Texturify, EpiGraf and more baselines show a decent performance."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "4 excellent"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "The paper is well written and easy to understand. The method sections constraints useful figures and clear structure.\nThe research problem is important since a general formulation of UV mapping is an open topic.\nThe experimental sections contain many insights and support claims, e.g.Table 4 the ablation on the texture mapping network."
            },
            "weaknesses": {
                "value": "Even though the method requires a GT shape as input, the rendered shapes appear to have over-smoothed regions, e.g. the mirrors of the cars. \n\nIt is unclear how well the learned UV correspondence preserves surface areas in the UV space."
            },
            "questions": {
                "value": "Since the proposed method uses a shape encoder decoder part, I\u2019m wondering if this could be directly used to build a generative model for both shapes and textures."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission85/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission85/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission85/Reviewer_9F5H"
                ]
            }
        },
        "number": 4,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission85/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698875355181,
        "cdate": 1698875355181,
        "tmdate": 1699635933031,
        "mdate": 1699635933031,
        "license": "CC BY 4.0",
        "version": 2
    }
]