[
    {
        "id": "yeazBWAtMo",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission6204/Reviewer_d6hE"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission6204/Reviewer_d6hE"
        ],
        "forum": "C4CxQmp9wc",
        "replyto": "C4CxQmp9wc",
        "content": {
            "summary": {
                "value": "Suite of Combinatorial Optimization benchmarks in JAX. Some experiments with an AC algorithm"
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "New benchmarks are always good, especially CO, where fewer benchmarks are available."
            },
            "weaknesses": {
                "value": "No comparisons to other benchmarks or implementations. It is a sympathetic and perhaps substantial effort, but lacks elements that would achieve wide adaptations. The software engineering is there, the science is unclear.\n\nThere are Gym-JAX environments, and there are CO-Gym implementations (OR-Gym).  \n\nIt appears that Jumanji does not follow the Gym interface. Stable Baselines algorithm are therefore not a drop in plugin.\n\nExplain clearly the difference with a Gym interface. Why this choice? \n\nCarrying around explicit state deviates from an RL principle, that the environment has the state, and not the agent. \n\nExperimental validation with limited algorithms. No comparison to other benchmarks."
            },
            "questions": {
                "value": "What is the contribution of this paper?\n\nWouldn\u2019t it make more sense to remain Gym-compliant in providing a Gym-JAX-CO implementation? This remains implicit, and is not explained.\n\nWould a wrapper be possible for a Gym API? Could you use stable baselines unchanged?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "5: marginally below the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission6204/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1697374906873,
        "cdate": 1697374906873,
        "tmdate": 1699636676110,
        "mdate": 1699636676110,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "Jd33b4rzRz",
        "forum": "C4CxQmp9wc",
        "replyto": "C4CxQmp9wc",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission6204/Reviewer_VTas"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission6204/Reviewer_VTas"
        ],
        "content": {
            "summary": {
                "value": "The authors propose Jumanji, a diverse set of accelerated environments written in JAX focused on NP-hard combinatorial optimization problems (COPs). Jumanji is fully open-source, fast, flexible, and scalable, covering 18 environments such as TSP (Travelling Salesman Problem). The authors also present A2C learning curves in these 18 environments to demonstrate end-to-end learning. Interestingly, Jumanji can tune the difficulties of the environments, showing that these environments can get exponentially more difficult to solve."
            },
            "soundness": {
                "value": "4 excellent"
            },
            "presentation": {
                "value": "4 excellent"
            },
            "contribution": {
                "value": "4 excellent"
            },
            "strengths": {
                "value": "* Open-source accelerated environments in COPs: most of the accelerated environments are in robotics (e.g., NVIDIA's isaacgym or Google's brax), but I like the authors specific focus on NP-hard optimization problems.\n* Optimal performance in some games: I like the authors added the reference optimal performance in some of the 18 environments."
            },
            "weaknesses": {
                "value": "I do not see any major weakness. One issue is that Figure 3 does not seem like a fair comparison with GPU. In particular TPU-v4s should be compared with A100s instead of RTX 2080 Super."
            },
            "questions": {
                "value": "I am curious why the authors chose A2C as the training algorithm instead of P"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "8: accept, good paper"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission6204/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission6204/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission6204/Reviewer_VTas"
                ]
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission6204/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698599429675,
        "cdate": 1698599429675,
        "tmdate": 1699636676000,
        "mdate": 1699636676000,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "NXGgKm93sx",
        "forum": "C4CxQmp9wc",
        "replyto": "C4CxQmp9wc",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission6204/Reviewer_S6or"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission6204/Reviewer_S6or"
        ],
        "content": {
            "summary": {
                "value": "This paper presents a Jax based RL environment suite called Jumanji. The 18 environments focus on combinatorial optimization problems, designed to be fast, flexible, and scalable. They also provide an A2C benchmark and examples to motivate these problems."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "- RL for many years has struggled with good environment code maintenance and support, and it is good to see this problem continue to be addressed \n- The code base seems to be well designed and documented, the doc strings are generally informative and type hints are present."
            },
            "weaknesses": {
                "value": "- NP Hard optimization style problems have seen some interest in RL, but are not as common in literature, it would be beneficial to have more citations justifying their uses or explain more how common RL problems can be rethought into the COP formalism\n- Having some sort of UML or diagram would be of great help to understanding the API.\n- I don\u2019t think random policy adds anything in Figure 2. It is expected that random does poorly and I\u2019m not sure it adds much (given the trends of the curves, the impression of learning comes across)\n- I\u2019m not sure how much the y-axis labels matter in Figure 2 given how much clutter they add. A lot of these environments are not super common (and even in common Atari environments human normalised performance is increasingly common as a metric since the actual scores don\u2019t mean much to most people). As long as they are all linear axes, and the optimal performance is there, all that matters is that the lines are going up (since this isn\u2019t an algorithm paper, this figure is just showing things can learn in your environments).\n- A plot like Fig 3(b) with number of TPUs vs. time to reach a certain performance could make a good figure (for the appendix at the very least)\n- If CPU is not visible on the plot, I would just leave it off the labels and keep the text remark\n- Although there are a lot of different environments implemented, it would be beneficial to have a point of comparison. As the authors note, there has been a fair amount of work in high performance environments already. Even if you can\u2019t make a 1 to 1 comparison (because the environments are not the same), finding something of comparable complexity and having a figure in the appendix would help to ground the speedups."
            },
            "questions": {
                "value": "- How important is hardware flexibility? Are TPUs widely used outside google?\n- Gamma is put in the MDP formalism of Jumanji. Although this can be seen both in and outside of the tuple, is there any explicit representation of it in the software? I.e. in the Jumanji environments, clearly all the other elements of the tuple are required to be defined for a functioning environment, but is the gamma represented?\n- It would be beneficial to give more of an explanation of the state, just another sentence or so, explaining (perhaps with an example) what it is and contains. I assume it is a pytree (since the observation is), but is the key element required? Does step have to split the key necessarily if it doesn\u2019t use it (small details like this could go in the appendix)?\n- Environment version control is mentioned, but how often are changes made that increment this version? Version control is nice, but if there are hundreds of versions, it isn\u2019t a panacea.\n- Appendix C2 demonstrates weak (sometimes negative) scaling on CPU. Why is this the case? I would expect some speedup up to the 8 cores (assuming you are mapping across all cores, jax by default will just work with 1 (https://github.com/google/jax/issues/5022). \n- Why does figure 3a start at 2^7 environments? The on many of the environments doesn\u2019t seem as impressive as it could if this started at 2^0 perhaps\n- Why is it called Jumanji?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission6204/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission6204/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission6204/Reviewer_S6or"
                ]
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission6204/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698726955937,
        "cdate": 1698726955937,
        "tmdate": 1700377357097,
        "mdate": 1700377357097,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "DhIWRKrdHo",
        "forum": "C4CxQmp9wc",
        "replyto": "C4CxQmp9wc",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission6204/Reviewer_7YMa"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission6204/Reviewer_7YMa"
        ],
        "content": {
            "summary": {
                "value": "Jumanji is a suite of scalable reinforcement learning environments designed for RL research with industrial applications. It provides a collection of environments that are fast, flexible, and scalable, focusing on combinatorial problems and decision-making tasks. Jumanji leverages JAX and hardware accelerators to facilitate rapid research iteration and large-scale experiments. It stands out from existing RL environments by offering customizable initial state distributions and problem complexities and includes actor-critic baselines for benchmarking. The paper demonstrates Jumanji's high scalability and flexibility through experiments, positioning it as a tool to advance RL research."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "4 excellent"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "Good paper and an important engineering contribution to an area of research in NP-hard combinatorial optimization problems (COPs). Solid design and software engineering work to make Jumanji modular, scalable, and fast and to fully unlock the power of hardware acceleration. The set of environments and tasks is complimentary in some sense to continuous control Jax-based training environments created by Google Brax team and will help to advance research in the area combinatorial problems and decision-making tasks."
            },
            "weaknesses": {
                "value": "A lack of a new research results and novel approaches. But it\u2019s totally expected from such kind of more engineering oriented projects."
            },
            "questions": {
                "value": "What are the most important research challenges do you expect Jumanji will help to address?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 4,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission6204/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1699338704084,
        "cdate": 1699338704084,
        "tmdate": 1699636675712,
        "mdate": 1699636675712,
        "license": "CC BY 4.0",
        "version": 2
    }
]