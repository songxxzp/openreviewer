[
    {
        "id": "5DuTHFMr8O",
        "forum": "xNdE7RiRyP",
        "replyto": "xNdE7RiRyP",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission9344/Reviewer_k57W"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission9344/Reviewer_k57W"
        ],
        "content": {
            "summary": {
                "value": "The authors present their approach to on-device training for edge devices, i.e., Jetson Nano and Raspberry Pi Zero. Their methodology includes meta-learning based offline pre-training and partial updates during online training with a channel selection strategy based on Fisher information and a multi-objective selection metric to jointly capture channel importance, memory footprint, and computational cost."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "The authors contribute to the important area of on-device training at the edge. The novelties presented include the exploration of the capabilities of meta-learning as a means of offline pre-training, as well as a novel channel selection strategy that considers not only importance, but also goals such as computational complexity and memory footprint, which are generally important for deployment on resource-constrained targets. The authors provide solid empirical results by showing that their approach mostly outperforms other relevant state-of-the-art frameworks, namely TinyTL and MCUNet, on 9 different community datasets. Most interestingly, the authors also report results for latency and power consumption on two edge systems, the Jetson Nano and Pi Zero 2."
            },
            "weaknesses": {
                "value": "The title of the paper states that the authors want to explore training at the extreme edge, but in my opinion systems like the Pi Zero 2 and Jetson Nano are quite \"large\" compared to most Cortex-M based MCUs, which I would consider the extreme edge. Since such systems present unique challenges, e.g. they usually cannot run Linux but rely on RTOS like MBedOS or sometimes have limited floating-point support, I would have liked to see if the techniques proposed by the authors also work in such scenarios, similar to e.g. MCUNet. [1]\n\n\nI found it hard to follow the paper at times, as it felt a bit unfocused, especially in Section 2, but the italicized summary provided at the end of each section definitely helped. Overall the paper is very dense (and many additional parts are left to the appendix), but it is not verbose. \n\n[1] Lin, Ji, et al. \"On-device training under 256kb memory.\" Advances in Neural Information Processing Systems 35 (2022): 22941-22954.\n\nSome small points:\n- Use \u2018Sec.\u2019 or \u2018Section\u2019 instead of \u2018\u00a7\u2019 (at least I am always stumbling at these points)\n- Fig. 5a is missing."
            },
            "questions": {
                "value": "- Are the techniques presented by the authors applicable to Cortex-M based MCUs or only to the systems presented in this paper?\n- Is meta-learning used only as part of pre-training or also for on-device training? It seems to me that classical transfer learning is done on-device. Do the authors think that on-device meta-learning techniques, e.g. few-shot learning, would be a feasible/reasonable approach?\n- Does the layer selection process focus only on which channels to remove or also on how many channels to remove at any given time? If not, how do the authors determine how many channels of a tensor should be updated at any given time?\n- How did you measure the energy consumption of your plattforms?\n- I expected \u201cFullTrain\u201d to somehow act as an upper bound on predictive accuracy but it is not . can you elaborate on that in more detail?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "details_of_ethics_concerns": {
                "value": "The authors adequately address ethical and social implications of their work at the end of their manuscript."
            },
            "rating": {
                "value": "8: accept, good paper"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission9344/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698557479816,
        "cdate": 1698557479816,
        "tmdate": 1699637175648,
        "mdate": 1699637175648,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "lo8Aco3mUt",
        "forum": "xNdE7RiRyP",
        "replyto": "xNdE7RiRyP",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission9344/Reviewer_T24f"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission9344/Reviewer_T24f"
        ],
        "content": {
            "summary": {
                "value": "The authors proposed a few-shot learning pipeline for edge devices, where both the data and the resources are limited during the training. The authors proposed a structured sparse-updating method that can dynamically select the critical layers/channels for each new learning task. During the few-shot learning, only these critical layers/channels will be updated. Therefore, both the training time and the energy cost are significantly reduced, which is also verified by their deployment results."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "- The paper is well-motivated. Learning a new unseen task on edge devices with customized user data faces the shortage from data and computing resources, as the single user often has a limited labor resource to collect and label samples and the edge devices often have a limited on-device memory and computing power. How to achieve a comparable performance with limited training samples on resource-constrained edge device is important to the scenarios where the user has privacy concerns and the user data can only be processed locally.\n- The authors conducted extensive experiments on different benchmarks. The authors also deployed their models on Pi Zero and Jetson Nano to measure the real training latency and energy cost, which is especially encouraged."
            },
            "weaknesses": {
                "value": "- The paper has a limited novelty. Although this paper proposed a different metric to select adaptation-critical weights, one of the related work \"p-Meta: Towards On-device Deep Model Adaptation\" had studied the same problem settings, i.e., how to train the model on new tasks given limited samples and limited computing resources. The proposed pipeline in p-Meta also consists of two stages, meta-training stages in the cloud and few-shot leaning stages on edge devices. \n\n- I had some other concerns about how the authors computed the memory footprint in back-propagation. Since for a back-propagation, we must first conduct the forward pass. The peak memory consumption occurred during the backward pass at a certain layer only if it was larger than the peak memory required by the forward pass. Could you please elaborate how the memory number was calculated in Tab.2. At which layer during the back-propagation it reached the peak memory? \nThe reason why I had the concerns above was that 8-bit MCUNet had a 0.49MB peak memory in the forward pass, as reported in Fig.8 in https://arxiv.org/pdf/2007.10319.pdf. Then, the peak memory of training MCUNet in 32-bit floating point must be higher than 1.96MB (0.49*4), since you may also want to store some other intermediate values for backward. Unless the authors conducted low-precision training or used different architectures. \n\n- I noticed that the authors used momentum SGD during on-device few-shot learning. What was the memory consumption from momentums? If these parameters took the majority, the authors should report a more fair comparison using vanilla SGD."
            },
            "questions": {
                "value": "See Weaknesses"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "5: marginally below the acceptance threshold"
            },
            "confidence": {
                "value": "5: You are absolutely certain about your assessment. You are very familiar with the related work and checked the math/other details carefully."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission9344/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission9344/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission9344/Reviewer_T24f"
                ]
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission9344/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698623431695,
        "cdate": 1698623431695,
        "tmdate": 1699637175536,
        "mdate": 1699637175536,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "g1VuTOhFcO",
        "forum": "xNdE7RiRyP",
        "replyto": "xNdE7RiRyP",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission9344/Reviewer_aEBW"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission9344/Reviewer_aEBW"
        ],
        "content": {
            "summary": {
                "value": "This paper develops TinyTrain as an on-device training approach that addresses the challenges of data scarcity and resource constraints in the context of IoT devices and microcontroller units (MCUs). Traditional methods neglect the data scarcity issue, require long training times, or result in significant accuracy loss. However, TinyTrain introduces a task-adaptive sparse-update method that dynamically selects layers and channels based on a multi-objective criterion. This approach considers user data, memory, and compute capabilities, leading to improved accuracy on unseen tasks with reduced computation and memory requirements. The proposed TinyTrain fits the memory constraints of MCU-grade platforms and ensures practical feasibility."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "The proposed TinyTrain presents a practical solution for training models on resource-constrained edge devices, helping improve the efficiency of on-device model training."
            },
            "weaknesses": {
                "value": "(1) The experiments mainly concentrate on image classification with a limited number of training epochs, so it would be valuable to also evaluate the performance of the proposed methods on segmentation and detection tasks. These tasks often involve more complex data and require more extensive training. Examining the effectiveness of the proposed methods in such scenarios would provide a more comprehensive assessment of their applicability and overall performance.\n\n(2) To gain a better understanding of the practical implications and efficiency of the proposed methods, it is suggested to include information on training/inference speed or time cost when applying the methods to downstream tasks. This would offer valuable insights into the computational efficiency and scalability of the approach for real-time or time-sensitive applications."
            },
            "questions": {
                "value": "Please see the weakness part."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "5: marginally below the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission9344/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698648235812,
        "cdate": 1698648235812,
        "tmdate": 1699637175433,
        "mdate": 1699637175433,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "JJaMxMXMtr",
        "forum": "xNdE7RiRyP",
        "replyto": "xNdE7RiRyP",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission9344/Reviewer_pF1F"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission9344/Reviewer_pF1F"
        ],
        "content": {
            "summary": {
                "value": "TinyTrain offers an approach to on-device training tailored to IoT and MCU devices, which are typically faced with limited memory and computational resources. By adopting a task-adaptive sparse-update method, this system aims to train neural network models more efficiently, addressing data scarcity and aiming to curtail training durations. TinyTrain claims to achieve a 3.6-5.0% improvement in accuracy compared to conventional methods and boasts of a 9.5\u00d7 faster training speed."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "1. This paper proposes a task-specific sparse update for the model. This dynamic sparse-update configuration is better in model accuracy than that method that adopts static configuration.\n\n2. This paper enhances on-device learning by incorporating a few-shot learning scheme to let it be sample-efficient."
            },
            "weaknesses": {
                "value": "1. The text in the figures is too small and hard to read.\n\n2. Some figures are not well-presented.\n\n3. The design seems to have little to do with the observations of the paper."
            },
            "questions": {
                "value": "1. The text in almost all the figures is too small and pretty hard to read. The authors should make sure the figures are easy to read.\n\n2. In Figure 3, the authors want to claim that i) Accuracy gain per layer is generally highest on the first layer of each block, ii) Accuracy gain per parameter and computation cost of each layer is higher on the second layer of each block. While I appreciate these interesting observations, I do have some concerns and comments:  \n(1) The authors have some observations related to the position of a layer in the block. However, all we can see about the layer position in the figures is the layer index in the whole model. I have no idea which layers are the first/second layers in the block.  \n(2) The authors say that the second observation is not a clear pattern. If it is not a clear pattern, why bother writing down this uncertain observation without any further explanation?  \n(3) What are the accuracy gain per parameter and accuracy gain per MAC? Are these widely used terms? May you briefly introduce them before using them?\n\n3. This paper gives out some observations. However, they seem to have limited contribution to the design. The design uses a gradient-based metric to indicate the importance of a layer/channel, which does not consider the layer position in the block.\n\n4. There is already a paper [1] that jointly considers the layer importance and computation cost when selectively updating some layers of a model, which is similar to the idea of this paper. I have concerns about the novelty of this paper.\n\n\n[1] Yue Wang, Ziyu Jiang, Xiaohan Chen, Pengfei Xu, Yang Zhao, Yingyan Lin, and Zhangyang Wang. 2019. E2-train: training state-of-the-art CNNs with over 80% energy savings. Proceedings of the 33rd International Conference on Neural Information Processing Systems. Curran Associates Inc., Red Hook, NY, USA, Article 462, 5138\u20135150."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission9344/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission9344/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission9344/Reviewer_pF1F"
                ]
            }
        },
        "number": 4,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission9344/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698781476249,
        "cdate": 1698781476249,
        "tmdate": 1699637175320,
        "mdate": 1699637175320,
        "license": "CC BY 4.0",
        "version": 2
    }
]