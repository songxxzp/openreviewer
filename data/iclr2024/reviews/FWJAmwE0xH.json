[
    {
        "id": "uD8wqBXx6p",
        "forum": "FWJAmwE0xH",
        "replyto": "FWJAmwE0xH",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission8657/Reviewer_WJqb"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission8657/Reviewer_WJqb"
        ],
        "content": {
            "summary": {
                "value": "This work introduces a Neuro-symbolic approach capable of strong systematic generalization: NeuralSymbolic Recursive Machines (NSR).\nThe method is made of 3 modules:\n1. a neural net perception module mapping raw input to grounded symbols. This can be a pre-trained CNN or transformer for Images and Text.\n2. a dependency parser to infer dependencies between grounded symbols in a structured syntax tree, termed Grounded Symbol System (GSS)\n3. a program synthesizer that deduces semantic meanings to a given symbol based on its neighborhood in the GSS tree.\n\nTo train this system with simple input-output (x, y) pairs and without any external expert knowledge or supervision for the GSS, the authors introduced a probabilistic learning method based on deduction-abduction: start with a greedy decoded and incorrect GSS tree, then refine step by step by looking at the potential neighbouring trees, until accurate results are obtained.\nMonte-Carlo sampling is done to sample potential trees.\n\nThe method is tested on three synthetic tasks (SCAN, PCFG, Hint) and a compositional machine translation task. In SCAN, PCFG, and compositional machine translation, NSR obtains 100% accuracy. On Hint, NSR beats all baselines including vanilla Transformers."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "This paper proposes a method that unifies the connectionism and the symbolism views of AI. While the attempt has been made multiple times in the past, the proposed method seems original and novel, although additional references could be cited (see the minor suggestions in the Weaknesses section)\n\nThe proposed method is well presented and the paper is easy to read. Figures 3 and 4 in particular made the content of the paper easier to understand and helped gain an intuition on what the method learns.\nExperiments clearly present the strength of the proposed approach over previous baselines.\n\nEventually, this paper addresses an important challenge of current neural architectures: systematic generalization, making this work significant."
            },
            "weaknesses": {
                "value": "1. All results are comparing the proposed method NSR with various neural architectures and only one neuro-symbolic method: NeSS. The fact that NeSS performs 0% in 2 tasks and 100% in the other two makes it a weak comparing point (and also suggests that NeSS behaves more like a symbolic model than a neuro-symbolic one: it's all or nothing in terms of performance). I would suggest the authors provide at least 1 other neuro-symbolic method to compare against to make the results more significant. It is very clear that the proposed method outperforms vanilla neural methods such as Transformers, which is not surprising given the nature of the tasks being used, but it is less clear if the proposed method is significantly better than previous neuro-symbolic methods that also do not require additional training signal. The work from Minervini et. al. on Greedy Theorem Provers, or other variants could potentially be used as a baseline for some of these tasks.\n\n2. Another weakness of this paper is the ambiguous explanation of how the search for a GSS tree is terminated. Section 1 states that the search for a tree runs \"_until the accurate result is obtained_\", and Section 3.2 doesn't detail this point (or at least not very well). The authors should better define this stop criterion in order to better understand its limitation: what does it mean for the resulting tree to be \"accurate\"? Could the method settle on an \"almost correct\" syntactic tree to save time? and what would the effect of that be on performance?\n\n3. Eventually, at the end of Section 3, the authors state that the three modules of NSR exhibit equivariance and recursiveness. It would be beneficial to explain why this claim is true and provide additional evidence about it.\n\nThe following are minor suggestions:\n\n4.  In Table 3, for the task of compositional translation, it would be interesting to also evaluate the performance of a vanilla transformer like in the previous tables.\n\n5. the work could benefit from a discussion about previous neuro-symbolic works such as Neural Theorem Provers (NTPs) and Greedy NTPs: \"_Differentiable Reasoning on Large Knowledge Bases and Natural Language_\" by Minervini et. al, and previous work trying to add inductive biases to Transformers such as \"_Does Entity Abstraction Help Generative Transformers Reason?_\" by Gontier et. al."
            },
            "questions": {
                "value": "- see \"weakness (2)\": Could the method settle on an \"almost correct\" syntactic tree to save time? and what would the effect of that be on performance?\n\n- What is the vocabulary size of the primitives considered? Did you try more complex sets of logical primitives? What do you think the effect would be on time and performance?\n\n- Do you have any hints of how to start thinking about representing probabilistic semantics like mentioned in the Limitation section?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "8: accept, good paper"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission8657/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1697668469330,
        "cdate": 1697668469330,
        "tmdate": 1699637084685,
        "mdate": 1699637084685,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "8oBPozDLec",
        "forum": "FWJAmwE0xH",
        "replyto": "FWJAmwE0xH",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission8657/Reviewer_Gi7u"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission8657/Reviewer_Gi7u"
        ],
        "content": {
            "summary": {
                "value": "This paper presents a neuro-symbolic architecture called the NSR which consists of 3 steps:\n1. perception module to convert raw input into symbols\n2. a parser to compute a syntax tree over symbols\n3. a program induction module to convert this syntax over induced symbols into a program which can then convert an input into an output deterministically.\n\nEach of these components are separate probabilistic modules (though details about what these models are exactly is unclear from the paper). From results on 3 tasks, we see improvements on generalization compared to neural models."
            },
            "soundness": {
                "value": "1 poor"
            },
            "presentation": {
                "value": "1 poor"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "The subject matter of the paper is to make progress towards improving compositional generalization in learnt models, which is a very important area."
            },
            "weaknesses": {
                "value": "*Presentation is unclear*: There are very few details about the actual approach in the Section-3 (and Figure-1) to fully understand what exactly the model is (See questions). Unfortunately, because there is a lack of details around the approach, it is hard to do a thorough assessment of this work, and I request the authors to revise their draft.\n\nMoreover, the paper spends too much time (and math notation) on simple definitions such as \u201cequivariance\u201d and \u201crecursiveness\u201d and on flagposting \u201chypothesis\u201d statements. Not necessarily cause for rejection, but I highly suggest that these be moved into an appendix, so more time is spent on explaining the approach.\n\n\n\n*How general is this approach*: Most of the experiments here are on datasets where symbolic approaches are likely to help, but it is unclear how well this approach would do for natural language semantic parsing tasks such as GeoQuery. I'm not fully opposed to having experiments that are only on these programmatic datasets, but it would be good to have an extended discussion on what the symbols and programs look like for more natural data distributions."
            },
            "questions": {
                "value": "Here are some details I could not get from Section-3:\n\n- What exactly are the symbols in T for each of the datasets? \n- Is every raw input mapped to a single symbol or is there a consolidation step where multiple raw inputs can be associated with the same symbol? \n- What models are used to parameterize all of the distributions in Eq~4? Are these neural networks?\n- What is the overall parameter count?\n- How does inference work for this model?\n- How does this compare to other neuro-symbolic systems, for example \"Neuro-Symbolic Concept Learner\" from Mao et al. 2019?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission8657/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698618921003,
        "cdate": 1698618921003,
        "tmdate": 1699637084577,
        "mdate": 1699637084577,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "9BBUjNynqr",
        "forum": "FWJAmwE0xH",
        "replyto": "FWJAmwE0xH",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission8657/Reviewer_brEA"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission8657/Reviewer_brEA"
        ],
        "content": {
            "summary": {
                "value": "This paper describes a new neurosymbolic model, NSR, which consists of (1) a task-dependent model mapping from inputs to strings; (2) the Chen-Manning dependency parser; (3) a program induction module that is somehow based on DreamCoder. This pipeline is trained by gradient-based optimization (SGD?) using Metropolis-Hastings sampling to estimate the gradient. The proposed method performs well across four tasks, SCAN, PCFG, and HINT, and an artificial machine translation task."
            },
            "soundness": {
                "value": "4 excellent"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "This is a very interesting approach that achieves very good results on the four tasks tested. In every setting, their model either does the best, or is tied with NeSS because both models achieve 100% accuracy."
            },
            "weaknesses": {
                "value": "Many statements are made like, \"This stark discrepancy underscores the pivotal role and efficacy of symbolic components\u2014specifically, the symbolic stack machine in NeSS and the GSS in NSR\u2014in fostering systematic generalization.\" But, for an outsider, no explanation is given for why the symbolic components actually lead to better generalization. I would like to see some more explanation or analysis to back this up.\n\nThe program induction module is not described in detail; in equation (3), what is the p in the right-hand side? When you say that you \"leverage\" DreamCoder, do you mean that this module simply is DreamCoder?\n\nFigure 3: image is wrong?"
            },
            "questions": {
                "value": "Section 3.3: How do you use the gradients? Is this SGD?\n\nWhy is abduction called that? It seems different from abductive reasoning?\n\nDef 3.2: Isn't \"compositionality\" a more usual word for this? \"Recursive\" has a totally different meaning in theory of computation."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "8: accept, good paper"
            },
            "confidence": {
                "value": "2: You are willing to defend your assessment, but it is quite likely that you did not understand the central parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission8657/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698776125193,
        "cdate": 1698776125193,
        "tmdate": 1699637084458,
        "mdate": 1699637084458,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "uSE9iS2ZdH",
        "forum": "FWJAmwE0xH",
        "replyto": "FWJAmwE0xH",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission8657/Reviewer_ih16"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission8657/Reviewer_ih16"
        ],
        "content": {
            "summary": {
                "value": "This paper introduces the Neural-Symbolic Recursive Machine (NSR), a model for systematic generalization in sequence-to-sequence tasks. The key innovation is representing the problem as a Grounded Symbol System (GSS) with combinatorial syntax and semantics that emerge from training data. The NSR incorporates neural modules for perception, parsing, and reasoning that are jointly trained via a deduction-abduction algorithm. Through architectural biases like recursiveness and equivariance, the NSR achieves strong systematic generalization on tasks including semantic parsing, string manipulation, arithmetic reasoning, and compositional machine translation.\n\nOverall, the paper presents a novel neural-symbolic architecture that combines beneficial inductive biases from both neural networks and symbolic systems to achieve human-like generalization and transfer learning abilities. The experiments demonstrate strengths on challenging benchmarks designed to test systematic generalization."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "4 excellent"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "- Compositional generalization is an interesting and important direction to explore, which should be one of the most important capabilities of human. Therefore, the problem and the research direction is important.\n- The Neural-Symbolic Recursive Machine (NSR) model is a novel model architecture centered around representing problems as grounded symbol systems. The deduction-abduction training procedure for coordinating the modules is an original contribution for jointly learning representations and programs.\n- The paper clearly explains the limitations of existing methods, the need for systematic generalization, and how the NSR model aims to address this. The model description and learning algorithm are well-explained. The experiments and analyses effectively demonstrate the claims.\n- The paper is technically strong, with rigorous definitions and detailed exposition of the model components and learning algorithm.\n- The experiments systematically test generalization across four datasets with carefully designed splits. The analyses provide insights into when and why the NSR architecture generalizes better than baselines.\n\nOverall, this is a technically strong and well-written paper that makes both conceptual and practical contributions towards an important research direction."
            },
            "weaknesses": {
                "value": "Although I understand that compositional generalization is currently driven primarily by synthetic datasets like SCAN, I would still like to see the application of this method in real-world scenarios. For example, could it achieve significantly better generalization performance compared to conventional seq2seq models on real machine translation tasks?"
            },
            "questions": {
                "value": "N/A"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission8657/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission8657/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission8657/Reviewer_ih16"
                ]
            }
        },
        "number": 4,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission8657/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698837325606,
        "cdate": 1698837325606,
        "tmdate": 1699637084356,
        "mdate": 1699637084356,
        "license": "CC BY 4.0",
        "version": 2
    }
]