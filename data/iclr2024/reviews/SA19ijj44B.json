[
    {
        "id": "aXRIZK8grf",
        "forum": "SA19ijj44B",
        "replyto": "SA19ijj44B",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission4401/Reviewer_v5S3"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission4401/Reviewer_v5S3"
        ],
        "content": {
            "summary": {
                "value": "This paper creates a study about the performance of Bayesian surrogates inside the Bayesian optimization framework. They performed experiments on real and synthetic datasets in order to understand the performance of surrogates. They report some findings such as the ranking of methods is highly problem dependent, HMC is the most successful approximate inference procedure for fully stochastic BNNs, and that infinite-width BNNs are promising."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "1 poor"
            },
            "strengths": {
                "value": "- The topic is interesting and somewhat important for the community.\n- The presentation of theory and the experiments is well presented and sound."
            },
            "weaknesses": {
                "value": "- There is no discussion on the interaction of the surrogate and the acquisition function.\n- I agree with the authors that the time might not be relevant when the function evaluations are expensive, still it is important to create an experiment assuming fast function evaluations and see whether the ranking holds\n- Although the dataset collection is diverse, the study is performed on a very small amount of datasets. There is no guarantee that these findings extrapolate easily to new datasets.\n- Although the insights are interesting (some of them are not surprising), the effective impact is questionable. How could these insights lead to SotA in drug discovery algorithms, active learning, material science or hyperparameter optimization?\n- No discussion on the regularization effect on the surrogates. What happens if I regularize the DKL or the Bayesian neural networks via some useful prior?"
            },
            "questions": {
                "value": "- How would more recent methods rank in the comparison, such as PFN4BO [1]?\n- How is the performance of DKL affected by regularization approaches  such as [2], [3]?\n\n\n[1] M\u00fcller, Samuel, et al. *PFNs Are Flexible Models for Real-World Bayesian Optimization.*\n\n[2] Lotfi, S., Izmailov, P., Benton, G., Goldblum, M., & Wilson, A. G. *Bayesian model selection, the marginal likelihood, and generalization.*\n\n[3] Patacchiola, M., Turner, J., Crowley, E. J., O'Boyle, M., & Storkey, A. J. *Bayesian meta-learning for the few-shot setting via deep kernels.*"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission4401/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission4401/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission4401/Reviewer_v5S3"
                ]
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission4401/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1697983068154,
        "cdate": 1697983068154,
        "tmdate": 1700857374829,
        "mdate": 1700857374829,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "1Z30aw9Qpx",
        "forum": "SA19ijj44B",
        "replyto": "SA19ijj44B",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission4401/Reviewer_XqQk"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission4401/Reviewer_XqQk"
        ],
        "content": {
            "summary": {
                "value": "The paper is an empirical investigation into the use of Bayesian neural networks (BNNs) as surrogate models for BO instead of the traditional GPs. The BNN inference procedures investigated are HMC, SGHMC, deep ensembles, infinite-width BNNs, linearlized Laplace approximations, and deep kernel learning. The authors compare the performance of GPs and the various BNN inference procedures via the maximum reward attained over several standard synthetic benchmarks, real-world benchmarks, and high-dimensional settings. The paper also investigates several secondary aspects of BNNs for BO, including the role of the NN hyperparameters, the performance of hybrid models, the effect of the number of function evaluations available, and the computational runtime."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "4 excellent"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "1. The results are of interest to BO researchers and BO practitioners looking for potential methods of improving the effectiveness of BO in real-world applications.\n2. The empirical investigation is extensive and carefully planned, covering several synthetic and real-world benchmarks, and provides support for many interesting hypotheses as well, such as the relative performance on high dimensional problems and the role of hyperparameters including network architecture.\n3. This paper is a gold standard for clarity and writing."
            },
            "weaknesses": {
                "value": "1. For an empirical paper whose conclusions rest solely on the experimental results, 5 trials for each experimental setup is too little, as evidenced by multiple plots having heavily overlapping confidence intervals, Figure 6 in particular.\n\n2. A few clarifying questions, please see the Questions section."
            },
            "questions": {
                "value": "1. This question concerns the experimental details outlined in Appendix C.1 and what I've gleaned from the code. When a GP model is used, it undergoes hyperparameter optimization via maximizing the marginal likelihood w.r.t. to the hyperparameters at every BO iteration. When a HMC model is used, it is also described to undergo a hyperparameter optimization procedure which is an iterated grid search that chooses the set of hyperparameters that (to my understanding) maximizes the maximum reward attained after all BO iterations in a trial. This optimization procedure is different from the GP one in that it requires an entire BO trial to compute the score of a single set of hyperparameters, and hence requires several BO trials as opposed to the GP one that is optimized per iteration and does not require several BO trials. Is this an accurate understanding? If so, could you comment on the validity of comparing the results of the GP model and the HMC model (along with the other BNN models since their hyperparameters are arrived at via the HMC search as well)? The concern is that the GP model did not have the same opportunity to do a 'meta-optimization' over several BO trials which might have been used to optimize other (hyper-)hyperparameters such as the choice of lengthscale and outputscale priors. Or was it the explicit intention to compare a standard GP setup against an (a priori unknown) 'optimal' BNN ?\n\n2. From Figure 6, GP and I-BNN are the top 2 performing models on all problems, and I-BNN dominates by far on high dimensional problems. However, I-BNNs are equivalent to (and implemented as) GPs with a specific neural-network based kernel. One may reach the conclusion that GPs still reign supreme in BO: use a standard Matern kernel for low dimensional problems, and the I-BNN kernel for high dimensional problems, and ignore BNNs that are not also GPs. Would you say this is a fair alternate conclusion?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "8: accept, good paper"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission4401/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission4401/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission4401/Reviewer_XqQk"
                ]
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission4401/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698594717018,
        "cdate": 1698594717018,
        "tmdate": 1700577035288,
        "mdate": 1700577035288,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "H0teV8Q600",
        "forum": "SA19ijj44B",
        "replyto": "SA19ijj44B",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission4401/Reviewer_6qj4"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission4401/Reviewer_6qj4"
        ],
        "content": {
            "summary": {
                "value": "This paper provides a comprehensive empirical study of using Bayesian neural networks as the surrogate in Bayesian optimization. The paper considers a number of different BNNs, and performed experimental comparisons in a variety of experiments. Some interesting insights are shown from the experiments, including when standard GP surrogate is better and when BNN is better, HMC is often the best method for inference for BNN, deep kernel learning is usually competitive and deep ensemble is usually not, etc."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "- The methods under comparison are carefully selected to span a wide range of possible BNNs, and experiments are nicely designed to unveil specific insights about the relative strengths/weaknesses of different families of methods.\r\n- I think some of the conclusions/insights from the empirical comparisons can indeed be useful for future applications of Bayesian optimization, such as the competitiveness of deep kernel learning, the promising results of infinite-width BNNs in high-dimensional problems (which is a new observation to the best of my knowledge), etc.\n- The synthetic experiments in Figures 1 and 2 are nicely designed to illustrate the influence of different factors, and also find which are the parameter combinations likely to work better. The experiments \"Quality of Mean and Uncertainty Estimates\" on the potential of mixing different mean and uncertainty estimates are also particularly interesting.\n- The paper is well written, the contributions are nicely organized and discussed."
            },
            "weaknesses": {
                "value": "**(1)** I think it would make the study more complete if another relevant line of works is discussed: using (non-Bayesian) neural networks as the surrogate in BO and using neural tangent kernel for exploration. The recent line of work on neural bandits has made it possible to use (non-Bayesian) neural networks as the surrogate in BO while still preserving the regret guarantee of BO by using the theory of the NTK, The relevance of neural bandits in BO has been shown by [1] below, and you can also refer to [1] to find the related works on neural bandits. In fact, I think the findings in [1] can be used to corroborate some of the findings in this work. For example, [1] also found that deep ensemble doesn't work well and explains it by arguing that deep ensemble cannot do principled exploration, I think this is in fact consistent with what's observed in this work, because the performance of deep ensemble plateaus at low objective values because it's subpar exploration ability makes it unable to find the region containing the global optimum. The paper [2] below also did an empirical study of neural bandit methods, so the findings in [2] may also be compared/combined with those in this paper to potentially get more insights. For example, [2] also found that neural bandits tend to work better when the objective function is complicated.\nIn fact, the connection between BNN-surrogate BO and neural bandits has also been discussed by the concurrent work of Kristiadi et al. (2023) in the context of linearized-Laplace approximation. The recent work of [3] has also shown the potential of using NTK in kernel regression, which may also be an empirical justification for the potential of BO with NTK based surrogate.\n\n[1] Sample-Then-Optimize Batch Neural Thompson Sampling, 2022.      \n[2] Empirical Analysis of Representation Learning and Exploration in Neural Kernel Bandits, 2021.      \n[3] Kernel Regression with Infinite-Width Neural Networks on Millions of Examples, 2022.\n\n**(2)** Another minor point which can make the paper easier to read is that when referring to the appendix, it'll make it easier for the reader if the specific subsection is referred to instead of just \"Appendix D\"."
            },
            "questions": {
                "value": "- I find the contrast between deep kernel learning and deep ensemble particularly interesting, because both methods are able to use the strong representations learned by neural networks. I suppose the reason why deep kernel learning works better is because it can be readily plugged into BO which will take care of the exploration, while deep ensemble doesn't do well in exploration. Please see if this makes sense."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "8: accept, good paper"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission4401/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698810830185,
        "cdate": 1698810830185,
        "tmdate": 1699636413382,
        "mdate": 1699636413382,
        "license": "CC BY 4.0",
        "version": 2
    }
]