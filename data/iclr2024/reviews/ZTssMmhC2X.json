[
    {
        "id": "xXksg7J42P",
        "forum": "ZTssMmhC2X",
        "replyto": "ZTssMmhC2X",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission7034/Reviewer_qVNV"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission7034/Reviewer_qVNV"
        ],
        "content": {
            "summary": {
                "value": "- The paper investigates the differences in utilizing AdamW vs. SGD for finetuning (not pretraining) modern ViT and Conv nets\n- While usually AdamW outperforms SGD for finetuning, it finds that freezing the embedding layer and then applying SGD (with or without momentum) results in performance which is at par or better than AdamW on distribution shift benchmarks (WILDS-FMoW, WILDS-Camelyon, BREEDS-Living-17, Waterbirds, and DomainNet)\n- The paper points out that models pretrained with AdamW do not finetune well with SGD, and that in such situations the embedding layer has higher grad norms than the rest of the parameters\n- The paper produces SOTA results for the datasets when finetuning CLIP and ConvNeXt models with either SGD + freeze-embed or AdamW"
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "4 excellent"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "- The paper looks into the well known phenomenon of SGD finetuning not matching up to AdamW for certain situations in vision models and finds some interesting observations\n  - SGD generally only outperforms on the considered evaluations when pretraining is performed with AdamW, when SGD pretraining is used then there isn't much of a gap\n  - The embedding layer has a very high grad norm when pretraining with AdamW which potentially results in SDG updating its weights too quickly, which is why the freezing operation improves SGD's results significantly\n- The paper is well written and easy to read, and the experiments are convincing. The additional experiments in the appendix are also very useful to confirm the hypotheses presented in the paper."
            },
            "weaknesses": {
                "value": "- While the paper's focus is distribution shift evaluations, it doesn't touch upon conventional downstream evaluation tasks such as ImageNet-1k, iNaturalist, datasets in VTAB (https://github.com/google-research/task_adaptation), etc. Even if some of the conclusions hold only for these distribution shift datasets, it is still important to contrast the observations around grad norms and SGD vs. AdamW vs. SGD (freeze-embed) on other common visual transfer tasks. \n- In Section 4 it is mentioned \"SGD performs well when fine-tuning data is closer to pretraining.\" and the conclusion is drawn from just a single data point, CLIP, which is trained on very different data and very different losses. There isn't enough data to back this claim. \n  - Minor: It also says that all models except CLIP were trained on ImageNet-21K, whereas DINO is trained on ImageNet-1k.\n- The CIFAR-10 results on CLIP are presented in a misleading manner \"SGD (freeze-embed) gets 20% and 30% lower error than SGD on CLIP ViT-B/16 and ViT-L/14, respectively.\" where the difference across SGD, AdamW and SGD (freeze-embed) is only <=0.4%\n- The paper does a grid search on a single hyperparameter, learning rate, and sweeps over 6 values, but holds the weight decay constant at 0 for SGD and 0.01 for AdamW. Models pretrained differently (SSL, CLIP, supervised) usually require very different finetuning settings, so this search is a bit limited, but this isn't a major weakness since the primary point is showing that SGD (freeze-embed) catches up to AdamW without recipe changes to SGD.\n- Minor: The paper claims contradictory numbers for SGD and AdamW memory consumption (12 bytes vs 16 bytes per parameter in the Abstract, and AdamW maintaining 2x to 3x more states as SGD in the Introduction)."
            },
            "questions": {
                "value": "It is not clear (1) when researchers should use SGD (freeze-embed) as compared to SGD and AdamW and (2) in which situations the high grad norms for the embedding layer happen. Is this paper only relevant for tasks with a domain shift from pretraining, or for OOD evaluations? How does it work for more popular and / or in-domain transfer learning tasks, such as ImageNet or iNaturalist?\n\nThe paper does cite other works which can get similar performance with AdamW and SGD on ImageNet or iNaturalist, but it would still be worthwhile to show results with the hyperparameters in the paper and with SGD (freeze-embed). \n\nA better understanding outside of the distribution shift datasets will help me bump up my rating."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission7034/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission7034/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission7034/Reviewer_qVNV"
                ]
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission7034/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698805679568,
        "cdate": 1698805679568,
        "tmdate": 1699636826289,
        "mdate": 1699636826289,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "mK5knklJcB",
        "forum": "ZTssMmhC2X",
        "replyto": "ZTssMmhC2X",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission7034/Reviewer_zcmx"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission7034/Reviewer_zcmx"
        ],
        "content": {
            "summary": {
                "value": "This paper unveils a captivating strategy for enhancing the fine-tuning of large vision models (e.g., Vision Transformer, ConvNeXt models, etc.). While SGD and AdamW are both widely used, SGD is favored for its memory efficiency when they perform equally well. However, the authors reveal that especially in scenarios with *distribution shifts*, AdamW excels in fine-tuning modern Vision Transformer and ConvNeXt models.\n\nThe key observation is that this performance gap between SGD and AdamW is most pronounced when the gradients in the first \"embedding\" layer are significantly larger than those in the rest of the model. To address this issue, the authors propose a simple solution: freezing the embedding layer, which accounts for less than 1% of the parameters. This approach not only matches AdamW's performance but also conserves memory, with up to a 33% reduction in GPU usage on ViT-L.\n\nThe proposed approach leads to SOTA results on five popular distribution shift benchmarks, such as WILDS-FMoW, WILDS-Camelyon, BREEDS-Living-17, Waterbirds, and DomainNet. In essence, this paper offers an enchanting recipe to narrow the performance gap between SGD with momentum and AdamW. Their findings shed light on optimizing large vision models."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "1. This paper is well-written, the motivation is sound, and the problem has been addressed well.\n2. The paper addresses the crucial issue of improving out-of-distribution (OOD) accuracy when fine-tuning vision models.\n3. The paper achieves state-of-the-art results on multiple benchmarks, demonstrating its efficacy in narrowing the performance gap between SGD and AdamW."
            },
            "weaknesses": {
                "value": "1. Although the experimental results achieve SOTA performance and practical memory savings, the improvement of the proposed approach, compared to the vanilla approach is marginal.\n\n2. The experimental results show that using SGD (freeze-embed) may also result in poor performance in some cases, how does the author explain this phenomenon?\n\n3. Reprogramming [1, 2] and Visual Prompting [3, 4, 5] is also a parameter-efficient finetuning approach, please discuss these methods in the related work.\n\n> [1] Elsayed et al. Adversarial Reprogramming of Neural Networks (ICLR 2019)\n> \n> [2] Chen. Resource-Efficient Cross-Domain Machine Learning \n> \n> [3] Bahng et al. Exploring Visual Prompts for Adapting Large-Scale Models\n> \n> [4] Tsao et al. AutoVP: An Automated Visual Prompting Framework and Benchmark\n> \n> [5] Jia et al. Visual Prompt Tuning (ECCV 2022)"
            },
            "questions": {
                "value": "Please refer to the weakness. In addition, please address the following questions:\n\n1. It is clear that the proposed approach is not always the best choice, how does the developer or engineer decide which approach to use when it comes to different datasets?\n\n2.  Please report the mean and standard deviation of the results across multiple rounds (different seeds)."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "5: marginally below the acceptance threshold"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission7034/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698824021137,
        "cdate": 1698824021137,
        "tmdate": 1699636826169,
        "mdate": 1699636826169,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "g2nC21J2kM",
        "forum": "ZTssMmhC2X",
        "replyto": "ZTssMmhC2X",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission7034/Reviewer_6FtM"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission7034/Reviewer_6FtM"
        ],
        "content": {
            "summary": {
                "value": "The paper proposes a method to fine-tune pre-trained models using SGD instead of AdamW to reduce the amount of memory the optimizer states take. The main observation of the paper is that when fine-tuning on out of distribution data the gradient magnitudes on the first embedding layer for architectures pre-trained with AdamW and fine-tuned with SGD are large. The authors hypothesize that the large gradients result in overfitting on OOD data. To address the paper freezes the embedding layer when fine-tuning with SGD and shows that the models can be fine-tuned as well as or better than using AdamW with lower memory footprint. The experimental evaluation and the results validate the hypothesis and the effectiveness of the proposed freeze SGD fine-tuning method."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "* As the models are become larger reducing the memory footprint to train/fine-tune models becomes increasingly important. One way to reduce the memory footprint is to use optimizers which do not use additional much state. The paper shows that by freezing a the initial embedding layer SGD with momentum or just plain SGD can match performance of fine-tuning the full model with AdamW. \n* The ablation studies show interesting observations on the role of the optimizer difference when pre-training and fine-tuning. Some of these observations can help practitioners in choosing the optimizer and hyper parameters when fine-tuning."
            },
            "weaknesses": {
                "value": "* All the down stream fine-tuning experiments are focused on classification. It would be good to see if the observations hold for other tasks like detection, segmentation etc. \n* Gradual unfreezing is mentioned in Table 5 but the method is not clearly described in the paper. There is some mention of the learning rate schedule with gradual unfreezing in the appendix but does not fully explain what was done."
            },
            "questions": {
                "value": "* Given an optimizer mismatch can the overfitting of early layers be avoided by low learning rates in the early part of fine-tuning? Overall the learning rate schedule seems to have an important role to play when there is an optimizer mismatch. Have the authors tried using different learning rate schedules and are the large gradient problems persistent throughout the optimization or confined to initial steps when fine-tuning."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission7034/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1699074935397,
        "cdate": 1699074935397,
        "tmdate": 1699636826062,
        "mdate": 1699636826062,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "74D5Wz1kZ1",
        "forum": "ZTssMmhC2X",
        "replyto": "ZTssMmhC2X",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission7034/Reviewer_RNj8"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission7034/Reviewer_RNj8"
        ],
        "content": {
            "summary": {
                "value": "This paper found that Adam achieves better OOD and ID accuracy than SGD, mainly because the embedding layer of some currently popular models yields larger gradients. Such larger gradients can be well treated by Adam, but may cause over-training of the embedding layer by SGD. Therefore, this work proposes two variants of SGD (freezing the embedding layer; freezing the embedding layer and no momentum), which are found to boost the accuracy significantly."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "1. Very extensive experiments are conducted and thorough analysis is provided. \n2. The presentation is good and motivation is clear and strong.\n3. The minor yet effective modification on SGD shows good performance improvement, with less memory requirement than Adam."
            },
            "weaknesses": {
                "value": "Since I am not researching around the optimization domain, I can not clearly point out what is the weakness of this paper. See my questions below."
            },
            "questions": {
                "value": "1. Will such modified SGD still achieve performance gain on NLP model such as Llama2?\n2. As you mentioned, the reason why the early embedding layer has larger gradients is that such models are typically pre-trained by Adam. What will the result be if they are models are pre-trained by SGD? Will it be worse than with Adam?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission7034/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission7034/Reviewer_RNj8",
                    "ICLR.cc/2024/Conference/Submission7034/Senior_Area_Chairs"
                ]
            }
        },
        "number": 4,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission7034/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1699117294301,
        "cdate": 1699117294301,
        "tmdate": 1700701445551,
        "mdate": 1700701445551,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "VB1TPgOXfh",
        "forum": "ZTssMmhC2X",
        "replyto": "ZTssMmhC2X",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission7034/Reviewer_S1Jb"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission7034/Reviewer_S1Jb"
        ],
        "content": {
            "summary": {
                "value": "This paper analyzes why AdamW often outperforms SGD when finetuning large pretrained vision models. It turns out that the embedding layer gradients are quite large and AdamW is able to suppress the huge swings in embedding layer values caused by these gradients. A simple method is proposed whereby the embedding layer is frozen during finetuning. This method is shown to perform on par or better than AdamW in both in-distribution and out of distribution finetuning. Moreover, SGD with frozen embedding layer uses less memory than AdamW (roughly 1.3x less)."
            },
            "soundness": {
                "value": "4 excellent"
            },
            "presentation": {
                "value": "4 excellent"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "I found the paper to be extremely well written. All claims were backed up by experimental results. The method is simple, yet effective. Very good paper."
            },
            "weaknesses": {
                "value": "1) It seems that the entire paper hinges on models which have an embedding layer. While these models are popular now, they may not be popular forever, which limits the long term impact of this method.\n2) In models beyond vision, such as recommendation models (i.e. DLRM https://arxiv.org/abs/1906.00091), the embedding layer contains most of the model parameters. In such cases, it is also unclear whether this kind of method could work. Of course, the authors are explicit that this paper is about vision models in particular, so I am not penalizing them for this (possible) shortcoming\n3) In some cases, SGD performed as well or better than the other variants. From the practitioners point of view, how should one choose which method to use?"
            },
            "questions": {
                "value": "1) Why does the memory overhead of adamw relative to sgd increase with model size? It seems like the relative difference in memory overhead should be constant\n2) For Fig. 2, are the gradient norms normalized by number of elements?\n3) Why do you think SGD outperforms the other alternatives across so many experiments?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "8: accept, good paper"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 5,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission7034/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1699280735200,
        "cdate": 1699280735200,
        "tmdate": 1699636825807,
        "mdate": 1699636825807,
        "license": "CC BY 4.0",
        "version": 2
    }
]