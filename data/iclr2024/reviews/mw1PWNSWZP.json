[
    {
        "id": "3qceva9TQF",
        "forum": "mw1PWNSWZP",
        "replyto": "mw1PWNSWZP",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission635/Reviewer_eETk"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission635/Reviewer_eETk"
        ],
        "content": {
            "summary": {
                "value": "The authors have compiled CommitPack, a 4TB dataset of permissively licensed git commits across 350 programming languages. They have strictly filtered CommitPack to derive clear imperative instructions, thus creating the instruction fine-tuning dataset, CommitPackFT.\n\nTo better evaluate instruction-tuned, large language models for code, they introduce HumanEvalPack. This extension of HumanEval encompasses three scenarios\u2014code repair, code explanation, and code synthesis\u2014and extends support to six programming languages.\n\nThey have conducted comparisons between different instruction tuning datasets using 5,000 random samples from CommitPackFT. The results demonstrate that combining CommitPackFT with OASST yields the best performance on HumanEvalPack.\n\nThey have released their datasets and the instruction-tuned code language models, OctoCoder and OctoCodeGeeX."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "- By ensuring that the data collected and the models tuned are permissively licensed and free of proprietary data, the authors make a significant contribution to the open-source research community.\n- They put a lot of effort into decontaminating the dataset and guaranteeing the soundness of HumanEvalPack (for example, by removing any solution overlap between the code and the generated explanation), which lends credibility to the results.\n- The ablation studies and qualitative analysis yield many interesting conclusions and offer insights for further research."
            },
            "weaknesses": {
                "value": "- One thing I find unclear about the writing is the name of CommitPackFT.\nAs I understand, throughout the paper, the authors instruction-tuned the models using a 5000-sample subset of CommitPackFT, as mentioned on page 4\n>For instruction tuning our models, we select 5,000 random samples from COMMITPACKFT across the 6 programming languages that we evaluate on.\nSince you only used a subset of CommitPackFT to fine-tune the model, it might look a bit strange to call the entire dataset \"FT\"."
            },
            "questions": {
                "value": "I wonder if instruction tuning the mode on more data from CommitPackFT can lead to even better performance."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "8: accept, good paper"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission635/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission635/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission635/Reviewer_eETk"
                ]
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission635/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698769277974,
        "cdate": 1698769277974,
        "tmdate": 1699635991317,
        "mdate": 1699635991317,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "BEhky3LWs3",
        "forum": "mw1PWNSWZP",
        "replyto": "mw1PWNSWZP",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission635/Reviewer_LDX4"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission635/Reviewer_LDX4"
        ],
        "content": {
            "summary": {
                "value": "This work proposes to instruction-tune LLMs for code by using commit messages that clearly describe the change to the code in an imperative style, along with the original and new programs. It also introduces an extended version of HumanEval that spans 6 languages and three tasks as a benchmark. The results indicate that the proposed commit-based dataset in combination with OASST (from prior work) forms the strongest fine-tuning mixture, yielding strong results when fine-tuning StarCoder and CodeGeeX."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "4 excellent"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "This work makes multiple substantial and useful contributions to the domain of code-specific instruction-tuning. As it notes, many successful recent approaches have been based on data from proprietary models. Using commit messages from permissive repositories offers a large dataset of relatively easy-to-acquire, and apparently moderately useful, data. The benchmark it contributes is also quite useful, moving substantially beyond the standard HumanEval set.\n\nThe work is quite well written and the supplementary material offers a very thorough view of the methods and results. Overall, this is a good paper."
            },
            "weaknesses": {
                "value": "The methodology makes a number of decisions that are not particularly well explained or defended. While none of these are critical, several of these would benefit from additional ablations and analyses, or an acknowledgement as a limitation. In no particular order:\n\nThe discussion around CommitPack leads with the rather enormous size of the initial dataset (~4TB). While this is accurate, the version used in this work is just 0.05% this size (2GB). This work offers no validation or experiments involving the original set. This both creates the impression that the 4TB set is likely to very noisy, and suggests that this work should really primarily emphasize the 2GB portion as far as concrete contributions of this paper are concerned. That would involve amending text like in the contributions on P2 and in the abstract, which don't mention the size of the subset that was actually used at all. This also relates to the \"orders of magnitude more\" comment on P9, which seems quite inconsequential.\n\nContinuing the discussion of instruction data, it is not clear from the work why just 5K samples were chosen for fine-tuning. Was the concern that the model would drift too far if more samples were used? It is also not clear why (a) StarCoder was granted 3 extra samples, but that seems pretty inconsequential, and (b) OASST used nearly twice as many examples. Is that because the OASST samples are of higher quality? Was an ablation performed to choose these ratios? This is perhaps a particularly salient issue because one takeaway from this work is that CommitPackFT is not usable on its own. The experiments only ever report results of CommitPackFT + OASST (or similar combinations). This combination mostly boosts \"Fix\" performance; the results on the other two datasets are about even or worse than just using OASST by itself (Tab. 13). Perhaps the idea is that OASST is of very high quality but too small (are the ~8.5K samples used here the entire usable available subset?), so adding reasonably good samples increases performance? In any case, as is, the impression I get is that CommitPackFT isn't of particularly high-quality, but helps because it provides a bit more coding knowledge to OASST. More experiments could help contradict (or proof) that impression.\n\nThe work makes a rather strong argument, that building on HumanEval is a positive since it is so common that it is typically filtered from training data. That argument seems quite challenging to back up, given the absence of insight into how many LLMs are trained and anecdotal observations that pretrained models perform worse on new coding problems (e.g. from CodeContests). I would suggest a more moderated discussion of this choice, acknowledging the use of HumanEval as a potential limitation.\n\nStarCoder is highlighted as performing very poorly in the explanation task, because it is unable to generate explanatory text. I wonder if this overlooks the obvious: query StarCoder to predict a docstring/javadoc/other comment using its FiM capabilities. The model has naturally not encountered samples were code is followed by a request for an explanation, but it would likely do relatively well when prompted to predict a comment above or at the start of a method. Although this somewhat stretches the definition of an \"explanation\", it does give the models more of a chance than the current setup.\n\nAppendix C notes that inputs were filtered to just 768 tokens in length, for the complete before-code + message + after-code series. That is a very low limit by modern language modeling standards. Tab. 8 reinforces that this leads to very short programs compared to the natural distribution of commits. What was the motivation for these limits, and how does this impact the dataset's usefulness for downstream use-cases, where programs are rarely as short as those in the HumanEval suite?\n\n\nMinor notes:\n\n- The center panel in Fig. 3 might benefit from a visual improvement. Without reading the text, it was not clear to me what was happening here; as presented, it looks like the model is prompted with the code, predicts text, than is prompted with more text and predicts the code again, all in one input sample. Perhaps consider inserting a blank space between the two tasks (i.e., before the second model input) and moving the arrow to connect between the two halves.\n- Sec. 3, P5: what experiments were conducted to confirm that GPT-4's accuracy only varies by 2% when sampling 1 sample vs. 20? I would imagine that the variation could be quite a bit more on some tasks. It might be worth sampling, say, 2-5 samples to balance cost and precision.\n- It would probably help the work to also report BLEU/METEOR scores on the explanation generation task. This might offer a complementary view to the proposed automated metric, which is potentially somewhat lossy.\n- A few odd notes from the appendix: why was \"can\u2019t you see i\u2019m updating the time?\" used as a prominent commit message filter (Tab. 5)? This doesn't seem to be a common phrase. Why was only data up till 2016 used? There are archives with more recent GitHub data."
            },
            "questions": {
                "value": "To avoid redundancy, please consider the questions raised in the weaknesses section above. Primarily, focus on the question of CommitPackFT's value given the relatively limited results (e.g. compared to OASST) and the various places where limitations may need to be acknowledged more clearly."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "8: accept, good paper"
            },
            "confidence": {
                "value": "5: You are absolutely certain about your assessment. You are very familiar with the related work and checked the math/other details carefully."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission635/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698795429610,
        "cdate": 1698795429610,
        "tmdate": 1699635991241,
        "mdate": 1699635991241,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "69pVlgx3bf",
        "forum": "mw1PWNSWZP",
        "replyto": "mw1PWNSWZP",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission635/Reviewer_SuJc"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission635/Reviewer_SuJc"
        ],
        "content": {
            "summary": {
                "value": "This paper studies the training and evaluation of Code LLMs with instructions. It first creates COMMITPACKFT, 2GB of high-quality code with commit messages that assimilate instructions. Then it constructs HUMANEVALPACK, a human-written benchmark covering 3 different tasks for 6 programming languages. Afterward, this work ablates several instruction datasets and \ufb01nds out that COMMITPACKFT combined with natural language data leads to the best performance. Moreover, the models, OCTOCODER and OCTOGEEX, outperform GPT-4."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "1. The new proposed framework that enhances the instruction tuning on LLMs is impressive. \n2. The paper is well-organized and well-written with clear motivations, detailed discussion, nice figures, and sufficient comparison experiments, making it easy to follow and understand.\n3. This work performs comprehensive experiments over benchmark data to show the effectiveness in several settings.\n4. This work creates new datasets, i.e., COMMITPACK and COMMITPACKFT which are 4TB of permissively licensed code commits across 350 programming languages for pretraining and a \ufb01ltered variant containing high-quality code instructions. These datasets will make contributions to this field in future research."
            },
            "weaknesses": {
                "value": "1. This work finds out that OCTOCODER and OCTOGEEX, perform best among permissive models. I am curious about the reason behind that. Besides, a detailed introduction about OCTOCODER and OCTOGEEX would help understand the experimental results.\n2. Still in experimental discussion, I am also curious about the performance of OCTOCODER and OCTOGEEX over the HUMANEVALEXPLAIN dataset. Why does OCTOGEEX have better performance in Go and Rust compared to  OCTOCODER? What are the differences between OCTOCODER and OCTOGEEX?"
            },
            "questions": {
                "value": "1. Why do OCTOCODER and OCTOGEEX perform best among permissive models?\n2. What are the differences between OCTOCODER and OCTOGEEX?\n3. Why does OCTOGEEX have better performance in Go and Rust languages compared to  OCTOCODER?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "details_of_ethics_concerns": {
                "value": "None"
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission635/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698821300566,
        "cdate": 1698821300566,
        "tmdate": 1699635991162,
        "mdate": 1699635991162,
        "license": "CC BY 4.0",
        "version": 2
    }
]