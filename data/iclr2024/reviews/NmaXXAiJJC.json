[
    {
        "id": "smpDFboB3g",
        "forum": "NmaXXAiJJC",
        "replyto": "NmaXXAiJJC",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission4105/Reviewer_hXiT"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission4105/Reviewer_hXiT"
        ],
        "content": {
            "summary": {
                "value": "The paper introduces a vector quantization technique that involves partitioning the weight matrix into several segments and constructing a global codebook. This approach quantizes the weights into many segmented vectors based on the global codebook. The authors claim that this method can significantly reduce the storage requirements of the model, as the weights only need few bits to store the codebook indices. Additionally, it can substantially decrease the computational operations of the model."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "Applying the global codebook and segmented vector quantization can significantly compress the model size."
            },
            "weaknesses": {
                "value": "The content of this paper is not sufficiently clear and complete. Many aspects are either missing or are ambiguously addressed. For instance, the paper lacks details on how to handle activation values, how to quantize weights into segmented vectors, how to update quantized weights and codebooks, and how to perform matrix multiplications and convolutions on quantized weights and activation values. These critical aspects are left unaddressed. \nIn terms of the paper's novelty and motivation, the primary source of confusion lies in the paper's failure to clarify what problem in quantization or vector quantization it aims to address or improve. This paper claims to apply a global codebook to the entire model, as opposed to layer-wise application as did in previous studies, which theoretically could improve compression rates but might significantly impact model accuracy. However, the authors do not discuss this issue in the paper. Lastly, regarding the compression of operation counts, the method utilizing codebooks and indices primarily offers theoretical compression, and practical acceleration is challenging to achieve. This issue should be argued in the paper."
            },
            "questions": {
                "value": "1\u3001How are activation values quantized?\n\n2. The paper employs a global codebook for the entire model instead of using one per layer. Does this affect accuracy?\n\n3. In the experimental results, the reported FLOPS and Params values are purely theoretical, correct? Can you discuss the practical acceleration or its applicability? Additionally, how was the base accuracy determined? Is the primary metric accuracy or accuracy reduction? Why is accuracy reduction considered more effective?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "5: You are absolutely certain about your assessment. You are very familiar with the related work and checked the math/other details carefully."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission4105/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698548357607,
        "cdate": 1698548357607,
        "tmdate": 1699636375432,
        "mdate": 1699636375432,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "VwFHv3ZyOW",
        "forum": "NmaXXAiJJC",
        "replyto": "NmaXXAiJJC",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission4105/Reviewer_JeiW"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission4105/Reviewer_JeiW"
        ],
        "content": {
            "summary": {
                "value": "This paper suggests using vector quantization for compressing the weights of convolutional layers in Convolutional Neural Networks (CNNs) and attention/Multilayer Perceptron (MLP) layers in Vision Transformers (ViTs). The weights are associated with learned codebooks. During the inference stage, computations occur between the features and the codebooks, which can significantly reduce parameters and Floating Point Operations Per Second (FLOPs). Experiments provide a comparison with the state-of-the-art."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "This work utilizes vector quantization to compress DNNs, it is good to consider both CNNs and ViTs in the experiments."
            },
            "weaknesses": {
                "value": "1. The figures in this paper are really vague. In Figure 1, it is better to mark the size of the weight matrices and demonstrate which layers in which model are utilized to do the visualization.\n2. Experimental results are listed without any highlight, which is very unclear.\n3. The idea of adopting VQ in compressing DNNs is not new, so more effort could be made including giving the guidelines for designing the hyperparameters such as the group numbers."
            },
            "questions": {
                "value": "1. It appears that the authors directly use the computation results from another VQ paper to determine the reduction in FLOPs. Is this method accurate for DNN compression? A related question is, given that the input and intermediate features in DNNs vary and are not predetermined, how are the lookup tables obtained in this context?\n2. Besides #parameters and FLOPs, how about the inference time? Could VQ accelerate DNN inference?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "5: marginally below the acceptance threshold"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission4105/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698836470260,
        "cdate": 1698836470260,
        "tmdate": 1699636375349,
        "mdate": 1699636375349,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "OzpX9pZWir",
        "forum": "NmaXXAiJJC",
        "replyto": "NmaXXAiJJC",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission4105/Reviewer_Be5z"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission4105/Reviewer_Be5z"
        ],
        "content": {
            "summary": {
                "value": "This work proposed a novel idea of applying vector quantization to the weights of deep neural networks. Vector quantization means a weight tensor in neural networks can be represented as the combination of multiple vectors, and the pattern types of the vectors are finite. Similar to network pruning and network quantization, Conducting vector quantization for a neural network is favorable for saving memory occupancy and potentially accelerating inference."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "1. The idea of conducting vector quantization on weights of neural networks is of novelty. \n2. The proposed training algorithm to form vector-quantized neural networks is simple yet effective"
            },
            "weaknesses": {
                "value": "1. The conclusion regarding the speed-up performance is not convincing. There is no practical speed-up results presented in the work and the reported FLOPs reduction is only calculated theoretically. Moreover, traditional dense matrix multiplication has been highly optimized in recent years on modern GPUs, e.g., cuDNN. Whether or not a network with vector quantization infers faster than its dense counterparts on modern GPUs remains uncertain. Thus, the lack of inferring time and practical speedup results does not adequately justify their work.\n\n2. Some aspects of the VQ-DNN illustration require further clarification. For instance, the specific process of updating W_jb and e in equation (1) needs to be clarified. Are they updated alternately? Additionally, the method of mapping weights to the codebook is not clear. Does the mapping change during training? It is necessary to provide more detailed explanations for these concerns.\n\n3. The experimental section is confusing probably due to the unclear selection of compared methods. The related work section does not introduce the compared methods in Table 3, 5, and 6, making it difficult to understand the state of the arts. Furthermore, the authors introduce four categories of model compression in the related work section, such as pruning, and quantization, but they do not present the performance comparison between them and the proposed methods.\n\n4. The experimental setup could be improved. ResNet50 is not reasonable for being used on CIFAR10 since it is too large and prone to overfitting, potentially making the experimental results noisy. Additionally, all experiments are focused on classification. The proposed method should be extended to other tasks to provide more generalized results.\n\n5. The quality of figures and tables should be improved. For example, the quality of Figure 2 is poor, which makes it difficult to capture useful information. Similarly, the proposed method's key results in the tables should be highlighted for better readability."
            },
            "questions": {
                "value": "Please see the weaknesses for revision."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission4105/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission4105/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission4105/Reviewer_Be5z"
                ]
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission4105/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1699447073214,
        "cdate": 1699447073214,
        "tmdate": 1699636375257,
        "mdate": 1699636375257,
        "license": "CC BY 4.0",
        "version": 2
    }
]