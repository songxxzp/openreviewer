[
    {
        "id": "58PjNRlvbB",
        "forum": "z8TW0ttBPp",
        "replyto": "z8TW0ttBPp",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission3137/Reviewer_3VCG"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission3137/Reviewer_3VCG"
        ],
        "content": {
            "summary": {
                "value": "This paper proposes a new pipeline for training LLM for math problems with code integration. There are two main contributions in this paper. First, they use GPT-4 to do problem interpolation, which generates new problems between GSM8K (easy) and Math (hard) levels. Secondly, their dataset contains natural language for reasoning, code for execution and execution results, and they use these information to refine tune Llama-2 and code Llama. Their fine tuned model has achieved 45.2% on Math, which is much better than the previous results. \n\nIt is important to note that the labels for the interpolated problems were directly generated using their own fine tuned model based on CodeLlama with GPT-4 labels on GSM8K+Math, instead of using GPT-4."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "I think the  main strength of this paper is it provides better results on many math datasets, including GSM8K and Math. \n\nOriginality: the main originality of this paper comes from the idea of doing problem interpolation, as well as using code integration. However, code integration is a common idea used in many math papers. \n\nQuality: Good. This paper provides a clear pipeline of the algorithm, with detailed comparison with other methods. \n\nClarity: Good, it is easy to follow. \n\nSignificance: Mild, as stated below."
            },
            "weaknesses": {
                "value": "I think the main contribution of this paper is doing problem interpolation, but according to Table 4, the improvement of this idea is mild. In particular, in Table 2, the improvement of MathCoder-L and MathCoder-CL over existing methods on MATH is 22.4/22.5, but in Table 4, the help of problem interpolation is only 1.2. That means, almost all the improvement actually comes from the code integration part, which is the power from GPT-4 (with code interpreter). \n\nI also find the use of Mathcoder-initial a bit confusing. Is the main purpose of this idea saving money? If so, it might be beneficial to explicitly point it out, otherwise it makes the whole training process unnecessarily complicated. \n\nThe fine tuning part for code integration is kind of straightforward, and there are many existing work using similar ideas. So I will not say it is an important contribution. \n\nOverall speaking, I think the main contribution of this paper is \"using GPT-4 to create a new dataset, augment the dataset using problem interpolation, and fine tune Llama using the created dataset\". The augmentation is interesting, but with limited improvement. Therefore, I will say this paper has limited significance. I give weak accept mainly because I feel this is an important problem, and the authors provide a reasonably good solution."
            },
            "questions": {
                "value": "I do not have extra questions because the paper looks straightforward to understand. However, if I misunderstood anything about this paper, please do let me know and I will happy to update my score."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission3137/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698474612646,
        "cdate": 1698474612646,
        "tmdate": 1699636260955,
        "mdate": 1699636260955,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "JbNWNtVWZo",
        "forum": "z8TW0ttBPp",
        "replyto": "z8TW0ttBPp",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission3137/Reviewer_Gqkc"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission3137/Reviewer_Gqkc"
        ],
        "content": {
            "summary": {
                "value": "The paper presents a method to fine-tune open-source models such as Llama-2 and CodeLlama for mathematical reasoning tasks. First, the authors propose a method to generate a large dataset of mathematical reasoning problems where each data sample consists of a natural language for reasoning, code for execution, and code execution results. They first obtain solutions for the seed datasets called the GSM8k and MATH using GPT-4 by interleaving the natural language, code, and code execution results for each question. Then, they fine-tune the CodeLlama-34B model using the seed data to produce their initial MathCoder model (MathCoder-Initial).\n\nSecond, to bridge the difficulty gap between grade-school-level problems from GSM8k and \nchallenging competition-level problems from MATH, they provide a novel prompting method to generate a dataset of intermediate-level problems by GPT-4. They give pairs of problems from GSM8k and MATH as prompts to GPT-4 and use the generated intermediate-level problems as additional training data with LCE solutions generated by the initial MathCoder model. The constructed dataset is called the MathCodeInstruct. Finally, they fine-tune the base Llama-2 and CodeLlama models using the MathCodeInstruct dataset to produce their final MathCoder models MathCoder-L and MathCoder-CL.\n\nThe authors evaluate the proposed models on five datasets including two in-domain datasets GSM8K and MATH, and three out-of-domain datasets SVAMP, Mathematics, and SimulEq. The results show that the proposed models outperform the open-source baselines on all datasets."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "- The paper presents a novel method to fine-tune open-source models such as Llama-2 and CodeLlama for mathematical reasoning tasks. The proposed method is simple and effective.\n- The paper presents a novel prompting method to generate a dataset of intermediate-level problems by GPT-4."
            },
            "weaknesses": {
                "value": "- I think it is really important to check whether or not the training dataset of GPT-4 contains datasets used in the paper. For instance, if GPT-4 is trained on one of the out-of-domain datasets considered in the paper, then it is very likely that GPT-4 copied the problems from the out-of-domain datasets and MathCoder used the copied problems for training. In this case, the results are not reliable because the baselines do not have access to the out-of-domain datasets.\n- There is no theoretical analysis or guarantee of the proposed method.\n- In Table 2, there is a typo as follows: Colsed-Source Model -> Closed-Source Model"
            },
            "questions": {
                "value": "- I wonder if GPT-4 generated completely novel intermediate-level problems or just copied the problems from GSM8k and MATH (or from one of the out-of-domain datasets). If the latter is the case, I think it is not a fair comparison with the baselines because the baselines do not have access to the out-of-domain datasets."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission3137/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698738724905,
        "cdate": 1698738724905,
        "tmdate": 1699636260840,
        "mdate": 1699636260840,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "XWNfOW1wxA",
        "forum": "z8TW0ttBPp",
        "replyto": "z8TW0ttBPp",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission3137/Reviewer_X1mb"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission3137/Reviewer_X1mb"
        ],
        "content": {
            "summary": {
                "value": "The paper proposes an approach called MathCoder to achieve better performance on math task. The proposed methods include steps:\n- First,  use GPT4 to generate LCE solution (e.g. natural language (text) for reasoning L, code for execution C, and execution results E) for questions; \n- Second, Finetune MathCoder-Initial 34B to learn to generate LCE solution\n- Third, use GPT4 to generate data interpolation with a difficulty level between the easy and difficult datasets. Use MathCoder-Initial 34B to generate solution LCE solution\n- Fourth, Finetune a smaller model (MathCoder-L or MathCoder-CL) on the augmented dataset"
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "- First, the paper is quite well written, explained different steps clearly, discussion and ablation study are also interesting \n- Second, the idea using GPT4 to interpolate questions to create augmentation is quite interesting\n- Third, the paper designs the output format LCE, which includes reasoning, coding, execution, (with or without execution of the output by the code, say python python). this way encourages LLM to speak more, reasoning more, and potentially get good results \n- Distillation of bigger model to smaller models give good performance."
            },
            "weaknesses": {
                "value": "- The proposed methods are comprises of multiple well known effective components (coding helps, execution, consistency, distallation). So the contribution of this paper may not be significant enough. \n    - For example, using python code to solve math problem is well known to have much more advantages over text prompt (python code is more precise than text). as indicated by paper \"Program-aided Language Models\" and many other paper\n    - Another example,  including execution of the  python code can improve performance, as it avoids LLM hallucinate on the equations, such as tool use or plugin paper. \n    - Distillation of bigger models on GPT-4's solution isn't quite new. \n\n- One of the main contribution of the paper is LCE solution format. However, even we let GPT4 generate solution with demonstration of solution with both reasoning, math, code, it may not generate well-moduled solution with clear blocked  <|text|> <|code|> and <|execution|>. it may more likely to have intersected solution mixing the three together. how to maintain the well structured LCE solution? If the method doesn't relay on the well moduled solution LCE, then the method simply boils down to distillation on GPT4's solution? what will the finetuning results be if the solution format is only python coding, which probably be the major performance contributior?"
            },
            "questions": {
                "value": "1 typo: From the comparison between Tab. 5 (#1) and Tab. 5 (#2), we can see that Tab. 5 (#1) outperforms Tab. 5 (#2) across all five datasets, showing an improvement of 34.0% in the average accuracy score.\n\n    - #2 is better?\n\n2 MathCoder-Initial already has an accuracy of 77.3% on GSM8K and 44.0% on MATH. MathCoder is the model used to generate ground truth solution for supervised finetuning smaller models. How do we explain why the performance on the distilled smaller models have better performance in Table 2? \n\n3 During supervised finetuning, can you say more on how do you implement \"cross-question masking\"? how does it help of the performance compared with not using it? \n\" In order to make the training more efficient, several\ninstances are concatenated together to form a single input, while cross-question masking is used to\nensure only tokens in the same instance are visible.\"\n\n4. Another interesting experiment to show the improvement of the interpolation augmentation is the changes of performance with the size of the augmentation. Are they always help? when will it saturate?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "details_of_ethics_concerns": {
                "value": "None"
            },
            "rating": {
                "value": "5: marginally below the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission3137/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698996323699,
        "cdate": 1698996323699,
        "tmdate": 1699636260741,
        "mdate": 1699636260741,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "tQ9BV7IUG6",
        "forum": "z8TW0ttBPp",
        "replyto": "z8TW0ttBPp",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission3137/Reviewer_VXbY"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission3137/Reviewer_VXbY"
        ],
        "content": {
            "summary": {
                "value": "This work presents MathCoder, a family of open-source LLMs for math problem solving. For training data construction, they first use GPT-4 to generate solutions to GSM8K and MATH problems, where the solutions contain natural language, code and execution results. This dataset is used to train MathCoder-Initial, which is finetuned from Llama-2 or CodeLlama. Afterward, the authors design problem interpolation prompting to generate new training problems with the difficulty between GSM8K and MATH, and use MathCoder-Initial to generate solutions for further finetuning. They evaluate MathCoder on several math benchmarks, and show that MathCoder outperforms other open-source LLMs."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "1. Improving opensource LLMs is a good research topic. MathCoder noticeably outperforms other opensource LLMs, especially on challenging math benchmarks such as MATH.\n\n2. The ablation studies show some interesting observations, e.g., comparison between models based on Llama-2 and CodeLlama, and predicting the execution results during training degrades the performance.\n\n3. Besides the MathCoder checkpoints, MathCodeInstruct can also be valuable data for the community."
            },
            "weaknesses": {
                "value": "This work presents a complete training framework that achieves impressive performance. However, some design choices lack related ablation studies and explanation.\n\n1. To construct the training targets for D1 data, why using MathCoder-Initial instead of GPT-4? How is the performance if GPT-4 is used for generating the solutions? My hypothesis is that training on MathCoder-Initial's own predictions can amplify the model's own prediction mistakes, and it is helpful to explain more about why this can still improve the performance.\n\n2. The authors emphasize the importance of having natural language, code and execution results altogether in each problem solution. It would be good to have an ablation where the solutions only contain natural language or code, then we can check how much improvement is obtained by adding different components together in one solution.\n\n3. To understand the importance of problem interpolation prompting, it would be helpful to have an ablation where the generated data is a mixture of data generated with GSM8K or MATH as the seed data, instead of using interporation.\n\n4. It is helpful to have an analysis on performance with different number of generated training samples, so that we can better understand how much improvement is possible with this approach."
            },
            "questions": {
                "value": "1. Please explain why using MathCoder-Initial instead of GPT-4 for generating the training targets, and what is the performance if GPT-4 is used for generating the solutions.\n\n2. It would be good to have an ablation where the solutions only contain natural language or code, then we can check how much improvement is obtained by adding different components together in one solution.\n\n3. It would be helpful to have an ablation where the generated data is a mixture of data generated with GSM8K or MATH as the seed data, instead of using interporation.\n\n4. It is helpful to have an analysis on performance with different number of generated training samples, so that we can better understand how much improvement is possible with this approach."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "5: You are absolutely certain about your assessment. You are very familiar with the related work and checked the math/other details carefully."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 4,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission3137/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1699175506814,
        "cdate": 1699175506814,
        "tmdate": 1699636260673,
        "mdate": 1699636260673,
        "license": "CC BY 4.0",
        "version": 2
    }
]