[
    {
        "id": "l21ajHLZ4b",
        "forum": "ki4NYmRTQI",
        "replyto": "ki4NYmRTQI",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission2967/Reviewer_255q"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission2967/Reviewer_255q"
        ],
        "content": {
            "summary": {
                "value": "The main contribution of this paper is a new INR architecture, called Operational INR (O-INR). This architecture is introduced as a mapping from one function space (the positional encoding function space) to another (the INR function space). The mapping is performed using integral transforms. The proposed O-INR $h(\\omega)$ for the positional encoding $f(\\omega)$ is $h(\\omega)=\\int_{\\omega'\\in\\Omega}K_\\phi(\\omega,\\omega')f(\\omega')d\\omega'$, where the integral kernel $K_\\phi(\\omega,\\omega')$ is proposed to be a convolutional kernel parameterized by $\\phi$. Two key differences with typical INRs are 1) the use of convolution rather than MLP and b) O-INR computes a transform over the full domain rather than in a single point. Other methodological contributions of the paper include the inclusion of of high-frequency noise in the positional embedding, the use of O-INR to compute derivative of the encoded function, a dedicated formulation to handle the temporal domain. O-INRs are evaluated in multiple experiments: image representation and denoising, multiresolution training on images, occupancy map encoding, video encoding, brain imaging (encoding ang missing slice extrapolation). Derivative computation and weight interpolation are also evaluated."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "originality:\n- The proposed approach is very original. It defers significantly from the different approaches to implicit neural representation. The experiments also highlights these differences. The brain imaging experiment is also quite original.\n\nquality:\n- There are a lot of different experiments.\n\nclarity:\n- The paper is mostly clear when describing the approach.\n\nsignificance:\n- I believe this paper proposes interesting ideas that seem promising."
            },
            "weaknesses": {
                "value": "quality:\n- In experiment 4.1, the text claims that \"O-INR\" is comparable/better than baselines but it achieves the worse PSNR (figure 2). \n- I found the baselines a bit lacking. Only 3 baselines are used: SIREN (2020), WIRE (2023) and MFN (2021). There is no comparison to grid-based INR such as instant-NGP in any experiment. These 3 baselines are only present in some experiments, the image ones, occupancy map encoding and weight interpolation. Unless I missed it, no baseline is considered in the video experiment and the brain imaging one, arguably the most complex ones. \n- The video experiment is performed on a single video. Typically, experiments are conducted on datasets such as UVG. This might be a computational limitation, but then it would make sense to use a video from a commonly used dataset.\n- Tables 2 and 3 are badly positioned, with a single line of text below or above them. \n- Table 1 is very close to the text.\n\nclarity:\n- The paper describes the proposed approach as a mapping between two function spaces and suggest the mapping is done between different $f$ and yields different $h$, see for example figure 1, the two paragraphs above equation 2 and the paragraph below. However, it is common for INR networks to use the same mapping to represent every signal and as far as I could tell the same positional encoding is also used for each signal of the same class in the experiments of the paper. So I found this discussion over multiple positional encoding functions a bit confusing.\n- Reinforcing this confusion is equation (3), where the domains of the transformation function are denoted as a single function ($f \\rightarrow h$) whereas function spaces are defined above.\n- It is not clear for me what is the \"location bias\" mentioned after equation 6.\n- The temporal representation is discussed in the experimental setup of one experiment (equations 7 and 8). I also could not understand it completely: the embedding functions are modified (the same power of 2 is used in all terms) and an offset parameterized by 2 parameters and depending on the power of 2 is introduced. To me, these choices are neither motivated nor explained in the paper.\n\nsignificance:\n- There is no ablation study to show the difference between convolutional and MLP kernel. Hence it is no clear to me whether both using a convolutional kernel or computing a transform over the whole domain signal brings benefits. This point is also not discussed as far as I could tell.\n- Same comment for the high-frequency noise and the special temporal modeling.\n\nFurthermore, I would like to bring up the following details:\n- Appendices number are often not mentioned in the text when referring the reader to the appendix, making it difficult to read the paper."
            },
            "questions": {
                "value": "I would welcome the authors' opinion about the weaknesses listed above. In addition, I have the following question:\n- The paper highlights the ability of O-INR to compute derivatives. I know a few references are provided, but could you please explain in a few words the importance/advantages of this ability?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission2967/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698315305855,
        "cdate": 1698315305855,
        "tmdate": 1699636240872,
        "mdate": 1699636240872,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "OMgI1rXAI2",
        "forum": "ki4NYmRTQI",
        "replyto": "ki4NYmRTQI",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission2967/Reviewer_x28W"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission2967/Reviewer_x28W"
        ],
        "content": {
            "summary": {
                "value": "The paper proposes an implicit neural representation that transforms the positional encoding functions of coordinates into the signal function. Instead of using an MLP to evaluate the INR point by point, continuous convolution is used to take into account the entire positional encoding functions without compromising the capability of free query in the domain."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "1 poor"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "- Originality: The paper provides an alternative viewpoint for implementing INRs with intuitions from neural operators to deal with continuous output function.\n- Significance: The paper"
            },
            "weaknesses": {
                "value": "- Lack of important elements about the model: One critical aspect missing from the model description is a clear presentation of the network architecture. Equations (4)-(6) seem to suggest a linear transformation between the positional encoding function $f$ and the target $h$, which implies that the neural network consists of just one linear layer without any nonlinear activation functions. However, in the comparison with other INRs, the authors highlight the advantages of kernels over an MLP. To eliminate any ambiguity, it's essential to provide more detailed information about the actual network architecture.\n- Lack of details on the implementation of baseline methods: It is challenging to assess the performance gain without a comprehensive description of the implemented baseline methods, including details such as the number of parameters, the number of layers, and the coordinate range. Additionally, there are two implementations for MFN; it would be helpful to specify which one was chosen for this evaluation.\n- Given the minor result differences between the 2 best methods, assessment solely based on individual images no longer offers informative comparisons with baseline models. To establish the method's credibility, it is recommended to report statistical performance metrics on a reasonably sized dataset. Based on the current results, it's challenging to determine if the model performs as claimed.\n- In Section 5, I couldn't locate any comparisons with the baseline methods. If it's necessary to reference other papers to make these comparisons, it indicates that the paper is not self-contained and could benefit from better organization and inclusion of baseline comparisons within the document. \n  Also, the authors critique the use of mapping with $t$ as coordinates in other MLP-based INRs. However, without ablation studies, it's challenging to understand the motivation behind this criticism, even if it is reasonable.\n- In Section 7, I find it difficult to accept the claim that gradient evaluation cannot be accomplished with baseline INRs. With the availability of autodiff libraries (e.g. JAX, or even PyTorch), it is possible to perform gradient evaluation, which should be acknowledged and discussed in more detail.\n- I believe that the motivation for the interpolation task in Section 8 should be clarified. Furthermore, since it's observed that linearly interpolating the weight results in a linear interpolation of the image, it would be helpful to explain the significance and implications of these findings."
            },
            "questions": {
                "value": "- I believe the paper could significantly benefit from a more thorough clarification of the details of the model and baselines, and a more convincing comparison with the baselines. \n- Instead of prioritizing numerous applications with limited comparisons, it would be more effective to emphasize how the operator viewpoint can enhance the representation of a set of signals, showcasing the method's potential benefits and significance."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "1: strong reject"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission2967/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698428419234,
        "cdate": 1698428419234,
        "tmdate": 1699636240767,
        "mdate": 1699636240767,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "v2A6u8nMBH",
        "forum": "ki4NYmRTQI",
        "replyto": "ki4NYmRTQI",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission2967/Reviewer_LTrk"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission2967/Reviewer_LTrk"
        ],
        "content": {
            "summary": {
                "value": "This paper proposes a framework where instead of using INR, they use (continuous) convolution layers applied to the positional encoding functions. They provide numerical experiments, highlighting its performance on INR benchmark tasks, i.e.  regression to images, denoising, representing 3d volumes etc.."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "1 poor"
            },
            "contribution": {
                "value": "1 poor"
            },
            "strengths": {
                "value": "The experimental analysis seems quite extensive, and a broad range of tasks where tackled.\n\nInteresting to see someone questioning the very essence of INRs."
            },
            "weaknesses": {
                "value": "* Section 3 and presentation of the contribution is very much unclear and poorly written. The function space is not clearly defined. What is the space of sinusoidal positional encodings? This should clearly be defined. You should also mention that the space you consider in practice is a discrete, finite space.\n\n* Maybe I am missing something here but I feel that the contribution is rather limited. I feel that the solution is not well motivated, and the experiments aren't entirely convincing. The related work should be a place to *clearly* state the difference of your method wrt to previous methods, ie continuous convolutions, or for instance missing work on neural operators. I do not think that bringing continuous convolutions in the context of INRs is very much of a contribution in itself.\n\n* no code"
            },
            "questions": {
                "value": "In practice, the signal has to be discretized. How is it discretized? What grid do you use? What errors are we making?\n\nDo you ever use integral operators that are not convolutions? If not, why present integral operators?\n\nWhat is the motivation behind applying convolutions on sinusoidal positional encodings? \n\nIf your related work is about continuous convolutions, i feel that it is only normal to compare against a continuous convolutional network (that takes coordinates as input for example, or even a constant)."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission2967/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698663577511,
        "cdate": 1698663577511,
        "tmdate": 1699636240670,
        "mdate": 1699636240670,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "g4n4ZRrTRq",
        "forum": "ki4NYmRTQI",
        "replyto": "ki4NYmRTQI",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission2967/Reviewer_mmzV"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission2967/Reviewer_mmzV"
        ],
        "content": {
            "summary": {
                "value": "This paper presents an operator-theoretical reformation of Implicit Neural Representation (INR). Instead of viewing INR as a pointwise mapping from position embedding to coordinate-aligned value, the authors regard INR as an operator that maps a predefined function space to the signal space via integral transforms. To improve efficiency and numerical stability, the authors propose to use convolution as a surrogate of the general integral transforms."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "+ The paper is well-written, nicely structured, and easily comprehensible. The problem setting is highly relevant, as it endeavors to represent a set of signals through INR, enhancing the practical utility of this approach.\n\n+ The proposed method introduces a novel reformulation that, to the best of my knowledge, is the first to regard INR as a transformation between function spaces. This reformulation, in turn, offers insights into numerous convolution-based architectures that employ position embeddings as inputs, as seen in [1].\n\n+ The experimental section encompasses eight proof-of-concept experiments for INRs. These experiments span a wide spectrum of potential INR applications, underscoring the versatility and adaptability of this approach.\n\n[1] Karras et al., Alias-Free Generative Adversarial Networks"
            },
            "weaknesses": {
                "value": "- While the operator perspective is indeed novel, it seems that the method essentially involves applying convolution on a position-embedding lattice, if I understand correctly. This computational paradigm is already established in various works, as evidenced by references such as [1] and [2].\n\n- Arguably, one of the most significant advantages of INR is its ability to decode arbitrary points without the need for neighborhood sampling. This property is particularly valuable for unstructured decoding, a common requirement in 3D domains, as seen in surface regression through point clouds [3] or ray-based rendering in NeRF [4]. However, as I understand it, there may be doubts regarding the efficiency of O-INR in achieving this, as it appears that O-INR requires local window sampling to perform convolution for pointwise value computation.\n\n- The experiments presented, while covering a variety of applications, may not fully support the main claim of \"from one signal to a set of signals.\" This claim seems to be substantiated merely by Sec. 5 and 6, without direct comparisons to relevant baselines, such as Functa [5]. Furthermore, in Sec. 7, it might be inadequate to solely focus on derivative computation, as there is a need to consider a broader range of tasks, as introduced in [6] and [7].\n\n[1] Karras et al., Alias-Free Generative Adversarial Networks\n\n[2] Wang et al., Patch Diffusion: Faster and More Data-Efficient Training of Diffusion Models\n\n[3] Sitzmann et al., Implicit Neural Representations with Periodic Activation Functions\n\n[4] Mildenhall et al., NeRF: Representing Scenes as Neural Radiance Fields for View Synthesis\n\n[5] Dupont et al., From data to functa: Your data point is a function and you can treat it like one\n\n[6] Xu et al., Signal Processing for Implicit Neural Representations\n\n[7] Navon et al., Equivariant architectures for learning in deep weight spaces"
            },
            "questions": {
                "value": "1. The implementation of continuous convolution, as mentioned in Sec. 3 and 4, remains unclear. Is it exactly the same with the approach described in [1]?\n\n2. Regarding the efficiency of convolution parameterization, it is essential to clarify why this approach is more efficient compared to alternatives. For instance, if pointwise mapping, as seen in SIREN [2], can be considered a form of 1x1 convolution, should it not be more efficient?\n\n3. The assertion that derivative computation is \u201ca functionality not currently available otherwise\u201d requires further clarification. To my knowledge, derivatives can be computed in closed form through standard INRs, as demonstrated in [2], [3], and [4]. Additionally, the claim that \"O-INR allows seamless calculus operations\" prompts the question of whether O-INR can efficiently compute integrals as well.\n\n[1] Romero et al., Continuous Kernel Convolution For Sequential Data\n\n[2] Sitzmann et al., Implicit Neural Representations with Periodic Activation Functions\n\n[3] Lindell et al., AutoInt: Automatic Integration for Fast Neural Volume Rendering\n\n[4] Xu et al., Signal Processing for Implicit Neural Representations"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "5: marginally below the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission2967/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission2967/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission2967/Reviewer_mmzV"
                ]
            }
        },
        "number": 4,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission2967/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698969453750,
        "cdate": 1698969453750,
        "tmdate": 1699636240595,
        "mdate": 1699636240595,
        "license": "CC BY 4.0",
        "version": 2
    }
]