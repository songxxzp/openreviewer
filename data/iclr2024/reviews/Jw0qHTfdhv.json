[
    {
        "id": "FA8y4y9goL",
        "forum": "Jw0qHTfdhv",
        "replyto": "Jw0qHTfdhv",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission4877/Reviewer_qLBd"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission4877/Reviewer_qLBd"
        ],
        "content": {
            "summary": {
                "value": "The paper proposes a new framework called Learning to Generate Predictor (LGPred) for long-term time series forecasting. The key idea is to generate a linear predictor dynamically tailored to the input time series, to overcome limitations of fixed linear predictors. LGPred uses time series decomposition into trend and seasonality components. Separate representation modules extract features from each component. A predictor generator uses the extracted features to generate the weights and biases of a linear predictor suited to the input series. A template predictor with bottleneck architecture is used to incorporate common forecasting knowledge and reduce computation cost. Experiments show state-of-the-art performance on 6 benchmark datasets covering disease, economics, energy, traffic and weather domains."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "(1) Novel idea of generating parameters of predictor based on input series, enabling adaptation to each series.\n\n(2) Bottleneck template predictor shares knowledge among different time series and reduces computational cost.\n\n(3) Well-written paper and easy to understand."
            },
            "weaknesses": {
                "value": "(1) The proposed method includes multiple modules and each of them have their own hyper-parameters to tune. Extensive hyper-parameter tuning was not favorable. Also, I was not clear why a bottleneck architecture was used for template predictor and intuition behind this design was not discussed. \n\n(2) Time series decomposition is a standard technique already used by some prior works.\n\n(3) Experimental results do not include mean value and standard deviations. It will be good to know if the proposed method is sensitive to initialization. \n\n(4) Results are mainly conducted on time series datasets with simple patterns. What if the patterns are complicated and hard to capture for linear predictors?  More experimental results or at least discussion of limitations are needed. Time series can vary significantly in terms of distribution and it is good to know when an algorithm can perform good/bad."
            },
            "questions": {
                "value": "See my comments in Weaknesses"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission4877/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698604158843,
        "cdate": 1698604158843,
        "tmdate": 1699636472041,
        "mdate": 1699636472041,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "30Fv4No6Tm",
        "forum": "Jw0qHTfdhv",
        "replyto": "Jw0qHTfdhv",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission4877/Reviewer_LX8c"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission4877/Reviewer_LX8c"
        ],
        "content": {
            "summary": {
                "value": "This paper proposes a model (LGPred) which learns the predictor for each sample in the long-term time series forecasting tasks. The LGPred generates a part of weights and bias for the projection from the input to the output, based on representations learnt from the trend and seasonality of each sample. Experiments on several benchmark datasets are conducted to evaluate the effectiveness of LGPred."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "The proposed LGPred can generate dynamic predictors for different samples, which is novel for the long-term time series prediction tasks. The paper is well-written in general and easy to understand."
            },
            "weaknesses": {
                "value": "1. Some parts in the Preliminary and Method sections are not clear, e.g.,\n\n-It is not clear why time series forecasting with T>48 is considered as LTSF problem, are there any reasons or references?\n\n-Why change the number of channels in the trend block?\n\n-The dilated temporal convolutional network should be introduced, in case some readers do not have related background Knowledge.\n\n2. The comparison with baselines may be unfair and experiments are insufficient.\n\n-I think it is unfair to compare with PatchTST/64 which uses lookback window length 512 only. As shown in the Figure 2 of the PatchTST paper, the performance is changed with different lookback windows. It is better to choose the best results from different lookback windows for PatchTST for a fair comparison. In addition, even based on the current results shown in the Table 1, the proposed LGPred cannot beat PatchTST/64. \n\n-It is better to add the results of PatchTST in Table 3 due to its superiority.\n\n-There is no complexity analysis between the proposal and baselines.\n\n-It is better to provide some experiment results of using RNN and transformer for the trend component."
            },
            "questions": {
                "value": "Same to the Weaknesses."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "5: marginally below the acceptance threshold"
            },
            "confidence": {
                "value": "5: You are absolutely certain about your assessment. You are very familiar with the related work and checked the math/other details carefully."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission4877/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission4877/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission4877/Reviewer_LX8c"
                ]
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission4877/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698734108734,
        "cdate": 1698734108734,
        "tmdate": 1699636471945,
        "mdate": 1699636471945,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "vcnJoOshOo",
        "forum": "Jw0qHTfdhv",
        "replyto": "Jw0qHTfdhv",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission4877/Reviewer_qCaW"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission4877/Reviewer_qCaW"
        ],
        "content": {
            "summary": {
                "value": "This paper proposed a learning-to-generate-predictor model, LGPred, for long-term forecasting. In particular, LGPred consists of two parts, a weights generator, and a feature extraction, and then uses a bilinear-type structure to merge them. Moreover, the seasonality trend decomposition is used in the weights generator. Numerical results on 9 datasets are reported."
            },
            "soundness": {
                "value": "1 poor"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "1 poor"
            },
            "strengths": {
                "value": "The usage of bilinear structure seems new in the time series forecasting domain."
            },
            "weaknesses": {
                "value": "1. The term *Learning to Generate Predictor* is a little bit overstated from my perspective. My first impression would be a meta-learning model is considered. However, after reading the paper and codes. It seems just a usage of bilinear-type layer for me. I appreciate applying the bilinear layer since it seems not being used in recent forecasting literature. But *Learning to Generate Predictor* may not be the best term to summarize the model novelty for me. If the authors still prefer using *Learning to Generate Predictor*, it would be better to add more discussion to clearly state the difference from the meta-learning type model.\n\n2. The statement \"*LGPred is the first attempt at adaptively generating a predictor reflecting the characteristics of each time series.*\" seems also a little bit overclaimed. For example, in DeepAR, the network will first generate the $\\mu$/$\\sigma$ or $\\mu$/$\\alpha$ for Gaussian distribution or negative binomial (NB) distribution respectively. During the inference stage, the forecasting point will be sampled from the Gaussian/NB distribution. In this case, the Gaussian/NB distribution can be viewed as the *Predictor*, and the parameters in the predictor are learned with a network. \n\n3. The test data loader sets `drop_last = True`. In this case, the last several test samples are ignored, which will impact the accuracy of results in Table 1- Table 3. It would be better if the authors could fix it.\n\n4. It seems that the random control experiments are not conducted. \n \n\nReference:\n\nDeepAR: Salinas, David, Valentin Flunkert, Jan Gasthaus, and Tim Januschowski. \"DeepAR: Probabilistic forecasting with autoregressive recurrent networks.\" International Journal of Forecasting 36, no. 3 (2020): 1181-1191."
            },
            "questions": {
                "value": "1. The main results in Table 1 - Table 3 are from the model after hyperparameter searching. I'm wondering if the authors can provide a sensitive analysis of the parameter choices to further highlight the robustness of the proposed model."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "5: marginally below the acceptance threshold"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission4877/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698832880218,
        "cdate": 1698832880218,
        "tmdate": 1699636471872,
        "mdate": 1699636471872,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "wtTzn0xKTY",
        "forum": "Jw0qHTfdhv",
        "replyto": "Jw0qHTfdhv",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission4877/Reviewer_dX6j"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission4877/Reviewer_dX6j"
        ],
        "content": {
            "summary": {
                "value": "This paper proposes the Learning to Generate Predictor (LGPred) framework, a novel approach to enhancing linear time series forecasting models. LGPred adaptively generates a linear predictor tailored to the specific characteristics of a given time series by time series decomposition. This allows the model to discern and adapt to each time series' unique trend and seasonality components. Experimental evidence presented in the paper indicates that LGPred consistently delivers top-tier performance on various benchmarks."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "1. The proposed method provides clear motivation for its designs.\n2. Empirical results showcase commendable performance, effectively outperforming many preceding methodologies."
            },
            "weaknesses": {
                "value": "1. The paper seems to omit discussions on contemporary related works. Notably, the structure of the proposed trend representation module is almost the same as TSMixer [1]. Furthermore, TiDE [2] has previously delved into refining linear models specifically for time series forecasting. Given the architectural similarities between these MLP-based models, a more in-depth comparison and differentiation would enhance clarity.\n2. The absence of comprehensive ablation studies leaves the intrinsic value of each component in the proposed method ambiguous. For instance, the ablation analysis in [1] revealed that simpler stacked linear models (i.e., TMix-Only) could rival the performance of the presented methodology. This raises questions regarding the neccesity of LGPred's individual components.\n3. The delineation of the dimensions for the linear and fully-connected layers remains ambiguous. For multivariate time series data, these layers could be applied across either time or feature dimensions, as depicted in Figure 2. Unfortunately, the descriptions on the predictor generator and template predictor (page 4) do not explain the dimensional characteristics of these layers adequately.\n\n[1] Chen, Si-An, et al. \"TSMixer: An All-MLP Architecture for Time Series Forecasting.\" Transactions on Machine Learning Research. 2023\n\n[2] Das, Abhimanyu, et al. \"Long-term Forecasting with TiDE: Time-series Dense Encoder.\" Transactions on Machine Learning Research. 2023"
            },
            "questions": {
                "value": "1. Does the proposed architecture incorporate any non-linear activation functions? It's worth noting that certain linear modules, such as $b_{gen}$, might be redundant given that the concatenation of multiple linear layers essentially functions as a single linear layer.\n2. Considering the insights from recent works ([1], [2]) highlighting the potential inadequacy of LTSF benchmarks in reflecting models' capability in handling cross-variate correlations, can the LGPred framework be generalized to tackle more intricate datasets like M5 or Favorita, as explored in [1] and [2]?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 4,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission4877/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698858657493,
        "cdate": 1698858657493,
        "tmdate": 1699636471804,
        "mdate": 1699636471804,
        "license": "CC BY 4.0",
        "version": 2
    }
]