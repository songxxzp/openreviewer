[
    {
        "id": "ARYc5xsWGg",
        "forum": "tsE5HLYtYg",
        "replyto": "tsE5HLYtYg",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission7020/Reviewer_PSGc"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission7020/Reviewer_PSGc"
        ],
        "content": {
            "summary": {
                "value": "The authors propose SafeDreamer - a safe model-based reinforcement learning (RL) algorithm built on the DreamerV3 code base. The author's propose three variants of SafeDreamer, one that implements the constrained cross entropy method (CCEM), a simple model-predictive control (MPC) algorithm that filters high quality trajectories and updates the action selection parameters with each iteration to converge to a set of safe trajectories. The other two variants implement Lagrangian methods. OSRP-Lag implements PID Lagrangian for constrained online planning in a similar fashion as CCEM. The final variant implements the augmented Lagrangian, which directly modifies the policy gradient to include cost TD-lambda estimates, weighted by a Lagrange multiplier. This final version called BSRP-Lag does not use online planning at each step in comparison to the two other variants of SafeDreamer.\n\nThe authors evaluate their algorithms on five separate environments from Safety-Gymnasium - a newer version of Safety Gym which is a well known benchmark. The authors evaluate against several suitable (model-free and model-based) algorithms and demonstrate good performance."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "(1) The problem is well motivated (if quite briefly).  \n\n(2) The contributions are novel and the strengths of all three algorithms are demonstrated soundly on a \"popular\" set of environments. \n\n(3) Codebase provided is useful and the supplementary material is very thorough."
            },
            "weaknesses": {
                "value": "While the quality and significance of the results are without a doubt the strongest point of this paper. The paper unfortunately has several weaknesses. \n\n(1) A key problem is there is little dicussion or elaboration about the choices made in this paper and what the alternatives could be. Unfortunately the related work section is relegated to the appendix, while this does not pose an immediate issue I don't find this section to be particularly comprehensive. Yes, there are references to older approaches from the literature, both model-free and model-based. However, there is no discussion on where this research sits in the broader context of safe RL. Not all safe RL research uses the CMDP framework with simple cumulative constraints. It would be nice for the authors to provide a broader overview of safe RL and the problems associated with deploying RL in the realworld. And perhaps discuss and motivate why they only consider simple cumulative constraints and even critique this setup and discuss its limitations. \n\n(2) Originality. All three algorithms are essentially combinations of existing methods, DreamerV3, PID Lagrangian, CCEM and the Augmented Lagrangian. This is not an issue per se, since this is common for RL research. However, very little discussion is provided for why these methods have been chosen and what the possible alternatives are from the literature and if these may obtain better results or not. \n\n(3) Discussion of results. The discusison of results is limited, it is clear all methods achieve the similar performance in terms of costs. However for rewards the three algorithms can perform quite differently across the environments. It would be nice if the authors could adress this, and perhaps explain or at least provide some insight into why one algorithm may be working better than another (w.r.t reward) on a specific task. \n\n*Some references are wrong in section 5.2 these need fixing*\n\nFor these reasons I am (weakly) rejecting the paper. However, since the results are actually quite good, if the authors were to adress some of my concerns I would consider changing my opinion."
            },
            "questions": {
                "value": "Is there room for improvement of your algorithm? For example, are there other online planning algorithms you may consider and would you expect these to perform better or worse?\n\nSimilarly, for the policy optimisation would you consider an alternative to the Augmented Lagrangian?\n\nWhat would you expect the outcome to be if you incorporated Augmented Lagrangian policy optimisation with an online (constrained) planning algorithm, either PID Lagrangian or CCEM? Would you expect this to improve the performance of SafeDreamer or would it become overly conservative?\n\nWould you consider incorporating the Bayesian method from (As et al. 2022)? And how would you expect this to affect peformance?\n\nIn your implementation, is there a reason for the cost predictor head being a real valued predictor rather than a binary classifier? And what is the effect of scaling the costs by 10.0 (line 208 agent.py), is this necessary to learn a good cost predictor?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "5: You are absolutely certain about your assessment. You are very familiar with the related work and checked the math/other details carefully."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission7020/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission7020/Reviewer_PSGc",
                    "ICLR.cc/2024/Conference/Submission7020/Senior_Area_Chairs"
                ]
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission7020/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698701276859,
        "cdate": 1698701276859,
        "tmdate": 1700736166700,
        "mdate": 1700736166700,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "FtZCcn3pAz",
        "forum": "tsE5HLYtYg",
        "replyto": "tsE5HLYtYg",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission7020/Reviewer_7enF"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission7020/Reviewer_7enF"
        ],
        "content": {
            "summary": {
                "value": "The paper introduces SafeDreamer, an algorithm addressing the challenge of safe reinforcement learning (SafeRL). SafeDreamer integrates Lagrangian-based methods into world model planning processes within the Dreamer framework. The approach achieves nearly zero-cost performance on various tasks, including vision-only scenarios, within the Safety-Gymnasium benchmark. SafeDreamer's contributions include online safety-reward planning, integration of Lagrangian methods, and balancing long-term rewards and costs within world models."
            },
            "soundness": {
                "value": "4 excellent"
            },
            "presentation": {
                "value": "4 excellent"
            },
            "contribution": {
                "value": "4 excellent"
            },
            "strengths": {
                "value": "1. This is a well-written paper and I enjoyed reading it. Though some claims need further assessment, It is easy to follow in general. The paper provides a detailed explanation of the SafeDreamer algorithm, including its components and integration methods. The inclusion of algorithms, figures, and experimental results demonstrates a high level of technical rigor and quality in the research.\n\n2. SafeDreamer effectively balances long-term rewards and costs, a crucial aspect of SafeRL. The ability to achieve high rewards while minimizing costs, especially in vision-only tasks, highlights the algorithm's practical utility and robustness."
            },
            "weaknesses": {
                "value": "1. While the paper compares SafeDreamer with several existing SafeRL methods, it lacks a comprehensive comparison with a broader range of related work in the field. A more extensive comparison could provide a clearer context for SafeDreamer's contributions and limitations. For example, the authors noticed the failure of achieving zero cost of Lagrangian methods and CPO and concluded the reason behind it is the lack of long-horizon planning. Actually there are several literatures [1, 2] that have discussed this issue from the perspective of cost function design. In general, more informative cost functions could solve this issue of not achieving zero costs of Lagrangian methods and CPO.\n\n[1] Ma, H., Liu, C., Li, S. E., Zheng, S., & Chen, J. (2022, May). Joint synthesis of safety certificate and safe control policy using constrained reinforcement learning. In Learning for Dynamics and Control Conference (pp. 97-109). PMLR.\n\n[2] He, T., Zhao, W., & Liu, C. (2023). Autocost: Evolving intrinsic cost for zero-violation reinforcement learning. arXiv preprint arXiv:2301.10339.\n\n2. SafeDreamer is a combination of Dreamer and Lagrangian methods. The technique contribution is incremental in that sense. But considering the experiment part is solid and sound, that should be fine. This paper provides the safeRL community with another perspective on solving the zero costs issues where safeRL achieving near zero costs is difficult when it comes to sparse cost functions, and that's where planning-based methods could make a difference."
            },
            "questions": {
                "value": "1. I might have missed some details. But why the blues in Figure 5 is not complete? The robustness of converged performance is worth reporting. Also, I am curious to see whether OSRP-Lag is able to converge to zero costs.\n\n2. Why choose different cost thresholds for different environments in Figure 6? I think the threshold of value 0 makes the most sense to me. Also, I noticed that OSRP and OSRP-Lag seem to be too conservative when the cost threshold is around 14 in SafetyPointButton1, which might reveal the imbalance between performance and safety satisfaction.\n\n3. Considering the computational demands of SafeDreamer, how scalable is the approach to more complex tasks or larger-scale environments? Additionally, what measures have been taken to enhance training efficiency, especially for tasks with high-dimensional sensory input? \n\n4. Also, If you were to deploy safeDreamer in the real world. what control frequency can be achieved at maximum. The simulation of series of neural networks rollout might be feasible in simulation (the simulation could pause to wait for the next action), but might be infeasible in real-world practice.\n\nI would be happy to raise my scores if my concerns can be solved."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "8: accept, good paper"
            },
            "confidence": {
                "value": "5: You are absolutely certain about your assessment. You are very familiar with the related work and checked the math/other details carefully."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission7020/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission7020/Reviewer_7enF",
                    "ICLR.cc/2024/Conference/Submission7020/Senior_Area_Chairs"
                ]
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission7020/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698719018722,
        "cdate": 1698719018722,
        "tmdate": 1700517913169,
        "mdate": 1700517913169,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "LZNp0dGccQ",
        "forum": "tsE5HLYtYg",
        "replyto": "tsE5HLYtYg",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission7020/Reviewer_96af"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission7020/Reviewer_96af"
        ],
        "content": {
            "summary": {
                "value": "This paper focuses on the problem of safe exploration in in vision-only tasks, where an agent needs to learn to maximise rewards while minimising the number of safety violations during learning. They formalise the problem as a constrained Markov decision process (CMDP), and propose SafeDreamer to address it. SafeDreamer combines prior work in model-based RL (DreamerV3) and constrained cross-entropy methods (CCEM) to achieve near zero-cost performance in continuous robot tasks with state-vector observations and pixel-image partial observations. They conduct various experiments demonstrating that their approach outperforms prior model-based and model-free works on various tasks in the SafetyGym domain."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "4 excellent"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "- The paper is mostly well-written and investigates an important problem. The proposed approach of combining DreamerV3 with CCEM and Lagrangian SafeRL methods is novel, interesting, and very well-motivated.\n\n- I especially liked the impressive empirical results showing that SafeDreamer is able to achieve near-zero cost returns while still having good reward returns.\n\n- The paper shows numerous empirical results comparing SafeDreamer with many relevant model-based and model-free baselines, in a number of tasks in the SafetyGym domain. Impressively, SafeDreamer is shown to outperform all these baselines in terms of cost returns, while still achieving decent reward returns."
            },
            "weaknesses": {
                "value": "**MAJOR**\n\n1- **Contributions**:\n  - SafeDreamer (OSRP, OSRP-Lag, and BSRP-Lag) seems like a straightforward combination of prior works (Dreamerv3, CCEM, Augmented Lagrangian, and PID Lagrangian). For example, if I understand correctly, OSRP (Sec 3.2) is exactly CCEM but using the TD($\\lambda$) objectives from DreamerV3 (for the cost and rewards estimates). It is not clear what are nuances that make this combination not as straightforward as one would expect. No theory nor empirical analysis is given to gain better insights into the behavior of SafeDreamer when all these components are combined.\n\n  -  While the shown empirical evaluations of SafeDreamer reporting great reward and cost performances in SafetyGym tasks are decent contributions by themselves, I think they are not sufficiently significant for publication. Some theoretical/empirical analysis of SafeDreamer and evaluations in other domains (other than SafetyGym) would improve the contributions.  \n\n2- **Emperical significance**:\n  - The paper doesn't state how many runs the results are averaged over. \n  - The paper doesn't state all the main hyperparameters used for the baselines (e.g all model architectures and planning hyperparameters for LAMBDA/Safe SLAC). It is unclear if the model-based baselines were given approximately the same number of planning samples as SafeDreamer, and if the model-free baselines were given enough additional model parameters and gradient steps to compensate for the model size and runtime of SafeDreamer. In general, it is unclear if the hyperparameters for each experiment where chosen to be as fair as possible to the baselines.\n  - These make it hard to evaluate the significance of the empirical results.\n\n3- **Baselines**:\n  - The performance of the model-free baselines (e.g in Fig 1) is not consistent with their performance in prior works (e.g in Ray 2019). For example, in almost all of the shown plots, the reward returns of TRPO-Lag and PPO-Lag behave weirdly (they increase early in training and then quickly decrease seemingly converging towards zero).  One may think that it is because of the vision-based observations, but Fig 7 shows equally poor performance for the baselines. I believe this puts into question the validity of all of the empirical results.\n\n  - It is not clear how exactly the baselines from Ray 2019 were modified for the vision-based partial observations (Ray 2019 uses state-vector observations). According to the caption of Fig 4, it seems like the *exact* experimental procedure of Ray 2019 was used. This possibly implies that **no** CNN (to handle the image observations) and RNN (to handle the partial observations) were used for the model-free baselines. Meanwhile, SafeDreamer uses recurrence in its model and possibly also uses a CNN (whether it uses a CNN or not was also not stated in the paper, so I can only guess). This is a severe concern that could actually explain why almost all of the model-free baselines have extremely poor performance inconsistent with prior works.\n\n  - The model-free baselines are extremely old relative to the model-based baselines. There are a number of relevant recent model-free baselines like Saute RL and ROSARL that also aim to achieve near-zero cost. \n\n4- **Related works**:\n  - There is no related works section in the main paper. The authors say \"Owing to space constraints, the related work is provided in Appendix A.\", but I think moving the related works to the appendix is going a bit too far. The related works section is important to contextualise the contributions of this work in relevant literature properly. \n\n  - There are missing relevant related works. Given that the aim of this paper is to achieve near-zero cost returns, I think the following works are relevant: Saute RL (model free) [1], ROSARL (model free) [2], STS-MBRL (model based) [3]\n\n\n[1] Sootla et al, Saute RL: Almost Surely Safe Reinforcement Learning Using State Augmentation, 2022\n\n[2] Tasse et al, ROSARL: Reward-Only Safe Reinforcement Learning, 2023\n\n[3] Kwanda et al, Safe Trajectory Sampling in Model-based RL, 2023\n\n\n**MINOR**\n\n- Figure 1 with its discussion is out of place in the introduction. I think it can be removed.\n- Figure 2 is hard to understand where it is. Maybe it can be moved a few pages below to where the methods are being described.\n- It may be less confusing to say \"reward and cost returns\" and \"reward and cost values\", instead of \"return and cost return\" and \"value and cost value\". E.g In Fig 3, but this holds throughout the paper.\n- Are there multiple world models being used in SafeDreamer (I assume not)? If not, remove the \"s\" in world models where unnecessary (e.g Fig 3 caption).\n- There are a couple of grammar errors throughout the paper that make it hard to parse. I have listed some examples here:\n  - Page 1 \"proffer\"\n  - Fig 3 caption \"using policy\"\n  - Page 4 \"This notation offers our model components:\"\n  - Page 7 \"How does SafeDreamer against safe model-based algorithms?\""
            },
            "questions": {
                "value": "It would be great if the authors could address the major weaknesses I outlined above. I am happy to increase my score if they are properly addressed, as I may have misunderstood pieces of paper. \n\nOn the points requiring additional space to address (e.g. related works), I recommend the authors prioritise which experiments they show in the main paper to save on space. There is a lot of space that can be freed up in the main paper. Another example is Algorithm 1 (and maybe even Algorithm 2 if needed) which can be moved to the appendix.\n\n**POST REBUTTAL________________________________________________________________________________**\n\nThank you to the authors for their very detailed response, and for going the extra mile to run additional experiments to address my concerns regarding the model-free baselines. That's really appreciated. The author's responses in general have greatly helped in clarifying most of my concerns. I also believe that the revised paper is significantly clearer, more transparent, and stronger than before. Hence, I have increased my score from 5 to 6 to reflect my current belief that the strengths of this paper outweigh its weaknesses. I have also increased my confidence level accordingly. Here are a couple of final points I have:\n\n**Contributions**: \"On the other hand, SafeDreamer was still able to converge rapidly to zero cost, even with a cost limit set at 25\" (regarding Figure 5). This suggests that the proposed approach could be overly conservative, compared to prior works that attempt to converge to the given cost threshold. This is not necessarily a good or bad thing but requires further investigation.\n\n**Baselines**: My concern about apple-to-apple comparisons remains. The model-free baselines should also use CNNs and RNNs, or the model-based ones + the proposed approach should use vector observations with no RNN. That said, the model-based baselines are at least apple-to-apple with the proposed approach (which is also model-based).\n\n**Emperical significance**: Given what the authors have reported, it seems like there is a very significant performance difference (in the model-free baselines) between the safety-starter-agents codebase and the omnisafe codebase (the latter reportedly performs worse than the former, but the authors use the latter). This is potentially because of a difference in hyperparameters between the two codebases. This realisation was of course beyond the control of the authors though, since omnisafe is a relatively popular baseline in the community."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "5: You are absolutely certain about your assessment. You are very familiar with the related work and checked the math/other details carefully."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission7020/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission7020/Reviewer_96af",
                    "ICLR.cc/2024/Conference/Submission7020/Senior_Area_Chairs"
                ]
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission7020/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698771501316,
        "cdate": 1698771501316,
        "tmdate": 1700944439510,
        "mdate": 1700944439510,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "XMyKdyaB12",
        "forum": "tsE5HLYtYg",
        "replyto": "tsE5HLYtYg",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission7020/Reviewer_fQYU"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission7020/Reviewer_fQYU"
        ],
        "content": {
            "summary": {
                "value": "Safe RL method like Lagrangian-based methods hard to achieve zero-cost performance. In this paper, the authors use model-based method, introduce the Dreamer as the world model, and conduct the constrained planning in the latent rollout. The experiment shows in Safety Gym environment the proposed method achieves better reward and lower cost."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "1 poor"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "The method is straightforward and is promising. Using Lagrangian-based method is proven to be effective but you will need to set a cost threshold and in test-time the cost will be around the threshold when the agent is fully trained. But in this work, by using the world model and trained cost estimator the agent can achieve much higher safety performance due to the internal planning in the latent space."
            },
            "weaknesses": {
                "value": "The paper proposes OSPR, OSRP-Lag and BSRP-Lag but the differences between them is not well motivated and presented.\n\n\nIn Section 3.2, it seems the sampled trajectories contain two parts, one set of the trajs are deduced from a Normal action distribution and another set is from current policy. This part is confusing and not well presented. The notation is not aligned between SafeDreamer paragraph and the Algorithm 1. I would recommend rephrase the method part and mark the Algorithm line number in the text.\n\n\nMixing up 3 algorithms in 1 Algorithm diagram (like Algo 1 and Algo 2) is a terrible writing practice. I would highly recommend revising this. It's not increasing the density of information but instead increasing the confusion."
            },
            "questions": {
                "value": "IIUC the SafeDreamer part Sec 3.2 is doing a trajectory-level cost / return estimation without the interaction with the transition model (either a real RL environment or a latent world model). And in OSRP-Lag, we allow \"online planning\"? What's the difference between OSPR-Lag and OSPR? What is the online means here?\n\n\nIn test-time, does the BSRP-Lag method still run planning for each real step? Or the world model is only used during training?\n\nHave you experimented on the setting where the training environment is different from the test environment? I suspect the generalizability of the world model will limit the performance in the unseen test environments. And if so to what expend we can believe the BSRP-Lag agent? Will it be more conservative in unseen environment? Or vice versa?\n\n\nHave you ran experiments in other safe RL benchmark such as safe autonomous driving environments?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission7020/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission7020/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission7020/Reviewer_fQYU"
                ]
            }
        },
        "number": 4,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission7020/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1699134456917,
        "cdate": 1699134456917,
        "tmdate": 1700601285025,
        "mdate": 1700601285025,
        "license": "CC BY 4.0",
        "version": 2
    }
]