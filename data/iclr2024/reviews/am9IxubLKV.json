[
    {
        "id": "26dKNZjreQ",
        "forum": "am9IxubLKV",
        "replyto": "am9IxubLKV",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission2591/Reviewer_4fmq"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission2591/Reviewer_4fmq"
        ],
        "content": {
            "summary": {
                "value": "This paper proposes a simplifying perspective onto convolutions through tensor networks (TNs). The authors first demonstrate the expressive power of TN by deriving the diagrams of various auto-differentiation operations and popular approximations of second-order information with different hyper-parameters. Using TN also allows re-wiring and simplifying diagrams for faster computation. Based on established machinery for efficient TN contraction, experimental results demonstrate that using TN speeds up a recently-proposed KFAC variant and enables new hardware-efficient tensor dropout for approximate backpropagation."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "The authors propose a novel perspective on convolution operations from tensor network that can leads to faster computation"
            },
            "weaknesses": {
                "value": "- The novelty of this work is a bit limited, specifically compared with (Hayashi et al. 2019). \n- This paper is a bit difficult to understand without enough prior knowledge on tensor networks\n- Empirical results may be further improved to better support the claim, details can be found in Questions part."
            },
            "questions": {
                "value": "- From current draft, I am a bit confused on the difference between this work and (Hayashi et al. 2019). I suppose this paper proposes to compute some first-order and second-order information from tensor network as well. Then what is the difference between using standard auto-differentiation packages and the proposed method based on tensor network? It seems that in experiments, the authors only compare the proposed method with standard PyTorch implementations, but not tensor network combined with auto-differentiation packages. Some explanations may be needed here. \n- Based on the above concern, I also wonder if we need to store these computation patterns derived in this paper in implementation. If that is the case, then given new types of convolutions or differentiation operations, will we need to derive some formula again? That sounds not so flexible compared with standard auto-differentiation packages. \n- I also wonder how is the index tensor \\Pi stored in real applications. Since it should be a very sparse tensor, do we have to use some sparse formats? How will it affect the computation time? The authors may need to add more details here. \n- Experimental results are a bit limited from my perspective. While the proposed method based on tensor network really offers some speedup in computation, I suppose there are many other works on speed up inference time (e.g., [1]). Without such comparison, it is hard to see how the proposed method outperforms other works. \n- I also note that most experiments are performed with simple convolution operations, while there are also many different types of convolutions (e.g., separate convolution). It would be better if the authors can also compare with these operations to demonstrate the flexibility of tensor network. \n- Given that the authors have conducted many experiments on using tensor networks to compute higher-order information, it would be better if the authors can provide some more applications with such information to better demonstrate the applicability of proposed method. \n\nMinor: formatting issues. Some captions in the appendix seems to be overlap with the page head. \n\nReference:\n[1] Fast algorithms for convolutional neural networks. CVPR 2016"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "5: marginally below the acceptance threshold"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission2591/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1697692175229,
        "cdate": 1697692175229,
        "tmdate": 1699636196570,
        "mdate": 1699636196570,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "Bw1Of1iwXq",
        "forum": "am9IxubLKV",
        "replyto": "am9IxubLKV",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission2591/Reviewer_Z3Mj"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission2591/Reviewer_Z3Mj"
        ],
        "content": {
            "summary": {
                "value": "The work studies how to represent the CNN layers efficiently using tensor networks. With this framework, the authors further studied efficient automatic differentiation, focusing on the  KFC and KFAC-reduce, two types of approximation of second-order information."
            },
            "soundness": {
                "value": "4 excellent"
            },
            "presentation": {
                "value": "4 excellent"
            },
            "contribution": {
                "value": "4 excellent"
            },
            "strengths": {
                "value": "1. The paper is quite well-written. I\u2019d like to highlight it because the papers of tensor networks (TNs) are typically mathematically complicated but this paper makes it very clear.\n2. Although this work is not the first to model CNN layers with TNs (see. Hayashi\u2019s work in Neurips\u201919), it highlights the usefulness of tensor modeling for computationally efficient automatic differentiation, which is very important in the computation of deep learning.\n3. The work connects TNs with several critical techniques in ML like KFAC and randomized autodiff. I think these ideas are very helpful to boost the activity of the tensor community to put more effort in machine learning."
            },
            "weaknesses": {
                "value": "The novelty is relatively weak. For example,  Section 4.2 introduced not too much interesting tricks. It would be better to put this part in the Supp. and instead to illustrate more numerical results."
            },
            "questions": {
                "value": "In Section 2.2, I cannot fully follow how to use the set operation with the index tuples to model the tensor contractions. Could you give a more intuitive explanation or examples?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "8: accept, good paper"
            },
            "confidence": {
                "value": "5: You are absolutely certain about your assessment. You are very familiar with the related work and checked the math/other details carefully."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission2591/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698559048238,
        "cdate": 1698559048238,
        "tmdate": 1699636196501,
        "mdate": 1699636196501,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "aM3B8x0bhp",
        "forum": "am9IxubLKV",
        "replyto": "am9IxubLKV",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission2591/Reviewer_XFQf"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission2591/Reviewer_XFQf"
        ],
        "content": {
            "summary": {
                "value": "This paper proposes a perspective to simplify convolutions through tensor networks (TNs) which allow reasoning about the underlying tensor multiplications by drawing diagrams. To demonstrate its expressiveness, the diagrams of various autodiff operations and popular approximations of second-order information are derived. Finally, the computational performance improvement is proved under the proposed perspective."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "1. The proposed perspective is significant to the development of convolution neural networks since it opens up potential research prospects.\n2. Based on the proposed perspective of the tensor network, the authors derive the Jacobians of convolution and automatic differentiation. These efforts are quite meaningful since both derivatives and automatic differentiation mechanisms always play an important role in ML research.\n3. Both implementation results relying on established machinery for efficient TN contraction and experimental results show the advantage of this perspective."
            },
            "weaknesses": {
                "value": "The main concern is contribution. The authors point out the advantages of this perspective rather than developing a framework in a novel way. From this point of view, the contribution seems limited. Therefore, the authors' central contribution only lies in some derivation based on this perspective, such as automatic differentiation."
            },
            "questions": {
                "value": "I'm not sure whether the proposal of perspective is a contribution and means much to the community or not. It would be helpful to provide some explanation about this point."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "5: marginally below the acceptance threshold"
            },
            "confidence": {
                "value": "2: You are willing to defend your assessment, but it is quite likely that you did not understand the central parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission2591/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission2591/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission2591/Reviewer_XFQf"
                ]
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission2591/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698765476759,
        "cdate": 1698765476759,
        "tmdate": 1699636196428,
        "mdate": 1699636196428,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "Jsc3ZBmbjE",
        "forum": "am9IxubLKV",
        "replyto": "am9IxubLKV",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission2591/Reviewer_D3NB"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission2591/Reviewer_D3NB"
        ],
        "content": {
            "summary": {
                "value": "The paper discusses the analysis and simplification of convolutions in neural networks using tensor networks (TNs). Convolutional layers are found to be more challenging to analyze than other layers in deep learning architectures. The authors propose a new perspective using TNs, which allow for reasoning about tensor multiplications through diagrams. They demonstrate the expressive power of TNs by deriving diagrams for various automatic differentiation operations and approximations of second-order information. The document also introduces convolution-specific transformations based on connectivity patterns to simplify TN diagrams. The authors compare the computational performance of default implementations and TN implementations, showing potential speed-ups. They also mention the potential for hardware-efficient tensor dropout for approximate backpropagation."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "1. StrengthsRepresenting convolution operation as multiple tensor contractions, which is quite interesting and novel.\n2. By giving TN representation of convolution operation, the authors find that some memory-cost operations can be improved, e.g., KFC and its variants.\n3. This paper is easy to understand and presents many graphical operations to illustrate the operations under the TNs framework."
            },
            "weaknesses": {
                "value": "1. This method is relatively straightforward and intuitive. The primary innovation of the paper lies in the use of tensor networks to represent CNN operations. However, when it comes to accelerating the KFC process, the paper lacks theoretical analysis on how much memory consumption is reduced. Furthermore, in the experiments, its effectiveness is only demonstrated based on the proportion of experimental runtime. Whether in theory or practice, the paper's description of the improvements in KFC is insufficient.\n2. The advantages of using tensor networks to represent CNNs are not thoroughly discussed in this article. The paper primarily focuses on the advantages in the context of KFC, leading me to believe that it is primarily aimed at addressing memory consumption issues within KFC. Therefore, it might be more appropriate to modify the paper's topic and title to \"Accelerating KFC with Tensor Network (TN) Methods.\u201d"
            },
            "questions": {
                "value": "1. The main improvement of this paper is that it avoids to unfolding the input tensor [[X]] using  memory cost methods, e.g., im2col. However, in both theoretical and practical experiments, what amount of memory savings can be achieved by using tensor networks for KFC training?\n2. The paper provides a comprehensive guide on how to use Tensor Networks to represent CNNs, and offers detailed operations for various CNNs. However, in terms of the advantages of using Tensor Networks to represent CNNs, the paper lacks further analysis and discussion beyond a brief analysis in the context of KFC. For instance, once CNNs are represented in the form of TN, could this representation also be benefit to other second-order analysis and optimization methods, such as the Approximate Hessian diagonal, KBFGS, and Hessian rank mentioned in the Introduction? If this is possible, I would prefer to see the authors provide a more in-depth discussion."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 4,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission2591/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698828753517,
        "cdate": 1698828753517,
        "tmdate": 1699636196311,
        "mdate": 1699636196311,
        "license": "CC BY 4.0",
        "version": 2
    }
]