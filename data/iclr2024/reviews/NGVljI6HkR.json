[
    {
        "id": "g3MvjVmbJ5",
        "forum": "NGVljI6HkR",
        "replyto": "NGVljI6HkR",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission6536/Reviewer_BAZd"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission6536/Reviewer_BAZd"
        ],
        "content": {
            "summary": {
                "value": "This paper addresses the problem of searching programmatic policies for partially observable MDP. To this end, the paper proposes to conduct the search in the programmatic space. The experiments show the search in programmatic space will bring better numerical results with higher convergence rates. I believe this work provides an interesting point of view for program search from the program space instead of the learned latent space."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "**Motivation**\nThe motivation for synthesizing programs as a more interpretable and generalizable representation of RL policies is convincing. This paper presents an effective method to address this problem.\n\n**Experimental Analysis**\n- Studies about the experimental result are comprehensive. This paper performs different kinds of topology-based evaluation to analyze the programmatic and latent space. \n- Multiple metrics (e.g., $\\rho$-similarity, behavior-similarity, identity-rate, convergence-rate) are used to evaluate the search results from the programmatic and latent space."
            },
            "weaknesses": {
                "value": "**Clarity**\n\n- Details about the search in the programmatic space are not sufficient. \n- What\u2019s the maximum length of the sampled programs?\n- What is the exact number of times the production rule s := s; s (statement chaining) can be used?\n- What is the exact height of the abstract syntax tree (AST) of every program?\n- The above settings should be \u201csimilar\u201d to LEAPS based on the description of Section 3.1, but are they identical to all the settings used in LEAPS in all experiments? What are the actual numbers used for the search in the programmatic space?\n\n\n**Novelty & contribution**\n\n- Overall, I do not find enough novelty in this work but the overall effort of this paper is appreciated. \n\n\n**Oversell**\n\n- Because the local search in the programmatic space is not continuous, the initial candidate and the randomness of the programs sampled from the distribution will dominate the quality of the search results. However, there is no further detail about how the initial candidate is sampled and how many random seeds are used to evaluate the search result. Such ambiguity makes it hard to assess the robustness and efficacy of this work.\n- The paper makes vague promises that are either not concrete or not trivially feasible to me. For example, the authors state in Section 5.2 that if the search algorithm fails to converge but its execution is still within the budget, an initial program is re-sampled and restart the search. I am not sure how often this kind of failure would happen. Since the budget is high (10^6) in this work, the search will be like a brute-force searching paradigm if the failure rate is high.\n\n**Method**\n\n- Why use fixed random seeds for the experiments as described in Section 3.1? Will the program search in the programmatic space work properly under different initial seeds? Will HC converge in all tasks in Table 1 under different random seeds?\n- In the Hill Climbing search, how do the authors choose the best-seen candidate if all candidates have the same episodic return (e.g., 0.0)?\n- As described in the second paragraph of Section 5.2, If an algorithm fails to converge but its execution is still within the budget, an initial program is re-sampled, and restart the search. What is the failure rate of HC and CEBS in each task in Table 1?\n\n\n**Experiment details**\n\n- How many seeds are used for each algorithm in Table 1 and Figure 3,4,5?\n- The details of the initial candidate programs are missing. How is the initial candidate determined to construct the search graph for each task? How long is the initial candidate program? From what probability distribution is it sampled?\n\n**Reproducibility**\n\n- The implementation details are lacking from the main paper, which makes reproducing the results difficult. \n- No figure or pseudocode of the Hill Climbing and the Cross Entropy Beam Search is provided for the Karel environment, which makes it hard to testify and evaluate the effectiveness of the proposed method.\n- No program from the search in programmatic space is shown in the paper, making it hard to assess the efficacy of program search in the programmatic space.\n\n\n**Experimental conclusions**\n\n- The experiment about convergence analysis is not convincing and could be misleading. In Table 1, the HC can achieve a score of 0.84 on task \"DoorKey\" while the corresponding convergence rate is 0.0 beyond the episodic return of 0.5 in Figure 5 (A similar observation can also be found on task \"Snake\"). Is it a contradiction, or the result of HC in Table 1 is based on rare cases?"
            },
            "questions": {
                "value": "As stated above."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "5: marginally below the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission6536/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission6536/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission6536/Reviewer_BAZd"
                ]
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission6536/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698598690073,
        "cdate": 1698598690073,
        "tmdate": 1700661751535,
        "mdate": 1700661751535,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "JQZjVmAWGH",
        "forum": "NGVljI6HkR",
        "replyto": "NGVljI6HkR",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission6536/Reviewer_acX2"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission6536/Reviewer_acX2"
        ],
        "content": {
            "summary": {
                "value": "The authors introduce a simple method (direct search in programmatic space ) without any deep neural netowrks for decision problems. The mehtod outperforms the neural network baselines on Karel."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "The authors introduce a simple method without any deep neural netowrks for decision problems. The mehtod outperforms the baselines on Karel."
            },
            "weaknesses": {
                "value": "1. The experiment enviornment is a rather simple one and use of knowledge of the simple grid world environment reduces strength of the proposed method. \n2. Performance mismatch:  Table 1 and Figure 5 please check. \n3. Potential dependance of the performance of the algorithm on initial condidtions. Please test."
            },
            "questions": {
                "value": "1. Please justify why the proposed method \"is able to escape such local maxima\" and \"this is a property of the search space itself\u201d. To this reviewer, it is not straightforward. Either theoretial or numerical evidences should be provided."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "details_of_ethics_concerns": {
                "value": "No problem found."
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission6536/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission6536/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission6536/Reviewer_acX2"
                ]
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission6536/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698656474775,
        "cdate": 1698656474775,
        "tmdate": 1699636735947,
        "mdate": 1699636735947,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "FiJjebfXIR",
        "forum": "NGVljI6HkR",
        "replyto": "NGVljI6HkR",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission6536/Reviewer_xg79"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission6536/Reviewer_xg79"
        ],
        "content": {
            "summary": {
                "value": "The paper compares search for programmatic policies in the policy space and the latent space. The comparison results show that the same programmatic policy space search for the same domains converges faster in the policy space than in the latent space."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "It is very welcome, in my opinion, to have a paper that questions  advantages of a more complicated approach over a simple and straightforward one, and this is one such paper. The authors did an excellent job in planning, conducting, and visualizing the empirical evaluations. The paper also provides a well organized review of background and related work, making it easy to understand the problem for an outsider."
            },
            "weaknesses": {
                "value": "I think the authors miss the main point of using latent spaces instead of observable spaces for search. This is not to make the search more accurate, but rather make impossible search possible. Take, for example,  atomic physics and classical Newton's mechanics. Every problem of Newton's mechanics can, in principle, be solved within the framework of atomic physics, and the solution using atomic mechanics is likely to be more accurate, in particular when the number of atoms is relatively small. However, 1g of carbon contains ~6 * 10^23 atoms. Solving directly a problem with 10^23 variables is beyond the capacity of any modern computer; therefore, the latent space of Newton's mechanic is used instead.  There are similar examples in other areas of physics and computer science. \n\nSame goes about learning programmatic policies. As long as one can efficiently sample the K-neighborhood of a policy in the policy space, searching in the policy space is going to be more accurate and converge better than search in latent space. However, sampling even relatively longer programs becomes increasingly difficult, and intractable for real-world problems. So, showing that latent space search is worse than observable space search if you CAN search in the observable space efficiently is a trivial result. \n\nPractically talking, reports of the running time, of the search in total and of individual search steps, are not given in the paper, and I believe that, properly measured, that would provide proper insights. How does the running time depends on the program length? The program's branching factor? I would expect these dependencies to be quite steep. On the other hand, selecting a candidate latent vector in the latent space is fixed time."
            },
            "questions": {
                "value": "I would appreciate a detailed comparison of running times, as well as rejection rates, and everything that would provide insights on relative performance of the algorithms with the domain and policy sizes going up."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission6536/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698760794857,
        "cdate": 1698760794857,
        "tmdate": 1699636735779,
        "mdate": 1699636735779,
        "license": "CC BY 4.0",
        "version": 2
    }
]