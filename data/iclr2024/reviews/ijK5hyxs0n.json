[
    {
        "id": "Y1qkhkiTxM",
        "forum": "ijK5hyxs0n",
        "replyto": "ijK5hyxs0n",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission6278/Reviewer_fJUi"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission6278/Reviewer_fJUi"
        ],
        "content": {
            "summary": {
                "value": "The paper proposed a new approach to represent neural networks and their weights using a so called parameter graph in which nodes represent neurons and edges represent weights/parameters of the neural network. The paper demonstrates how to build this graph for different kinds of architectures including non-trivial and very practical cases such as transformers. The paper formally shows useful properties of the approach such as permutation equivariance corresponding to neuron equivariance. Finally, the results in two experiments show better performance than the baselines."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "4 excellent"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "The paper has several good contributions:\n\n1. The paper addresses an interesting and promising topic of representing neural networks and their weights.\n2. The proposed parameter graph is a reasonable approach and looks much simpler than previous works such as DWSNets and NFN/NFT. It is similar to the concurrent work of Zhang et al. (2023), which is properly credited. \n3. Description of how to build graphs for different layer types such as convolution, self-attention and residual connections is very informative.\n4. The experiments show reasonably good results of the proposed approach.\n\nThe paper is also well written and organized."
            },
            "weaknesses": {
                "value": "The paper have several weaknesses. I'm willing to revise the rating based on authors' response.\n\n1. The paper says that \"While our graphs are DAGs, we are free to use undirected edges\". Would not the direction of edges be a useful feature in some cases? For example, sometimes networks take multiple inputs and have multiple outputs so there is no way to differentiate input vs output unless edge direction is used.\n\n2. The computational complexity vs other approaches is not analyzed. Can the model encode large models in a feasible way? \n\n3. There are very few experiments. The authors could have more experiments following previous works from DWSNets, NFN, etc. or be creative in designing more novel experiments. For example, generation of new networks mentioned in the intro (Erkoc\u00b8 et al., 2023) could be a very appealing experiment.\n\n4. The experiments lack ablations to understand how the model behaves under different settings. These could be the number of layers/params in the graph metanet, different GNN architectures, different approaches to treat the bias term (e.g. comparing to Zhang et al. (2023)), ablating different components of the GNN in 2.3, etc.\n\n5. Source code is not available in the submission, which would be very helpful at least for how to build a graph given a neural network. Do the authors intend to open source the code?\n\n6. The purpose of Section 3 and Proposition 2 is a bit unclear, these could be replaced by more experiments or computational complexity analysis that are lacking.\n\n7. Section 5.2. lacks details. How the vector representation is obtained? Details of training the GNN are missing. More difficult INR tasks could be added."
            },
            "questions": {
                "value": "1. Given that the same graph metanet can process diverse architectures, can the model trained in 5.1 be directly applied to large realistic models like ResNet-50 or large ViTs? For example, in the paper \"Zero-Cost Proxies for Lightweight NAS\" there are PyTorchCV networks with recorded accuracies. It would be very interesting to see how the results would look like for such challenging cases. Moreover, in Section 5.1 it would be interesting to see correlation performance of the methods from \"Zero-Cost Proxies for Lightweight NAS\" like gradnorm, which are very easy to compute. Another interesting experiment could be to track the predicted accuracy during training some network and see if it correlates well with the actual accuracy. Given that evaluation of large networks is very expensive, this approach could be an alternative way to track performance.\n\n2. Is it correct that the trained metanets cannot generalize to some architectures, for example to the kernels of larger size than seen during training because the edges would have more features? If yes, this should be clearly described in Limitations or another appropriate section."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission6278/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission6278/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission6278/Reviewer_fJUi"
                ]
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission6278/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698437060096,
        "cdate": 1698437060096,
        "tmdate": 1700771833210,
        "mdate": 1700771833210,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "IuoTvq8GNl",
        "forum": "ijK5hyxs0n",
        "replyto": "ijK5hyxs0n",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission6278/Reviewer_ffRA"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission6278/Reviewer_ffRA"
        ],
        "content": {
            "summary": {
                "value": "This paper introduces a novel approach called Graph Metanetworks (GMNs) that utilizes graph neural networks to process diverse neural architectures. The authors address the challenge of generalising metanetwork architectures to different types of networks by building graphs representing the input neural networks and processing them using graph neural networks. The GMNs are proven to be expressive and equivariant to parameter permutation symmetries, and they demonstrate superior performance on various metanetwork tasks across different neural network architectures."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "The proposed GMNs can generalise to different types of neural architectures. Unlike previous works e.g. Navon et al. (2023) that were tailored to specific networks, the GMNs can handle a wide range of architectures, including those with complex modules such as attention blocks. Upon the main idea of processing weights with graph networks in Zhang et al. (2023), this paper extends the method to a variety of neural layers that are common in modern neural architectures.\n\nThe authors also provide a proof of the expressiveness and equivariance of GMNs to parameter permutation symmetries, which is an important property for metanetworks."
            },
            "weaknesses": {
                "value": "- Although different neural layers and architectures can be encoded as the proposed parameter graph representation, however, the information in the spatial domain is missing (e.g. translation equivariance and receptive field in ConvNets). This could be an inherent and general limitation of the proposed method as well as other related work on weight domain.\n\n- There are also a variety of non-parametric operations in feed-forward neural networks that are not addressed by the paper. E.g. pooling layers (especially max pooling), atrous convolutions, padding and so on. I can expect these operations can be encoded as some additional indicating features but I wonder if there are better and less artificial solutions.\n\n- Comparison with Navon et al. (2023) only on the 1D sine curve toy dataset, but not on the more challenging 2D INR image tasks in the original paper. Other experiments take DeepSets and DMC as baselines which are 2017 and 2020 papers."
            },
            "questions": {
                "value": "- Since graph can encode a variety of architectures, I wonder if it is possible to generalise and especially extrapolate prediction to unseen architecture, e.g. the test MLP/CNN is wider or deeper than all training examples. \n\n- I do not see pooling layers discusses. Are there pooling layers involved in the networks in the dataset?\n\n- How to encode atrous/dilated convolutions?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission6278/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission6278/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission6278/Reviewer_ffRA"
                ]
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission6278/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698834509762,
        "cdate": 1698834509762,
        "tmdate": 1700788136429,
        "mdate": 1700788136429,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "q1oKs2yegE",
        "forum": "ijK5hyxs0n",
        "replyto": "ijK5hyxs0n",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission6278/Reviewer_ZWAE"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission6278/Reviewer_ZWAE"
        ],
        "content": {
            "summary": {
                "value": "The idea is to construct directed acyclic graphs (DAGs) that are also \u2018parameter graphs\u2019 (which represent parameters as weighted edges) that represent neural networks and feed them through a simple message-passing graph neural network \u2018metanetwork\u2019. According to them, they are distinguished from other works that do this by a few design choices of the graph construction. They show that the way they construct neural network DAGs is invariant to the order in which neurons on the same layer (ones between which order should not matter) are embedded, which is stated to be an issue with the way some other metanets represent networks. They state how they represent different kinds of layers in their \u2018parameter graphs\u2019, and show that it can represent layers others cannot (such as normalization layers, according to them) and have less scaling issues with parameter-sharing layers such as convolution and attention layers. They evaluate by attempting to learn the prediction accuracy of datasets of image classifier networks on CIFAR-10, one is of 2d CNNS, and one is of varying models (CNNs, ViTs, ResNets, etc) with competing methods (those which can represent the inputs)."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "It should be noted that I am not familiar with other papers regarding metanets and am basing my assessment largely on information from this paper. That being said, given that they represent the current state of this area fairly, this seems to be an impressive paper. They appear to address scaling issues with similarly expressive network representations and expand the variety of representable networks, which seem to be great contributions."
            },
            "weaknesses": {
                "value": "They address most of my concerns I had while reading, including some tests to compare against the newer state of the art metanets mentioned that were excluded from most of the result due to not being able to represent certain types of layers. Notably a cited competing method \u2018NFN\u2019 was left out from this, though seems to be addressed in the appendix, and as it apparently deals exclusively with MLPs I believe it is fair not to compare with the proposed method."
            },
            "questions": {
                "value": "Please see weakness."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission6278/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698941044826,
        "cdate": 1698941044826,
        "tmdate": 1699636687285,
        "mdate": 1699636687285,
        "license": "CC BY 4.0",
        "version": 2
    }
]