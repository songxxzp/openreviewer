[
    {
        "id": "aRulQYh0QY",
        "forum": "YCPDFfmkFr",
        "replyto": "YCPDFfmkFr",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission2515/Reviewer_uDj8"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission2515/Reviewer_uDj8"
        ],
        "content": {
            "summary": {
                "value": "The paper studies the problem of differentiating through quadratic programming layers. These are layers whose output is the solution to some quadratic programming problem, whose problem data depends on the input to the layer.\n\nThe main contribution of the paper is to provide a more efficient way to compute the Jacobian of the solution mapping which maps inputs to the layer to the solution of the quadratic programming problem. Besides this, there are also a number of experiments demonstrating the efficacy of this proposed method on the sudoku problem, comparing to alternative methods like optnet and cvxpylayer.\n\nA major obstacle in quadratic programming layers has been maintaining feasibility of the quadratic program; previous works have always parametrized or constrained the layers in a way to ensure feasibility but this limits expressiveness. A key advantage of the method proposed by the paper is that it can handle both feasible and infeasible quadratic programs by extending the definition of a solution to account for infeasibility. In the case of infeasibility, the solution is considered to be a solution of the closest feasible quadratic program in a least-squares sense. This is accomplished using an augmented Lagrangian approach to representing the quadratic program that is more flexible and allows to better treat this infeasibility, at least empirically.\n\nThe paper also introduces a notion of extended conservatve Jacobian as a way to make sense of the nonsmooth \"Jacobian\" like objects computed by automatic differentiation in the case of infeasibility. There are some results showing that, under very strict hypotheses, the extended conservative Jacobians correspond to ordinary conservative Jacobians or ordinary Jacobians.\n\nSmall comment: in section 3.1 \"hierarchic\" is not a word."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "The paper is very rigorous and mathematically precise in its statements and proofs. Furthermore, the method is very practical in the sense that it allows for a much broader class of quadratic programming layers than previous works did while at the same time offering computational advantages in terms of accuracy, time for the forward pass, and total time for the forward+backward passes. These advantages are shown to hold for many different problem settings, not only the sudoku problem but also the cart-pole problem (optimal control), and denoising and classification tasks coming from computer vision. The experiments are very comprehensive and convincing in terms of the empirical performance of this method vs prior works on quadratic programming layers."
            },
            "weaknesses": {
                "value": "The theoretical claims in the paper are correct but they are basic and unsatisfying. While it's shown that G, a sort of KKT mapping, is path differentiable with respect to its arguments x,z, and t, this is insufficient for rigorously differentiating through the quadratic program layer. It must also be shown that the solution mappings themselves, x\\*, z\\*, and t\\* are path differentiable with respect to the theta. Otherwise, knowing that G alone is path differentiable is not useful. The path differentiability of x\\*, z\\*, and t\\* is rigorously proved in Lemma 3 but the assumptions of this lemma are so strong that it is no longer applicable to quadratic programming layers. It requires that the objective function in the quadratic program is no longer quadratic (indeed, it must be linear in the lemma) and that it does not depend on theta anymore (g is constant).\n\nThis does not appear to be a trivial problem; proving that the solution maps are path differentiable will require assumptions that negate some of the proposed contributions of the paper, i.e., we will no longer be able to treat such a broad class of problems and this might even exclude infeasible problems, which is a supposed motivation of this work. To be fair, this is a problem of other frameworks as well (as the authors themselves point out) and this paper should not be singled out for this shortcoming, but it is indeed a **major** shortcoming in terms of the theoretical contributions of this work.\n\nBecause of this drawback with respect to the theory, I find the claims that this method handles infeasible problems a bit unsatisfactory - it seem to be based entirely on the experimental observations that it works but there is no rigorous justification that I can find."
            },
            "questions": {
                "value": "Is there any hope to handle the gaps that you outline in 3.4.3? Even for feasible programs, it's not always guaranteed that x\\* is a function since there can be many solutions, so how would it be possible to pursue path differentiability?\n\nSince the augmented Lagrangian approach for possibly infeasible QPs already existed, is the contribution here just to combine it with deep learning?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission2515/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698765208769,
        "cdate": 1698765208769,
        "tmdate": 1699636187992,
        "mdate": 1699636187992,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "5dG2UbR81D",
        "forum": "YCPDFfmkFr",
        "replyto": "YCPDFfmkFr",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission2515/Reviewer_vnSN"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission2515/Reviewer_vnSN"
        ],
        "content": {
            "summary": {
                "value": "This paper considers the problem of training neural network with quadratic program (QP) layers. In order to differentiate the quadratic program, previous work has to enforce the feasibility by ignoring some constraints. In contrast, this work improves the QP layer and allows directly differentiating through infeasible QP layers. The this end, the authors introduce a slack variable (which measures the \"degree\" of infeasibility) and minimize the the Euclidean of the slack variable in a hierarchical quadratic program. To differentiate through the hierarchical, the author propose using the extended conservative Jacobian.\n\nThey show the improve QP layer enables learning linear programs and quadratic programs without neglecting any constraints. In addition, the proposed method stabilizes training and leads to better performance."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "- The idea is well-motivated and experiments are convincing. This paper solves an important problem in learning QP layers. The proposed method could greatly improve the robustness of QP layer training and handle all QP layers (including the infeasible ones) in a principle manner.\n- The technique in this paper could be potentially generalized to all differentiable convex layers."
            },
            "weaknesses": {
                "value": "- This paper is very technical and the presentation should be improved. For example, the non-linear map (G) is introduced without any background information. The authors should add more text to motivate this non-linear map and explain how it is derived.\n- Limited scope of applications. The experiment only shows training QP layers solving Sudoku problems. However, I am interested to see if the improved QP layer enables new applications."
            },
            "questions": {
                "value": "How is the hierarchical quadratic program (QP-H) solved numerically? Is it similar to phase-I method in interior point methods?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "8: accept, good paper"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission2515/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission2515/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission2515/Reviewer_vnSN"
                ]
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission2515/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698801385468,
        "cdate": 1698801385468,
        "tmdate": 1699636187918,
        "mdate": 1699636187918,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "wkV2aDsoYs",
        "forum": "YCPDFfmkFr",
        "replyto": "YCPDFfmkFr",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission2515/Reviewer_7UKP"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission2515/Reviewer_7UKP"
        ],
        "content": {
            "summary": {
                "value": "The paper proposes an approach for differentiating through quadratic programs (QP)s that might be primal infeasible. It provides all the necessary mathematical derivation and extensive numerical experiments including comparisons to state-of-the-art approaches like CvxpyLayers and OptNet. The paper provides a clear approach for this task (basically introducing primal slack variables and hence, considering the extended conservative Jacobian. Forward and backward mode autodiff rules are also provided."
            },
            "soundness": {
                "value": "4 excellent"
            },
            "presentation": {
                "value": "4 excellent"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "Solving (constrained) QPs as a layer within a neural network can be a useful task. Hence, the topic of differentiating QPs that might be primal infeasible is very important. The mathematical derivation seems sound (though I did not fully check it), the presentation is very clear, and the experiments are also very convincing."
            },
            "weaknesses": {
                "value": "The approach behind CvxpyLayers seems to use a similar least-squares relaxation (as also stated in the paper). How does the presented approach differ from this?"
            },
            "questions": {
                "value": "The approach behind CvxpyLayers seems to use a similar least-squares relaxation (as also stated in the paper). How does the presented approach differ from this?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "8: accept, good paper"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission2515/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission2515/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission2515/Reviewer_7UKP"
                ]
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission2515/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698836165975,
        "cdate": 1698836165975,
        "tmdate": 1699636187840,
        "mdate": 1699636187840,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "EU8XZPqb5Y",
        "forum": "YCPDFfmkFr",
        "replyto": "YCPDFfmkFr",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission2515/Reviewer_sv98"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission2515/Reviewer_sv98"
        ],
        "content": {
            "summary": {
                "value": "The authors study the problem of calculating the gradient of optimal solutiosn to the input in the convex quadratic programming problem. One limitation of existing convex QP layers is that they assume the QP problem is always feasible during training. The main contribution of the paper is developing an augmented Lagrangian-based approch to calculate the gradient when the QP problem is not feasible."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "1. The paper studies an important problem.\n2. The paper proposes a new approach to calculate gradients in convex QP layers."
            },
            "weaknesses": {
                "value": "1. The paper is not easy to follow. See the comments below.\n\n2. The analysis in the paper is not sufficient. See the comments below."
            },
            "questions": {
                "value": "1. The paper is not easy to follow. In some key sections or proofs, the authors suggests to read some other referecens to undertand the concepts. This makes reading the paper difficult for readers that are not working on this specific area of extended conservative Jacobian. To make the paper easier to read, the authors are suggested to add the basic concepts and ideas in the paper instead of requesting the audience to read a number of other reading materials.  \n\n2. To address the infeasibility issue for the QP layers, one straightfoward way is to introducing slack variables and add penalties about the constraint violation in the objective function. The authors are suggested to show the advantage of the proposed approach as compared to this straightforward approach.\n\n3. One application of the QP layers is to use it as a building block for existing iterative algorithms (similar to the approach in [R1] and [R2]). The authors are suggested to analyze the convergence performance of the iterative algoritms when using the propsoed conservative Jacobian as a building block.\n\n\n[R1] Donti, P.L., Rolnick, D. and Kolter, J.Z., 2021. DC3: A learning method for optimization with hard constraints. arXiv preprint arXiv:2104.12225.\n[R2] Donti, P., Agarwal, A., Bedmutha, N.V., Pileggi, L. and Kolter, J.Z., 2021. Adversarially robust learning for security-constrained optimal power flow. Advances in Neural Information Processing Systems, 34, pp.28677-28689."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 4,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission2515/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698917882015,
        "cdate": 1698917882015,
        "tmdate": 1699636187776,
        "mdate": 1699636187776,
        "license": "CC BY 4.0",
        "version": 2
    }
]