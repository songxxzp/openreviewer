[
    {
        "id": "UN3uHOOa1g",
        "forum": "oOwDQl8haC",
        "replyto": "oOwDQl8haC",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission5150/Reviewer_AQt3"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission5150/Reviewer_AQt3"
        ],
        "content": {
            "summary": {
                "value": "This paper studies quantization errors occurring in the accumulation phase of dot products. While many works have studied representation quantization in the past, the problem of accumulation rounding has largely been overlooked. Yet, others (Higham'83 & Sakr'19) who have studied this problem, have often focused on the problem of swamping, which causes an underflow in one of the two summands. In contrast, this work looks at the problem of overflow that occurs during large summations, when employing relatively low precision accumulators, e.g., FP16. Modeling accumulation as a sum of iid random variables, and invoking the central limit theorem, this paper formulates a prediction method for when such overflows can occur, and as a remedy, applies a scaling factor the the chunked summation to try and suppress the damage of said overflows. Extensive empirical results on several benchmarks are provided."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "-- Good problem to tackle, rounding effects in accumulators are largely overlooked in a community that puts a lot of emphasis on using quantization to lower the cost of implementation.\n\n-- Good presentation. Following concepts related to the accumulation occurring in a GEMM is often hard, due to the complexities of tensor cores and similar hardware used for DL inference and training. But the others do a good job pinpointing the problem.\n\n-- Solid empirical results on a diverse set of benchmarks such as vision and language models."
            },
            "weaknesses": {
                "value": "-- The proposed solution described in Section 3 is too qualitative. For instance, the underflow region is described as a \"hard\" region to \"escape\" from. Can the \"escape\" and \"hardness\" be presented in a mathematical manner? Similar for later description of parameters being \"stuck\" and so on.\n\n-- The method only applies to feedforward, what about accumulations occurring in the GEMMs of back-propagation?\n\n-- Benchmarks employed are diverse, but relatively simple (ResNets and Berts). can the empirical results be augmented with Transformer models, such as GPTs?"
            },
            "questions": {
                "value": "Please address the above questions. Furthermore, I am also curious if we can analyze if overflows can be allowed in a controlled manner such as to lower complexity further but maintain accuracy. Indeed, overflowing is essentially related to magnitude clipping. Recent works [1] have shown that clipping, if done properly, can significant improve the quality of quantization. Is this something we can investigate for this work?\n\n[1] Sakr, Charbel, et al. \"Optimal clipping and magnitude-aware differentiation for improved quantization-aware training.\" International Conference on Machine Learning. PMLR, 2022."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission5150/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698360840370,
        "cdate": 1698360840370,
        "tmdate": 1699636509252,
        "mdate": 1699636509252,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "0dOyeKLTDZ",
        "forum": "oOwDQl8haC",
        "replyto": "oOwDQl8haC",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission5150/Reviewer_YwrL"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission5150/Reviewer_YwrL"
        ],
        "content": {
            "summary": {
                "value": "This paper explores how to reduce computing resource by quantize and reducing the bit width of neural network computing accumulators. Unlike most other works that mainly focus on the multiplier part of low bit width, this paper believes that the overhead of the accumulator cannot be ignored. Therefore, through optimization on floating-point representation, the ResNet series models can achieve fine-tuning and inference for the first time with a lower 12 bit width accumulator, without significant degradation in accuracy. This paper also explores the training methods for lower bit width scenarios, including adjusting the design selection of the backpropagation straight through estimator."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "1. Quantization optimization of accumulators is an interesting viewpoint, as it has not been given sufficient attention.\n\n2. The method proposed in this paper has certain reference significance for the design of floating-point accumulators in deep learning accelerators.\n\n3. The discuss of STE used in section 4 seems to be a new and original study, can achieve better results in backpropagation of accumulated errors."
            },
            "weaknesses": {
                "value": "1. The method proposed in this paper is difficult to be applied to accelerate real-world low bit width neural networks. Although this paper claims that an accumulator with a low bit width of 12 bits FP can be implemented with cheaper hardware, standard hardware typically only provides floating-point bit widths of 8 bits, 16 bits, and 32 bits. Implementing such acceleration requires specialized hardware design, which requires more collaborative design and additional costs. The optimization of low bit floating-point accumulators under the same cost, as well as the accuracy that can be achieved by fixed-point quantization models with the same hardware cost, remains to be discussed.\n\n2. This paper lacks accurate evaluation and theoretical analysis of the error and accuracy requirements of floating-point models. Although Table 1 in Paper categorizes the errors in several cases of floating-point quantization, and Figure 2 shows several cases of errors, it is still not possible to quantitatively evaluate the impact of low bit width floating-point accumulation on model inference errors. It is difficult to make people believe with certainty the scalability and reliability of this scheme. Also, in the last paragraph before section 3.1, the author chooses b_acc=b_prod-1/2 log_2(chunk size) as an offset does not seem to guarantee that overflow will not occur under any condition. Therefore, I think that more discussion and theoretical analysis are needed regarding parameter selection and error evaluation.\n\n3. The content of this paper only includes an evaluation of the model accuracy and does not discuss or analyze the actual cost. For example, regarding the estimation of multiplier and accumulators\u2019 power and silicon area, how much performance improvement or resource savings can be achieved through the optimization proposed in this paper. It is interesting to discuss the benefits of these optimizations in the context of the additional accuracy loss and design complexity required by the methods presented in this paper."
            },
            "questions": {
                "value": "1. In section 3.1, a two-staged fine-tuning is proposed, what are the references for selecting hyperparameters here(e.g, 10 epochs, learning rate)?\n2. In section 4, one method is using STE as recursive way on FMA. This seems to require all FMA operations to be unfolded in sequence. As far as I know, the FMA gradient of deep learning training seems to be treated equally, otherwise it will seriously affect efficiency and be unreality. This is because GEMM is a highly optimized parallel operation, and additional branches are not suitable for use here."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission5150/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission5150/Reviewer_YwrL",
                    "ICLR.cc/2024/Conference/Submission5150/Senior_Area_Chairs"
                ]
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission5150/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698680988720,
        "cdate": 1698680988720,
        "tmdate": 1700234987876,
        "mdate": 1700234987876,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "1PDKKaBXyy",
        "forum": "oOwDQl8haC",
        "replyto": "oOwDQl8haC",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission5150/Reviewer_AH1V"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission5150/Reviewer_AH1V"
        ],
        "content": {
            "summary": {
                "value": "In addition to low-precision inputs to a matmul, this paper proposes to use low-bitwidth accumulators (LBA) to compute the dot product. Experiments show that 12-bit LBA in the forward pass is promising for both ResNet and BERT, requiring only several epochs of finetuing. LBA for training is more difficult."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "1. Reducing the accumulator bitwidth is a practical way of further reducing the cost of a low-precision matmul.\n\n2. The experimental design in the main experiments in Section 3.1 is straightforward and seems to be easy to reproduce (if the CUDA kernel is open sourced)."
            },
            "weaknesses": {
                "value": "1. The paper needs to provide more context on related works. For example, what is the key difference between the proposed method and the prior work Wrapnet? Is it training vs. non-training?\n\n2. There is a lack of evaluation or estimation on the hardware benefits of the proposed method. What will be the gate count/computational energy/latency improvement if using 12-bit accumulators compared to FP16/BF16 accumulators?\n\n3. Low-bitwidth accumulator under the context of integer quantization is not explored in the main experiments. Integer quantization is mentioned in Section 2.2 when introducing fixed-point quantization, but it seems to be disconnected from the rest of the evaluation."
            },
            "questions": {
                "value": "Questions are included in the weakness section."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "5: marginally below the acceptance threshold"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission5150/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698828248370,
        "cdate": 1698828248370,
        "tmdate": 1699636509038,
        "mdate": 1699636509038,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "JixAcFwgGm",
        "forum": "oOwDQl8haC",
        "replyto": "oOwDQl8haC",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission5150/Reviewer_L15P"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission5150/Reviewer_L15P"
        ],
        "content": {
            "summary": {
                "value": "The paper introduces an innovative approach to fine-tune the process of quantized accumulation by disregarding underflow effects, thereby simplifying the rounding process to a simple floor operation during low-precision accumulation. Employing this technique, deep learning inference with 12-bit floating-point accumulation maintains the same as FP32 accumulation on the ImageNet dataset. Additionally, the paper suggests a methodology for quantized backpropagation across the entire accumulation, demonstrating promising results with 8-bit floating-point accumulation on smaller datasets, such as MNIST."
            },
            "soundness": {
                "value": "4 excellent"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "1- The paper is well-written and well-organized\n\n2- The efficacy of the methods presented in the paper is substantiated through experimental results using BERT models on the SQuAD benchmark and ResNet models on ImageNet. \n\n3- The backpropagation through the entire quantized accumulation is unique and has not been studied before."
            },
            "weaknesses": {
                "value": "1- It is recommended that the paper include a comparison of the computational complexity of MAC operations between the proposed method and the previous works [1,2,3]. Additionally, the author suggested discussing the quantization overhead associated with the new approach in comparison to [1,2,3].\n\n[1] Sun, Xiao, et al. \"Hybrid 8-bit floating point (HFP8) training and inference for deep neural networks.\" Advances in neural information processing systems 32 (2019).\n\n[2] Sun, Xiao, et al. \"Ultra-low precision 4-bit training of deep neural networks.\" Advances in Neural Information Processing Systems 33 (2020): 1796-1807.\n\n[3] Chmiel, Brian, et al. \"Logarithmic unbiased quantization: Simple 4-bit training in deep learning.\" arXiv preprint arXiv:2112.10769 (2021).\n\n2- The impact of chunk size requires further exploration to determine if reducing the chunk size also diminishes the bit size."
            },
            "questions": {
                "value": "Can the distribution of the accumulations (which might follow a normal or other distribution) affect the performance of the quantization approach?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 4,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission5150/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1699243235369,
        "cdate": 1699243235369,
        "tmdate": 1699636508956,
        "mdate": 1699636508956,
        "license": "CC BY 4.0",
        "version": 2
    }
]