[
    {
        "id": "QGXRov57aB",
        "forum": "o2IEmeLL9r",
        "replyto": "o2IEmeLL9r",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission8189/Reviewer_WXZL"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission8189/Reviewer_WXZL"
        ],
        "content": {
            "summary": {
                "value": "This works presents Pre-Training Goal-based Models (PTGM), a hierarchical method to improve the sample efficiency of RL in complex environments for which large, task-agnostic datasets are available. PTGM first trains a low-level goal-conditioned policy via behavior cloning using the available dataset and then trains a high-level RL policy to generate goals for the low-level policy. Additionally, goal clustering is used to reduce the dimensionality of the goal space and enable the high-level policy to have a discrete action space while a goal prior model is used to guide the learning of the high-level policy. Experimental results in the robotic Kitchen environment and Minecraft demonstrate PTGM's superior sample efficiency and task performance."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "1.\t**Clear writing and presentation**: The paper is well-written and generally easy to follow. It provides the right intuition and effectively builds up motivation where needed. The related work covers a good number of papers. \n\n2.\t**Strong results in challenging domains**: PTGM has strong performance in comparison to existing baselines in complex settings such as Minecraft. This indicates that with sufficient engineering work, it can be applied to complex, large-scale environments. These results are very promising. \n\n3.\t**Interesting results with respect to interpretability**: The proposed goal clustering method provides interesting insights into the properties of the task-agnostic dataset."
            },
            "weaknesses": {
                "value": "1. **Relatively complex method with many steps**: The presented method requires the learning of three separate networks: a low-level goal-conditioned policy, a high-level goal-generating policy and a goal prior model. This results in a lot of hyperparameters such as the appropriate horizon (k) as well as the weight on the intrinsic reward for the high-level policy ($\\alpha$). Additionally, the compression of the goal into a low-dimensional space is also driven by heuristics and requires the appropriate choice for the number of goals to cluster into. Applying this algorithm into a new domain will not be straightforward and would require significant engineering work. However, I acknowledge that if an end-user puts in the engineering effort, then this method can have very strong performance in a new domain. \n\n2) **Novelty**: PTGM draws on several ideas from existing work by Pertsch et al.[1]. It would be helpful to get a better understanding of the similarities and differences between the two methods to judge the novelty of the work."
            },
            "questions": {
                "value": "1.\t**Section 3.1** says *\u2018We study tasks that provide binary rewards, offering a reward of +1 only upon reaching a non-trivial success state\u2019*. However, the Minecraft results have a MineCLIP reward that appears to be dense. Since the majority of the results are in Minecraft, I would revise the above sentence.\n\n2.\tThe low-level policy is learned purely from the dataset. However, the trajectories in the dataset could be generated by sub-optimal agents which could result in a sub-optimal low-level goal-conditioned policy. The assumptions of the dataset and the properties of the low-level policy obtained from that should be clarified further. On the same note, I am curious to know if fine-tuning the low-level policy with RL was explored. \n\n3.\tThe caption in **Table 1** should be rephrased for clarity. In particular, *\u2018two rows\u2019* is confusing as the actual data is contained in a single row. \n\n4.\tWhat are the different tasks used for the dataset collection in Minecraft? Are they the same as the downstream tasks that PTGM is ultimately evaluated on? In other words, is PTGM able to generalize to new tasks that are different from individual trajectories in the dataset? \n\n5.\tIt would be interesting to see the number of different (unique) goals output by the high-level policy during a trajectory. For example, for a trajectory of length 1000 with k=100, are all 10 goals output by the high-level policy different? \n\n6.\tWith reference to **2)** in weakness, what are the similarities and differences between PTGM and SPiRL [1]?\n\n7.\tTask and goal seem to be used interchangeably in the paper. For more clarity, it would be useful to clearly define the difference between the two terms in the *Problem Formulation* section. \n\n\n[1] Pertsch, Karl, Youngwoon Lee, and Joseph Lim. \"Accelerating reinforcement learning with learned skill priors.\" Conference on robot learning. PMLR, 2021."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "8: accept, good paper"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission8189/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission8189/Reviewer_WXZL",
                    "ICLR.cc/2024/Conference/Submission8189/Senior_Area_Chairs"
                ]
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission8189/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698713262345,
        "cdate": 1698713262345,
        "tmdate": 1700601269708,
        "mdate": 1700601269708,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "5jx30VCbFu",
        "forum": "o2IEmeLL9r",
        "replyto": "o2IEmeLL9r",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission8189/Reviewer_VFeh"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission8189/Reviewer_VFeh"
        ],
        "content": {
            "summary": {
                "value": "This paper studies the pre-training goal-conditioned model to improve the sample efficiency in downstream RL training. The authors try to improve the learning of a goal generation model and propose to discretize the goal space into a fixed number of groups so that the goal generation model can handle high dimensional space tasks."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "- Goal-conditioned RL is important for offline pre-training.\n- The proposed method is easy to understand."
            },
            "weaknesses": {
                "value": "- The novelty of discretizing goal spaces is limited.\n- The baselines are not sufficient. There are many goal-conditioned RL methods that can be applied to offline pre-training, including continuous goals [1] and discretized goals [2].  The included baselines are not well selected. *SPiRL* was proposed in 2021, and *VPT* is not goal conditioned. *Steve-1* is language-labeled which is used in quite different settings.\n- I don\u2019t think the visualization in Figure 4 can support that the clustered goals are meaningful. You can always find images from different clusters representing different behaviors. What I would expect is that images clustered into the same group should present similar patterns.\n\n[1] Rosete-Beas, Erick, et al. \"Latent plans for task-agnostic offline reinforcement learning.\"\u00a0*Conference on Robot Learning*. PMLR, 2023.\n\n[2] Islam, Riashat, et al. \"Discrete factorial representations as an abstraction for goal conditioned reinforcement learning.\"\u00a0*arXiv preprint arXiv:2211.00247*\u00a0(2022)."
            },
            "questions": {
                "value": "- Why does the clustering can produce meaningful goals? The clustering is done without any prior knowledge or inductive bias. If the image background is noisy, can the proposed clustering method work?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission8189/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission8189/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission8189/Reviewer_VFeh"
                ]
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission8189/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698771967771,
        "cdate": 1698771967771,
        "tmdate": 1700661003545,
        "mdate": 1700661003545,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "c5vJglj60E",
        "forum": "o2IEmeLL9r",
        "replyto": "o2IEmeLL9r",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission8189/Reviewer_NwB4"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission8189/Reviewer_NwB4"
        ],
        "content": {
            "summary": {
                "value": "This paper studies the problem of learning diverse and temporally extended behaviors using hierarchical RL with access to large, pre-existing datasets. The proposed method, PTGM, pre-trains (1) a goal-conditioned low-level policy using behavior cloning, and (2) a goal prior in a discrete space of goal clusters, both of which are extracted from a large pre-existing behavior dataset. After pre-training these two components, PTGM then trains a high-level RL policy to select goals for the goal-conditioned low-level policy to reach. A key technical contribution that sets this method apart from prior work is the use of a discrete goal space (by means of clustering), which greatly reduces the action space of the high-level policy that is learned via RL (as opposed to continuous goal embeddings). The authors argue that this discretization plays a key role in improving exploration during RL training.\n\nExperiments are conducted on two task domains: a kitchen environment in which a robotic manipulator is tasked with manipulating multiple objects sequentially based on state inputs, and 5 visual tasks from MineDojo which is based on the open-world video game Minecraft. The authors find that PTGM generally improves over a number of recently proposed, seemingly strong baselines in both task domains."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "- The problem setting is both interesting and timely, and will likely be of interest to the ICLR community. The paper is well written, positions itself wrt prior work, and is generally easy to follow, with a few exceptions (see *weaknesses* below).\n- The technical contributions and design choices are generally well motivated and intuitive given the problem setting. I appreciate the relatively simple and data-driven approach to hierarchical policy learning which addresses two key challenges for this class of algorithms -- training stability and diversity of behaviors -- by leveraging existing datasets + only using RL when necessary.\n- Experiments are conducted on fairly difficult tasks that span both state and image observations, improvements over baselines appear significant."
            },
            "weaknesses": {
                "value": "- Ablations are fairly limited and leave me with several unanswered questions that seem important to address given the technical contributions of the paper. Firstly, it is evident that too few clusters (10) fails to capture the diversity of the goal space, and that no clustering fails to learn at all. However, it is not clear to me what the breaking point would be in terms of number of clusters: would e.g. 5,000 clusters lead to similar or *more* diverse behaviors than 500 clusters, or would it collapse to similar performance as the no-clustering ablation? Similarly, it is not clear based on the ablation on the number of low-level steps that more than 100 steps (thus offloading more of the learning to behavior cloning rather than RL) would lead to worse behaviors. Given that the low-level policy is trained on a very large dataset, I imagine that behavior cloning over longer horizons, e.g., 1,000 steps, could still lead to very meaningful behaviors. Additionally, # of clusters and # of steps are highly dependent hyper-parameters given that they jointly balance how much of the behavior should be offloaded to the high-level RL policy vs. the low-level BC policy, but I didn't find any discussion or results that highlight this. Lastly, could the authors please clarify why the third ablation is conducted on Spider rather than the Log task like the two other ablations?\n- The paper is lacking in terms of implementation details on the proposed method + the baselines. It would be helpful if the paper was more self-contained and described the overall architecture etc. in the appendix rather than simply referencing prior work. Additionally, in cases where baselines are adapted to new domains yet fail completely (e.g., VPT for the Kitchen environment), I would appreciate if the authors could share some thoughts on why this might be, even if not backed by data."
            },
            "questions": {
                "value": "I have a couple of additional questions that I would also appreciate if the authors could address:\n- I understand the motivation behind the KL weight and that neither alpha=0 (no prior) nor too large of a weight are desirable. However, it appears that the authors choose to train the high-level policy from scratch and only leverage the goal prior to guide exploration. Given that the goal prior and high-level policy share the same action space, why do the authors decide against initializing the high-level policy as the goal prior and simply finetuning it using the proposed objective (reward + KL)?\n- I am left wondering how many of the design choices in the proposed framework are uniquely beneficial for MineDojo due to its enormous state and action space. For example, are discrete goals really necessary for the simpler Kitchen environment compared to providing the raw physical state as a continuous goal? The MineDojo results are surely impressive, but it would be useful to contextualize the proposed method and design choices more for other domains besides MineDojo, with or without additional experiments to back any claims.\n\n**Post-rebuttal:** I have revised my rating (6 -> 8) and confidence (3 -> 4) based on the authors' response to my comments, as well as those of my fellow reviewers."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "8: accept, good paper"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission8189/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission8189/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission8189/Reviewer_NwB4"
                ]
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission8189/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698785773021,
        "cdate": 1698785773021,
        "tmdate": 1700598008039,
        "mdate": 1700598008039,
        "license": "CC BY 4.0",
        "version": 2
    }
]