[
    {
        "id": "wfWvuTXz6o",
        "forum": "YikB42Oyaw",
        "replyto": "YikB42Oyaw",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission6316/Reviewer_8mBK"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission6316/Reviewer_8mBK"
        ],
        "content": {
            "summary": {
                "value": "The paper unveils MoReDrop and MoReDropL, new strategies crafted to mitigate the challenges of model distributional shifts encountered in dropout models during the training and evaluation phases. MoReDrop emphasizes the dense model loss, which improves the consistency between training and evaluation models but at a substantial computational cost due to added matrix operations across all layers. A lighter version, MoReDropL, addresses these computational concerns, focusing computations on the final layer, albeit at the cost of some level of generalization.\n\nHowever, the paper falls short in providing exhaustive experimental evidence, leaving some claims, like the mitigation of distributional shifts, unsubstantiated. Additionally, there\u2019s a notable discrepancy in mathematical formulations, particularly in Equation (4), which raises questions about its accuracy and alignment with standard conventions. A lack of thorough clarification regarding the significance of introduced theoretical concepts, such as Theorem 1, leaves the reader ambiguous about their precise role and implications. Moreover, certain aspects, such as the backpropagation process and the methodology\u2019s robustness at varying dropout rates, lack detailed exploration and clarification, making it challenging to grasp the full depth of the proposed strategies' effectiveness and functionality."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "- **New Approach to Address Distributional Shift:** The paper introduces MoReDrop, an innovative approach in mitigating the model distributional shift encountered during the evaluation phases, which is common with the use of dropout in neural networks.\n\n- **Utilization of Dense Model Loss:** Unlike previous methods that primarily use the sub-model loss, this study emphasizes the use of the dense model loss as the main loss function. This prioritization allows for better consistency between the training and evaluation models."
            },
            "weaknesses": {
                "value": "- **Lack of Explicit Experimental Results:** The paper claims that MoReDrop mitigates distributional shift issues through a dense-to-sub regularization approach. However, it lacks explicit experimental evidence supporting how this method shows superiority over previous techniques. The absence of clear, comparative results makes it challenging to validate the asserted benefits of MoReDrop.\n\n- **Discrepancy in Mathematical Formulation:** There\u2019s an inconsistency in Equation (4), where the expectation is placed inside the exponent, but during training, the expectation is positioned outside the exponent, leading to potential questions regarding the mathematical precision and validity of the given formulation. This inconsistency needs to be addressed to ensure the robustness and accuracy of the mathematical model presented.\n\n- **Unclear Implications of Theoretical Concepts:** The paper introduces Theorem 1 but fails to elucidate its significance concerning Equation (4). It leaves the readers with ambiguity regarding the theorem's role and impact on the equation's interpretation or formulation.\n\n- **Ambiguity in Backpropagation Process:** The explanation regarding the gradient backpropagation in Section 3.2 is unclear. It doesn\u2019t adequately explain why the shared parameter sub-model $ M_i$ remains unaffected during backpropagation despite its involvement in the equations, leading to confusion about the actual process and mechanisms at play.\n\n- **Questionable Robustness at High Dropout Rates:** The claim regarding MoReDrop\u2019s robustness at high dropout rates appears counterintuitive, and the paper doesn\u2019t provide a comprehensive explanation to dispel this contradiction. It lacks clarity on how MoReDrop maintains effective regularization, especially with high values of $p$, which seems to diminish the effect of $M_i$ and potentially nullify the dropout effect.\n\n- **Lack of Depth in Exploring Dropout Rates:** The paper doesn\u2019t dive deep into exploring the implications of varying dropout rates in MoReDrop. There\u2019s a missed opportunity to clarify the differences and effects at different dropout rates, such as distinguishing between $p=0$ and $p=1.0$, which would have contributed to a richer understanding of the methodology.\n\nFor clarifications, please refer to the Questions section."
            },
            "questions": {
                "value": "-  In the introduction and Section 3.3, the authors assert that MoReDrop alleviates the distributional shift issue by employing a dense-to-sub regularization approach. Could the authors provide clarity on how this method is advantageous over previous strategies? It seems that there might be a lack of explicit experimental results in the paper that substantiate this claim, or perhaps they might have been overlooked.\n\n- Eq (4) in Page 4 incorporates $\\mathbb{E}_{S_D}[l(D, S_D;\\theta)]$ within the exponent. Given the application of the minibatch and implicit dropout $p$, the expectation operation seems to be applied outside of the exponent. This positioning could be questioned due to $\\mathbb{E}\\frac{\\exp(X)}{\\exp(Y)}\\neq \\frac{\\exp(\\mathbb{E}X)}{\\exp(\\mathbb{E}Y)}$ in general,so they are not equivalent. Could the authors elucidate on this inconsistency?\n\n- What is the significance of Theorem 1 in relation to Eq. (4)? Could the authors clarify the implications of the theorem on the formulation or interpretation of this equation?\n\n- Could the authors please clarify the statement in Section 3.2 on Page 4: 'Note that we only apply through gradient backpropagation $M$; shared parameter sub-model $M_i$ does not undergo updates through gradient backpropagation.' From Equation (5), it seems that information from $M_i$ is included, leading me to assume that $M_i\\subset M$ would also be influenced during backpropagation. Could you elucidate how $M_i$ remains unaffected?\n\n- In Section 3.3, the authors assert the robustness of MoReDrop at high dropout rates, a claim that appears somewhat counterintuitive. Reference is made to Table 5 on page 13, where MoReDrop exhibits advantages at a high dropout rate, such as $p=0.9$. This, however, prompts a question: with such a high value of $p$, wouldn't the effect of $M_i$ be diminished, causing the regular cross-entropy loss in Equation (5) to predominate, thereby nullifying the dropout effect? Could the authors elucidate how MoReDrop, even at high dropout rates, continues to maintain effective regularization?\n\n- More specifically, what's the difference between $p=0$ and $p=1.0$ in MoReDropout? When $p=0$, what's the implication of the regularization term in Eq. (4)? **Added (as of 11/14)**. When $p=1.0$, what's the value of $\\mathbb{E}_{S_D}[l(D, S_D;\\theta)]$?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission6316/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission6316/Reviewer_8mBK",
                    "ICLR.cc/2024/Conference/Submission6316/Senior_Area_Chairs"
                ]
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission6316/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698535189704,
        "cdate": 1698535189704,
        "tmdate": 1699980681778,
        "mdate": 1699980681778,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "qyvdfmkDKN",
        "forum": "YikB42Oyaw",
        "replyto": "YikB42Oyaw",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission6316/Reviewer_57g8"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission6316/Reviewer_57g8"
        ],
        "content": {
            "summary": {
                "value": "The study introduces \"MoReDrop,\" a method designed to address distributional shifts in dropout models without the need for dropping neurons during gradient backpropagation. This approach uses a primary loss function derived from the dense model and incorporates a model gap approximation between the dense model and a sampled sub-model. Experimental results indicate superior performance for MoReDrop and its lightweight version, MoReDropL, across various tasks, with MoReDropL notably excelling in the RTE task from the GLUE benchmark."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "**Originality**: The paper showcases a novel approach, MoReDrop, which uniquely addresses the distributional shifts in dropout models without resorting to the conventional method of dropping neurons during gradient backpropagation. This inventive technique, particularly the integration of the model gap approximation, distinguishes it from previous studies, adding a layer of originality.\n\n**Quality**: The research provides robust experimental results, indicating the effectiveness of both MoReDrop and MoReDropL across a range of tasks. Moreover, the performance of MoReDropL, especially in the RTE task from the GLUE benchmark, highlights the quality and potential of the proposed methods.\n\n**Clarity**: The paper is well-structured and articulates the core concepts, methodologies, and findings in a comprehensible manner. The delineation between MoReDrop and its lightweight counterpart, MoReDropL, is clear, aiding readers in understanding the nuances and applications of each.\n\n**Significance**: The study's contribution, particularly in the realm of managing model distributional shifts within dropout models, holds significant implications for the broader neural network community."
            },
            "weaknesses": {
                "value": "The paper does not present glaring weaknesses. However:\n\n1) **Performance and efficiency**: The performance improvement showcased in the experiments is marginal. Across various datasets, there's only about a 1% enhancement. Given this, the results might fall within the error bar, which the authors should consider highlighting. Taking into account the longer training time that MoReDrop demands, the trade-off between model complexity and experimental outcomes seems limited.\n\n\n2) **Generalizability and Scalability**: While the paper mentions potential scalability issues in challenging domains such as self-supervised learning and reinforcement learning, it would be beneficial for the authors to delve deeper into these concerns. Understanding how MoReDrop would fare in these more complex scenarios, or providing preliminary tests, would strengthen the paper's comprehensiveness.\n\n3) **Comparison with Other Methods**: The paper could benefit from a more extensive comparison with existing methods or techniques that also aim to address distributional shifts in dropout models. By directly contrasting MoReDrop's performance, advantages, and limitations with other prevalent methods, readers would gain a clearer understanding of its position in the current landscape of neural network regularizers."
            },
            "questions": {
                "value": "1. **Effect of Increasing the Number of \"M\" Models**: \n   - **Question**: How does the performance of MoReDrop change when the number of \"M\" models is increased? Does the method scale well with an increased number of models, or is there a saturation point beyond which performance gains are minimal or even negative? The broader a model is, the more the model space it can potentially explore. How does MoReDrop perform when applied to broader models? Is there a significant difference in performance compared to narrower models? As the model becomes wider and potentially explores more model spaces, how does this impact the training time, especially when using MoReDrop? Is there an exponential increase, or does the method manage to keep the training time within reasonable bounds?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "2: You are willing to defend your assessment, but it is quite likely that you did not understand the central parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission6316/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698673691138,
        "cdate": 1698673691138,
        "tmdate": 1699636694979,
        "mdate": 1699636694979,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "altJP2fih9",
        "forum": "YikB42Oyaw",
        "replyto": "YikB42Oyaw",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission6316/Reviewer_2qPD"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission6316/Reviewer_2qPD"
        ],
        "content": {
            "summary": {
                "value": "This paper introduces an approach for training a neural network, involving regularization with a separate network that incorporates dropout. The paper is well-structured and fairly easy to follow."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "- The idea is simple and easy to implement"
            },
            "weaknesses": {
                "value": "1. Were there any experiments conducted using a smaller model as the regularizer without employing dropout in that network, opting instead to reduce its complexity by modifying the number of layers or nodes? Btw, does the main model use any regularization (weight decay, etc.)?\n\n2. Given that the regularizer network does not contribute to gradient flow and essentially remains untrained, were different weight and bias initialization methods explored for the regularizer network, and if so, what were the outcomes?\n\n3. It would be valuable to assess the performance and generalization capabilities of this approach on a wider range of datasets. Specifically, results on datasets like CIFAR-C, ImageNet-C, and domain generalization datasets such as VLCS would provide a broader perspective on the model's effectiveness.\n\n4. This work reminds me another paper (https://arxiv.org/abs/2207.01548) that focuses on regularization by using an additional model without batch normalization (BN). It might be interesting to delve into the connections and distinctions between these two approaches. This makes me more think of point #1 above."
            },
            "questions": {
                "value": "Please see Weaknesses section"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "5: marginally below the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission6316/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698766126311,
        "cdate": 1698766126311,
        "tmdate": 1699636694790,
        "mdate": 1699636694790,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "w97bTlus9i",
        "forum": "YikB42Oyaw",
        "replyto": "YikB42Oyaw",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission6316/Reviewer_7aV5"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission6316/Reviewer_7aV5"
        ],
        "content": {
            "summary": {
                "value": "The paper introduces MoReDrop, a novel solution addressing the distributional shift problem between training and inference when using dropout regularization for neural networks. To tackle the issue, MoReDrop introduces a novel loss function and adds a regularization term derived from predictions with dropout sub-models. Additionally, MoReDropL, a more computationally efficient variant, employs dropout only at the last layer, balancing generalization and computational cost. The experiments conducted on various benchmarks demonstrate the scalability and efficiency of MoReDrop and MoReDropL."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "- Well-Structured Presentation: The paper is well-structured, with a clear introduction, detailed methodology, and comprehensive experimental results. It presents its findings in a logical and accessible manner.\n\n- Comprehensive Experimental Validation: The paper backs its claims with thorough experimental evaluations conducted across multiple benchmarks and domains.\n\n- Clear Problem Statement: The paper clearly defines the problem of distributional shift and the limitations of existing methods. \n\n- Practical Implications: The solutions presented in the paper have practical implications, potentially leading to more stable and robust deep learning models in various applications."
            },
            "weaknesses": {
                "value": "- Is there any theoretical and/or empirical analysis on the effect of adding the proposed regularization term to the model distribution shift $\\mathcal{G}$? I feel like there is insufficient justification/explanation on how the proposed algorithm can reduce the model distribution shift. Is it really helping by reducing such a shift? In general, it would be great if the authors can make connections better between equation 1 and the subsequent equations/derivations. \n\n-  I am not fully convinced by the use of equation 4 for the loss function. It would be good if additional empirical analysis can be done on the effect of different choices of $g(\\cdot)$ have on the results. \n\n- An additional ablation study on the quality of sub-model predictions have during the course of entire training would be very helpful in facilitating the understanding on exactly how the proposed method is helping regularizing the model. \n\n- The proposed method feels very similar to the use of \"exponential moving average (EMA) predictions\" in semi-supervised learning [1]. I wonder if the proposed algorithm is just similar things to that. It also sounds similar to another line of research on self-distillation [2]. A baseline comparison and a literature review along these two lines of work would be helpful. \n\n[1] Antti Tarvainen and Harri Valpola. Mean teachers are better role models: Weight-averaged consistency targets improve semi-supervised deep learning results. In Advances in neural information processing systems, pages 1195\u20131204, 2017.\n\n[2] Zhang, Linfeng, et al. \"Be your own teacher: Improve the performance of convolutional neural networks via self distillation.\" Proceedings of the IEEE/CVF international conference on computer vision. 2019."
            },
            "questions": {
                "value": "- Why does MoReDropL perform better than MoReDrop from the model distribution shift perspective? \n\n- Any additional explanation on why the proposed method can perform as well/better on high dropout-rate? It seems like higher dropout rate probably lead to less accurate predictions."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "5: marginally below the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 4,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission6316/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698787748377,
        "cdate": 1698787748377,
        "tmdate": 1699636694668,
        "mdate": 1699636694668,
        "license": "CC BY 4.0",
        "version": 2
    }
]