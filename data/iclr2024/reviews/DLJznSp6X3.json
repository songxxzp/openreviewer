[
    {
        "id": "YB7MDWQco6",
        "forum": "DLJznSp6X3",
        "replyto": "DLJznSp6X3",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission4146/Reviewer_xXqo"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission4146/Reviewer_xXqo"
        ],
        "content": {
            "summary": {
                "value": "The authors propose ReLoRA, a parameter-efficient method that can be applied to both fine-tuning and pre-training. ReLoRA utilizes low-rank updates that aggregate to train high-rank networks. Experiments show that ReLoRA can speed up the training process and kind of reduce the memory consumption."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "!. The orientation is good. With several existing PEFT methods, it's important to implement parameter-efficient methods to improve the pre-training process. \n2. Extensive experiments are done. Several models are used and various ablation studies are included.\n3. The method is relatively simple and effective, with some ingeniously designed tricks."
            },
            "weaknesses": {
                "value": "1. The writing is not good. Figure 1 lacks notes on Loss. The method part is quite confusing. Warm start isn't even mentioned except in Algorithm 1. In 3.1 \"Architecture and training hyperparameters\", it seems that a hand-made architecture is designed and used, while in \"Scaling up to 1.3B\", BERT is mentioned, so what exactly is the architecture? In \"trained on 8\u00d7A100GPUs (or more)\", this \"or more\" seems the experiment details are not so clear.\n2. The method includes warm start at first, which means the memory consumption of ReLoRA is equal or close to full training at first. One has to afford the huge memory consumption at first, so the memory problem has not been solved. As shown in the results, full training outperforms ReLoRA on almost all tasks (or average), so as far as I'm concerned, ReLoRA is just sacrificing the overall performance for speeding up. Also, it seems unfair if comparing with LoRA for pre-training, because LoRA isn't designed for pre-training. However, in Table 2, results of LoRA and ReLoRA are quite close, so I doubt the efficiency of ReLoRA. Directly using LoRA+warmstart can be a simpler choice.\n3. It seems ReLoRA introduces a lot of new hyperparameters, making the param tuning more complex than regular training or LoRA."
            },
            "questions": {
                "value": "1. In Figure 1, what's Loss for, training of validation? Why can Loss demonstrate \"similar performance\"?\n2. In Table 3, why isn't full fine-tuning included?\n3. For the Control Baseline, how are the trainable parameters chosen?\n4. ReLoRA outperforms LoRA for fine-tuning can be due to the Warm start?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission4146/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission4146/Reviewer_xXqo",
                    "ICLR.cc/2024/Conference/Submission4146/Senior_Area_Chairs"
                ]
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission4146/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698641352546,
        "cdate": 1698641352546,
        "tmdate": 1700320412192,
        "mdate": 1700320412192,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "Fet3kp7EFl",
        "forum": "DLJznSp6X3",
        "replyto": "DLJznSp6X3",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission4146/Reviewer_DYvD"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission4146/Reviewer_DYvD"
        ],
        "content": {
            "summary": {
                "value": "The paper introduces ReLoRA (Recurrent Low Rank Adaptation) for training large language models that optimizes the training process to be more computationally efficient while maintaining performance. The main idea is utilizing multiple low-rank updates to effectively train high-rank networks, leveraging the 'rank of sum' property. The design incorporates multiple components like full-rank training warm start, periodic parameter merging, jagged learning rates, partial optimizer restarts. The authors show that ReLoRA can replace LoRA for fine tuning performance."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "Originality\n- The paper introduces a unique combination of low-rank updates, full-rank training warm start, and periodic parameter merging. This approach not only reduces the computational resources required for training but also ensures the model\u2019s effectiveness across various tasks. \n\nQuality\n- The authors perform decent amount of experimentation and thorough analysis. The authors have provided a comprehensive evaluation of the method on large transformer models (1.3B params), ensuring the validation of their approach. \n\nClarity\n- The paper is well-structured and clearly written. I did not have a problem following the proposal."
            },
            "weaknesses": {
                "value": "Performance Similarity to LoRA:\n- Based on the empirical results, ReLoRA, exhibits performance (perplexities) that is very similar to that of LoRA. This raises questions about the practical necessity of the more complex ReLoRA framework (multiple new hyperparameters and intricate design choices) when simpler alternatives provide comparable results. Especially because the training speedups are marginal ~9%. \n\n- The authors could strengthen their contribution by providing clearer and more substantial evidence of scenarios where ReLoRA significantly outperforms LoRA, helping to justify the additional complexity."
            },
            "questions": {
                "value": "Discussion of Limitations:\n- The paper could benefit from a more thorough discussion of the limitations of ReLoRA. Understanding the scenarios in which ReLoRA may not perform as expected or could be improved is crucial for future research and practical applications.\n\nExplanation of Design Choices:\n- Some design choices in ReLoRA, such as the specific strategy for periodic parameter merging and the choice of low-rank updates, could be explained in more detail. Providing the rationale behind these choices and discussing potential alternatives would strengthen the paper."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "5: marginally below the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission4146/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission4146/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission4146/Reviewer_DYvD"
                ]
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission4146/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698649364733,
        "cdate": 1698649364733,
        "tmdate": 1699636379916,
        "mdate": 1699636379916,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "JCfmJqz5Te",
        "forum": "DLJznSp6X3",
        "replyto": "DLJznSp6X3",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission4146/Reviewer_x3dX"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission4146/Reviewer_x3dX"
        ],
        "content": {
            "summary": {
                "value": "This paper proposes a parameter-efficient training method called ReLoRA. Based on the basic solution of LoRA, ReLoRA cyclically merges the trainable parameters W_A and W_B into the original parameters and reinitializes the parameters, thus training high-rank networks. The authors show the method's potential in parameter-efficient pre-training and the immediate replacement of LoRA. Experimental results show memory and computation reduction on various model scale setups."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "The paper points out the low-rank limitations of LoRA on parameter updating and proposes a merge-initialization approach, called ReLoRA, to make some improvements to LoRA. The experimental results show that this improvement can be applied in the model pre-training process to reduce memory and computational resources overhead. In the fine-tuning stage, it can also be used as an alternative to LoRA to achieve better performance on some downstream tasks."
            },
            "weaknesses": {
                "value": "The main weakness is whether to keep high-rank training or use LoRA. As far as I understand, methods such as LoRA for parameter-efficient fine-tuning are proposed based on the low-rank nature of the fine-tuning process, so it seems that there is no need for high-rank training during the fine-tuning phase (on the other hand, merging parameters may contaminate the original pretrained checkpoints); While the authors claim the potential of ReLoRA in the training process, it also emphasizes that the warm-start of the full-parameter training has a significant impact on the training effect, so is it possible that such a technique with a low-rank adaptor is unsuitable or unnecessary for pre-training? Clarification of the following questions may help."
            },
            "questions": {
                "value": "- What is the relationship of parameters\u2019 rank and task performance? Is it possible to quantify the respective RANK needed for pre-training and fine-tuning?\n- Can equation 3 prove that \\delta W achieves a higher rank compared to LoRA? Is it possible to add the relationship between higher rank and random initialization?\n- From Figure 1 and Table 2, is it possible to conclude that the pattern of low-rank updates is mainly in the middle and late stages of model training?\n- How can ReLoRA speed up the training, as the forward and backward computation is not sparsified (or even more computation)?\n- How is the performance and further speedup when you combine the ReLoRA and low-precision quantization, as mentioned in the paper?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission4146/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission4146/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission4146/Reviewer_x3dX"
                ]
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission4146/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698796920033,
        "cdate": 1698796920033,
        "tmdate": 1700778729630,
        "mdate": 1700778729630,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "NMnj89VXHe",
        "forum": "DLJznSp6X3",
        "replyto": "DLJznSp6X3",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission4146/Reviewer_vHWf"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission4146/Reviewer_vHWf"
        ],
        "content": {
            "summary": {
                "value": "This work proposes ReLoRA, a parameter-efficient method for pretraining neural networks that iteratively trains low-rank adapters, merges them, and trains new sets of adapters for the same parameters. The proposed method is validated on language model pretraining on C4 for sizes ranging from 60M to 1.3B parameters and finetuning T5-base and T5-large; using ReLoRA results in significant memory savings with similar quality of the final model compared to full-rank training."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "* The proposed approach is simple to implement and use, yet quite efficient in practice\n* Overall, the paper is clearly written and easy to understand\n* I particularly appreciated the authors including negative results in their submission: the community could significantly benefit from a more widespread use of that practice, yet the majority of papers does not report failed experiments."
            },
            "weaknesses": {
                "value": "* It is not fully clear to me if the proposed technique will indeed scale to model sizes which are currently considered to be most capable (starting from 7B parameters and reaching up to 70B in most cases). While I understand that even current results are quite promising, it might be the case that at larger scales, low-rank training would more severely affect the capabilities of the model, which would make the work less impactful for the community.\n* Similarly to the above question, I think that a more principled way to conduct experiments would be to train ReLoRA until it achieves the same perplexity as the full-rank baseline. If we aim to achieve the same quality as the standard approach, it is good to know how many additional iterations with ReLoRA would be necessary for that. I would also expect that the wall-clock time gains become less pronounced after such a comparison.\n* The work could benefit from a bit more polish and proofreading: there are multiple typos and incomplete sentences throughout the paper. For example, see \"hparam\" -> \"hyperparameter\" and \"Flash attention\" -> \"FlashAttention\" in page 4, \"resented\" -> \"presented\" in page 5 and \"ReLoRA clearly outperforms LoRA at At\" in page 8."
            },
            "questions": {
                "value": "* While [1] is not strictly relevant to the submission's topic, I think it studies a similar set of questions, and I would be curious to hear authors' opinion of that paper.\n\n[1] Exploring Low Rank Training of Deep Neural Networks. Siddhartha Rao Kamalakara, Acyr Locatelli, Bharat Venkitesh, Jimmy Ba, Yarin Gal, Aidan N. Gomez. 2022"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 4,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission4146/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1699017590798,
        "cdate": 1699017590798,
        "tmdate": 1699636379761,
        "mdate": 1699636379761,
        "license": "CC BY 4.0",
        "version": 2
    }
]