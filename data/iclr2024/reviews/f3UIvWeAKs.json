[
    {
        "id": "Ekh8ubsqDt",
        "forum": "f3UIvWeAKs",
        "replyto": "f3UIvWeAKs",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission7602/Reviewer_pDE5"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission7602/Reviewer_pDE5"
        ],
        "content": {
            "summary": {
                "value": "This paper proposed a method to learn node selection policy for solving mixed integer linear programming (MILP) problems. It tries to resolve two issues in existing deep learning based MILP methods, i.e., insufficient state representation and reward design. For the first issue, a tripartite graph representation scheme is proposed, which differs from the widely used bipartite graph representation with a new set of additional constraints. For the seconde issue, a new reward scheme with three components are designed to facilitate reinforcement training. Theoretical analysis are provided to support the design. Experimental results show that the learned policy outperforms default SCIP policy and several deep learning based methods."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "1. The motivation is clear, and the two technical contributions are based on interesting and insightful observations.\n2. Some theoretical results are presented.\n3. The paper is well-written and easy to follow."
            },
            "weaknesses": {
                "value": "1. The evaluation is relatively weak. The problem instances are too simple, which can be solved by SCIP within a minute. Using a heavy deep learning architecture to enhance MIP solving performance on such trivial problems are not very meaningful. Besides, the speedup effects over default SCIP is not very significant. If the decision maker can allow one minute for solving, then 10 seconds shorter runtime is not very meaningful.\n\n2. The trained policy degrades significantly on larger problem, which further lowers the pracicability of the proposed method.\n\n3. There is no ablation study results to support the advantages of the proposed method. For example, how about using the traditional bipartite graph representation instead of the newly proposed tripartite scheme? What are the contributions of the three reward componenets on the final performance?"
            },
            "questions": {
                "value": "Please see the above weaknesses."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission7602/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission7602/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission7602/Reviewer_pDE5"
                ]
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission7602/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698673589799,
        "cdate": 1698673589799,
        "tmdate": 1699636922019,
        "mdate": 1699636922019,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "4VBJaeGb6a",
        "forum": "f3UIvWeAKs",
        "replyto": "f3UIvWeAKs",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission7602/Reviewer_gXzc"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission7602/Reviewer_gXzc"
        ],
        "content": {
            "summary": {
                "value": "This paper studies the use of machine learning to improve node selection in branch-and-bound solvers for integer programming. Node selection (along with variable selection and cut selection) is one of the important aspects of branch-and-bound, and a good node selection policy is critical to reducing solve time and the size of the branch-and-bound tree. The authors make two main contributions: first, they propose a new representation of the MIP as a tripartite graph that captures the branching constraints used to arrive at a particular child node; second, they train an RL model based on this representation to tune their node selection policy."
            },
            "soundness": {
                "value": "1 poor"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "The integration of machine learning with MIP solvers is a topic of considerable importance and recent interest. Node selection is an important aspect of this that has not been as thoroughly studied. The authors provide good motivation for studying the problem. Furthermore, consideration of path switching costs in node selection is a subtle and important issue, and it is interesting that the authors study methods to alleviate this."
            },
            "weaknesses": {
                "value": "The tripartite graph representation in Section 3.2 could be explained a lot more clearly. As is, it is just defined as an abstract object but the authors never define clearly how it is built from the underlying MIP. It is more or less possible to infer how they do this from Figure 1, but all of this ought to be clearly defined in the body of the paper.\n\nSimilarly, the information of a node I(N) is never formally defined.\n\nI\u2019m not really sure what Theorem 3.2 is saying. Branch-and-bound is a deterministic algorithm, so indeed all the information needed for its execution is contained at the root node for a fixed node selection policy. A brief glance at the proofs in the appendix makes me skeptical that Theorems 3.1 and 3.2 are saying anything rigorous/meaningful about branch-and-bound.\n\nI do not understand Theorem 4.2 and its proof. The authors claim here that node selection and variable selection are \u201cindependent\u201d. The proof seems to show that given a fixed tree state, the optimal node does not depend on the variable selection policy. But the assumption that there is a given fixed tree state means that the variable selection decisions have already been made at the point of node selection. Varying the variable selection policy would change the current subtree, and the premise of the theorem wouldn\u2019t hold. I don\u2019t think it is scientifically valid to claim from this theorem that node selection and variable selection are \u201cindependent\u201d, and my guess is that most viewpoints in MIP solving would take issue to this claim.\n\nThe writing in the paper needs a lot of improvement. There are grammatical errors and issues with sentence structure in nearly every paragraph that make the paper difficult to read."
            },
            "questions": {
                "value": "I don\u2019t really understand the motivation in the \u201cFrom Nodes to Constraints\u201d paragraph. Variable selection is what determines the actual additional constraints to the subproblem; node selection is about exploration order.\n\nDoesn\u2019t the set NC in the tripartite graph representation grow very large since every leaf node is stored? Are there any limitations due to this?\n\nAdditional comments/questions:\n-Section 2 title \u201cPreliminary\u201d needs to be \u201cPreliminaries\u201d or \u201cPreliminary background\u201d or something like that\n\n-\u201cfeature vector of vertex e_k\u201d -> \u201cfeature vector of edge e_k\u201d on page 3.\n\n-In the section \u201cMILP as Weighted Bipartite Graph\u201d you might want to include that there is an edge between a variable vertex and a constraint vertex iff the variable has a nonzero coefficient in the constraint.\n\n-The P(X, f) notation in the section \u201cBranch-and-Bound Method\u201d seems out of place. Why not stick with the MIP notation used previously?\n\n-In Section 3.2 \u201cV \u222a C = V \u222a NC = C \u222a NC = \u2205\u201d the unions should be intersections.\n\n-In Section 3.2 you should include how the tripartite graph is actually defined, i.e. how are the edges in the graph determined. As far as I can tell the reader is left to infer this from Fig. 1.\n\n-The feature vector labels in Fig. 1 are not explained anywhere as far as I could tell. E.g., what does a feature vector of $(0, +\\infty, -2)$ for the node corresponding to variable $x$ mean? Also, the edges between $V$ and $NC$ are labeled with pairs denoting the sign of the branching constraint, which I take to be the edge feature vectors. But these are labeled $e_i^{NC}$ in Fig. 1, which are the edge weights? What are the actual edge weights, and what do they represent?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission7602/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission7602/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission7602/Reviewer_gXzc"
                ]
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission7602/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698688221304,
        "cdate": 1698688221304,
        "tmdate": 1699636921900,
        "mdate": 1699636921900,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "jvA7hZ8udm",
        "forum": "f3UIvWeAKs",
        "replyto": "f3UIvWeAKs",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission7602/Reviewer_ghtC"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission7602/Reviewer_ghtC"
        ],
        "content": {
            "summary": {
                "value": "The authors introduce a novel tripartite graph representation for the branch-and-bound search tree, which is theoretically proven to encapsulate sufficient information of the search tree, enabling effective node selection in the solving process. They propose three innovative metrics for node selection and develop a DQN-GNN model that employs reinforcement learning to learn node selection policies in MILP solving. The model consists of a GNN that encodes the tripartite graph representation of the search tree into a fixed-dimensional vector and a DQN that takes the encoded vector as input and outputs a Q-value vector for each candidate node. The model is trained to maximize the expected cumulative reward, which is defined as a combination of three metrics: the node's contribution to the relaxation bound improvement, the node's contribution to the search tree size reduction, and the node's contribution to the solution quality improvement. The authors design and conduct experiments that demonstrate the efficacy of the DQN-GNN model in enhancing the efficiency of solving MILPs, showing significant improvement over existing human-designed and learning-based benchmarks."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "1. Introducing a novel tripartite graph representation for the branch-and-bound search tree, which is theoretically proven to encapsulate sufficient information of the search tree, enabling effective node selection in the solving process.\n2. Proposing three metrics for evaluating rewards of node selection and developing a DQN-GNN model that employs reinforcement learning to learn node selection policies in MILP solving.\n3. The model exhibits commendable generalization to larger MILPs."
            },
            "weaknesses": {
                "value": "1.\tObjective 2: The historical optimal solution path is not clear. I don't quite understand what is a historical optimal solution. Is it a global optimal solution or just an intermediate non-proven local optimal solution? \n2.\tSince the performance is inconsistent on larger cases, can author provide any insights on what type of MILP problem would be suitable for the proposed methods?\n3.\tWhat is the rule of setting hyperparameter n (# of nodes for selection)? What if I choose some other values (e.g., n=30,50,100)\n4.\tDo you also restrict the number of nodes to be selected for SCIP?"
            },
            "questions": {
                "value": "Please refer to Strengths and Weaknesses."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission7602/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission7602/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission7602/Reviewer_ghtC"
                ]
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission7602/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698884793103,
        "cdate": 1698884793103,
        "tmdate": 1699636921789,
        "mdate": 1699636921789,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "IyUfLWT1EM",
        "forum": "f3UIvWeAKs",
        "replyto": "f3UIvWeAKs",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission7602/Reviewer_cMLb"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission7602/Reviewer_cMLb"
        ],
        "content": {
            "summary": {
                "value": "The paper addresses the heuristic designs for node selection in BnB for MILP from an ML-guided perspective. The paper proposes a new tripartite representation and a new RL-based framework to learn such heuristics. It provides theoretical analyses to support some of the design choices in the framework. Empirically, the method is tested on three different benchmark, resulting in shorter runtime and smaller tree sizes in some cases."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "1. The paper studies the important questions of node selection for MIP solving. \n2. It provides a theoretical understanding that motivates the design of the ML methods\n3. Experiments show promising results on small MIP instances."
            },
            "weaknesses": {
                "value": "1. The empirical study was done on pretty easy instances and the slowest approaches took only less than half a minute to solve them. It is more common for this kind of study to test on harder and/or larger instances.\n\n2. Only runtime and number of nodes were reported in evaluations. It will be important to include more metrics such as win/loss rate and scatter plots to understand the per-instance performance.\n\n3. The paper doesn\u2019t provide a literature review of related work. There are three very related works (SVM, Ranknet and GNN) compared against in experiment. However I wish to understand what the unique contributions of this paper are over those previous works. Furthermore, there are a few more works on ML-guided node selection for tree search algorithms for other combinatorial optimization problems. It would be important to acknowledge them in related work.\n\n4. Writing can be improved. (1) The edges between V and NC are never defined. I think they are defined similarly to the edges between V and C; (2) Gap reward in Theorem 4.1 is undefined (though defined later); (3) It would be important to describe the intuitive idea for proving each theorem. (4)Typo: \n\tSection 3.2: V \\cup C = V\\cup NC = C\\cup NC should be taking the intersection instead.\n\tSection 4.2 mordern -> modern"
            },
            "questions": {
                "value": "The node constraints vertices represent constraints added in addition to the root problem. They seem to be only one variable if they are constraints added by branching, as mentioned in 3.2 (the 4th line in the paragraph). In that case, each NC vertex will have only one edge connecting to one variable vertex. Is the tripartite representation necessary? This would be more useful if you consider cuts added to the nodes."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 4,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission7602/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698977206538,
        "cdate": 1698977206538,
        "tmdate": 1699636921678,
        "mdate": 1699636921678,
        "license": "CC BY 4.0",
        "version": 2
    }
]