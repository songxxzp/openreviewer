[
    {
        "id": "wcIriW3P27",
        "forum": "Qbf1hy8b7m",
        "replyto": "Qbf1hy8b7m",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission4485/Reviewer_ptT3"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission4485/Reviewer_ptT3"
        ],
        "content": {
            "summary": {
                "value": "This paper attempts to use local learning which update each layer of the neural networks in an isolated way to reduce the huge memory consumption of classical contrastive learning. As mentioned by the authors, such kind of update neglects the dependence of different layers of neural networks which leads to significant performance drop. To alleviate this problem, the authors propose to select a small subset of layers and train them together during local learning. For different layer, the algorithm takes different number of layers to construct the subset. To validate the performance of the proposed method, the authors conduct extensive experiments on several widely used datasets such as CIFAR-10, SVHN, STL-10 and ImageNet. The results illustrate that the performance can be decent with reduction of 40% GPU memory."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "The intuition of the proposed method is reasonable, taking several layers to do local learning should help enhance the performance of local learning via importing information from other layers. \nThe detailed method is direct, select layers by some step from the current layer to the output layer. \nThe performance on several small-scale dataset is decent, deep networks such as ResNet-110 can be trained using the proposed method with small performance gap compared with BP. The GPU memory reduction is very significant. \nThe authors also validate the performance on different CNN network structures. \nOn several CNN network structures as well as several small-scale dataset, the proposed method outperform the counterparts by a significant margin.\nThe authors also analyze the method with extensive ablation studies."
            },
            "weaknesses": {
                "value": "The performance gap between AugLocal and BP seems to be enlarged on ImageNet. The authors also do not show the experiments on vision transformer which is also a kind of widely used structure in computer vision. \n\nCould the authors present the performance comparison when using the model trained using BP and Auglocal for downstream task fine-tuning?"
            },
            "questions": {
                "value": "Please refer to weakness."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission4485/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698666540389,
        "cdate": 1698666540389,
        "tmdate": 1699636424545,
        "mdate": 1699636424545,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "6qeG9aoijg",
        "forum": "Qbf1hy8b7m",
        "replyto": "Qbf1hy8b7m",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission4485/Reviewer_6ww4"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission4485/Reviewer_6ww4"
        ],
        "content": {
            "summary": {
                "value": "Unlike traditional local learning techniques, AugLocal does not create a new auxiliary network. Instead, it is constructed by selecting a few layers from the subsequent layers of the hidden layers. With this approach, AugLocal was able to achieve higher accuracy compared to traditional local learning, and it is comparable to backpropagation."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "1. This paper is well-written and easy to understand.\n\n2. Unlike traditional methods, the concept of utilizing existing hidden layers to construct auxiliary networks, thereby learning representations related to the global loss, is novel.\n\n3. The representation similarity analysis convincingly shows that AugLocal learns in a manner more akin to backpropagation compared to traditional local learning.\n\n4. Not only did it achieve higher accuracy compared to traditional local learning, but it also saved GPU memory."
            },
            "weaknesses": {
                "value": "1. Fair comparison to previous works\n: The author presents comparison results between AugLocal, DGL, and InfoPro. However, looking at Table 2 in the Appendix, AugLocal has higher FLOPs than the other methods. Typically, networks with a larger number of FLOPs tend to achieve higher accuracy. Therefore, it seems appropriate to compare the accuracy among AugLocal, DGL, and InfoPro with the same FLOPs, that is, auxiliary networks with equivalent FLOPs.\n\n2. Do not solve update locking perfectly\n: AugLocal utilizes the subsequent layers of the hidden layers. As a result, this method has to wait for the subsequent layers to be trained for training the current layer with the next data (update locking). In contrast, traditional local learning methods like DGL and InfoPro completely solve this update locking issue, enabling asynchronous training.\n\n3. (Minor) Another tasks like GNNs or NLP\n: The author demonstrated the efficacy of AugLocal in image classification tasks using models like ResNet, EfficientNet, and MobileNetv2 for the sake of generality. If AugLocal also performs well in graph tasks or NLP, it would further attest to its generality."
            },
            "questions": {
                "value": "Despite the aforementioned shortcomings, I find the idea of using the subsequent layers of the hidden layer as an auxiliary network to be very innovative. As a result, I have awarded a score of 6. However, I believe addressing the following questions could further elevate the quality of the paper.\n\n1. Comparisons in same FLOPs\n : I acknowledge that it might be challenging to compare with AugLocal at the same FLOPs since the method of determining the auxiliary network in DGL and InfoPro is already fixed. Nevertheless, if there is a comparison result with AugLocal at the same FLOPs, it would enhance the quality of the paper if it is possible.\n\n2. Refer the update locking issue as limitation\n: As mentioned above, due to the nature of the algorithm, the current layer cannot be trained with the next data until the subsequent layer of the hidden layer is trained (update locking). It would be good to mention this limitations in the paper's conclusion or Appendix and suggest directions for future work. If possible, briefly mentioning a possible solution would also be beneficial.\n\n3. Recent related works\n: The author discusses algorithms like FA (2016), DFA(2016), and Weight-Mirror (2019) in section 5 to address the weight transport issue. However, there are more recent algorithms that have proposed. Please add and compare AugLocal with DRTP (2021) and ASAP (2021), which are recent biologically plausible learning rules to solve weight transport problem, to section 5.  \n\n(1) Learning Without Feedback: Fixed Random Learning Signals Allow for Feedforward Training of Deep Neural Networks, 2021\n\n(2) Activation Sharing with Asymmetric Paths Solves Weight Transport Problem without Bidirectional Connection, 2021\n\n4. (minor) Perform another tasks\n : It would be even better if results for simple models like GCN2 or BERT-Base could be added.\n\nIf requests 1-3 are perfectly addressed, I am willing to raise the score to 7-8 points.\n\n**# After the discussion, all my concerns have been resolved, and I will raise the score to 8.**"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "8: accept, good paper"
            },
            "confidence": {
                "value": "5: You are absolutely certain about your assessment. You are very familiar with the related work and checked the math/other details carefully."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission4485/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission4485/Reviewer_6ww4",
                    "ICLR.cc/2024/Conference/Submission4485/Senior_Area_Chairs"
                ]
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission4485/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698669757947,
        "cdate": 1698669757947,
        "tmdate": 1700729137879,
        "mdate": 1700729137879,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "AEB3IdxSze",
        "forum": "Qbf1hy8b7m",
        "replyto": "Qbf1hy8b7m",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission4485/Reviewer_SLqf"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission4485/Reviewer_SLqf"
        ],
        "content": {
            "summary": {
                "value": "This paper studies the supervised local learning problem. It proposes a new rule to construct auxiliary networks for each local layer/block: using a subset of the following layers and the classifier as its auxiliary net, thus closing the gap between local learning and end-to-end learning. Experiments are conducted on CIFAR-10, SVHN, STL-10 and ImageNet. The experimental results show that constructing the auxiliary networks in such a way can effectively close the gap between local learning and bp-based end-to-end learning with tens of local layers/blocks while keeping the memory footprint low."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "1. The overall idea is straightforward and intuitive. \n2. The performance looks impressive.\n3. The representation similarity looks interesting to me."
            },
            "weaknesses": {
                "value": "I have several questions regarding the experimental results and design details in the Question section. Unfortunately, given the current version of the paper, it is not clear why the proposed method works well, what plays the critical role (downsampling in the auxiliary network? shared classifier?) and what is the overhead of the proposed updating rule. I'd be happy to raise my rating if the authors could address those questions during the discussion period, for now, my rating would be 3."
            },
            "questions": {
                "value": "1. It is not clear when the authors say: \"when more layers of the primary network are selected into the auxiliary networks\". Does that mean the weights are shared between layers in the primary network and the auxiliary network? Or just the initialization is shared, or just the architecture is shared?\n\n2. Based on 1, My guess is that other layers are not shared based on the last paragraph of Sec 3.2 and the last sentence in A.2 in the supplementary. In this case, it is not clear why Unif., Seq., Repe. can show a large difference even for d = 2 in Table 5. Does that mean downsampling in the auxiliary network is critical? If the authors want to claim the importance of architectural bias, I believe the missing results are C1\u00d71/C3x3 with downsampling, which should not be considered architectural bias from my perspective. The authors should also show C3x3 performs equally well with the VGG network. The authors should also ablate to what circumstances, when we alter the auxiliary architecture presented in Table 1 in the supplementary, the AugLocal performance degraded and performed similarly to other baselines, simply attributing the performance gain to architecture bias is not convincing as the learning is free-form if the auxiliary network weights are not shared with the primary network.\n\n3. Table 4 shows weird results; how did the authors get the 157.12 GB GPU memory results as there is no single GPU that can handle it AFAIK? The ResNet-110 result looks like an outlier. Can the authors elaborate on why it shows significantly better memory saving while the architecture is similar to other cases (ResNet-32/34/101)?\n\n4. It would be great to show FLOPs comparison between local learning and end-to-end learning instead of just showing FLOPs reduction in Figure 5. Also, gamma is introduced in eq2 but never used in the following text, making it confusing about how it guides the rule design."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "5: marginally below the acceptance threshold"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission4485/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission4485/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission4485/Reviewer_SLqf"
                ]
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission4485/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698736740294,
        "cdate": 1698736740294,
        "tmdate": 1700793854035,
        "mdate": 1700793854035,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "r75rlYuaFi",
        "forum": "Qbf1hy8b7m",
        "replyto": "Qbf1hy8b7m",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission4485/Reviewer_BcQr"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission4485/Reviewer_BcQr"
        ],
        "content": {
            "summary": {
                "value": "This paper presents AugLocal, a local learning method for neural networks that alleviates the backward locking problem of traditional back-prop (end-to-end) training. Another benefit of local learning is the reduced peak GPU memory utilization, as activation storage can be reused between different local layers or blocks. In AugLocal, the size of the auxiliary network attached to each local layer is controlled by how far the layer is from the output layer. This facilitates the design of auxiliary networks. The idea behind AugLocal is that gradients obtained from auxiliary networks \"emulate\" gradients from subsequent layers (in traditional back-prop), hence the intuition presented in this work that earlier layers require deeper auxiliary networks. The authors benchmark AugLocal against different local learning methods, as well as back-prop, on various CNNs and different datasets."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "- This work tackles an important problem: local learning in neural networks. \n- The paper is well-written, and ideas are clearly presented.\n- The proposed idea is simple, yet effective. The idea of using gradually smaller auxiliary networks in local learning seems novel to me\n- The experimental results, despite focusing on CNNs, are decently thorough, and back the authors claims."
            },
            "weaknesses": {
                "value": "- In Table 1, the authors can provide a more complete picture by including some complexity measure (similar to what is reported in Table 2 in Appendix). What is the wall-clock time of all of these methods? I suspect that AugLocal will incur some significant overhead due to having deeper auxiliary networks.\n- The theoretical speedup of (d+1)/(L+1) is not very informative, as it assumes an ideal setting where all local modules can be run in parallel, which is not trivial to implement. The point of local learning is save GPU memory, which I suspect comes at the expense of extra time. It is also worth comparing AugLocal with back-prop with gradient checkpointing.\n\n\nMinor comments:\n- eq(2) is a bit misleading, it implies that only the auxiliary network parameters $\\Phi^l$ impact the local losses, and the final loss is a function of all network parameters."
            },
            "questions": {
                "value": "- In the ImageNet experiments, the DGL numbers correspond to a much waker end-to-end baseline (66.6 vs 71.59 in this paper), thus making DGL seem weaker than it actually is. The authors already reproduced the DGL numbers (as well as other methods) for the other datasets to ensure a fair comparison. Why haven't the authors done the same for ImageNet?\n- What would the GPU memory savings look like with varying batch sizes, does it require a large BS of 1024 to show significant improvement?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 4,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission4485/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698964599181,
        "cdate": 1698964599181,
        "tmdate": 1699636424288,
        "mdate": 1699636424288,
        "license": "CC BY 4.0",
        "version": 2
    }
]