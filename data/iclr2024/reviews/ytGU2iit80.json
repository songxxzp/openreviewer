[
    {
        "id": "JrTCMTQhPR",
        "forum": "ytGU2iit80",
        "replyto": "ytGU2iit80",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission7598/Reviewer_Xqgc"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission7598/Reviewer_Xqgc"
        ],
        "content": {
            "summary": {
                "value": "In this paper, the authors propose a new method called Fourier NODEs (FNODEs). A key novelty of this work is that Fourier analysis is employed to estimate both temporal and spatial gradients of the noisy data. The estimated spatial gradients are fed into a neural network trained to estimate temporal gradients to assist the prediction of the temporal signals. In addition, the trained neural network could generate more data points through an ODE solver (like up-sampling). Comparisons with state-of-the-art methods showed efficacy of the proposed method regarding training time, accuracy and robustness."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "1. The proposed method combines Fourier analysis with NODE and utilizes spatial gradients to improve temporal gradient estimations which looks novel.\n2. By utilizing spatial gradients, it could up-sample training data and augment existing training data for model training (potentially improve model performance with more training data).\n3. Experimental results look promising."
            },
            "weaknesses": {
                "value": "1. Novelty may be limited due to existing work. The authors may want to cite the following paper which also combines Fourier analysis with NODE and clarify their contributions: Hybrid Physical-Neural ODEs for Fast N-body Simulations. \n2. Regarding architecture of the whole system, it\u2019s not clear to me how the feedback loop works. For example, how the predicted data as feedback are combined with the observed data and used by the Fourier analysis? Why not encode the prediction error from ODESolver in the loss function of the neural network F_{\\theta} as shown in the diagram of Fig. 1? The authors are encouraged to illustrate more on the motivations and methodology."
            },
            "questions": {
                "value": "1. In Sec. 1, the authors claim that Fourier analysis provides theoretical guarantees for accurately estimating the gradient flows of dynamical systems. Are there any citations to support this claim? Also are there any restrictions of the dynamical systems to make this claim work? e.g. continuity, differentiability and stochasticity of the dynamic system?\n2. What\u2019s the general guidance on selection of the cutoff in approximation of spatial gradients of PDEs. Same question goes to the control function u. For example, how to choose hyper parameters of the Gaussian random fields?\n3. In the evaluation section, baseline methods are limited to ODE based methods. Would it make sense to compare it with state-of-the-art time series prediction methods like transformer, n-beats and deepar?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "5: marginally below the acceptance threshold"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission7598/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698208239938,
        "cdate": 1698208239938,
        "tmdate": 1699636921124,
        "mdate": 1699636921124,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "sGn9J6ielN",
        "forum": "ytGU2iit80",
        "replyto": "ytGU2iit80",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission7598/Reviewer_533P"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission7598/Reviewer_533P"
        ],
        "content": {
            "summary": {
                "value": "The authors introduce a method to model forced time-dependent ODEs/PDEs. The method involves approximating the spatial and temporal derivatives with discrete Fourier transforms (DFTs) and use the applicable spatial derivatives as features to predict the temporal dynamics. The authors also use a data augmentation scheme to handle irregularly sampled data. Results are compared to baseline models for several common ODE/PDE benchmarks."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "1 poor"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "* Some level of novelty in using DFT to approximate derivatives and data augmentation to address data sparsity/irregularity.\n* Experiments performed over a variety of systems."
            },
            "weaknesses": {
                "value": "* Clarity is really lacking - in general I feel that many important details are either explained in a confusing way or simply glossed over. I try to ask some of the questions below but overall they held me back from understanding the idea quite a bit.\n* It is unclear how the model performs over longer periods of time, especially for the more complex benchmarks in KS and NS. This is what truly shows if the proposed model is competitive with existing methods.\n* The baselines do not seem very competitive. The setup is not perfectly aligned but one should be able to adapt and compare baselines in [1].\n\n\nReferences:\n\n[1] Stachenfeld, Kimberly, et al. \"Learned coarse models for efficient turbulence simulation.\" arXiv preprint arXiv:2112.15275 (2021)."
            },
            "questions": {
                "value": "* How do you decide what spatial derivatives to pass as arguments to your model? How robust is the model if you do not get the terms exactly right?\n* Does your training loss only involve predicting a single-step forward in time (based on equation 5)? Recent results (see [1] for example) suggest that using multiple steps improve performance significantly. This is also what the original NODE entails (computes multi-step error using continuous adjoint).\n* For the data augmentation scheme, do you iteratively update the augmented data at every training step? The quality of the augmented data would obviously not be very good at the beginning of training. Do you take any special measures to account for such?\n* Using DFT to approximate derivatives instead of finite difference obviously has its convenience but also comes with drawbacks. One of the more notable ones is the requirement that the underlying function should be smooth and periodic. It does not seem the periodic assumption is satisfied in your applications, which may lead to approximation errors (i.e. Gibbs phenomenon), especially at the boundaries. Do you use any strategies to address this?\n* Are you only using DFT to compute derivatives but transform everything back in the real space when computing loss? This seems to be what's indicated in the text but then I see (page 6, fifth line from the bottom) reference to complex valued spatial derivatives in Fourier space.\n* What is your exact definition of the error? Are you averaging everywhere (i.e. time, dimensions)? It would also be useful to show how the error accumulates as you roll out the model for longer times.\n* How does your models do in terms of long-term error and stability? \n* Figure 5 - equation (12) is not present in the text\n\nReferences:\n\n[1] Dmitrii Kochkov, Jamie A. Smith, Ayya Alieva, Qing Wang, Michael P. Brenner, and Stephan Hoyer. Machine learning\u2013accelerated computational fluid dynamics. Proceedings of the National Academy of Sciences, 118 (21):e2101784118, 2021."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission7598/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission7598/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission7598/Reviewer_533P"
                ]
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission7598/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698698890916,
        "cdate": 1698698890916,
        "tmdate": 1699636921011,
        "mdate": 1699636921011,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "RccatUrYbg",
        "forum": "ytGU2iit80",
        "replyto": "ytGU2iit80",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission7598/Reviewer_PMhg"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission7598/Reviewer_PMhg"
        ],
        "content": {
            "summary": {
                "value": "This paper introduced a way to improve the modeling of differential equations/dynamical systems with neural netwok. More precisely, it focuses on improving Neural Ordinary Differential Equation (Neural ODE), one of the popular frameworks in deep learning for dynamical systems in recent years. However, the training of Neural ODE is heavily computationally with the bottleneck in the backpropagation through nummerical ODE solver, and also often demonstrates undesired effects. To solve this, the authors of this work propose to incorporate Fourier analysis to approximate the ODE/PDE gradients, then use l2 loss to train this approximation with a parameterized neural network. The latter loss is taken from flow matching, a recent framework that shows promises in the generative modeling context. Evaluations on toy datasets show the gains in (decreased) training time and better MSE compared to Neural ODE."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "1 poor"
            },
            "strengths": {
                "value": "The paper is in general based on solid theory and well-written."
            },
            "weaknesses": {
                "value": "* I have concern about the novelty of this paper: it is rather a combination of the flow matching framework for functional/time series data, with the closed-form velocity approximated by discrete Fourier transform.\n* Since this leans on more methodological/empirical paper, I will comment more on the evaluation part. I do not think the authors have done a thorough literature survey. For example the related works/baselines comparison lack Physical Informed neural network [1], a rather popular framework that have performed some of the very similar tasks presented in the current paper. I am aware that for the modeling of time series/PDE. there are also score-based diffusion models that show competitive results, such as [2] and [3]. \n* To continue on the empirical evaluation, I do not understand why the authors did not include benchmarks on some of the realistic datasets, such as modeling time series. This is one of the main motivation of the paper, and I think stopping the evaluation at generated data in section 4.3 is inadequate.\n\n[1] Raissi, Maziar, Paris Perdikaris, and George E. Karniadakis. \"Physics-informed neural networks: A deep learning framework for solving forward and inverse problems involving nonlinear partial differential equations.\" Journal of Computational physics 378 (2019): 686-707.\n\n[2] Li, Y., Lu, X., Wang, Y., & Dou, D. (2022). Generative time series forecasting with diffusion, denoise, and disentanglement. Advances in Neural Information Processing Systems, 35, 23009-23022.\n\n[3] Apte, R., Nidhan, S., Ranade, R., & Pathak, J. (2023). Diffusion model based data generation for partial differential equations. arXiv preprint arXiv:2306.11075."
            },
            "questions": {
                "value": "See weaknesses."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission7598/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698757448152,
        "cdate": 1698757448152,
        "tmdate": 1699636920907,
        "mdate": 1699636920907,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "ueaxQ7ss1P",
        "forum": "ytGU2iit80",
        "replyto": "ytGU2iit80",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission7598/Reviewer_X9WB"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission7598/Reviewer_X9WB"
        ],
        "content": {
            "summary": {
                "value": "The authors present a method that leverages flow matching loss for the learning of dynamical systems. Notably, the proposed algorithm does not require simulation, leading to a significant reduction in computational cost when modeling dynamical systems. The authors also introduce a novel augmentation strategy."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "- The paper is well-written.\n- The idea is simple and clear. It is supported by experimental results."
            },
            "weaknesses": {
                "value": "- Examples in the experimental part are a bit synthetic."
            },
            "questions": {
                "value": "1. Have you conducted an ablation study for the augmentation strategy?\n2. What was the reason behind introducing the control functions? Does it simply add to the complexity of potential tasks?\n3. Is the method applicable if the requirements in Theorem 1 are not satisfied? \n4. Have you tried to apply this algorithm to real-life time series that are sampled from an unknown equation?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "8: accept, good paper"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission7598/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission7598/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission7598/Reviewer_X9WB"
                ]
            }
        },
        "number": 4,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission7598/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698804999750,
        "cdate": 1698804999750,
        "tmdate": 1699636920648,
        "mdate": 1699636920648,
        "license": "CC BY 4.0",
        "version": 2
    }
]