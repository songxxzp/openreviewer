[
    {
        "id": "3hs7aeN0Am",
        "forum": "SCQfYpdoGE",
        "replyto": "SCQfYpdoGE",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission5341/Reviewer_2QxH"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission5341/Reviewer_2QxH"
        ],
        "content": {
            "summary": {
                "value": "This paper introduces the \"recourse verification\" task, aimed at identifying models that assign fixed predictions, and proposes methods to assess whether a model can provide actionable recourses based on reachable sets."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "4 excellent"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "- The paper is well-written and easy to follow.\n- The motivation and justification for fixed points and regions are sound.\n- The experiments demonstrate an improvement in the feasibility of recourse across published datasets."
            },
            "weaknesses": {
                "value": "Weaknesses:\n- I am unsure about the paper's significant contribution. The primary focus appears to be on describing a search algorithm to confirm the existence of a feasible action for a user. \n- My major concern regarding this paper is its inapplicability to continuous features, as claimed by the authors. Is it possible to extend the MIP formulation to MILP formulation to incorporate continuous features?\n- The paper compares the proposed method to two conventional baselines in terms of improving recourse feasibility. Recently, there have been some papers potentially improving feasibility, such as [1] and [2]. I suggest comparing with them."
            },
            "questions": {
                "value": "- The optimization problem (2) aims to optimize a constant value of 1. What does this objective imply? Does this optimization problem solely seek to find all feasible actions (feasible recourses)?\n- Is there a relationship between two reachable sets? For instance, if $x_1$ is within the reachable set of $x$ and $x_2$ is within the reachable set of $x_1$, is it guaranteed that $x_2$ is also within the reachable set of $x$?\n\n**References**:\n\n[1] Nguyen, Duy, Ngoc Bui, and Viet Anh Nguyen. \"Feasible Recourse Plan via Diverse Interpolation.\" International Conference on Artificial Intelligence and Statistics, 2023.\n\n[2] Rafael Poyiadzi, Kacper Sokol, Raul Santos-Rodriguez, Tijl De Bie, and Peter Flach. Face: Feasible and Actionable counterfactual explanations. In Proceedings of the AAAI/ACM Conference on AI, Ethics, and Society, 2020."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "5: marginally below the acceptance threshold"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission5341/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission5341/Reviewer_2QxH",
                    "ICLR.cc/2024/Conference/Submission5341/Senior_Area_Chairs"
                ]
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission5341/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698504653779,
        "cdate": 1698504653779,
        "tmdate": 1700554440795,
        "mdate": 1700554440795,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "OYknBUuTcl",
        "forum": "SCQfYpdoGE",
        "replyto": "SCQfYpdoGE",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission5341/Reviewer_jEod"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission5341/Reviewer_jEod"
        ],
        "content": {
            "summary": {
                "value": "This paper studies recourse verification of machine learning models. Recourse verification is an important aspect of algorithmic recourse, which seeks to identify models that assign predictions without any actionable recourse for the decision subject. Ensuring the existence of actionable recourse is essential in applications affecting people\u2019s lives and livelihoods, such as job hiring, loan approvals, and welfare programs. A model that offers no recourse for its decisions may permanently exclude subjects from accessing these benefits without offering a path to eligibility. Existing research largely focuses on recourse provision \u2014 providing individuals with actionable recourse \u2014 but only a few works study the infeasibility of providing recourse.\n\nThis work proposes an approach for recourse verification under actionability constraints based on reachable sets. A reachable set is a collection of feature vectors that can be reached from a given input using a set of allowed actions. The proposed method certifies the existence or non-existence of recourses by querying the model on every point in the reachable set or an approximation of this set. If the method finds a subset of the reachable set that contains a recourse, it certifies the existence of recourse. Similarly, if it cannot find a recourse in a superset of the reachable set, it certifies the infeasibility of providing recourse. If it cannot certify either of the above, it abstains."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "1. The paper studies an important problem that has not been explored well in the literature. It makes a significant contribution in this area.\n2. The paper is well-written and easy to follow.\n3. It is claimed that the proposed method does not require any assumption on the prediction model. However, the model might need to satisfy some conditions for the decomposition approach, which is essential when the problem dimensionality is high. See the weaknesses section for more details."
            },
            "weaknesses": {
                "value": "1. The recourse verification process evaluates every point in the reachable set, which could be time-consuming if the problem dimensionality is high. The paper seeks to address this issue by a decomposition approach that partitions the action set using features that can be altered independently. However, this approach has not been explained well in the paper.\n2. It is unclear how the separable features are identified. What role does the prediction model play in the identification of these features?\n3. It is unclear what conditions the prediction model must satisfy for the features to be separable. For instance, the verification step may return an infeasibility certificate in partitions A_1(x) and A_2(x), but actionable recourses may still exist in the Cartesian product A_1(x) X A_2(x) of the two sets.\n\nMinor comments:\n1. Increasing the font size in Tables 1 and 2 could help improve readability.\n2. It seems like a word is missing in the following sentences:\n    1.  Pg. 1 \u2014 \u201cIn fraud detection and content moderation, for example, models should assign fixed [predictions?] to prevent malicious actors from\u2026\u201d\n    2. Pg. 3 \u2014 \u201cWe can elicit these constraints from users in natural language and convert them to expressions that can [be] embedded into an optimization problem.\u201d\n3. Figure 3 is a bit confusing and could be made clearer. The x-axis has no label. It seems that the size of the reachable set *grows* rapidly under the decomposition approach compared to brute force, which is contrary to the text. If I understand correctly, the purpose of using decomposition is to reduce the number of points to verify."
            },
            "questions": {
                "value": "1. Could this approach be extended to certify the existence or non-existence of an abundance of recourse options instead of just one? A single recourse option might not be feasible for everybody, and having multiple recourses could provide more options to people. It might be possible to certify statements like \"20% of the actions in the action set would lead to a positive outcome\" by querying a random subset of the action set.\n2. Different actions may have different costs for the subjects. For instance, it might be easier for a loan applicant to increase their credit score than their income. Could we incorporate costs for the actions and certify the existence of a low-cost recourse?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "8: accept, good paper"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission5341/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission5341/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission5341/Reviewer_jEod"
                ]
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission5341/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698712059923,
        "cdate": 1698712059923,
        "tmdate": 1700701095512,
        "mdate": 1700701095512,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "lRN5IsB1DH",
        "forum": "SCQfYpdoGE",
        "replyto": "SCQfYpdoGE",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission5341/Reviewer_z4uU"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission5341/Reviewer_z4uU"
        ],
        "content": {
            "summary": {
                "value": "This work introduces the recourse verification: to verify if the prediction is desirable for any actions over the inputs, which is modeled as a formal verification problem given the trained model and input specifications. The paper gives examples using the proposed reachable sets."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "- The idea of verification seems to be novel in the sense of recourse and the motivation is clear.\n- The formulation is easy to follow."
            },
            "weaknesses": {
                "value": "- My biggest concern lies in the lack of contribution in the verification methods, which directly follow the basic idea of formal verification but seem not to dive deeper into the optimization algorithms or target the specific challenge in the recourse setting.\n- When introducing reachable sets, more details are expected to be discussed, i.e. continuous or discrete, $\\ell_p$-norm bound ball. The verification seems to be sound but incomplete, and it is expected to be compared to more off-the-shelf reachibility-based verification methods in [1].\n- Although experiments show the prediction without recourse and current methods fail to detect them, there are no other baselines of recourse verification for the comparison of tightness and time efficiency. Also, the experiment part is not well organized in the sense of merging section 4 and 5 as experiments.\n\n[1] Liu, C., Arnon, T., Lazarus, C., Strong, C., Barrett, C., & Kochenderfer, M. J. (2021). Algorithms for verifying deep neural networks. *Foundations and Trends\u00ae in Optimization*, *4*(3-4), 244-404."
            },
            "questions": {
                "value": "See weakness"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "5: marginally below the acceptance threshold"
            },
            "confidence": {
                "value": "2: You are willing to defend your assessment, but it is quite likely that you did not understand the central parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission5341/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission5341/Reviewer_z4uU",
                    "ICLR.cc/2024/Conference/Submission5341/Senior_Area_Chairs"
                ]
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission5341/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698811758853,
        "cdate": 1698811758853,
        "tmdate": 1700712501310,
        "mdate": 1700712501310,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "m1Umq9nHHF",
        "forum": "SCQfYpdoGE",
        "replyto": "SCQfYpdoGE",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission5341/Reviewer_fbZh"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission5341/Reviewer_fbZh"
        ],
        "content": {
            "summary": {
                "value": "The authors present a new idea, recourse verification, certifying if a predictive model guarantees actionable items for users to change the prediction outcome. Different from the typical algorithmic recourse problem where the goal is to find actionable items with minimum cost, this work aims at ensuring that users are not mistakenly precluded from recourse. In the paper, the authors first establish fundamental concepts and theorems for this new topic. Afterwards, they propose \"reachable set\" for enumerating plausible feature values after actions. With proper decomposition of feature space as the author propose, feasibility of recourse can be effectively tested. Finally, the authors conduct evaluations on real-world datasets and confirm the efficacy of verification."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "1. Recourse verification as a new research topic seems intriguing and impactful. It makes sense that some predictive models can accidentally limit availability of recourse and thereby hinder the fairness. Upon this important issue, the authors establish a good foundation for follow-up research and may also benefit researchers working on the typical algorithmic recourse problems.\n2. The proposed algorithms seem reasonable and the step of implementation is clear. Also, the effectiveness is verified in the experiments.\n3. The writing is overall clear and easy to follow. The details of experiments are provided. The limitations of this work are also adequately discussed."
            },
            "weaknesses": {
                "value": "Certain parts of the proposed method may still be in early stages of development, which may require further refinement to guarantee its practical value. For example, as discussed in the limitation section, the verification algorithm does not work on continuous features. More concerns of mine are summarized in the Questions section below."
            },
            "questions": {
                "value": "1. It is unclear how often does the undesired preclusion occur in practice. In particular, continuous features are quite common and may trivially avoid preclusion if the capacity of the predictive model is not constrained. Even if we focus on discrete features only, I am still not sure if undesired preclusion can frequently happen. Let us assume users A and B who pass and got rejected respectively by a predictive model. If we ignore the cost, an easy recourse for A can be the difference between A and B in the feature space. If there are more users getting approved by the model, more candidates of recourse are available for A's actions; namely, it is more unlikely that we find no proper recourse for user A when data size grows. If the diversity of the approved users is so limited that no recourse can be found for user A, I wonder if the preclusion is then more like intended (e.g., setting up strict rules) instead of being an accident.\n2. Following question 1, I am wondering if it is reasonable to adopt the idea of cost constraint in recourse provision to reduce the reachable set? For example, we certify if a model is not \"fixed\" given an upper bound of cost.\n3. How do we check the quality of a recourse verification algorithm? Specifically, if we employ two recourse verification methods and get inconsistent results, how do we decide which one is better?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission5341/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission5341/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission5341/Reviewer_fbZh"
                ]
            }
        },
        "number": 4,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission5341/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698815288943,
        "cdate": 1698815288943,
        "tmdate": 1699636536844,
        "mdate": 1699636536844,
        "license": "CC BY 4.0",
        "version": 2
    }
]