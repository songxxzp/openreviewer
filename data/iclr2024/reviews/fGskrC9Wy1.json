[
    {
        "id": "bP4yF9YfjT",
        "forum": "fGskrC9Wy1",
        "replyto": "fGskrC9Wy1",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission9308/Reviewer_ueko"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission9308/Reviewer_ueko"
        ],
        "content": {
            "summary": {
                "value": "The authors propose a small modification to the standard LSTM model by adding the ELU activation function before the sigmoid and tanh activation functions.\n\nExperiments are performed on three small datasets: IMDB sentiment classification, Permuted Sequential MNIST dataset, Reuters Newswire classification dataset.\n\nThe models in the experiments are tiny (hidden size of 2, 4 or 8 for one experiment).\n\nComparisons are done to the vanilla LSTM and GRU only."
            },
            "soundness": {
                "value": "1 poor"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "1 poor"
            },
            "strengths": {
                "value": "Introduces a new LSTM variant which could potentially be better."
            },
            "weaknesses": {
                "value": "- The model sizes in the experiments are way too small to be relevant. Maybe you don't need larger models for these tasks, but then you should choose other tasks.\n- More common tasks are not used. When introducing a new LSTM variant, the most canonical task would be language modeling, e.g. enwik8 or enwik9 or so.\n- No comparison to current state-of-the-art results on the specific tasks. I'm quite sure (without checking) that the presented models are far behind.\n- No comparison to Transformer models. Currently, the standard models are Transformer models, and when introducing any new model (even a new LSTM variant), you should compare to Transformer models as well. Why would I use this LSTM variant over the Transformer? The paper should tell me.\n- It is being talked about computing time, but I don't actually see that being measured in the experiments. I would like to see a plot computing time vs accuracy. Number of epochs is not so useful, because as you point out, the vanilla LSTM is faster to train. (Note that the Transformer is even much faster to train, so that is why this comparison is also important here.)\n- There is no code to reproduce the experiments?\n- There is not much analysis.\n- The motivation is weak. Why not e.g. add multiple LSTM layers, instead of adding layers inside the LSTM?"
            },
            "questions": {
                "value": "From abstract:\n\n> Numerous experiments have shown that adding more complexity to neural network architectures may lead to a significant increase in performance that outweighs the incurred costs of an upgraded structure.\n\nRemove that. That is not really adding any information. Let the experiments just speak for themselves. Describe here in the abstract more on how \"significant\" the performance increase actually is.\n\nIs this compared to Transformer or other recent SOTA models?\n\nAbstract: \"three empirical tasks\" - it should say more about what tasks actually, and also give numbers on how much performance increases.\n\n> Therefore, Boosted LSTM requires more resources to run, both memory and computational time- wise and its performance must justify the additional commitment.\n\nSo, is the computation time also measured? For given computation time, what model reaches what performance?\n\nWhile the modification to the LSTM is described, which leads to the Boosted LSTM, the model itself is not described at all. I was initially thinking that this was used for language modeling, i.e. text as input via an embedding, then one or multiple Boosted LSTM layers, and then a softmax on top. Maybe with residual connections or so. But after looking at the experiments, this does not seem to be the case. But I don't find the actual models described in detail.\n\n> The model consisted of an embedding layer, an appropriate LSTM layer, a dense layer of 8 units with a ReLU activation function, and a final dense layer with 1 unit and a sigmoid activation function.\n\nOk. Is there any reference why this type of model? What dimensions for the embedding?\n\n> Tests were performed for models with 2, 4, and 8 hidden units.\n\nIs this a joke?\n\nIf this task (I don't know this task) requires only such tiny models for good performance, then this task is really not relevant. You should choose some standard big benchmark, not a toy benchmark. E.g. take enwik8 or so for language modeling.\n\nStandard realistic (and relevant) model sizes would be 512 to 2048 hidden dimensions, and having multiple layers, starting maybe with 3, up to 10, or maybe also going deeper up to 20 (if you have residual connections).\n\nFor MNIST, I don't see the model being described. How many layers?\n\n> Hidden units of 32, 64, and 128 sizes were used during the experiments.\n\nIt's also quite small.\n\nReuters Newswire:\n\n> hidden units (8, 16, 32)\n\nThen this is also not really relevant.\n\nCode published?\n\nCompared to SOTA results?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "details_of_ethics_concerns": {
                "value": "-"
            },
            "rating": {
                "value": "1: strong reject"
            },
            "confidence": {
                "value": "5: You are absolutely certain about your assessment. You are very familiar with the related work and checked the math/other details carefully."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission9308/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698308293090,
        "cdate": 1698308293090,
        "tmdate": 1699637171560,
        "mdate": 1699637171560,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "uXTSFHpMlV",
        "forum": "fGskrC9Wy1",
        "replyto": "fGskrC9Wy1",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission9308/Reviewer_xgqM"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission9308/Reviewer_xgqM"
        ],
        "content": {
            "summary": {
                "value": "In this paper, the authors propose a Boosted LSTM model created by adding layers inside the LSTM unit to optimize the model by enhancing its memory and reasoning capabilities and evaluated the performance of different versions of Boosted LSTM architectures using three empirical tasks. The experiments have shown that the Boosted LSTM unit performs better than the similar models created from the simple LSTM units while often taking fewer epochs to achieve similar or better results."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "The idea is simple and the paper is esay to follow.\nThe paper provided training details and also the training curves for the newly proposed models. And the author did ablation study to compare modifying different parts of the original LSTM model."
            },
            "weaknesses": {
                "value": "1) Baseline model and new models have different number of parameters and uses the same regulation parameters during training, so the comparison might not be fair.\n2) The boosted LSTM model looks very similar to the original LSTM model, so I feel it's not a big improvement.\n3) The tested datasets are small."
            },
            "questions": {
                "value": "Have you tried different regulation parameters can have a big impact on the model performance, and did you tune the parameter for the baseline models?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "2: You are willing to defend your assessment, but it is quite likely that you did not understand the central parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission9308/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698808106998,
        "cdate": 1698808106998,
        "tmdate": 1699637171401,
        "mdate": 1699637171401,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "WOfalNTNjv",
        "forum": "fGskrC9Wy1",
        "replyto": "fGskrC9Wy1",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission9308/Reviewer_8bpo"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission9308/Reviewer_8bpo"
        ],
        "content": {
            "summary": {
                "value": "This paper introduces Boosted Long Short-Term Memory (Boosted LSTM) units. Compared to conventional LSTM units with forget gate, Boosted LSTM units contain an additional fully-connected hidden layer before the LSTM gate activations and the LSTM cell input. The paper evaluated different activation functions for the additional fully-connected hidden layer and the application of this hidden layer on all as well as individual LSTM gates and cell input. Three tasks, 2 word sequence and 1 image character recognition, were used for evaluation of the proposed units. These experiments showed a better performance of the Boosted LSTM, compared to the conventional LSTM units with forget gate, when employing the same number of LSTM units."
            },
            "soundness": {
                "value": "1 poor"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "## Originality\n1. The proposed Boosted LSTM unit was, to my knowledge, not published before. \n\n## Quality\n2. The paper uses 3 real-world datasets to assess the performance of the Boosted LSTM.\n3. Both final results and training behavior are reported in the paper.\n4. Different versions of Boosted LSTM (hidden layer before all as well as individual LSTM inlets) are investigated.\n5. A comparison of complexity between vanilla LSTM and Boosted LSTM is performed based on O-notation.\n\n## Clarity\n6. The proposed idea in the paper is easy to follow.\n\n## Significance\n7. If the Boosted LSTM can provide substantial performance improvements, this paper would be of high relevance to the RNN community. This would make it significant. However, at this point the extent of the experimental analysis, the setup, and the results are not sufficiently convincing in my opinion."
            },
            "weaknesses": {
                "value": "## Originality\n8. In the 1997 LSTM paper [1], Hochreiter et al already mention the potential of addition of hidden units and more flexible changes to the LSTM blocks (paragraphs *Network topology*, *Memory cell blocks*). Additionally, as also pointed out by the authors, various modifications to LSTM units were made since their introduction. The addition of hidden layers in the LSTM block is, from my point of view, not a very original concept. The paper would gain in originality if a strong empirical analysis was performed, which in my opinion, is not yet the case.\n\n## Quality\n9. A major weakness in the comparison of LSTM architectures in the paper is that there is no fair comparison w.r.t. trainable parameters or model complexity. One can observe that the model performance increases with the number of used units for vanilla and Boosted LSTM in the reported tables. This indicates that model complexity is a major driver of predictive performance. To allow for a fair comparison, the experimental setup would, in my opinion, need to contain:\n    1. Vanilla LSTM versions with increased numbers of LSTM units, such that the trainable parameters are close to the Boosted LSTM version.\n    2. A comparison to a model that contains a fully-connected hidden layer before the Vanilla LSTM. This would be equivalent to having shared weights in the elu units in Fig1b.\n    3. Same as the previous point but with a fully-connected hidden layer after the Vanilla LSTM.\n10. The reported results are not very convincing in their current form. Relying on only three datasets in an empirically motivated publication would only be convincing to me if the results were significantly better for Boosted LSTM compared to Vanilla LSTM. I would strongly suggest to employ a statistical test to report whether the performance improvement is significant.\n11. In my opinion, the paper would strongly profit from a broader investigations of modifications and hyperparameters:\n    1. I understand that the paper investigates modifications by introducing fully-connected hidden layers. However, this raises the question of the impact of multiple stacked hidden layers. Especially for the SELU activation function, which could, according to it\u2019s theory, profit from larger and deeper networks.\n    2. If I understand correctly, only the RMSprop optimizer was used. I would strongly suggest to investigate SGD with momentum and AdamW, as the choice of optimizer might impact the training of more complex architectures like this.\n\n## Clarity\n12. The authors state that \u201cThis allowed us to test different capabilities of the architecture while maintaining focus on the text inference tasks.\u201d.  I found this statement confusing. The focus on text inference tasks was not stated or motivated as focus before, why bring this up here? Furthermore, Permuted MNIST is not text inference but a vision task.\n13. The \u201cembedding layer\u201d used is not described in detail. A figure depicting the over-all architecture would also be helpful.\n14. How is early stopping performed here?\n15. Fig4 would be very interesting but unfortunately is hardly readable due to over-plotting. I would suggest to rework this figure.\n16. \u201cOther hyperparameters were adapted accordingly to the dataset considered, taking the Vanilla LSTM performance as a reference point for their refinement.\u201d - If I understand correctly, this results in a potential underestimation of the Boosted LSTM performance. If so, I would suggest to explicitly state this.\n17. \u201cBoth after the embedding layer and after the LSTM layer, 0.25 dropouts were used,\u201d - which type of dropout? Are the remaining values rescaled?\n18. Does the l2 regularization also affect the elu layers?\n19. Are the test sets balanced to warrant a comparison via Accuracy and loss?\n20. \u201cTests were performed for models with 2, 4, and 8 hidden units.\u201d - At this point in the paper, it is unclear whether \u201chidden units\u201d refers to LSTM units or other units.\n21. Since \u201cBoosting\u201d already has different connotations in ML, I would suggest to change the method name. This is just my personal opinion, tough.\n\n## Significance\n22. If the Boosted LSTM can provide substantial performance improvements, this paper would be of high relevance to the RNN community and would make this a significant contribution. However, at this point the experimental analysis and results are not sufficiently convincing in my opinion.\n\n## References\n\n[1] Sepp Hochreiter and Ju\u0308rgen Schmidhuber. Long Short-Term Memory. Neural Computation, 9 (8):1735\u20131780, 11 1997. ISSN 0899-7667. doi: 10.1162/neco.1997.9.8.1735. URL https://doi.org/10.1162/neco.1997.9.8.1735.\n\n[2] Klaus Greff, Rupesh K. Srivastava, Jan Koutnik, Bas R. Steunebrink, and Jurgen Schmidhuber. LSTM: A search space odyssey. IEEE Transactions on Neural Networks and Learning Systems, 28(10):2222\u20132232, oct 2017. doi: 10.1109/tnnls.2016.2582924. URL https://doi.org/10.1109%2Ftnnls.2016.2582924."
            },
            "questions": {
                "value": "The main limitations of the paper in my opinion are points 9. and 10. above. Other questions to the authors are listed in the previous sections."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission9308/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698830423354,
        "cdate": 1698830423354,
        "tmdate": 1699637171264,
        "mdate": 1699637171264,
        "license": "CC BY 4.0",
        "version": 2
    }
]