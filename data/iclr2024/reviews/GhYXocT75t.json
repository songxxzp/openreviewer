[
    {
        "id": "B8FQpUVaWZ",
        "forum": "GhYXocT75t",
        "replyto": "GhYXocT75t",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission4976/Reviewer_nUu4"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission4976/Reviewer_nUu4"
        ],
        "content": {
            "summary": {
                "value": "This paper proposes a reasoning verification method for language models for mathematical reasoning tasks. The method, FOBAR, combines forward (self-consistency) and backward chaining for verification. The main idea is to ask the model to go from a candidate answer to a masked quantity in the question. The authors experiment with 3 OpenAI models (text-davinci-003, gpt-3.5-turbo, and gpt-4), finding positive results in 6 mathematical reasoning datasets (including GSM8k). Moreover, an ablation shows that the method is complementary to self-consistency, with the best results coming from a combination of both."
            },
            "soundness": {
                "value": "4 excellent"
            },
            "presentation": {
                "value": "4 excellent"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "The paper is well-written, well-motivated and addresses a current topic - unsupervised verification of chain-of-thought reasoning. The idea is sound for the domain it is proposed for, of mathematical reasoning. Many current mathematical reasoning datasets are amenable to this, as shown by the extensive evaluation.\n\nThe experimental results are quite strong - notably, this almost sets a new state-of-the-art on GSM8k using GPT-4, for instance.\n\nAlso, this idea is likely to \"age well\", i.e. it gets better and more relevant as LLMs become more capable. This is a noticeable feature in the current phase of AIs, where many papers have relevance for at most a few months. In contrast, the idea of backward verification using the LLM itself can potentially be applied to more challenging datasets of the future, as LLMs themselves become more capable of both solving problems and also of producing coherent verification traces."
            },
            "weaknesses": {
                "value": "The main weakness in my opinion is the relatively narrow scope of the method (mathematical reasoning, and even then mostly on more numerical tasks). While I can see the idea being applicable to other domains, it's not obvious how to do so (if there were other compelling examples, e.g. in logical reasoning tasks, I believe the authors would have likely shown some of them). This is one disadvantage compared to Self-Consistency which, while less effective for math as shown here, is very widely applicable.\n\nFor results, I think the paper currently misses a qualitative discussion on what failure modes FOBAR addresses. While the idea is intuitive, it's not obvious where exactly self-consistency fails as a verification method, when FOBAR would be expected to succeed.\n\nOne baseline that is missing is the recent paper from Ling et al, 2023 on \"Deductive Verification of Chain-of-Thought Reasoning\". Their method is a forward verification method, and it would be interesting to see if (1) the gains from FOBAR + Self-Consistency alone are higher than what they get, and (2) if their method could even be a better drop-in replacement for the \"forward\" part in FOBAR. If there are directly comparable numbers on their paper, I'd strongly suggest citing them here. If cost is an issue, even doing this just for AquA, where you have the lowest absolute results and thus most room for improvement, could be already interesting."
            },
            "questions": {
                "value": "A minor point that I'd suggest improving on is the mathematical notation. This is not a barrier to understanding, since the idea is very simple, but will just help standardize papers in the community. For each candidate answer, there is an associated \"correct\" random variable. Equations 2 and 3 describe estimators for this unknown quantity. The estimator's name is what you'd put a hat on, not the variable. I'd indicate forward/backward as subscripts in the estimator's name, rather than as a \"parameter\".\n\nQuestions:\n- Are there any examples where self-consistency fails but FOBAR succeeds that help give insights into the failure modes that FOBAR addresses?\n- When self-consistency fails, is it usually when the model consistently proposes a wrong answer, or proposes a completely divergent set of answers that are then ultimately sampled at random?\n- Do you believe FOBAR can be applied outside of numerical mathematical reasoning tasks? If so, what other tasks could be the closest potential targets?\n- Have you observed cases where backward verification is especially hard, while forward verification is not?\n- Do you have a sense of how often backward verification discards correct solutions? In other words, of the remaining failures, how many are cases where the base model fails to give any correct answer at all, versus cases where one of the answers is correct but ends up discarded by FOBAR?\n * Related to this last question, one suggestion that should be simple to implement is computing an \"oracle verifier\", which takes any correct answer from the model if there is one, and otherwise returns any answer. This might help show the potential to improve results by improving the verifier (as FOBAR/self-consistency try to do), versus cases where we would only see improvements if the base model were to improve."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "8: accept, good paper"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission4976/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission4976/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission4976/Reviewer_nUu4"
                ]
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission4976/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698623378403,
        "cdate": 1698623378403,
        "tmdate": 1699636484981,
        "mdate": 1699636484981,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "1vBkK4Ep8R",
        "forum": "GhYXocT75t",
        "replyto": "GhYXocT75t",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission4976/Reviewer_YtZF"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission4976/Reviewer_YtZF"
        ],
        "content": {
            "summary": {
                "value": "The authors suggest integrating backward reasoning into answer verification to improve the performance of LLMs in mathematical reasoning tasks. In this approach, a number in the original question is masked and replaced with a variable, prompting the LLM to determine the value of x based on a candidate answer. If a candidate answer is correct, the LLM should accurately predict the masked number given this answer. By combining forward and backward reasoning, the authors demonstrate performance improvements across multiple reasoning tasks."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "1. The paper is well-written and easy to follow.\n2. The authors propose using backward reasoning to verify the correctness of the candidate answers.\n3. The authors propose using FOBAR, which combines forward and backward reasoning to select the best answer from all the candidates, and they show improvements in experimental results."
            },
            "weaknesses": {
                "value": "1. Does the proposed backward reasoning have the potential for extension to more complex settings? For some questions, given a candidate number, there can be multiple correct values for the masked number in the question statement. The model may output a number that makes sense, even if it's different from the number in the original question statement. Then, how can we measure the accuracy of the backward reasoning?\n2. Can backward reasoning be more accurate than forward reasoning? If backward reasoning isn't simpler than forward reasoning, poor performance in backward reasoning could negatively impact the accuracy of the final answer."
            },
            "questions": {
                "value": "Recent work proposes using step-by-step verification for answer verification. The paper also suggests backward reasoning, which involves step-by-step analysis. Is there any relationship between backward reasoning and step-by-step verification?\n\nRelated literature for step-by-step verification:\n\nLet's Verify Step by Step\n\nDeductive Verification of Chain-of-Thought Reasoning"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "5: You are absolutely certain about your assessment. You are very familiar with the related work and checked the math/other details carefully."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission4976/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission4976/Reviewer_YtZF",
                    "ICLR.cc/2024/Conference/Submission4976/Senior_Area_Chairs"
                ]
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission4976/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698696298755,
        "cdate": 1698696298755,
        "tmdate": 1699648821316,
        "mdate": 1699648821316,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "uDv3aCL5UM",
        "forum": "GhYXocT75t",
        "replyto": "GhYXocT75t",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission4976/Reviewer_PfVM"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission4976/Reviewer_PfVM"
        ],
        "content": {
            "summary": {
                "value": "The authors propose forward-backward reasoning prompting. Once candidate answers are generated for a query, a number is masked in the query (replacing it with \u201cx\u201d), and the model is asked to predict the masked number given the candidate answer. Specifically, the following template is used: \u201cIf we know the answer to the above question is ${A_c}$, what is the value of unknown variable x?\u201d The prompt is appended to the query with the masked number and candidate generation. The model is more likely to predict the correct value for \u201cx\u201d if the candidate answer ${A_c}$ is correct. \n\nThis method is tested with three LLMs on six arithmetic reasoning tasks. The method is motivated by the observation that improvements from self-consistency, which chooses an answer by majority voting over multiple reasoning chains, plateau as more reasoning chains are sampled. The authors show that their method outperforms forward reasoning alone."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "1 poor"
            },
            "strengths": {
                "value": "The problem is well motivated. The authors show that (average) testing accuracy of self-consistency plateaus as more candidate answers are temperature sampled. \n\nThe proposed verification method is straightforward and clear. The proposed verification template does not need to be generated compared to some of the related works.\n\nThe authors did a great job with the experiments comparing FOBAR to multiple reasonable baselines."
            },
            "weaknesses": {
                "value": "Although the proposed template is straightforward, it would have to be modified according to the tasks on which it\u2019s being applied to. This style of verification always requires something to be predicted. Part of the attractiveness of self-consistency is the fact that it can be applied out-of-the-box to any task; however, the proposed method needs to be modified across tasks and type of responses. \n\nThe method lacks novelty as it bears a strong resemblance to RCoT which tries to re-generate the question conditioned on the candidate response. FOBAR seems essentially as an extension of the factual consistency check within RCoT. Moreover, the marginal difference in results between both methods further supports this perspective.\n\nGiven that the experiments are carried out using OpenAI APIs, which undergo regular updates, it would be advisable to ensure that the baselines are run with the same API snapshots. The slight variance in the scores might be attributed to the differences in the API versions."
            },
            "questions": {
                "value": "How does the backward reasoning compare to verification of answers? E.g. Once you generate multiple candidate answers using forward reasoning, you can ask a model to \u201cverify\u201d the candidate answer given the whole context (Similar to verifier for GSM8K in Cobbe et al 2021)\n\nRegarding my concern about OpenAI APIs getting updated regularly, have the authors used multiple different seeds for the experiments?\n\nGiven some known LLM behaviors and order of chains of arithmetic reasoning, do you think there will be a noticeable difference in performance if only the numbers at the end of the reasoning chains were masked to be predicted compared to numbers at the beginning of the reasoning?\n\nDo you have any insights on how the verification method would perform on non arithmetic reasoning tasks?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission4976/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698847029722,
        "cdate": 1698847029722,
        "tmdate": 1699636484803,
        "mdate": 1699636484803,
        "license": "CC BY 4.0",
        "version": 2
    }
]