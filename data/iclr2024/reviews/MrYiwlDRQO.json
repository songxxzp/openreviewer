[
    {
        "id": "zKZoDlblG6",
        "forum": "MrYiwlDRQO",
        "replyto": "MrYiwlDRQO",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission5247/Reviewer_tVNw"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission5247/Reviewer_tVNw"
        ],
        "content": {
            "summary": {
                "value": "This paper proposes a learning-to-learn framework for personalized FL, where the goal is to learn a global hypernetwork that outputs each clients' personalized model. A shared embedding network is also trained, which produces each client's descriptor based on its local dataset. During inference, any client (even clients that did not participate during training) can send its descriptor to the server and receive the personalized model. This enables each client to obtain the model without further finetuning at test-time. Convergence analysis as well as generalization bound analysis are provided. The effectiveness of proposed idea is also confirmed via experiments."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "1. The idea of taking advantage of learning-to-learn and hypernetworks in personalized FL is interesting.\n\n2. The proposed idea has several advantages. Specifically, any client can obtain its personalized model by conducting only forward propagations.\n\n3. Experimental results show significant performance advantage of the proposed method.\n\n4. Theoretical results are also provided, further strengthening the paper."
            },
            "weaknesses": {
                "value": "1. All experiments are conducted using LeNet-style models, which are relatively outdated. I would like to see the performance on ResNet-style models.\n\n2. In Table 2, the performance of \"Local\" is missing. Moreover, during experiments, what is the number of local updates for the baselines like Per-FedAvg and pFedMe. How do their performance improve as the number of local updates increases, and can they achieve similar performance compared to the proposed PeFLL?"
            },
            "questions": {
                "value": "See weakness bove."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission5247/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission5247/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission5247/Reviewer_tVNw"
                ]
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission5247/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698553697433,
        "cdate": 1698553697433,
        "tmdate": 1699636523923,
        "mdate": 1699636523923,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "ZWzNgJ6OPx",
        "forum": "MrYiwlDRQO",
        "replyto": "MrYiwlDRQO",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission5247/Reviewer_Fw5z"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission5247/Reviewer_Fw5z"
        ],
        "content": {
            "summary": {
                "value": "The authors present a federated training algorithm which allows clients to receive a personalized model at test-time, based on their individual local dataset. This is achieved by predicting personalized network parameters based on an individual client's descriptor. This descriptor (a vector embedding), is generated by passing the local dataset through a set network. The embedding computation is done locally, while the (expensive) hypernetwork is run on the server. \nThe training algorithm involves reversing the forward-pass and computing partial gradients at the server and the individual clients.\n\n-- post rebuttal --\nThe authors have addressed my concerns and I do recommend acceptance.\nWhile some question with respect to the method's generalizability to new tasks & models remain, I believe it to be a worthwhile method to experiment with for a new personalization use-case."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "4 excellent"
            },
            "contribution": {
                "value": "4 excellent"
            },
            "strengths": {
                "value": "This paper addresses a highly relevant problem in an innovative way. The proposed test-time generation of personalized models through a server-side hypernetwork is original and well-described. The paper reads very well, I enjoyed following the authors' red line through the paper."
            },
            "weaknesses": {
                "value": "The weaknesses of this paper revolve around the experimental evaluation, specifically the base-lines that the authors consider given their choice of the experimental setting. The evaluation pipeline raises som questions, detailed below. \nThe comparison to baselines is somewhat unfair, due to a lack of measuring communication overhead.\nFinally, i believe the discussion of related works should include the topic of Split-Learning, a version of FL where parts of the forward-pass are performed across different devices (e.g. client and server). PeFFL is an example of split-learning under that definition."
            },
            "questions": {
                "value": "- The authors only consider the label-skew setting of object-classification computer vision problems C10/C100 and Femnist. Specifically for C10/C100, the authors assign two labels per client. The provided code (mask_absent is True by default) suggest that their method consequently reduces to a binary classification problem at test time. Can you confirm this choice of evaluation is consistent with all baselines? Evaluation in line 374 & 375 of train.py concerns the test-clients. Following into line 20, evaluation is done. The default args embed_split=True suggest that you are using the training-set to compute embeddings, as well as (lines 58-76) using it to test for presence of classes on that client. It seems that for all (train & test) clients, you assume the presence of a labelled training set, which allows for masking your logits. Lines 24-38 suggest you're treating training & test clients identically. I would expect a \"test-client\" to not have any labelled data available, meaning that the logit-masking should not be allowed. Can you clarify your evaluation procedure for me? Do \"test-clients\" use a different training-set for embedding computation? I would expect those to be identical. \nFor the training-clients, I would be curious to understand if you use the labelled training data for embedding computation, or throw those away for the validation-set in Table 1a. You claim that the client descriptor network is not susceptible to overfitting. I would ask you to show evidence for that claim. \n- How does PeFLL fair in non-label skew settings? E.g. I would recommend the Shakespeare dataset (https://arxiv.org/abs/1812.01097) \n- In order to fairly compare PeFFL against baselines, I believe it is necessary to introduce the communication overhead that is introduced by the different methods. You argue that \"It has low latency and communication costs\", which should be clarified to be true only at test-time (and even then is higher than alternatives that function offline, such as FedAvg). During training, PeFFL is constrained to \"FedSGD\", i.e. a client cannot amortize communication with additional computation. Instead, forward-backward pass requires communication of various elements: Embedding, client-specific model and the gradients corresponding to both. I would like to see two analyses:\n1.) GB of communication on the x-axis and test-client accuracy at the y-axis. This allows to draw iso-lines and understand the impact of the high-frequency communication of PeFFL.\n2.) Introduction of another baseline, in which a larger, more flexible model is trained through FedAdam (https://arxiv.org/abs/2003.00295) with properly tuned hyper-parameters. The hypothesis I would like to see tested is if a more flexible model is able to generalize across all train & test clients without requiring personalization. For a given communication budget, should I choose PeFFL or can I fall back to a larger FedAvg-trained model?\n- Another interesting experiment (though not required), would be to see a combination of classical FedAvg and PeFFL. Consider applying PeFFL only to the last layer(s) of a model, while training the rest through standard FedAvg. For object classification, it is usually the last layers that require personalization, while the initial layers can share jointly relevant features. Such a setup would allow the embedding network to be a separate head of the FedAvg-trained network. \n\nShould the authors address my questions, I will consider raising my score"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "8: accept, good paper"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission5247/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission5247/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission5247/Reviewer_Fw5z"
                ]
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission5247/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698698782136,
        "cdate": 1698698782136,
        "tmdate": 1700709362919,
        "mdate": 1700709362919,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "zjBDwmhekR",
        "forum": "MrYiwlDRQO",
        "replyto": "MrYiwlDRQO",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission5247/Reviewer_Couf"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission5247/Reviewer_Couf"
        ],
        "content": {
            "summary": {
                "value": "This paper proposes a learning-to-learn approach to personalized federated learning. A hypernetwork residing on the server outputs the parameters of the personalized models given \u201cdescriptors\u201d of the clients. The descriptor is generated by an embedding model that is shared by the server to the clients so that they can use it on their private data. This method avoids some issues in personalized federated learning by construction, such as the need to fine-tune, how to generalize to unseen clients, clients having little data, system/data/model heterogeneity, etc. Convergence proofs and generalization bounds are given for their method PeFLL. Experiments show that this model is indeed effective by a large margin, especially at generalizing to unseen clients."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "- The paper is well-written and the approach is interesting.\n- Heterogeneity issues can be alleviated with a learning-to-learn approach.\n- Generalizing to unseen clients makes sense with the embedding model. We intuitively assume that client similarity is dictated by the similarity of their data. Thus, clients with similar embeddings should have similar personalized models.\n- Algorithms are well detailed and the code is shared in the supplementary materials for reproducibility.\n- Experiments show significant improvements on FEMNIST and CIFAR-10/100, especially on clients unseen during training.\n- The benefits of client embedding network is justified experimentally."
            },
            "weaknesses": {
                "value": "- I think that the experiments are not sufficient to conclude that PeFLL is superior. You have to demonstrate its improvement on architectures more modern than LeNet as well. It would also be great to report performance on federated datasets other than FEMNIST (e.g. other LEAF datasets).\n- The computational efficiency of the model is questionable given that the hypernetwork is at least a 100 times bigger than the client's model, and this is only the case for these particular experiments. It might require a wider net to generate larger personalized models. In other words, LeNet on MNIST and CIFAR-10/100 might only need 100 \"ranks\" to perform well, whereas on more complicated models and datasets, a wider net would be needed for good performance, which makes scalability an issue. That is why I think experiments covering these settings are needed to conclude the practical benefits of PeFLL."
            },
            "questions": {
                "value": "- Can you share some details about training time, memory consumption, and computational efficiency of PeFLL vs. regular models?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "5: marginally below the acceptance threshold"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission5247/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission5247/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission5247/Reviewer_Couf"
                ]
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission5247/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698746125863,
        "cdate": 1698746125863,
        "tmdate": 1699636523708,
        "mdate": 1699636523708,
        "license": "CC BY 4.0",
        "version": 2
    }
]