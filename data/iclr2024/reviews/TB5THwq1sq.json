[
    {
        "id": "qEguTaSqLy",
        "forum": "TB5THwq1sq",
        "replyto": "TB5THwq1sq",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission8482/Reviewer_cWov"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission8482/Reviewer_cWov"
        ],
        "content": {
            "summary": {
                "value": "This paper proposes Physics Informed Neurally Constructed ODE Networks (PINECONEs), a pipeline to combine the Neural ODE family with physics-informed loss. The authors evaluate this framework on transport equations and Burger\u2019s equations, compared with PINNs. The proposed method shows faster convergence and better accuracy when using first-order optimization methods."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "- A framework is proposed by combining Neural ODE architectures and physics-informed loss. \n- This paper is easy to follow."
            },
            "weaknesses": {
                "value": "- The idea is not novel. There are already many works investigating the potential of combining neural differential equations with physics-informed loss [1,2,3]. \n\n- The baselines are not sufficient. The proposed method is only compared with standard PINNs. There are many variants of the PINN family, which show better performance [4,5,6]. To convince the readers, I think more baselines are expected.\n\n- The proposed method is only tested on 1D problems. There are many successful implementations of PINNs in 2D and 3D cases [4,5,6], but this paper only investigates 1D systems.\n\n---\n\n**Refs:**\n\n[1] Ji, Weiqi, et al. \"Stiff-pinn: Physics-informed neural network for stiff chemical kinetics.\" The Journal of Physical Chemistry A 125.36 (2021): 8098-8106.\n\n[2] Lai, Zhilu, et al. \"Structural identification with physics-informed neural ordinary differential equations.\" Journal of Sound and Vibration 508 (2021): 116196.\n\n[3] O'Leary, Jared, Joel A. Paulson, and Ali Mesbah. \"Stochastic physics-informed neural ordinary differential equations.\" Journal of Computational Physics 468 (2022): 111466.\n\n[4] Cho, Junwoo, et al. \"Separable Physics-Informed Neural Networks.\" arXiv preprint arXiv:2306.15969 (2023).\n\n[5] Wang, Sifan, Hanwen Wang, and Paris Perdikaris. \"Learning the solution operator of parametric partial differential equations with physics-informed DeepONets.\" Science advances 7.40 (2021): eabi8605.\n\n[6] Wang, Sifan, Shyam Sankaran, and Paris Perdikaris. \"Respecting causality is all you need for training physics-informed neural networks.\" arXiv preprint arXiv:2203.07404 (2022)."
            },
            "questions": {
                "value": "Please see my concerns in **Weaknesses**."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission8482/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission8482/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission8482/Reviewer_cWov"
                ]
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission8482/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1697841020287,
        "cdate": 1697841020287,
        "tmdate": 1699637059117,
        "mdate": 1699637059117,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "9GOKvkbQUW",
        "forum": "TB5THwq1sq",
        "replyto": "TB5THwq1sq",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission8482/Reviewer_WRLE"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission8482/Reviewer_WRLE"
        ],
        "content": {
            "summary": {
                "value": "This research describes a network architecture that integrates the neural ordinary differential equation (ODE) and physics-informed constraint loss. They evaluate the framework using the transport equation and Burger's equation, showing fewer training iterations and higher accuracy than original Physic Informed Neural Networks (PINNs)."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "This paper proposes an interesting framework."
            },
            "weaknesses": {
                "value": "(1) there are no theoretical results. \n\n(2) experimental results are very limited. The baseline PINN is not implemented well. For example, vanilla PINN works fine for Burger\u2019s equation without any issue within a small number of iterations.\n\n(3) experimental results are with the vanilla machine learning training method. Better optimization algorithms for PINN have been developed. For example, you should use [1] to see if the claims still hold with more practical PINN training methods. Because low-dimensional problems can be solved with traditional PDE solvers such as FEM, PINN is not suitable for the cases where the vanilla machine learning training method is sufficient. Therefore, you need to see if the proposed method still makes sense for practical training methods such as [1] that allow PINN to scale well for practical problems.\n\n[1] Tackling the Curse of Dimensionality with Physics-Informed Neural Networks"
            },
            "questions": {
                "value": "(1) Please provide more supportive information for the sentence: \u201cHybrid modeling frameworks that incorporate neural networks into scientific modeling problems have yielded impressive results.\u201d\n\n(2) Please conduct experiments using SDGD proposed in \"Tackling the Curse of Dimensionality with Physics-Informed Neural Networks\"\n\n(3) In the experimental result, the authors said both networks have the same number of layers and identical widths. Please provide detailed information on the network configuration.\n\n(4) What are the relationships and benefits of your methods relative to other PINN models? There are several PINN models, such as Augmented Physics-Informed Neural Networks (APINNs) and Extended Physics-Informed Neural Networks (XPINNs). There is no need to compare them in your experiments. But, the authors should mention these versions of PINNs and how the proposed approach fits in the ecosystem of PINNs in the related work section or conclusion."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission8482/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission8482/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission8482/Reviewer_WRLE"
                ]
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission8482/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698573874765,
        "cdate": 1698573874765,
        "tmdate": 1700793081558,
        "mdate": 1700793081558,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "EnGYvnSpNm",
        "forum": "TB5THwq1sq",
        "replyto": "TB5THwq1sq",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission8482/Reviewer_Lv3K"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission8482/Reviewer_Lv3K"
        ],
        "content": {
            "summary": {
                "value": "This paper proposes a novel architecture, called PINECONE, that combines the neural ordinary differential equation (neural ODE) with the physics-informed neural network (PINN). The experiments present that the new model improves training performance compared to the standard PINN; the proposed model requires fewer iterations and yields more accurate solutions for the target equations."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "To the best of my knowledge, this is the first work that tries to combine the neural ODE with the PINN. The new formulation that extends the given neural ODE system with additional differential equations yields an efficient evaluation of derivatives with respect to the input. These derivatives can be used to update the model parameters, i.e., train the model, with the PINN loss. The experiments demonstrate that the proposed model outperforms the standard PINN model. This will be another variant to improve PINN, particularly for dynamics."
            },
            "weaknesses": {
                "value": "Despite the nice performance improvement presented through the experiments, I find that only two cases are insufficient to validate the model. Please see the original work of both Neural ODE and PINN.\n\nAdditionally, I find that the manuscripts need to be further clarified with more elaborate explanations about the proposed formulation and its verification; please see below for more details."
            },
            "questions": {
                "value": "The paper claims that the calculation of neural ODE\u2019s sensitivity w.r.t. the input is memory-efficient with the proposed formulation. I find that this is an important contribution yet not crystal clear. I guess this may relate to the adjoint sensitivity method proposed by the original neural ODE. A more clarification would be helpful. It would be better to elaborate more on how to solve the extended PINECONE system and how the additional solutions (i.e., the derivatives) are used for training the model.\n\nSec 3.1 states \"The PINECONE reaches the minimum error of the PINN at around iteration 2,700.\" However, the graph shows that it\u2019s around 1,200. Am I misinterpreting the graph?\n\nFor the Burgers\u2019 equation example, the presented performance of PINN is very different from what the original PINN paper shows. I believe that it is because the first-order optimization method was used instead of L-BFGS, which was used in the original one. I\u2019m not sure if this is a fair comparison.\n\nWill the PINECONE architecture be able to handle data-driven discovery tasks as PINN does?\n\nAs minor comments, the following typos could be corrected:\n- LBFGs\n- In Sec 1.2, \"... described by a neural network Eq. (3)).\"\n- In Eq. (7), \"$\\frac{\\partial{u}}{\\partial{t}} + c\\frac{\\partial{u}}{\\partial{x}}$\"\n- In Eq. (8), \"... $\\|| u_\\theta|_{t=0} - \\sin \\||^2_2$ ...\"\n- In Sec 3.2, \"... lowered to 1e-4 after 2,5000 iterations, \u2026\""
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "2: You are willing to defend your assessment, but it is quite likely that you did not understand the central parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission8482/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission8482/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission8482/Reviewer_Lv3K"
                ]
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission8482/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698657323305,
        "cdate": 1698657323305,
        "tmdate": 1699637058859,
        "mdate": 1699637058859,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "LZQnEkNmnp",
        "forum": "TB5THwq1sq",
        "replyto": "TB5THwq1sq",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission8482/Reviewer_jF5i"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission8482/Reviewer_jF5i"
        ],
        "content": {
            "summary": {
                "value": "This paper combines Neural ODEs with PINNs to solve PDEs (PINECONE). The average of the outputs of neural ODEs are taken as candidate functions for PINN solutions. PINECONE demonstrates significantly faster speed and lower error compared to the original PINN."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "1) Originality: PINECONEs provide a continuous solution like PINN, but replace FNN with an ANODE, and store the partial derivatives as system variables.\n2) Clarity: The paper is well-written and easy to follow."
            },
            "weaknesses": {
                "value": "1) The major weakness is the soundness of technical claims and experiments. \n\n* No enough baselines. In Section 1.5, the authors mentioned that some related works apply NODE solvers to PDE. But none of them are compared in experiments.\n* No proper dataset. In Section 1.4, it is claimed that PINECONEs are more suitable for real-world data and high-dimensional PDEs. However, all experiments are about low-dimensional synthetic data.\n\n2) The significance of the result is another weakness.\n* The number of iterations may be not a practical and fair measure. PINECONEs need less iteration to converge than PINNs, but the CPU time needed for one iteration is apparently different for these two models.\n* The constraint of using a first-order optimizer is not necessary for simple PDEs such as Burger's equation. The PINN with L-BFGS is able to achieve high accuracy within a few numbers of iterations and with moderate memory. \n* The overall accuracy of PINECONEs may be not satisfactory even in Burger's equation (Fig 2, up-right). It seems that PINECONEs can not learn a shock wave.\n\n3) A minor weakness is some typos\n* A missing $\\tau$ in the arguments of $F$ in the RHS of Eq(4).\n* The large equation in Section 2 paragraph 3 is not numbered, and it is hard to read. The position of the second $=$ is misleading."
            },
            "questions": {
                "value": "See points 1 and 2 in the Weakness part."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 4,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission8482/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698914506003,
        "cdate": 1698914506003,
        "tmdate": 1699637058742,
        "mdate": 1699637058742,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "h9sN19GNyp",
        "forum": "TB5THwq1sq",
        "replyto": "TB5THwq1sq",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission8482/Reviewer_Btbx"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission8482/Reviewer_Btbx"
        ],
        "content": {
            "summary": {
                "value": "A physics-informed method is introduced to model the temporal progression of PDEs. It decomposes a given PDE into a system of ODEs to be solved with Neural ODE subsequently. In comparison to PINN, the introduced method learns to simulate simple one-dimensional (transport and Burger's equations) more accurately by using first-order optimizers."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "1 poor"
            },
            "strengths": {
                "value": "_Originality:_ The idea of converting a PDE into a set of ODEs to be solved with Neural ODE seems appealing, but I could not undertand the difference between PINECONE and other methods mentioned under the third bullet point of the related work section.\n\n_Quality:_ The claims are partially supported by experimental results. For example, the superiority of PINECONE over PINN is demonstrated in two experiments. Other claims, such as memory and time efficiency, however, do not find evidence.\n\n_Clarity:_ The manuscript is decently written and organized but would benefit from a clearer framing. For example, it remained unclear to me, whether ANODEs find application here (why are they introduced so explicitly) and what some functions and variables are doing (see questions below).\n\n_Significance:_ The results point into a good direction but need more evidence. In the current state, I do not see how PINECONE finds a wide application and whether it contributes novel insignts to the community."
            },
            "weaknesses": {
                "value": "1. Unclear whether PINECONE is more efficient in training time and memory consumption. In particular, the application of Neural ODE is quite costly. How does this scale in equations where many ODEs must be solved to find a solution for a PDE?\n2. Few experiments on rather simple problems do not seem to be sufficient to demonstrate the superiority of PINECONE over PINN. For example [[1]](https://proceedings.mlr.press/v162/karlbauer22a.html) provides many benchmarks and models, also comparing PINN, which might give a good source for more comparisons.\n3. How does PINECONE compare to state-of-the-art methods? As reported in the related work section, there have been proposed numerous (if not hundreds) of modifications to PINN. A demonstration of how these modifications are applied to PINECONE would be of high value to assess whether PINECONE is also superior to more sophisticated PINN variants. Particularly, comparing against Lee & Parish as well as Rackauckas et al. (2021), cited under the third bullet point in related work, would be essential. In the end, it is crucial to assess the quality of PINECONE, how it compares to other methods, and where it actually strugles.\n4. How do PINN and PINECONE perform and compare when both optimized with LBFGS? Does PINECONE benefit similarly to PINN from second-order optimization?"
            },
            "questions": {
                "value": "1. In the loss function at the bottom of page 2, what does $s$ stand for, is it the time step and if so, would you mind using $t$ for comprehensibility? Also, what are the arguments to ODESolve?\n2. Is the first line in Equation (7) missing an equals 0? That is $\\partial u/\\partial t + c\\partial u/\\partial x = 0$?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission8482/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission8482/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission8482/Reviewer_Btbx"
                ]
            }
        },
        "number": 5,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission8482/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698920606193,
        "cdate": 1698920606193,
        "tmdate": 1699637058636,
        "mdate": 1699637058636,
        "license": "CC BY 4.0",
        "version": 2
    }
]