[
    {
        "id": "iFe3B2j8Yj",
        "forum": "U9NHClvopO",
        "replyto": "U9NHClvopO",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission7126/Reviewer_xLGd"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission7126/Reviewer_xLGd"
        ],
        "content": {
            "summary": {
                "value": "This paper introduce a novel soft prompt tuning technique, which is a new reparameterization technique that employs the superposition of multiple pre-trained vocabulary embeddings to improve the learning of soft prompt turning, and is able to improve without relying on the pre-trained soft prompts.The experiments tuned the LM-adapted T5 model on a smaller scale dataset. Significant improvement was achieved compared to the Residual Prompt tuning technique."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "The experimental results presented in this paper are significant and appealing from the point of view of the development of prompt-tuning techniques as well as fine-tuning of small-scale datasets. The authors expand the reparameterization methods in the field of soft prompt tuning techniques and provide a more detailed experimental demonstration. In conclusion, the SUPERPOS-PROMPT presented in this paper is of great value and helps to advance the development of related research. Detailed and sufficient results are provided in the main text. Thus, the SUPERPOS-PROMPT proposed in this paper is of great value and helps to promote the development of research in the field of prompt tuning."
            },
            "weaknesses": {
                "value": "1. the paper presents experimental results from the innovations without sufficient justification and explanation, e.g., what are the key explainable innovations that contribute to the performance improvement over similar techniques IPT, ATTEMPT, and Residual Prompt Tuning. \n2. The validity of large language models needs to be further demonstrated. \n3. The validity for LMs beyond T5 is unknown."
            },
            "questions": {
                "value": "Why does the author only choose T5 as the model for evaluation? Especial when the authors already noticed that T5 has checkpoints that pretrained on GLUE and SuperGLUE datasets. Therefore, I doubt the contribution of proposed method if the method does not lead to a progress on the SOTA results compared to either pretraining or other fine-tuning approaches."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "details_of_ethics_concerns": {
                "value": "NA"
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission7126/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission7126/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission7126/Reviewer_xLGd"
                ]
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission7126/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698668320015,
        "cdate": 1698668320015,
        "tmdate": 1699636843171,
        "mdate": 1699636843171,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "o2qDFtXmjD",
        "forum": "U9NHClvopO",
        "replyto": "U9NHClvopO",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission7126/Reviewer_HvC5"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission7126/Reviewer_HvC5"
        ],
        "content": {
            "summary": {
                "value": "This paper tries to propose a different soft-prompt tuning method. The limited experiments show that the proposed method outperforms residual prompt tuning and original soft prompt tuning."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "The method\u2019s performance seems better than the compared baselines."
            },
            "weaknesses": {
                "value": "1. Unclear presentation. For example, if you finally decided to freeze E_{freeze}, how did you initialize it? Is it just randomly initialized or intialized with some pretrained token embeddings?\n2. Missing baselines. For example, the authors should at least compare the proposed method with the similar methods they mentioned themselves, such as IPT and ATTEMPT, in a fair setting. \u201cThrough our experiments, we noticed that utilizing superposition is more efficient than softmax weighting.\u201d Where is this experiment?\n3. Too many ablations are missing so that I find it very hard to understand why the proposed method is so much better than residual prompt tuning. The authors mention 3 variants in the main figure (Figure 1, bef) but have shown no results regarding such variants. Where does the performance improvement come from? Is it mainly from freezing E_{freeze}, or removing softmax, or reducing parameters?"
            },
            "questions": {
                "value": "See weakness"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission7126/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698677654471,
        "cdate": 1698677654471,
        "tmdate": 1699636843067,
        "mdate": 1699636843067,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "Doo6fGSuBn",
        "forum": "U9NHClvopO",
        "replyto": "U9NHClvopO",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission7126/Reviewer_gZe6"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission7126/Reviewer_gZe6"
        ],
        "content": {
            "summary": {
                "value": "This work focuses on soft prompt tuning, a method to efficiently fine-tune pretrained language models with minimal parameter updates (PEFT methods). Soft prompts are challenging to optimize, especially with small datasets. This is empirically observed. PEFT methods such as LoRA and adapters are more popular than soft prompt tuning, prefix tuning etc. because of this reason. When finetuning an LLM on small datasets they seem to suffer from a notable performance drop compared to vanilla as observed in previous works [1]. The study contributes in two ways:\n1. Introduction of SUPERPOS-PROMPT: This is a simple to use reparameterization technique that improves the learning of soft prompts. It does so by taking a linear combination of multiple pretrained vocabulary embeddings. The authors conducted experiments across various GLUE and SuperGLUE benchmarks, showing that SUPERPOS-PROMPT outperforms Residual Prompt tuning. It yields an average score improvement of +4.7 on T5-Small and +3.9 on T5-Base, along with faster convergence. SUPERPOS-PROMPT sometimes even outperforms full fine-tuning methods however I have a few questions regarding this result.\n2. Omission of Dropout from Frozen Network: The authors demonstrate that excluding dropout from the frozen (unchanged) parts of the network leads to enhanced performance and faster convergence. This improvement is consistent across different scenarios and tuning methods.\n\nCrucially, the proposed approach does not depend on having a proficient pretrained source prompt for initialization, providing significant flexibility and more effective combination of related prompt candidates. The authors argue that this is a common limitation in existing strategies, making the approach more versatile and applicable to a broader range of tasks. However, I believe comparisons with these methods would make the method more insightful.\n\n[1] Hu, Edward J., et al. \"Lora: Low-rank adaptation of large language models.\" arXiv preprint arXiv:2106.09685 (2021)."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "Strengths\n1) I agree with the authors that the challenge of soft prompt tuning on small datasets has to be addressed. Although this technique substantially reduces the number of trainable parameters, its diminished performance and slower convergence on smaller datasets makes its use less appealing. Effectively tackling these issues would constitute a significant contribution. Authors make an attempt at addressing these issues.\n2) The authors demonstrate that excluding dropout from the frozen (unchanged) parts of the network leads to enhanced performance and faster convergence. This improvement is consistent across different scenarios and tuning methods. \n3) I thank the authors for pointing this inference, \u201cThrough our experiments, we noticed that utilizing superposition is more efficient than softmax weighting.\u201d This result has more implication since it says linear combination is more beneficial than convex combination for prompt superposition.\n4) The authors propose a simple yet effective strategy (empirically) of linear combination of multiple tokens as prompt initialization."
            },
            "weaknesses": {
                "value": "Thank you for your work. I hope my following suggestions would make the work more robust.\n\n1) The writing requires improvement. \nFor instance, (a) the authors introduce various methods under three categories: 1) Prompt layers reparameterization, 2) Pre-trained prompts as initial states, and 3) Combined approach. Presenting this multitude of works in the introduction might overwhelm and confuse the reader. As an alternative, the authors could cite one representative work for each category and discuss the limitations of these works in the introduction. Additionally, a dedicated \u2018Related Works\u2019 section could be included, where the authors provide a more comprehensive overview of the numerous cited works, allowing readers to delve into further details. This structure would enhance the paper\u2019s readability. (b) Another example is, authors propose \u201cWe begin with selecting a linear combination of m unique token embeddings sampled from the token embedding layer, denoted as e1 , e2 , ..., em .\u201d However, they did not mention how to select those \u2018m\u2019. Are they randomly sampled?\n(c) \u201cImpact of Dropout, Impact of SuperPos-Prompt, Effect of the Number of Sampled Tokens\u201d in section 5 would better fit in another \"ablation study section\" explaining each of the settings more thoroughly. I would also encourage the authors to explain possible reasons behind why the proposed method is able to outperform other baselines. For instance, `the impact of dropout', it is an interesting and useful study however digging further into reasons why it is performing better than without dropout would lead to more insights than empirically stating the results. Even for \u201cEffect of the Number of Sampled Tokens\u201d, I had to go through it multiple times to understand it is an ablation study for \u2018m\u2019 parameter. (d) In the introduction, it is not clearly explained what is meant by \u201cmultiple token embeddings.\u201d\n\n2) The notations in the methods section require careful attention. For example, in section 3, the authors introduce p_i as a linear combination of m embedding vectors weighted by p\u2019_i, and they mention the dimension of E as e X m. It seems that the authors propose to randomly sample m embedding vectors for soft prompt initialization. However, in the subsequent step, they reparameterize E as follows: E = Efreeze + \u2206E, with \u2206Einit = 0e\u00d7n. The variable 'n' is not defined or mentioned anywhere prior to this point. Furthermore, the subsequent step, 'p_i = (Efreeze + \u2206Ei)p\u2032_i,' appears to contradict the dimensions mentioned earlier, as E was defined as having a dimension of e X m.\n\n3) The authors deliberately choose not to include IPT and ATTEMPT in their comparative analysis, explaining that these methods depend on pretrained source prompts. This is at odds with their primary goal, which is to enhance soft prompt tuning without the need for pre-trained soft prompts. However, the rationale behind excluding these methods from the comparison is not entirely transparent. To bolster the validity of their approach, incorporating a comparison with these baseline methods would lead to more insights on the utility of this method. I would like to point out that utilizing the pretrained soft-prompts has a similar analogy as utilizing the pretrained weights for finetuning on a downstream task. I do not see a limitation in directly utilizing the pretrained soft prompts.\n\n4) While the method is straightforward to implement, the authors have not sufficiently justified its apparent stability compared to other baseline methods for soft prompt tuning. For example, it remains unclear why the linear combination of 'm' randomly sampled token embeddings yields enhanced performance over the baseline. What specific aspects of this initialization contribute to superior results? The authors should provide additional insights to clarify this matter. A more comprehensive analysis is also needed to address the issue of inference without 'dropout' as mentioned earlier."
            },
            "questions": {
                "value": "1) I am not convinced with the result that, Superpos PT without dropout outperforms full finetuning by such a large margin of 16.4% on CB task on T5 small, same goes with T5 base on COPA task. It is not convincing that PEFT method is able to beat full finetuning by such a large margin. As claimed by the authors even LoRA and adapters that perform better than soft prompt based methods, occasionally beat full finetuning by very small margin. Could you please shed some light on it? Also, are the hyperparameters used to tune full model parameters consistent with the original paper.\n\n2) The authors mention this in the introduction \u201cSoft prompt is renowned for its exceptional parameter efficiency.\u201d However it also mentions \u201cfinetuning soft prompts is optimization-intensive, particularly with limited data and smaller model sizes in T5 family between 50 to 300 million parameters (Lester et al., 2021);\u201d As far as I understand the model weights are frozen. Are they contradictory statements made independently or are the authors mentioning that the convergence rate is slow for soft prompt based methods?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "5: marginally below the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission7126/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission7126/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission7126/Reviewer_gZe6"
                ]
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission7126/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698740999770,
        "cdate": 1698740999770,
        "tmdate": 1699636842944,
        "mdate": 1699636842944,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "PmOFyDtba2",
        "forum": "U9NHClvopO",
        "replyto": "U9NHClvopO",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission7126/Reviewer_4x9F"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission7126/Reviewer_4x9F"
        ],
        "content": {
            "summary": {
                "value": "This paper focuses on soft prompt tuning of pretrained language model and proposes an approach called SuperPos-Prompt, which tunes the delta value of word embedding parameter as well as the combination weight of words for the soft prompt tokens. The authors have compared the proposed SuperPos-Prompt and existing prompt tuning methods, including Intrinsic Prompt Tuning, Residual Prompt Tuning and ATTEMPT, both theoretically and experimentally. The experimental results using the pretrained T5 model on GLUE and SuperGLUE benchmarks show the advantage of SuperPos-Prompt over existing methods. Meanwhile, as an additional contribution, the authors claim that the dropout should be omitting from the frozen network."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "1. The proposed method is relatively easy to implement, compared with previous methods requiring heavily designed soft prompt initialization.\n2. The selected setting of benchmark and pretrained model (T5) is representative.\n3. Analysis of key components, including the impact of dropout, the results on different PLMs and effect of the number of sampled tokens are conducted."
            },
            "weaknesses": {
                "value": "1. The paper lacks sufficient analysis of SuperPos-Prompt learned soft prompts on what semantic information the prompt tokens indicate and how it contributes the results, at least some case study is needed.\n2. To be honest, the novelty is fair and incremental. In my opinion, the paper is more like an experimental report over existing methods. If more analysis on the learned soft prompts from semantic perspective is proposed, I think it will be much better."
            },
            "questions": {
                "value": "Have you considered more recent LLMs and includes more baselines like few-shot results on ChatGPT/GPT4 for reference?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "details_of_ethics_concerns": {
                "value": "None"
            },
            "rating": {
                "value": "5: marginally below the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission7126/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission7126/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission7126/Reviewer_4x9F"
                ]
            }
        },
        "number": 4,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission7126/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698808957944,
        "cdate": 1698808957944,
        "tmdate": 1699636842827,
        "mdate": 1699636842827,
        "license": "CC BY 4.0",
        "version": 2
    }
]