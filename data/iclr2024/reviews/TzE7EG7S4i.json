[
    {
        "id": "tvAfnCMWHO",
        "forum": "TzE7EG7S4i",
        "replyto": "TzE7EG7S4i",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission5979/Reviewer_YvdX"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission5979/Reviewer_YvdX"
        ],
        "content": {
            "summary": {
                "value": "This paper studies the outer (d - k)-radius estimation problem. This problem may be viewed as a clustering problem, where the goal is to find a k-flat F, such that the max distance of every data point to F is minimized. This is a generalization of the 1-center clustering, where k = 0. This paper gives a (strong) coreset for the problem with approximation ratio poly(k log n) and size poly(k logn). Here, A subset of points S is an \\alpha-coreset, if for every k-flat F, the objective evaluated on S is in between [OPT, \\alpha OPT]. This eventually implies a streaming algorithm that can achieve the same (order) of ratio.\n\nOther extensions are also considered, and various similar results are obtained. Specifically, the main bound can be improved a little bit (in terms of the dependent in k and log n), by assuming a bounded rank-k condition number. Another extension is to consider an \\ell_p aggregation function, which means the objective is changed to the sum of p-th power of distance of a data point to F. For this setting, a similar streaming bound can be obtained, but with a weaker error bound."
            },
            "soundness": {
                "value": "4 excellent"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "4 excellent"
            },
            "strengths": {
                "value": "- The study is well-motivated. In particular, the problem is related to clustering and subspace approximation which are fundamental ML/data analysis tasks, and the streaming setting addresses the computational issues of ML in the big data era.\n\n- The result can also be applied to improve a recent paper [17] in a certain case, which is a nice application that shows the theoretical relevance of the paper\n\n- The paper also provides experiments, which indicate that the seemingly complicated steps can actually be implemented and have the potential to be used in practice"
            },
            "weaknesses": {
                "value": "- The paper is quite technical and is not easy to understand especially for general audience. In addition, too many results are squeezed into the 9 pages. In my point of view, the author could focus on the main result Theorem 1.1, and this itself should already fit the volume of an ICLR paper (considering the 9 pages of the main text).\n\n- I don't see a related work section. Since your main technique is coreset, it might make sense to mention works related to coreset.\n\n- In fact, the discussion of the coreset literature is almost completely missing. Since your problem may be viewed as 1-center projective clustering, it's important to compare it with the relevant coreset literature. For example, this paper seems relevant: \"New Coresets for Projective Clustering and Applications. Tukan et al. AISTATS 2022\". From what I read, they gave O(1)-error coreset, but the size is k^k.\n\n- It is not discussed if the coreset is tight or can be improved, in terms of the error bound"
            },
            "questions": {
                "value": "- Does JL work here? In particular, can one reduce d to O(log n)? Or maybe subspace JL that reduce to O(k) dimension? I didn't find this discussed/mentioned. This is important as I guess otherwise your approach may not improve WS22? It may be useful to have a brief discussion of this in the paper.\n\n- It seems Theorem 3.3 and Theorem 3.6 are in different models of streaming algorithms? Also, does the streaming algorithm in Theorem 3.3 work if deletions are allowed? Please clarify in the paper.\n\n- In both Theorem 3.3 and Theorem 3.6 it is mentioned that the coordiantes are integers. Is this necessary even for the offline algorithm, or it is only a matter of storage model? Please clarify in the paper."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission5979/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698766563948,
        "cdate": 1698766563948,
        "tmdate": 1699636639391,
        "mdate": 1699636639391,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "IbdcsgxpmT",
        "forum": "TzE7EG7S4i",
        "replyto": "TzE7EG7S4i",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission5979/Reviewer_TTZL"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission5979/Reviewer_TTZL"
        ],
        "content": {
            "summary": {
                "value": "The contributions of the paper are several-fold and it is indeed a bit hard to describe them succinctly... I will not go over all of them in this summary but give a basic flavor of what the paper does.\n\nThe paper considers several (somewhat) related problems in high-dimensional geometry and provides streaming algorithms for solving these problems. For some problems, like the \"outer $(d-k)$-radius estimation problem\", this paper provides the first streaming algorithms which use space that is poly$(k,d, \\log (n))$ with a distortion factor also being poly$(k,d, \\log (n))$. Here, we are given $n$ points in $\\mathbb{R}^d$, along with a parameter $k < d$. Their algorithm works by constructing coresets using **online ridge leverage scores**.\n\nFor some other problems studied in the paper, prior work by Woodruff and Yasuda [FOCS 2022] already provided the first streaming algorithms using space poly$(d, \\log (n))$ with a distortion factor also being poly$(d, \\log (n))$. Woodruff and Yasuda also construct coresets but by using **online leverage scores**. In this submission, they show that assuming that the data points all approximately come from a low-rank subspace (which seems reasonable), their coreset algorithm can be used to provide streaming algorithms which are more efficient than the ones proposed by Woodruff and Yasuda."
            },
            "soundness": {
                "value": "4 excellent"
            },
            "presentation": {
                "value": "4 excellent"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "Originality: First paper to provide streaming algorithms for the outer $(d-k)$-radius estimation problem. Their coreset algorithm is new and as they show has several applications. Would be of future interest to researchers working on other related problems.\n\nQuality and Clarity: Paper is very well-written, easy to understand. I have not checked all the technical details in the proofs but they are very well-explained and it is unlikely that there are any major issues.\n\nSignificance: The paper's key contribution is providing a coreset construction algorithm, which they prove works for the problems which they consider, but also can be used independently (although without guarantees) for training other ML models."
            },
            "weaknesses": {
                "value": "Not any that I can see right now."
            },
            "questions": {
                "value": "None for now."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "8: accept, good paper"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission5979/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698902718639,
        "cdate": 1698902718639,
        "tmdate": 1699636639287,
        "mdate": 1699636639287,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "aUisrDyLIj",
        "forum": "TzE7EG7S4i",
        "replyto": "TzE7EG7S4i",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission5979/Reviewer_XBn6"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission5979/Reviewer_XBn6"
        ],
        "content": {
            "summary": {
                "value": "In this paper, the authors consider the problem of designing a streaming algorithm for the $(d-k)$-dimensional radius approximation, i.e., find a $k$-dimensional flat that minimizes the maximum distance of any input point to this flat. When $k=0$, the problem is the well-known minimum enclosing ball problem, i.e., the smallest d-dimensional ball that encloses all input points. They also consider the $\\ell_p$-sapce approximation problem. Overall, there are two major results that the authors claim:\n\n1)\tA single-pass streaming algorithm for $(d-k)$-radius estimation that has poly$(k,\\log n)$ approximation using poly$(k, \\log n)$ space. The algorithm maintains a coreset (a small subset of points) that approximates the $(d-k)$-radius in the streaming setting.\n2)\tThe authors then extend this algorithm to the $\\ell_p$-subspace approximation problem and design a streaming algorithm for this setting. The space requirement and the approximation ratios are poly$(k,\\log n)$"
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "The authors present a rather simple streaming algorithm for the $\\ell_p$-subspace approximation problem and show its practical value via experiments."
            },
            "weaknesses": {
                "value": "The authors do not present the state-of-the-art for $\\ell_\\infty$-subspace approximation. For instance, when k is 0 or 1, there are O(1)-approximations (see for instance, Chan and Pathak CGTA 2014, Agarwal and Sharathkumar, (SODA 2010, Algorithmica, 2015) and some other followup work. Although for restricted k, they achieve significantly better approximation ratios. Does your algorithm achieve similar ratios when k is small? These algorithms are equally simple: Does your algorithm have a better empirical performance for instance for the MEB problem? \n\nFor width approximation, there are no randomized algorithm can achieve better than $d^{1/3}$-approximation while using $e^{d^{1/3}}$ space, this was shown in Agarwal and Sharathkumar, (SODA 2010, Algorithmica 2015). I think it is important to place your result in the context of this lower bound. \n\nOverall, I had difficulty in understanding the impact and importance of this work and this, I believe, is mainly due to lack of a good comparison with existing work."
            },
            "questions": {
                "value": "Apart from the questions/concerns above, can you compare your work with the results in Kerber and Raghvendra (CCCG 2015):\nhttps://research.cs.queensu.ca/cccg2015/CCCG15-papers/16.pdf\nIn particular, can one first apply JL-projection to d= O(poly{k, \\log n}) dimensional space and then run a standard streaming algorithm for this space that gives O(d) =O(poly{k,\\log n})-approximation in O(poly{k,\\log n}) space?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission5979/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698916974895,
        "cdate": 1698916974895,
        "tmdate": 1699636639183,
        "mdate": 1699636639183,
        "license": "CC BY 4.0",
        "version": 2
    }
]