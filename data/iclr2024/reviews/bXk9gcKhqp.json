[
    {
        "id": "WQVV7Fnnsb",
        "forum": "bXk9gcKhqp",
        "replyto": "bXk9gcKhqp",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission3051/Reviewer_NHAm"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission3051/Reviewer_NHAm"
        ],
        "content": {
            "summary": {
                "value": "While the most GNNs designs various polynomial filters, this paper proves that the \"expressive power\" of the polynomial filter only depends on the degree of the polynomial. From this analysis, this paper proposes simple polynomial filters. This paper also conducts experiments on homogenous and non-homogenous datasets."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "1) The simpleness of the polynomial filter. This filter may be easy to understand in terms of behavior analyses. Also, this filter is easy to implement."
            },
            "weaknesses": {
                "value": "1) Weakness of Thm. 3.1. \nThm 3.1 is the key argument of the equivalence of the \"expressive power.\" However, this is rather weak, since the K linear independent components does not warrant the downstream machine learning algorithms performance. Maybe a set of K eigenvectors has the same expressive power, some random projection onto the K space may have the same expressive power -- but I believe that the \"expressive power\" we want to know in this context may be more nuanced one.\n\n2) Computational complexity. \nEven if the original graph has a sparse structure, i.e. $m << n^2$, the filter has a dense matrix, which is $O(n^2)$ since the multiplication of two sparse matrices does not preserve the sparse structure. Therefore, the filter does not enjoy the sparseness, and thus the computational complexity therefore increases from the simple filters, like GCN whose polynomial filter is basically the same as $\\tilde{A}$. \n\n3) Weakness of the Experimental results.\nSeeing homogeneous results (Table 3), the proposed method is more or less same as the existing methods considering the variances. Also, for non-homogeneous results (Table 4), in some datasets proposed methods underperform the exiting ones. Seeing Table 5, as expected from the discussed of my 2) above, the computational time is not appealing. Thus, the proposed methods at this stage do not improve the exiting methods and are slow.\nWhile in the limitations the authors stated that the proposed methods underperform for non-homogenous datasets, I think that this comes form the nature of the filter designs. See more for the questions.\n\n4) Insufficient comparison with exiting filters.\nIn the page 3 of (Defferrard et al, 2016) the complexity of the polynomial filter is discussed. The point of 2) is actually discussed, and also, the Krylov subspace is expected to serve as a better filter, and materialized in [i]. Thus, the authors may want to compare with [i] experimentally and theoretically.\nAlso, since the filter perspective is well-studied in [ii], the authors may want to compare as well. See the questions for the connection between this paper and [ii].\n\n\n--\n \n[i] Luan et al. Break the ceiling: Stronger multi-scale deep graph convolutional networks. In Proc. NeurIPS. 2019.\n\n[ii] Hoang and Maehara. Revisiting Graph Neural Networks: All We Have is Low-Pass Filters. In arXiv. 2019."
            },
            "questions": {
                "value": "1) From [ii], the established GNNs are known to be a low-pass filter, i.e., the eigenspace of the graph Laplacian associated with smaller eigenvalues has homogeneous information. Thus, the larger eigenspace captures non-homogeneous information.\nFrom this observation, we expect that (2I-L)^k amplifies the homongeous information, much faster than L^k. Thus, the underperfomrance on non-heterogeneous datasets is expected. Also, if we increase k_{1} and k_{2}, the larger $k$s become dominant, and thus the performance decreases in Fig.2 is also explained as an oversmoothing.\n\nThe question is, can we expand like \n\n\\sum_{k} (a_{k}I - L)^k + \\sum_{k'} (b_{k'}I + L)^k'\n\nSo that we have a better control on the amplification of the eigenspaces? By this in theory we expect better performance on non-homogenous datasets."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "details_of_ethics_concerns": {
                "value": "N/A"
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission3051/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission3051/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission3051/Reviewer_NHAm"
                ]
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission3051/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698035133450,
        "cdate": 1698035133450,
        "tmdate": 1699636250570,
        "mdate": 1699636250570,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "g7PG9coXJ7",
        "forum": "bXk9gcKhqp",
        "replyto": "bXk9gcKhqp",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission3051/Reviewer_gN5j"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission3051/Reviewer_gN5j"
        ],
        "content": {
            "summary": {
                "value": "In this paper the authors claim that there is no essential difference between existing different graph polynomial filters. Their theoretical results show that all $K$-order polynomial graph filters have the same expressive power in terms of linearly expressing the element in polynomial space. Furthermore, the convergence rate of various graph polynomial filters is no more than a linear constant related to the condition number. Then they introduce the GIA theory to emphasize the necessity of ''positive activation'', i.e., each node feature is linear expressed by its $K$-hop neighbours\u2019 feature vectors with non-negative coefficients. Based on this, they design a spectral GNN that linearly combine different order low-pass and high-pass filters and verify its effectiveness on benchmark datasets."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "- The research question of this paper is interesting and meaningful, i.e., investigating the key differences between different graph filters.\n- The proposed simpleNet achieve a good trade-off between performance and computation efficiency."
            },
            "weaknesses": {
                "value": "- The presentation quality of this paper needs to be improved, e.g., there are many symbol errors in the proof (See Questions for detail). Although these errors do not affect the final results, rigidity is one of the most fundamental requirements for scientific papers.\n- I appreciate the efforts devoted to investigating the key differences between different graph filters. However, I think that the linear expression ability and convergence rate are not enough to reveal the essential differences between different graph filters. First, although authors have shown that different graph polynomial filters have the same expressive ability, their performances may also vary greatly, depending on their implementations approaches (e.g., ChebNet [1] and ChebNetII [2]). Besides, it is still unclear the relation between this expressive ability and node classification performance. Second, in the implementation of these spectral GNNs, the raw features are first commonly feed into a MLP and then transformed by the filters, namely $Z=\\gamma(L)\\sigma(\\sigma(XW_1)W_2)$. Due to the involve of two parametric matrix $W_1, W_2$ and the non-linear activation function $\\sigma(\\cdot)$ in the forward process, the optimization of these spectral GNNs is non-convex, which could not be directly simplified as a convex problem in Eq. (4). Analyzing the training dynamic [3,4] of the model could be a more applicable approach. Third, the optimization approaches (SGD or Adam) also have significant impacts on the performances, which should be considered in the analysis.\n- The heterophilic graph datasets seem to be out-of-date. It has been shown that results obtained on these datasets are not reliable. The authors are encouraged to evaluate on the datasets presented in [5].\n\n[1] Defferrard et al, Convolutional neural networks on graphs with fast localized spectral filtering. NeurIPS 2016.\n\n[2] He et al, Convolutional Neural Networks on Graphs with Chebyshev Approximation, Revisited. NeurIPS 2022.\n\n[3] Yuandong Tian, Understanding the Role of Nonlinearity in Training Dynamics of Contrastive Learning. ICLR 2023.\n\n[4] Xu et al, Optimization of Graph Neural Networks: Implicit Acceleration by Skip Connections and More Depth. ICML 2021.\n\n[5] Platonov et al, A critical look at the evaluation of GNNs under heterophily: Are we really making progress? ICLR 2023."
            },
            "questions": {
                "value": "Q1: There are many symbol errors in the proof of Lemma 3.1. and Lemma 3.2. The denominator of Eq. (16) should be $\\left(\\sum_{i=1}^n a_i\\right)^2$. The authors claim that Eq. (17) is a quadratic function of $x$, thus it should be corrected as\n$$\nf(x) = \\left( \\sum_{i=1}^n \\frac{a_i}{\\lambda_i} \\right) x^2 - \\frac{\\lambda_1+\\lambda_n}{\\sqrt{\\lambda_1 \\lambda_n}}x + \\left( \\sum_{i=1}^n \\lambda_i a_i \\right).\n$$\nIn Eq.~(19), the third term in the first bracket should be $\\sum_{i=2}^{n-1} \\lambda^{-1}_i a_i$. \n\nAlso, Eq. (39) should be corrected as $\\left(A^{k+1}\\right)\\_{ij}=\\sum_{r=1}^n \\left(A^k \\right)\\_{ir} A\\_{rj}$.\n\nAlthough these typos do not affect the final result, I encourage the authors to correct them in order to avoid unnecessary misunderstandings for other readers.\n\nQ2: The motivation and the advantages of the GIA theory is not so clear. What performance gain the positive and proper activation could bring? Is there any connection between the generalization and positive (or proper) activation? What extra insights could the GIA theory bring?\n\nQ3\uff1aThe proposed fixedMono and learnedMono seem to be variants of JKNet [6] where different hidden features of different neighborhood ranges are combined. The only difference is the way that combining these features. The authors adopt a linear combination, while Xu et al. use LSTM or max pooling. The authors should clarify this and compare with JKNet.\n\n[6] Xu et al, Representation Learning on Graphs with Jumping Knowledge Networks. ICML 2018."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "5: marginally below the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission3051/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission3051/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission3051/Reviewer_gN5j"
                ]
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission3051/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698207582396,
        "cdate": 1698207582396,
        "tmdate": 1699636250496,
        "mdate": 1699636250496,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "FGGJk5KO3I",
        "forum": "bXk9gcKhqp",
        "replyto": "bXk9gcKhqp",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission3051/Reviewer_PhMj"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission3051/Reviewer_PhMj"
        ],
        "content": {
            "summary": {
                "value": "This paper delves into the exploration of polynomial-based graph convolutional networks (GCNs). The authors demonstrate that any polynomial basis of the same degree harbors identical expressive capability and leads to the same global optimal solution. Additionally, they establish that meticulously crafted polynomials can, at best, yield linear advantages for GCNs. Given the aforementioned demonstrations, the authors argue against the necessity of overly intricate design of polynomial bases solely based on polynomial properties. Following this, they introduce a novel framework termed Graph Information Activation (GIA) theory, which sheds fresh light on the interpretation of polynomial filters within GCNs. Subsequently, a simplistic basis encapsulating graph structure information is proposed, laying the foundation for the introduction of SimpleNet. The efficacy of SimpleNet is corroborated through experimental evaluations on benchmark node classification datasets, showcasing its superior performance in terms of both accuracy and computational efficiency when juxtaposed with existing GCNs."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "1. SimpleNet exhibits both structural simplicity and robust performance."
            },
            "weaknesses": {
                "value": "1. The authors assert that GNNs can be conceptualized as optimizers, and can be mathematically formulated in a uniform optimization form as depicted in Equation 4. However, this claim appears to be unfounded. As elucidated in [1], only PPNP and APPNP align with the representation provided by Equation 4.\n2. The so-called Graph Information Activation theory posited by the authors is essentially a reintroduction of graph coloring.\n3. The test datasets comprising Cora, Citeseer, Pubmed, Computers, and Photos are too small, thus rendering the assertion that GNN FixedMono outperforms BernNet less convincing. I recommend that the authors evaluate GNN FixedMono and BernNet using the Open Graph Benchmark.\n4. This paper omits an analysis of SimpleNet concerning the over-smoothing issue.\n\n[1] Zhu, M., Wang, X., Shi, C., Ji, H., \\& Cui, P. (2021). Interpreting and Unifying Graph Neural Networks with An Optimization Framework. Proceedings of the Web Conference 2021, 1215\u20131226. Presented at the Ljubljana, Slovenia. doi:10.1145/3442381.3449953"
            },
            "questions": {
                "value": "1. Why consider adding the term $\\sum^{K\\_{1}}\\_{i=0}\\alpha\\_{i}(2\\mathbf{I}-\\mathbf{L})^{i}$ and the term $\\sum^{K\\_{2}}\\_{j=0}\\beta\\_{j}\\mathbf{L}^{j}$ instead of concatenating them?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "details_of_ethics_concerns": {
                "value": "N/A"
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission3051/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698505419871,
        "cdate": 1698505419871,
        "tmdate": 1699636250409,
        "mdate": 1699636250409,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "EmRF58JP28",
        "forum": "bXk9gcKhqp",
        "replyto": "bXk9gcKhqp",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission3051/Reviewer_UCAH"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission3051/Reviewer_UCAH"
        ],
        "content": {
            "summary": {
                "value": "This paper studies the polynomial filter of GNNs and proposes a convolutional operator based on the normalized Laplacian of the graph. It gives theoretical results and empirical results for their proposed architecture."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "This paper presents some theoretical and empirical results that will be of interest to the GNN community.\nThe theoretical results are very simple: Theorem 1 is a standard result in algebra about polynomials, and Theorem 3.3 can be easily checked from first principles.\nThe matrix $2I-L=I+D^{-1/2}AD^{-1/2}$ is very similar to the matrix used in GCN by Kipf and Welling. The only difference is that here the authors use powers of this matrix, whereas for GCN only the first power is used. Given the good performances of GCN, it is not surprising that the authors get better results here."
            },
            "weaknesses": {
                "value": "Empirical results are weak. The datasets Cora, Citeseer, and Pubmed have been used for a long time, and there is now a consensus that these datasets are not really helpful anymore. Indeed, the numbers in Table 3 are very close, showing that all architectures have similar performances. To get a better benchmark, you can, for example, have a look at Dwivedi, Vijay Prakash, et al. \"Benchmarking graph neural networks.\" arXiv preprint arXiv:2003.00982 (2020)."
            },
            "questions": {
                "value": "How did you get the numbers in your section 4? Did you run experiments yourself with all architectures?\n\nThere is a problem with equation (7), which is not invariant (under permutation of the nodes), I think it should be $\\alpha_k$ instead of $\\alpha_s$."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "5: marginally below the acceptance threshold"
            },
            "confidence": {
                "value": "5: You are absolutely certain about your assessment. You are very familiar with the related work and checked the math/other details carefully."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 4,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission3051/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1699272192453,
        "cdate": 1699272192453,
        "tmdate": 1699636250328,
        "mdate": 1699636250328,
        "license": "CC BY 4.0",
        "version": 2
    }
]