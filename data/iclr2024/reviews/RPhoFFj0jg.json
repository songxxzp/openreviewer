[
    {
        "id": "Teq17gfEkz",
        "forum": "RPhoFFj0jg",
        "replyto": "RPhoFFj0jg",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission5859/Reviewer_Zunf"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission5859/Reviewer_Zunf"
        ],
        "content": {
            "summary": {
                "value": "The paper presents a new encoding technique for categorical values: residual bit vectors which are computed iteratively as bit-representations of category number (where category is treated as an actual number; see section 3.2. for a detailed explanation). The motivation for this work is in the application of one-hot encoded vectors: the authors are motivated to train table diffuison models where input/outputs are tabular data that can potentially have millions of categories. Training the diffusion model with million dimensional input outputs is a challenge, thus some lossless dimensionality reduction is needed. Why not compute bit representation once? Paper defines the main issue with simple bitwidth as an \"out of index\" problem, meaning that if total number of categories are not exact power of 2, say 9, then the bit representation of such a categories introduces extra \"sampling\" dimensions that might be an issue during diffusion training/sampling. In case of 9, its representation would require 4 bits, i.e. 9=1001; during diffusion sampling a number 1011 can be sampled, which would correspond to non-existing category. \n\nAuthors test out their proposed encoding method on several datasets in a TSTR manner (train on synthetic, test on real): they train a diffusion model to generate synthetic data, train a classifier/regressor on just generated data, and test the classifier/regressor on the actual data used for the diffusion model training. Results indicate that a proposed encoding is on par with simple log_2 encoding."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "1 poor"
            },
            "strengths": {
                "value": "The proposed method is very simple to understand and implement."
            },
            "weaknesses": {
                "value": "Paper has two weaknesses: results and presentation\n1. Results. On 5 tabular datasets where the such an encoding method would be of most use, the proposed is clearly better only on 2 of the tasks (CC, AR), whereas on BD and AD performance is on par, and I'm going to discount any results on IS due to the size of dataset (1338).  Similarly, when used for conditioning of GANs, visually speaking res-bit results seems to be worse (much less diverse) and have no strong edge over one-hot in classification tasks. Considering these observations, it is hard to say that residual bitwidth representation of categorical values is a good encoding in general. \n2. Presentation & Motivation. I the writing and the flow of the paper hard to follow. Initial pages are more like a catalog book of ml methods (section 2 in particular) rather than a cohesive presentation of ideas. The paper has many stylistic issues like using \"that this\", \"very widely used\", \"limit the increase in dimensionality to a logarithmic increase\" and etc. Also, I find the motivation a bit underdeveloped. Section 3.1. explains the \"out of index\" issue but does not provide evidence whether it is indeed the main cause that limits the model performance. I, generally believe, that a well trained model would learn to not sample from category bits that does not exist. It would be an important addition to the paper to show not only better results but provide evidence that improvement was due to solving out-of-index issue."
            },
            "questions": {
                "value": "Please address weaknesses above as much as possible."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission5859/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698816383871,
        "cdate": 1698816383871,
        "tmdate": 1699636620319,
        "mdate": 1699636620319,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "pf7p62QfhL",
        "forum": "RPhoFFj0jg",
        "replyto": "RPhoFFj0jg",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission5859/Reviewer_42Kk"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission5859/Reviewer_42Kk"
        ],
        "content": {
            "summary": {
                "value": "The paper proposes a hierarchical bit representation called Residual Bit Vector (ResBit) to address the complexity issue of one-hot encoding of categorical data. Because the number of elements of one-hot encoding grows linearly with the number of categories, the increased dimensionality may be harmful to performance. ResBit mainly follows the idea of residual vector quantization (Juang & Gray, 1982). It finds binary representation hierarchically and is shown to avoid the so-called \u201cout-of-index\u201d problem for some cases. Several experiments in tabular data generation, image generation, and image classification are conducted to study the performance of ResBit. Mixed results are reported."
            },
            "soundness": {
                "value": "1 poor"
            },
            "presentation": {
                "value": "1 poor"
            },
            "contribution": {
                "value": "1 poor"
            },
            "strengths": {
                "value": "I find it really hard to find the strengths of this paper. See the reasons below."
            },
            "weaknesses": {
                "value": "- There are several false claims in the paper. First, ResBit may not fully address the \u201cout-of-index\u201d issue. Since $N=50=32+16+2$, the example given in the paper is free from the issue. Proof for any natural number is missing. One can find a counterexample by find the ResBit representation of $N=51$? Second, the ResBit does not really improve or at least achieve no worse results compared to their baselines. In some cases, ResBit even performs much worse than the baselines.\n\n- Some descriptions in the paper are not clear. For example, the authors claim that increasing the dimensionality can cause model learning to fail. It is not clear to me why and how it fails. For example, overparameterization can lead to better results. Providing some references could be helpful.\n\n- In Section 4.1.4, the authors state that the loss exploded or disappeared during the training phase of TabDDPM for certain datasets and argue that that is probably due to the very large number of dimensions. This seems to be a strange reason because the dimensions are not too large in these problems and usually this kind of problem can be addressed by normalizing the features or using smaller learning rates.\n\n- The runtime comparison seems unfair because the TabDDPM and TRBD use different networks with different number of layers.\nIn Section 4.3, it would make more sense to use ResBit for datasets like ImageNet. CIFAR-10 only has 10 classes so the reduction of the encoding of the categories is insignificant.\n\n- In Section 4.4, the authors argue that ResBit reduces the representation complexity of categorical data. However, this would be only meaningful when the performance of ResBit is justified."
            },
            "questions": {
                "value": "1. Can we prove that ResBit does not have the \u201cout-of-index\u201d issue mathematically?\n\n2. Given that ResBit is proposed for reducing the representation complexity of categorical data, have you tried to run ResBit for image classification on ImageNet? Does it maintain the performance compared to one-hot encoding while achieving lower complexity?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission5859/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission5859/Reviewer_42Kk",
                    "ICLR.cc/2024/Conference/Submission5859/Senior_Area_Chairs"
                ]
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission5859/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698821544189,
        "cdate": 1698821544189,
        "tmdate": 1700641459051,
        "mdate": 1700641459051,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "KigNiAp0Nk",
        "forum": "RPhoFFj0jg",
        "replyto": "RPhoFFj0jg",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission5859/Reviewer_Dspo"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission5859/Reviewer_Dspo"
        ],
        "content": {
            "summary": {
                "value": "In the paper, the authors propose a Residual Bit Vector (ResBit), which is a hierarchical bit representation. Authors also show that such representation can be used to build a tabular data generation method called TRBD. TRBD can generate diverse and high-quality data from small-scale table data. ResBit was also used in GANs or conditioning."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "1. The paper introduces the interesting extension of Analog Bits.\n2. The paper has good theoretical fundaments."
            },
            "weaknesses": {
                "value": "1. In the abstract, the authors introduce methods in a different order than in the introduction. It is misleading. Maybe it is possible to do it consistently.\n2. The first Fig 1. in the paper refers to the reference paper. Maybe at the beginning, authors can give some illustrations describing the new proposed method. \n3. Some illustrations of the method should be added.\n4. The model proposes three elements: ResBit, TRBD, and conditioning GAN. Unfortunately, none of such components are well evaluated. Especially ResBit should be compared with Analog Bits.\n5. In TabDDPM, authors propose experiments on 15 datasets with many baselines. Authors should follow such an experimental setting. \n6. Maybe authors should introduce fewer components but add more detailed comparisons with existing methods.\n7. Maybe it is possible to run the algorithms on an image dataset."
            },
            "questions": {
                "value": "1. How the ResBit algorithm works concerning Analog Bits.\n2. Maybe it is possible to show some practical tasks to show that ResBit works better than Analog Bits.\n3. The United States example is convincing, but the authors should present that such a problem is a real problem in practical application."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "5: marginally below the acceptance threshold"
            },
            "confidence": {
                "value": "2: You are willing to defend your assessment, but it is quite likely that you did not understand the central parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission5859/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission5859/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission5859/Reviewer_Dspo"
                ]
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission5859/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698924440562,
        "cdate": 1698924440562,
        "tmdate": 1699636620057,
        "mdate": 1699636620057,
        "license": "CC BY 4.0",
        "version": 2
    }
]