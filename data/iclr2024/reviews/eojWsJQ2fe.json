[
    {
        "id": "wgsqKruoQ0",
        "forum": "eojWsJQ2fe",
        "replyto": "eojWsJQ2fe",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission6421/Reviewer_MVYf"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission6421/Reviewer_MVYf"
        ],
        "content": {
            "summary": {
                "value": "Optimizing prompts for LLMs is challenging, but crucial. In this work, the authors studied and proposed an automatic method to construct meta-prompts for new prompt proposal so that generated and edited prompts could be used to guide LLMs to perform better. They analyzed and investigated key components to build meta-prompt, such as providing step-by-step detailed instructions and context (see Sec 5.1 for empirical investigation). They also combined concepts in optimizers and used a gradient-based approach to refine prompts. In their experiments, they included four tasks and three existing baseline works to evaluate their proposed methods. The main results showed that PE2 approach can improve baseline performances. In addition, PE2 generates more high-quality prompts and specific prompt edits."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "* Originality: This paper proposed that to achieve a helpful meta-prompt we should enrich the meta-prompt with additional instructions and context. Standing on this, they developed several components to provide detailed instruction and context to prompt proposal LLM.\n* Quality: The experimental results look promising and perform better than the existing two automatic prompt optimization methods.\n* Significance: Prompt engineering is important to maximize the utility of LLMs. Instead of crafting prompts by human, this work proposed an automatic approach to leverage other LLMs to generate new prompts for downstream tasks. The numbers in their results validated the effectiveness of their proposed method."
            },
            "weaknesses": {
                "value": "* The clarity of the way to update hard prompt with gradient-based optimizer can be enhanced and improved by providing details, especially how do we access the gradients to help LLM refine hard prompts?\n* The iteration for the optimizer is set to 3 in the experimental setup. How does this come from and be enough to optimize prompts? This part is not well-supported.\n* In Figure 3 and Figure 4, I am not sure why are we doing comparison across different training timestamps. Instead, should we focus on the final timestamp or the converged step to confirm it's finalized and optimized for any further investigations? This comparison to display the dynamics is confusing me."
            },
            "questions": {
                "value": "* The footnote #3 in page 4 is not well-supported and is confusing. How does the analogy come from and be translated?\n* In paragraph \"Incorporating Concepts in Optimizers\", what's the concept here? Is there any formal definition about concept?\n* (minor comment) In Figure 1, the results can be improved by adding variance/range in the accuracy performance. It helps to enhance the soundness of this work."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission6421/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698794219716,
        "cdate": 1698794219716,
        "tmdate": 1699636716065,
        "mdate": 1699636716065,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "mEM9puQJBE",
        "forum": "eojWsJQ2fe",
        "replyto": "eojWsJQ2fe",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission6421/Reviewer_iQjD"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission6421/Reviewer_iQjD"
        ],
        "content": {
            "summary": {
                "value": "The paper presents PE2, a prompt optimization method that leverages a well-designed meta-prompt to iteratively improve on proposal prompts when presented with examples of the task at hand. The meta-prompt in particular leverages two-step task description, step-by-step reasoning, and context specification. A prompt engineering tutorial is further explored but ultimately discarded due to its length and inefficacy. Furthermore, optimisation-based concepts are introduced such as batch size, learning rate, and momentum although the latter two are not used in the final PE2 due to lack of consistent empirical improvements. PE2 is evaluated on various mathematical reasoning, instruction induction, and counterfactual evaluation tasks."
            },
            "soundness": {
                "value": "4 excellent"
            },
            "presentation": {
                "value": "4 excellent"
            },
            "contribution": {
                "value": "4 excellent"
            },
            "strengths": {
                "value": "- PE2 is well-designed and the prompt choices made are justified both empirically and using real-life examples.\n- Experimental results demonstrate that components in the final PE2 contribute to improvements in accuracy. Furthermore, various other aspects such as prompt tutorial and use of momentum are also evaluated empirically before being excluded in the final method.\n- Experiments are extensive and explore various aspects of the meta-prompt including the ability to handle poor initializations, reasoning capabilities, and poor performance arising from hallucinations and ignoring instructions.\n- Overall, the paper is very well-written and easy to follow."
            },
            "weaknesses": {
                "value": "- The evaluation uses Text-Davinci-003 as the main model but GPT4 when handling the meta-prompt, prompt evaluation and update proposals. It's noted that for two baselines that used the Text-Davinci-002, the results are recreated using Text-Davinci-003. It begs the question of whether APO or APE with GPT4 paraphrases could potentially perform better than reported. Was GPT4 also used in any of the baselines? Have the authors evaluated using Text-Davinci-003 to also handle the meta-prompt? Given that hallucinations hurt performance considerably it would be important to answer these questions for a fair comparison to baselines.\n- Text-Davinci-003 further lacks some capabilities of GPT3.5 and GPT4. Although I am sympathetic to the cost constraints, I would find it valuable if the authors had any existing experimental results where either of these models is used as the main model to optimize for (even if the results are not fully run across all benchmarks).\n- I suspect that the authors will agree that as a result, one could argue that the meta-prompt itself could be promptly optimized with PE2. Although they allude to this at the very end, I believe that a more detailed discussion on this front could be useful."
            },
            "questions": {
                "value": "Please answer the questions noted above. Overall, strong submission with several simple but empirically powerful contributions that enable improved prompt optimization. Happy to recommend acceptance."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "8: accept, good paper"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission6421/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698820888399,
        "cdate": 1698820888399,
        "tmdate": 1699636715941,
        "mdate": 1699636715941,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "HmRh9cxK8d",
        "forum": "eojWsJQ2fe",
        "replyto": "eojWsJQ2fe",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission6421/Reviewer_uHAL"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission6421/Reviewer_uHAL"
        ],
        "content": {
            "summary": {
                "value": "The paper proposes an approach (PE2) to automatically improve the prompt used in LLMs. The key idea is to hand-design a better meta-prompt (prompt to generate better prompts). The improved meta prompt is then used in the inner loop of an iterative search process constructed over the space of prompts using a dataset of task examples to guide the search for better prompts. Experiments are performed on a variety of tasks. The results indicate that the proposed method outperforms existing automated prompt engineering techniques and one human-engineered prompts."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "+ The paper studies an important problem of automatically improving the input prompt to LLMs. Progress here is likely to be of wide interest to the community.\n\n+ The primary contributions of the paper are algorithmic and empirical. The main contribution is the final version of the hand-engineered meta prompt used in PE2. Experiments to study its empirical performance indicate it performs well compared to baseline prompt generators, both automated and human.\n\n+ The illustrative examples are useful to quickly grasp the main ideas being proposed. While some important implementation details are a bit difficult to follow, the appendixes contain sufficient information to mostly fill in the blanks."
            },
            "weaknesses": {
                "value": "- The algorithmic contribution seems a bit thin. While this might be expected given the black box trial-and-error nature of prompt engineering, there is very little by way of novelty beyond the meta prompt design itself. The issue of limited novelty might be alleviated with additional insight about algorithmic components. For example, why does performance plateau quickly as $t$ increases? What kinds of prompts are generated at the end of long searches?\n\n- The current presentation makes it hard to \"separate the wheat from the chaff\". I found it challenging to quickly identify the \"final\" best variant of the meta-prompt. The paper describes a number of components, but discards some in the final version constituting PE2 (used to generate Figure 1). If I've understood correctly, discarded items include the prompt tutorial, step size and momentum. If true, perhaps the main paper might be simplified to only describe what is actually used in PE2 / Figure 1 with  supporting evidence with the rest moved to the appendix as negative experiments. Just a suggestion."
            },
            "questions": {
                "value": "- How exactly are the examples in Line 42 in B.4 selected? It seems like PE2 uses 2 negative examples from D_train (\"hard negative sampling\"). Is this correct? Does batch_size refer to the total number of examples or just the negative examples?\n\n- Appendix C.1.1 suggests including more in-context examples (e.g., 3, 10) improves performance. If so, why is batch size set to 2 in PE2?\n\n- Where is $D_\\text{dev}$ (validation dataset) used in Algorithm 1? (Perhaps in Select-Best?)\n\n- Is the use of the optimization terminology beneficial? The term \"batch\" in the context of LLMs is reasonably well understood to refer to the set of examples used during fine-tuning and much less so to refer to the set of input-output examples in the prompt. Since step size and momentum don't seem to be anyway used in the final PE2 version, might it be clearer to simply describe the meta-prompt in its final form without reusing popular, well-understood terminology from optimization?\n\n- Do you have any insight into why prompt performance reaches a plateau so quickly (by $t$ = 3)? How much performance gain would be lost wrt Figure 1 if only a single round of improvement (t = 1) was conducted?\n\n- What, if any, effect does the choice of examples (\"batch\") have on performance? Is there a notion of \"active learning\" that might be worth incorporating into the meta-prompt? This is a complete reformulation of the optimization problem so probably outside the scope of the paper. I was wondering if you had any empirical insights here as it seems related to the primary objective of finding the prompt producing best performance wrt the tasks using an LLM."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "5: marginally below the acceptance threshold"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission6421/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698829382562,
        "cdate": 1698829382562,
        "tmdate": 1699636715791,
        "mdate": 1699636715791,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "YC8DbLEet8",
        "forum": "eojWsJQ2fe",
        "replyto": "eojWsJQ2fe",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission6421/Reviewer_x9xJ"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission6421/Reviewer_x9xJ"
        ],
        "content": {
            "summary": {
                "value": "The paper proposed an approach to propose automate design for the instructions in the prompt. The approach consists of prompt initialization, new prompt proposal, search procedure. The proposed approach includes a few tricks, including Providing Detailed Instruction and Context (prompt engineering tutorial, Two-step Task Description. Step-by-step Reasoning Template, Context Specification), Incorporating concepts in optimizers (batch size, step size, history and monentum,  back-tracking\nhard negative sampling). The paper improves improvement over  other methods like APO, APE."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "The paper works on an interesting and important problem.  The work includes a few interesting tricks, such as batch size, step size, etc\uff0c which is analogous to optimization. The paper provides good ablation study."
            },
            "weaknesses": {
                "value": "1 The effectiveness of the proposed approach is not conclusive. \n- First, although the approach includes a few interesting tricks, the effectiveness of them are unclear, as indicated by ablation study \n\n\"The optimizer-inspired concepts can improve the performance occasionally, but the current experiments do not give a definitive conclusion regarding their utilities\"; \"We do not observe significant improvement by incorporating prompt engineering tutorial.\" \n\nWhile the readers appreciate the author's honesty and agree negative results are still informative, it will be good the author explores more on which scenarios the proposed tricks are more likely to be helpful. \n\n- Second, most of the analysis and ablation studies (Table 1,2,3) are on simple math datasets MultiArith, GSM8K. Are the proposed approach work on harder math datasets (i.e. https://paperswithcode.com/dataset/math), which are more close to real-world usage? While the paper also evaluate on \"instruction induction\" and \"counterfactual eval\" (Figure 1), the approach still haven't tested on the more representative tasks categories (i.e. QA, test summarization, etc) to be persuasive.  Automate prompt design approach should aim work on general situations. Does the approach work on a more general use case? \n\nAlso,  for GSM8K, no the SOTA is above 90. While we understand the authors are using a less strong foundation models, the big gap between the sota still draw concerns on the effective of the methods. Does it work on better foundation models? \n\n- Third, some recent papers sharing about prompt design is also interesting. What are the proposed methods compared with these methods? meta prompt optimization section 4.2 of https://arxiv.org/pdf/2309.03409.pdf. prompt design to optimize demonstrations: https://arxiv.org/abs/2305.14106"
            },
            "questions": {
                "value": "See above"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission6421/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission6421/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission6421/Reviewer_x9xJ"
                ]
            }
        },
        "number": 4,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission6421/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1699076557112,
        "cdate": 1699076557112,
        "tmdate": 1699636715625,
        "mdate": 1699636715625,
        "license": "CC BY 4.0",
        "version": 2
    }
]