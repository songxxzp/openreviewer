[
    {
        "id": "da3IIougUh",
        "forum": "6CZ50WgfCG",
        "replyto": "6CZ50WgfCG",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission4068/Reviewer_35ZH"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission4068/Reviewer_35ZH"
        ],
        "content": {
            "summary": {
                "value": "This paper considers learning reusable dense rewards for multi-stage tasks and proposes a method named as DrS. DrS classifies each collected trajectory by its stage and relabels them into failure and success ones. It then defines the learned reward function as the stage index plus the output of the corresponding discriminator. Extensive experiments from three task families showcase the effectiveness of DrS."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "1. This paper is clearly written and easy to follow.\n2. Authors conducted extensive experiments over 1000 task variants from threes task families to empirically evaluate their proposed method.\n3. Learning reusable rewards is an interesting and important topic for RL."
            },
            "weaknesses": {
                "value": "1. The experimental results are all from the ManiSkill benchmark. Considering other domains such as navigation (say, the Minigrid benchmark) would make the results more convincing.\n2.  Lack of discussion on some related work, such as [1, 2].\n3. The proposed method heavily relies on the stage structures of the task (see Figure 6, 1-stage fails), but there may exist tasks hard to specify stages (e.g., locomotion tasks of mujoco).\n4. Classifying the collected trajectories into success and failure ones and learning a corresponding reward function may not incentive the agent to finish the task optimally since no matter how sub-optimal the trajectory is, as long as it reaches the highest stage, it will be regarded as the most successful one.\n\n[1] Yoo, Se-Wook, and Seung-Woo Seo. \"Learning Multi-Task Transferable Rewards via Variational Inverse Reinforcement Learning.\" 2022 International Conference on Robotics and Automation (ICRA). IEEE, 2022.\n\n[2] Luo, Fan-Ming, Xingchen Cao, and Yang Yu. \"Transferable Reward Learning by Dynamics-Agnostic Discriminator Ensemble.\" arXiv preprint arXiv:2206.00238 (2022)."
            },
            "questions": {
                "value": "1. The authors asked \"can we learn dense reward functions in a data-driven manner?\" But what kind of dense reward do we really need? Say, there are three reward function $r_1$, $r_2$ and $r_3$, where $r_1=1$ if reaching the goal state, otherwise $r_1=0$; $r_2=0$ if reaching the goal state, otherwise $r_2=-1$; $r_3=2$ if reaching the goal state, otherwise $r_3=1$. Are $r_2$ and $r_3$ your considered dense reward functions and better than $r_1$? Why?\n2. How is the training time? DrS has to classify each collected trajectory based on the maximal stage index of all the transitions' stage indexes, which seems to be quite time consuming.\n3. Why is GAIL unable to learn reusable rewards? I understand that at convergence, the discriminator outputs 1/2 for every expert state-action transition, but correspondingly, other state-action pairs will be assigned lower values. It seems to be a reasonable dense reward function. In Figure 12, the authors compare DrS with \"GAIL w/ stage indicators\", but what if GAIL? \n4. In line 17 of Algorithm 1's pseudocode, we need to calculate the reward for each transition. But there are multiple discriminators, so which one should we select? Based on the stage index of the trajectory? If so, the same next state may get different rewards because of being in different trajectories. Will it cause the training process unstable?\n\nI am willing to raise my scores if you could sovle my concerns."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission4068/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission4068/Reviewer_35ZH",
                    "ICLR.cc/2024/Conference/Submission4068/Senior_Area_Chairs"
                ]
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission4068/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1697695826760,
        "cdate": 1697695826760,
        "tmdate": 1700664673557,
        "mdate": 1700664673557,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "qnRCiTsXHn",
        "forum": "6CZ50WgfCG",
        "replyto": "6CZ50WgfCG",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission4068/Reviewer_GMmw"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission4068/Reviewer_GMmw"
        ],
        "content": {
            "summary": {
                "value": "This paper proposes `DrS` (Dense reward learning from Stages), an approach for learning reusable dense rewards for multi-stage tasks, effectively reducing human efforts in reward engineering. By breaking down the dask into stages, this method learns dense reward from sparse ones using human demonstrations, where the focus is to learn reusable representations that can potentially by used on unseen tasks with similar structure. An example of structure is illustrated using the `Open Cabinet Door` which can be naturally divided into stages, such as approaching the handle, grasping and pulling, and then releasing it. Recognizing which stage an agent is in can be done using simple binary indicators. By applying these indicators, this work cultivates a dense reward for every stage.\n\nExperiments are `PickNPlace`, `TurnFaucet`, `OpenCabinetDoor`.\n\nBaselines are `dense reward`,  `VICE-RAQ`, `ORIL`"
            },
            "soundness": {
                "value": "4 excellent"
            },
            "presentation": {
                "value": "4 excellent"
            },
            "contribution": {
                "value": "4 excellent"
            },
            "strengths": {
                "value": "- The goal of this work is deriving a dense reward function from an array of training tasks to be repurposed for new, unseen tasks.\n- The notion of capturing representations for a `task family` is important for enabling RL agents to learn multi-purpose policies.\n-  Operating on the understanding that tasks can be broken down into several segments is also logical.\n- I like this paper because I think it's important to move away from engineered dense rewards, to more tangible methodologies for learning rewards, specially in stage-drived manner, using demonstrations."
            },
            "weaknesses": {
                "value": "- Some ablation study of the robustness of this method against bad demonstrations (i.e. suboptimal, noisy etc) could be nice."
            },
            "questions": {
                "value": "- I did not understand what Figure 3 is presenting and there is no reference in the paper. Does this plot mean that `DrS` is learning a sigmoid liked function of the sparse reward?\n- In the limitation section, the authors talk about the usage of language models such as ChatGPT and I think some discussion can be built around methods such as say-can[1]. I think the goal of both frameworks are aligned.\n\n\n\n\n\n[1] Do As I Can, Not As I Say: Grounding Language in Robotic Affordances -  https://say-can.github.io/"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "8: accept, good paper"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission4068/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698693717227,
        "cdate": 1698693717227,
        "tmdate": 1699636370973,
        "mdate": 1699636370973,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "NLofNO2i2k",
        "forum": "6CZ50WgfCG",
        "replyto": "6CZ50WgfCG",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission4068/Reviewer_oxbF"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission4068/Reviewer_oxbF"
        ],
        "content": {
            "summary": {
                "value": "This paper proposes a method for learning reusable dense rewards for multi-stage tasks using binary stage indicators. The idea is to train a discriminator that distinguishes successful trajectories from unsuccessful ones for each stage, and then use the discriminator output as dense reward. The authors demonstrate that the learned reward functions generalize to thousands of tasks across three Maniskill domains, resulting in policies that perform nearly as well as those trained from human-designed rewards. This is a step towards automating reward design, which is a long-standing problem in RL."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "1 poor"
            },
            "strengths": {
                "value": "- This paper makes a contribution towards automating reward design, which is of paramount importance in the field of RL. Having access to dense rewards takes the burden off of exploration, which in turn reduces the number of samples required to solve a task.\n- The method is a niche application of contrastive discriminator learning, which is well-established in the literature."
            },
            "weaknesses": {
                "value": "- The method requires success and failure trajectories for each stage in the training data, which can be expensive to collect. \n- The scope of the method is limited to a family of tasks that can be divided into stages. This prevents it from being applied to other tasks such as locomotion. It also means the method is less general compared to LLM-based rewards with external knowledge [1, 2].\n- Similarly, the need for stage indicators prevents the method from scaling to real-world problems, which would arguably benefit more from automated reward design than simulated domains.\n- The experiments do not demonstrate new skills that are unachievable by human-designed rewards.\n\nReferences:\n1. Tianbao Xie, Siheng Zhao, Chen Henry Wu, Yitao Liu, Qian Luo, Victor Zhong, Yanchao Yang, and Tao Yu. Text2reward: Automated dense reward function generation for reinforcement learning. arXiv preprint, 2023.\n2. Yecheng Jason Ma, William Liang, Guanzhi Wang, De-An Huang, Osbert Bastani, Dinesh Jayaraman, Yuke Zhu, Linxi \u201cJim\u201d Fan, Anima Anandkumar. Eureka: Human-Level Reward Design via Coding Large Language Models. arXiv preprint, 2023."
            },
            "questions": {
                "value": "- Does the method work with pixel observations?\n- If the method only works with states, does generalization come as a result of state abstraction or the method itself?\n- Do the learned dense reward functions resemble hand-designed rewards?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission4068/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698748120513,
        "cdate": 1698748120513,
        "tmdate": 1699636370887,
        "mdate": 1699636370887,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "dyO1LDtFi9",
        "forum": "6CZ50WgfCG",
        "replyto": "6CZ50WgfCG",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission4068/Reviewer_ck68"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission4068/Reviewer_ck68"
        ],
        "content": {
            "summary": {
                "value": "The paper presents a method, Dense reward learning from Stages (DrS), for learning reusable dense reward functions using only sparse task reward signals and task-family-specific \u201cstage indicators\u201d. DrS learns to classify the stage reached by each trajectory and adds the discriminator score to the index of the stage reached, leading to a reward function that increases both across stages and within progress along a stage. Prior adversarial imitation learning approaches to reward learning do not lead to reward functions that can be reused because the discriminator cannot distinguish policy trajectories from demonstrations at convergence. Experiments show that DrS-learned rewards can be reused for test tasks and can even compete with human-engineered rewards in some cases, despite requiring much less manual engineering (just the stage indicator function)."
            },
            "soundness": {
                "value": "4 excellent"
            },
            "presentation": {
                "value": "4 excellent"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "* As far as I am aware, the overall design of the algorithm (exploiting stage indicators) as well as the form of the learned reward function are novel.\n* The method significantly reduces the amount of engineering required to learn reward functions when the task can be broken down into identifiable stages.\n* DrS handily outperforms several reasonable baselines and competes with the hand-engineered reward in some cases.\n* In addition to the ablation study in the body of the paper, the appendix includes extensive additional experiments, such as varying the number of training tasks, input modality, dynamics, action space, robot morphology, and form of the reward function. The authors also verify the claim that GAIL-generated rewards are not reusable.\n* The paper is clear, easy to read, and well-motivated."
            },
            "weaknesses": {
                "value": "* The paper states that demonstrations are optional, but it sounds like they were used in all experiments. I imagine that sample efficiency would deteriorate substantially if no demonstrations are provided and the first stage cannot be solved easily by random exploration, or more generally if any stage cannot be easily solved by a noisy version of a policy that solves the previous stage.\n* It is not clear that all sparse-reward tasks can be broken up into stages, and as shown in the ablation study, the method struggles when there is only one stage. So DrS is not universally applicable to sparse-reward tasks."
            },
            "questions": {
                "value": "Did you try running DrS without providing demonstrations? Or varying the number of demonstrations?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "8: accept, good paper"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 4,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission4068/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698816241517,
        "cdate": 1698816241517,
        "tmdate": 1699636370766,
        "mdate": 1699636370766,
        "license": "CC BY 4.0",
        "version": 2
    }
]