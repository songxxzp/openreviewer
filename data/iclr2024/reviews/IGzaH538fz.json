[
    {
        "id": "zuS0H0Ks26",
        "forum": "IGzaH538fz",
        "replyto": "IGzaH538fz",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission7488/Reviewer_xWrk"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission7488/Reviewer_xWrk"
        ],
        "content": {
            "summary": {
                "value": "This paper develops a graph classifier called GraphGuard, that is certifiably robust to structure perturbations and node feature perturbations. The classifier first partitions the graph edges and/or features using a hash function to yield $N$ sub-graphs. The sub-graphs are then classified by a base model (e.g., a graph neural net) to produce $N$ predictions, which are aggregated by majority vote to yield a classification for the entire graph. GraphGuard is shown to be robust to a specified number of edge perturbations and/or arbitrary node feature perturbations that depends on the number of sub-graphs and the margin between votes. Experiments on eight datasets demonstrate that GraphGuard achieves better certified accuracy that three baseline certified methods."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "1 poor"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "1. GraphGuard makes improvements in several dimensions compared to prior work on certified graph classification. Specifically, it yields deterministic guarantees, it is less computationally expensive, it can cover edge and node feature perturbations simultaneously, and it is shown to achieve superior certified accuracy. Given the breadth of these improvements, I think it will be of interest to the robustness/verification community.\n\n1. The experiments are generally well-executed, apart from some issues mentioned below. It\u2019s great to see results presented for several datasets and baselines. I appreciated the inclusion of experiments examining architectural choices, such as the architecture of the base neural network, and the choice of hashing function.\n\n1. I liked the presentation of the paper overall. The writing was clear, leaving me with few doubts about the details. I found Figure 1 especially helpful in understanding the method."
            },
            "weaknesses": {
                "value": "1. The paper fails to cite prior work on derandomized smoothing which is strikingly similar to GraphGuard. For example, Levine & Feizi (2020) designed a certifiably robust classifier that also splits the input into sub-parts, classifies the sub-parts using a base model, and makes the final classification using majority vote. While their method is applied to image classification to certify against patch attacks, the fundamental design pattern (and analysis) is similar to GraphGuard. More recently, Hammoudeh & Lowd (2023) showed that the same design pattern can be used to achieve certified robustness against L0 perturbations (including patch attacks) at training-time and test-time. Given this context, GraphGuard could be viewed as an extension of derandomized smoothing to a new domain (graphs), which could impact the assessment of technical novelty. **Update 21/11: The authors have promised to address this issue. I have therefore raised my _Presentation_ score from 1 to 3.**\n\n1. Although the experiments are comprehensive, I believe there is a crucial baseline missing: the base graph classifier (GIN) _without_ GraphGuard. Specifically, I would like to see a comparison of standard accuracy for GIN trained normally on full graphs, and GraphGuard with GIN trained on sub-graphs. This would allow for an assessment of GraphGuard\u2019s impact on accuracy. This is important, as the standard accuracy of GraphGuard is fairly low for most datasets (around 70% based on Fig. 2)\u2014it\u2019s not clear whether this is due to GraphGuard or the inherent difficulty of the datasets. Incidentally, it may be interesting to report the accuracy of the base classifiers for all certified methods. Levine & Feizi (2020) found much higher base classifier accuracies for derandomized smoothing (which is similar to GraphGuard) than randomized ablation (which is similar to Zhang et al., 2021b). The same explanation may apply here. \n\n1. While GraphGuard outperforms prior methods in terms of certified accuracy, the standard accuracy is rather low (at around 70% for 6 of the 8 datasets). This has a bearing on the significance of the paper in my view, as the sacrifice in terms of accuracy seems to high to be practical. It\u2019s also worth noting that the variant of GraphGuard that protects against structure and feature perturbations simultaneously suffers a severe accuracy drop for some of the datasets (DBLP and ENZYMES). For these datasets, the classifiers are no better than random based on the standard accuracy in Figs. 9 and 10.\n\nMinor:\n1. The idea of training the base classifier on sub-graphs is claimed to be a contribution. However this is standard practice in randomized smoothing. It would be unusual not to train in this way.\n1. Section 4.2: should alpha be 0.001? \n\n**References:**\n\n- Levine & Feizi, \u201c(De)Randomized Smoothing for Certifiable Defense against Patch Attacks,\u201d NeurIPS 2020. https://proceedings.neurips.cc/paper_files/paper/2020/file/47ce0875420b2dbacfc5535f94e68433-Paper.pdf\n\n- Hammoudeh & Lowd, \u201cFeature Partition Aggregation: A Fast Certified Defense Against a Union of $\\ell_0$ Attacks,\u201d AdvML-Frontiers 2023. https://openreview.net/forum?id=NX5Nxrz6PV"
            },
            "questions": {
                "value": "1. The number of sub-graphs $N$ seems to be fixed for all inputs. Would it make sense to vary $N$ depending on the graph size (e.g., number of nodes)?\n1. There doesn\u2019t appear to be any restrictions placed on the hash function. I wonder whether it must be independent of the input\u2019s edge structure and node features? Otherwise the certificate may not hold?\n1. Is it possible to certify robustness against node insertion/deletion using this approach?\n1. Does GraphGuard prevent the classifier from exploiting local structure, since each sub-graph tends to be sparse (both in terms of edges and node features)?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "8: accept, good paper"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission7488/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission7488/Reviewer_xWrk",
                    "ICLR.cc/2024/Conference/Submission7488/Senior_Area_Chairs"
                ]
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission7488/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698505412102,
        "cdate": 1698505412102,
        "tmdate": 1700526628045,
        "mdate": 1700526628045,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "ylh6VbxRU7",
        "forum": "IGzaH538fz",
        "replyto": "IGzaH538fz",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission7488/Reviewer_nFKx"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission7488/Reviewer_nFKx"
        ],
        "content": {
            "summary": {
                "value": "The paper introduces \"GraphGuard,\" a certified defense mechanism for graph classification, designed to protect against adversarial perturbations in both graph structure and node features. Unlike existing defenses that lack robustness or have high computation costs, GraphGuard offers deterministic robustness guarantees. Through evaluations on 8 benchmark datasets, GraphGuard is shown to outperform current state-of-the-art methods."
            },
            "soundness": {
                "value": "4 excellent"
            },
            "presentation": {
                "value": "4 excellent"
            },
            "contribution": {
                "value": "4 excellent"
            },
            "strengths": {
                "value": "**Originality**: The paper stands out for its innovative use of hashing to create subgraphs that distinguish between different types of perturbations, namely structure, feature, and both. The deterministic robustness guarantee presented is a fresh and valuable approach in the domain of certified defenses. Furthermore, the incorporation of both structure and node features sets the work apart, as few studies consider node features in this context.\n\n**Quality**: The paper is grounded in solid theory and its effectiveness is corroborated by empirical evaluations.\n\n**Clarity**: The paper is articulate and straightforward. The authors proactively address and clarify potential ambiguities in each section, ensuring a smooth reading experience.\n\n**Significance**: Given the growing prominence of graph neural networks across various applications, addressing security in downstream graph tasks is paramount. This study zeroes in on the security of the graph classification task, potentially paving the way for enhanced security measures in other tasks like node classification and link prediction, emphasizing a deterministic robustness guarantee."
            },
            "weaknesses": {
                "value": "* On Page 4, at the end of line 4: Shouldn't the notation be $H(.)$%$T_s + 1$?\n\n* Based on my understnading $(S_{v_t} \\bigoplus S_{v_j}) \\neq (S_{v_j} \\bigoplus S_{v_t})$. If that is correct, then it seems in structure division explained in 3.3.1 the same edge can have two different hash values depending on which end node is visited first. Can the authors clarify this?\n\n* The hashing process, while detailed, lacks clarity on one aspect: How are node features transformed into string representations for the hash function? Given the diverse nature of node features in graphs, understanding this process, especially for features requiring unique treatments, is essential.\n\n* Could the authors provide an intuitive explanation for the preference of hash-based subsampling over methods like $\\tau$ fraction-based sampling (referenced in the benchmarks) or other similar techniques? What advantages does this approach offer and what are its potential limitations?\n\n* How do the authors determine the values for $T_s$ and $T_f$? It would be beneficial if this determination were associated with specific graph properties (e.g., the number of edges, nodes, diameter, path length, clustering coefficient, etc.), as this would guide potential users of this defense strategy in tailoring it to their datasets."
            },
            "questions": {
                "value": "See above."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "8: accept, good paper"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission7488/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698700476811,
        "cdate": 1698700476811,
        "tmdate": 1699636903554,
        "mdate": 1699636903554,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "1i1oSsw8yl",
        "forum": "IGzaH538fz",
        "replyto": "IGzaH538fz",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission7488/Reviewer_LqWt"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission7488/Reviewer_LqWt"
        ],
        "content": {
            "summary": {
                "value": "This paper claims to provide a robustness of graph classifications under adversarial attacks. It proposes a hashing method for partitioning the graph into several (overlapping) subgraphs and then ensembling them into a final classifier. The paper derives theoretical and empirical bounds on the robustness of the classifier, demonstrating that it behaves better than the state-of-the-art. No additional computational overhead is added on the classifier compared to state of the art."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "4 excellent"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "The theory of the paper is solid, and the experiments prove the point that the authors want to make.\nThe presentation is pretty clear and easy for the reader to follow."
            },
            "weaknesses": {
                "value": "As an expert in the security domain with a strong background in signal processing, the paper looks more like building a classifier robust to noise rather than a defense method against adversarial attacks. When it comes to internet security applications, in order to add value, someone has to work on real case scenarios where the deception in building the graph can be realistic. Here, the benchmarks are very weak in terms of real-case scenarios. In cases like malware or DNS graphs, etc, the deception models have to be very sophisticated and realistic. I understand that this is more like an ML theory paper, but it really has no value in real life. \nAnother problem that I have with this paper is the use of the term \"adversarial attack.\" A malicious agent tries to minimize the perturbation so that the perturbed graph is as close as possible to the initial one. Either through a black or white box attack, the agent tries to reverse engineer the classifier so that a small perturbation can lead to a big change in the output; they might choose to change, let's say, one feature or connection that will have a big impact. I don't see that study here. Instead, the authors claim that we will make it robust to a certain type of noise."
            },
            "questions": {
                "value": "My single question that will affect my decision is the following?\nWas the perturbation uniform noise?\nCan the authors pick at least one or two datasets and experiment with types of noise that would make case in a realistic malicious agent scenario?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "8: accept, good paper"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission7488/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission7488/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission7488/Reviewer_LqWt"
                ]
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission7488/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698809253745,
        "cdate": 1698809253745,
        "tmdate": 1700704224200,
        "mdate": 1700704224200,
        "license": "CC BY 4.0",
        "version": 2
    }
]