[
    {
        "id": "1t7Dyqjoxf",
        "forum": "tZ3JmSDbJM",
        "replyto": "tZ3JmSDbJM",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission2529/Reviewer_J9DQ"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission2529/Reviewer_J9DQ"
        ],
        "content": {
            "summary": {
                "value": "Paper is interested in sampling (smaller) subgraphs from (large) input graph when training Graph Neural Networks (GNNs), as a way of scaling of GNN training onto larger graphs. Unlike most earlier methods, where their sampling logic is fixed and non-trainable, the proposed method has a subgraph sampling function that is trainable. It samples subgraphs level-by-level, starting from an input batch. They sample next nodes from probability distribution over all nodes. It is conditioned on the nodes visited prior. They parameterize the distribution using GFLowNet [Bengio et al, 2021]."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "## Strengths\n**Problem space**: sampling subgraphs from large graphs when training GNNs, which can scale GNNs to very large graphs, is important, for both static graphs and dynamic graphs.\n\n**Novel Model definition**: they present \"sampling subgraphs\" as leaf-nodes of Finite State Machines (FSMs), and their FSMs look like trees (strong model assumptions*). This model definition is novel.\n\n**Clarity of writing**. The paper is concise and up-to-the-point. Algorithm 1 is ties the pieces well.\n\n\n## Summary\n\nThe novelty of construction appeals me to recommend this paper for acceptance. However, it has many small weaknesses. To do a better justice to the goodness of your work, if you have time to address all (or most) of my concerns and questions, within the main paper, I should be able to change my review."
            },
            "weaknesses": {
                "value": "Here, I point out major points that need revision. In addition, in the next **Questions** section, I ask for clarifications on more minor (but still important) issues.\n\n\n## The specialization of GFLowNet onto trees be explicit stated\n\nAbove Eq. 6, it says that $P_B(s_{l} | s_{l+1}) = 1$ -- this implies that the only way to get to $s_{l+1}$ is through $s_{l}$. This strong modeling assumption stems from \"s\" being the entire path of generated adjacencies $\\{A_0, \\dots, A_l \\}$. This produces a special case of \"finite state machines\" that specifically have states looking like trees.\n\n## Larger graphs?\n\nOnly one graph more than 1 million nodes whereas one central theme of the paper is about scale.\n\n\n## Application appeal\n\nI would wish that the paper considers applying their method to a problem space beyond graph sampling (or otherwise, show compelling use-cases for graph sampling). Specifically, could this method be used to *explain graphs*? E.g., in the integrated-gradient sense: the presence of which nodes or edges would cause a certain prediction.\n\n## Missing section on inference\n\nWhile the paper includes the information about training, it should also include information on how to do inference. Given a node at a (large) input test graph, are samples taken or the full graph around $n$?\n\n## Missing References on learnable sampling\n\nE.g.,\n\n* DSKReG; CIKM'2021\n* \"Performance-adaptive sampling strategy towards fast and accurate GNNs.\", KDD'2021\n* Submix; UAI'2023"
            },
            "questions": {
                "value": "The following items are not clear. Please clarify them in the paper\n\nQ1:\nHow is the $GNN_F$ parameterized? Does it train a scalar for every node (i.e., lookup 1D embedding table) or is it a function of features? In my understanding, GNN_F models $P_F$ (correct me if I am wrong) i.e. should have support on the nodes\n\nQ2:\nIs the reward measured only on end states? (on the \"sum\" of sampled list of adjacency matrices) or on every intermediate state (e.g., sum of adjacencies at that point).\n\nQ3: **Runtime experiments** Would you report runtimes? E.g., on the largest dataset ogbn-products?\n\nQ4: **Repeat edges**. Can an edge be sampled twice? Does this have any impact on the GCN model?\n\nQ5: Is adjacency matrix $A^0$ same as $A_0$ (Algorithm 1)\n\nQ6: $Z(s_0)$ in text following Eq. 3 -- It is not clear whether scalar $log Z$ is modeled or if it is a constant and removed."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission2529/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission2529/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission2529/Reviewer_J9DQ"
                ]
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission2529/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698800067598,
        "cdate": 1698800067598,
        "tmdate": 1700936109821,
        "mdate": 1700936109821,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "Owxw0TQufL",
        "forum": "tZ3JmSDbJM",
        "replyto": "tZ3JmSDbJM",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission2529/Reviewer_iUex"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission2529/Reviewer_iUex"
        ],
        "content": {
            "summary": {
                "value": "The paper proposes an adaptive sampling algorithm to learn an influential subgraph in each layer of a GNN classifier. Instead of fixed heuristics, the proposed method learns the preferences between nodes via the influence they have on the overall performance of the classifier. Designed based on the GFlowNet Architecture, it identifies a sequence of states that represent a sequence of samples in each layer of the GNN. They have shown an improvement in terms of F1 score and GPU memory utilization compared to other non-adaptive algorithms like FastGCN and LADIES, and even the adaptive AS-GCN method."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "4 excellent"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "1. The method seems to have an improvement on F1 scores of GRAPES on most of the datasets compared to the other algorithms in the presented experimental setup. It has also proved to consume much less memory compared to GAS which has a different non-sampling strategy to reduce the scalability problem in large graphs. Although, it outperforms GRAPES in some datasets.\n\n1. Different types of results such as the F1 scores, GPU memory allocation, robustness and entropy are provided to demonstrate the effectiveness of the proposed algorithm.\n\n1. The paper, in general, is well-written and sufficient for the reader to understand the concepts involved."
            },
            "weaknesses": {
                "value": "1. **Experimental Setup**: In the presented setup, the proposed method outperforms the baselines. However, a few things about the setup are not clear:\n    1. It is not clear if the baselines were tuned on a validation set. Why was the batch size fixed to 256 for the main results table?\n    1. A related concern is the appearance of low F1-score compared to what is reported in other paper. Granted that this is in the transductive setting, I am not sure, if that should cause such decrease in performance. For instance, according to the GraphSAINT paper, it achieves 96.6% on Reddit in the inductive setting. In this paper, the result is much lower (80.50).\n    1. Comparison against GraphSAINT: Fixing 256 size and 256 samples does not seem fair for GraphSAINT. It uses a sample per minibatch instead of such a low number of samples. Also, GraphSAINT paper shows sample size of few thousands, while this paper uses sample size only up to $2^9$.  Also, the node sampler seems to have the lowest performance compared to other samplers of GraphSAINT, so other samplers should have been considered (edge, RW, Multidimensional RW).\n    1. Architectures beyond GCN should be considered. If the sampling approach improves over baselines for multiple architectures such as GAT, GIN, SAGE, then it would create a strong case for the proposed sampling approach. As of now, the central claim does not seem justified, \"GRAPES outperforms state-of-the-art sampling-based methods.\" What has been shown is that GRAPES outperforms other methods on a specific GCN architecture and under small sample sizes and number of samples.\n    1. Most of the baselines presented are relatively old.\n\n1. **Discussion on runtime** - The downside of being adaptive is that there is extra computation involved per batch. However, no discussion of training time has been presented. This would have helped with understanding execution time - F1 tradeoff."
            },
            "questions": {
                "value": "1. Were the baselines tuned on a validation set?\n1. Why are the baseline performance lower compared to what is seen in other papers? I would expect the transductive setting to improve the results compared to the inductive setting.\n1. How is the performance vs GraphSAINT with a higher number of samples and larger sample size?\n1. Have other architectures been considered (other than GCN)?\n1. Can you present a comparison of training times of the proposed approach vs the baselines?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "5: You are absolutely certain about your assessment. You are very familiar with the related work and checked the math/other details carefully."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission2529/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698819419532,
        "cdate": 1698819419532,
        "tmdate": 1699636189434,
        "mdate": 1699636189434,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "lYGKRKv3BU",
        "forum": "tZ3JmSDbJM",
        "replyto": "tZ3JmSDbJM",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission2529/Reviewer_4YMr"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission2529/Reviewer_4YMr"
        ],
        "content": {
            "summary": {
                "value": "This paper introduces a novel mechanism for sampling subgraphs from a large graph during GNN training, with the goal of increasing scalability.\n\nThis sampling mechanism samples a fixed number k of nodes to add to the subgraph at each layer following a reinforcement learning policy parametrized by a GFlowNet and optimized using a trajectory balance loss. In addition to this framework, a key contribution of the paper is employing the loss of the GNN in the downstream task as the reward. Therefore, the model learns to sample nodes adaptively, in a manner that improves performance in the downstream task.\n\nThe efficacy of the architecture is verified via extensive numerical experiments on small, moderate-size, and large graph node classification tasks."
            },
            "soundness": {
                "value": "4 excellent"
            },
            "presentation": {
                "value": "4 excellent"
            },
            "contribution": {
                "value": "4 excellent"
            },
            "strengths": {
                "value": "- The motivating ideas for the proposed sampling framework are very novel. They are a great example of integrating different concepts/techniques from modern deep learning to solve a relevant problem --- scalability of GNNs.\n- Although this is primarily an algorithm-based/application paper, the model, the algorithm, and the training mechanism are theoretically grounded, and the authors did a very good job at motivating and explaining the reasons behind their design choices.\n- The numerical results are extensive and convincing. I appreciate the inclusion of hypothesis tests for the rank of their method with respect to the baselines; the memory plots comparing GRAPES with GAS; the transferability plots of performance versus subgraph size; and the entropy plots. In particular, the transferability plots (Fig. 3) are very convincing in showing the superiority of GRAPES, as its performance is much more robust to reducing K. Further, the entropy plots are in direct agreement with the authors's claim that GRAPES is consistent in identifying important nodes."
            },
            "weaknesses": {
                "value": "- Some related work is missing, and perhaps also a comparison with other graph sampling baselines from the graph signal processing literature. Check, e.g., \"Efficient Sampling Set Selection for Bandlimited Graph Signals Using Graph Spectral Proxies\", by Anis and others, and papers therein (specifically, the works of Kovacevic and Moura; Chamon and Ribeiro; Segarra, Marques and Ribeiro; etc.). These papers are part of a subfield of graph signal processing---graph signal sampling---which studies how to sample graphs so as to maximize the preservation of their spectra. Since graph spectral information is typically very correlated with performance in graph machine learning tasks, I believe these are important references/comparisons to include.\n- The explanation of why the method is trained off-policy is not very clear for readers not familiar with reinforcement learning. There is a result which is only mentioned in passing---\"Importantly, GFlowNets [...] can learn from off-policy distributions without adjusting the objective\"---which is important in justifying the choice of off-policy training, and hence should be described in further detail (perhaps a short subsection) in the camera-ready. It would also be interesting to see empirical comparisons between training off-policy and using gradient estimation methods.\n- The numerical experiments only consider node classification tasks.\n- Other relevant line of related work is that on the \"transferability properties of GNNs\". See e.g. the work of Ruiz et al."
            },
            "questions": {
                "value": "- Have you analyzed the specific subgraphs that are sampled by GRAPES in different tasks? What are their characteristics (are they connected? do the sampled nodes have high centrality? etc.). GRAPES sounds like a nice tool for understanding which characteristics of a graph are most important in a given task."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "8: accept, good paper"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission2529/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698839317915,
        "cdate": 1698839317915,
        "tmdate": 1699636189363,
        "mdate": 1699636189363,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "9kN3d76NlV",
        "forum": "tZ3JmSDbJM",
        "replyto": "tZ3JmSDbJM",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission2529/Reviewer_uctj"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission2529/Reviewer_uctj"
        ],
        "content": {
            "summary": {
                "value": "The work proposes a new classification model for large-scale graph data. It combines a learnable node-selection component and a graph neural network to construct a unified classification model. The node-selection component is devised with a GFlowNet, which is further parameterized by a graph neural network. Essentially it is an RL learning component that helps minimize the training loss. With this construction, it can greatly reduce the number of nodes in the classification component but without much performance drop."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "1 poor"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "Compared with previous models such as AS-GCN, the sampling method of this model is more \"adaptive\". Although the model is much more complex than previous models, it does show some performance improvement."
            },
            "weaknesses": {
                "value": "1. The description of the algorithm is problematic. As far as I know, GFlowNet is a method proposed to sample for an energy-based model: it addresses a distribution approximation problem. It is a special case of an RL algorithm. In my view, the paper is a pure RL problem especially since the reward function is clearly defined. I think an RL formulation is straightforward from that. The formulation with GFlowNet is very misleading -- I spent hours before realizing that this is not a distribution approximation problem.  Actually, the reward scaling in 4.2 could be avoided within an RL formulation. \n\n2. The method is much more complex than previous methods because it has this extra learnable component. I don't know whether it is easy for others to apply such a model to a different application. To me, the simplicity of model tuning is more appealing than minor performance improvement: one may not see the improvement if the model cannot be well-tuned. \n\n3. The performance values of baseline methods reported in Table 1 are much lower than those reported in their original papers. I don't know how much I can trust the comparison. For example, Graph-SAINT has f1 scores, 0.511\u00b10.001, 0.966\u00b10.001,  and 0.653\u00b10.003 on the Flickr, Reddit, and Yelp datasets. These numbers are much higher than the reported numbers in the submission."
            },
            "questions": {
                "value": "On the ogbn-products dataset, can you tune the number of samples (n) so that AS-GCN can also run on this dataset?\n\nCan you put data statistics in the experiment section? These numbers are important to the understanding of experiment results."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "details_of_ethics_concerns": {
                "value": "N/A"
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "2: You are willing to defend your assessment, but it is quite likely that you did not understand the central parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 4,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission2529/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698864578159,
        "cdate": 1698864578159,
        "tmdate": 1699636189270,
        "mdate": 1699636189270,
        "license": "CC BY 4.0",
        "version": 2
    }
]