[
    {
        "id": "5llsH533gG",
        "forum": "HgOJlxzB16",
        "replyto": "HgOJlxzB16",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission3450/Reviewer_Y9yq"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission3450/Reviewer_Y9yq"
        ],
        "content": {
            "summary": {
                "value": "This paper proves that 2-layer neural networks trained with SGD can learn the XOR function on the boolean hypercube using $\\tilde{O}(d)$ samples. Unlike prior work, the analysis doesn't require layer-wise training or the use of random biases, which is thanks to carefully tracking the evolution of the weights in two distinct phases and exploiting the symmetries of the problem. The analysis reveals that in the first phase the weight vectors of a significant number of neurons align with the XOR features, thus feature learning occurs. In the second phase, the neurons that recovered the relevant features will grow and dominate the prediction of the network, thus the XOR function is learned."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "* This paper presents a novel analysis of feature learning in two-layer neural networks and distinguishes itself from prior work by considering a standard (unmodified) SGD training algorithm and achieving sample complexity that is almost optimal among the class of rotationally invariant algorithms. \n\n* Plenty of intuition is provided on the mechanism of the proofs, and the two-phase dynamics could potentially be used for analyzing feature learning in other problems as well."
            },
            "weaknesses": {
                "value": "* The considered problem can be a bit restrictive, and for example could be generalized to learning $k$-sparse parities. This is not a major issue however, as this paper is one of the first attempts at providing a feature learning analysis of *standard* SGD without additional modifications.\n\n* As the authors have also pointed out, the batch size chosen is relatively large compared to practical settings, and it is interesting to know whether a smaller batch size can also learn XOR with near-optimal sample complexity."
            },
            "questions": {
                "value": "* Perhaps the authors could highlight the $\\varepsilon$-dependency (test error) of the rate in Theorem 3.1. This question is less relevant in some high-dimensional settings where the goal is only to learn to constant accuracy, but may still provide some insights given that the authors consider the specific problem of learning XOR.\n\n* It seems that the algorithm spends more time in the first phase $\\Theta(\\log(d) / \\eta)$ than the second phase $\\Theta(\\log\\log(d) / \\eta)$. This might be interesting to point out, as it is also in line with observations from Ben Arous et al., 2021, who show that SGD spends most of its time in the *weak recovery* phase.\n\n* As a minor comment, it might be helpful to mention the scale of $\\zeta$ inside Lemma 4.1 to make the statement of the lemma more self-contained.\n***\nBen Arous et al. \"Online stochastic gradient descent on non-convex losses from high-dimensional inference.\" JMLR 2021."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "8: accept, good paper"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission3450/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission3450/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission3450/Reviewer_Y9yq"
                ]
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission3450/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698699475694,
        "cdate": 1698699475694,
        "tmdate": 1699636297605,
        "mdate": 1699636297605,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "ym0cgoIvvU",
        "forum": "HgOJlxzB16",
        "replyto": "HgOJlxzB16",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission3450/Reviewer_xNLA"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission3450/Reviewer_xNLA"
        ],
        "content": {
            "summary": {
                "value": "This paper studies the classification problem of learning XOR functions on Boolean hypercube. The setting is standard that using 2-layer ReLU neural networks with vanilla online minibatch SGD on logistic loss. The authors show that neural nets can achieve $o(1)$ population loss with $d \\mathrm{polylog}(d)$ samples. This is near-optimal sample complexity in the sense that all rotationally invariant algorithms need at least $d/\\mathrm{polylog}(d)$ samples. The proof shows a 2-stage dynamic that in the first stage the neurons learn the features and grow large to reduce loss in the second stage. The analysis approximates the real dynamics with dynamics induced by certain surrogate loss."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "-\tUnderstanding the optimization for neural networks in feature learning regime is an important and interesting problem. This paper takes a step to go beyond single-index models to more complex XOR functions.\n-\tThe paper is overall well-written and easy to follow. A proof sketch is provided to illustrate some important proof ideas.\n-\tThe paper shows that vanilla online minibatch SGD on 2-layer neural networks can learn XOR function efficiently with $d \\mathrm{polylog}(d)$ samples. This seems to be new in literature.\n-\tThe proof techniques introduced in this paper also seem to be novel, especially the observation that the variance of gradient on the signal entries can be shown to be much smaller than the signal (eq (4.5))."
            },
            "weaknesses": {
                "value": "-\tThe results essentially still rely on the small initialization to learn features at the beginning, which is similar to many previous works.\n-\tAs discussed in Appendix A, it might be difficult to generalize the techniques to other settings (though it is understandable)."
            },
            "questions": {
                "value": "-\tWhat is the initialization scale in Theorem 3.1? On the top of page 5, the scale is $\\theta$. However, it becomes $\\theta/\\sqrt{p}$ in the statement of Theorem 3.1.\n-\tI was wondering why stepsize $\\eta$ is required to be not very small ($>1/\\mathrm{poly}(d)$) in Theorem 3.1. Are there any fundamental difficulties in the proof that that stepsize cannot be too small?\n-\tI wonder what the order of $o(1)$ test loss is in Theorem 3.1. Is it $1/\\mathrm{polylog}(d)$ or $1/\\mathrm{poly}(d)$? It seems not very clear in the main text. Or in general, what is the dependency on test loss $\\epsilon$ for sample complexity and running time\uff1f\n\nMinor:\n\n-\tAbove eq 4.1: \u2018ie.\u2019 -> \u2018i.e.,\u2019\n-\tIn Definition 4.2, after \u2018Here we have defined\u2019: $w_{sig}^T$ -> $w_{sig}^T x$"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "8: accept, good paper"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission3450/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698773803095,
        "cdate": 1698773803095,
        "tmdate": 1699636297520,
        "mdate": 1699636297520,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "UA8lsqzOoE",
        "forum": "HgOJlxzB16",
        "replyto": "HgOJlxzB16",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission3450/Reviewer_chEd"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission3450/Reviewer_chEd"
        ],
        "content": {
            "summary": {
                "value": "This paper studies the problem of learning a degree-2 parity function (XOR) with a 2-layer neural network with ReLU activations under the logistic loss function. Particularly, the training is done with mini-batch SGD where both layers are trained simultaneously. It is further shown that the sample complexity is $\\tilde O(d)$ which is also shown to be optimal for rotationally-invariant algorithms. \n\nIn the proof, it is shown that SGD increases the weights incident to the parity bits for a fraction of neurons. Afterwards, these neurons get reinforced making the learning possible."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "4 excellent"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "- Including a rather extensive literature review and also mentioning the limitations of their analyses and avenues for future work (e.g., discussion about batch size and Gaussian setting).\n- Providing the analysis in the case that both layers are trained jointly with reasonable learning rates. Also, there are no uncommon modifications to the algorithm such as projections, or changes in the learning rate, ...\n- Interestingly they discuss that joint training of the layers may have a regulating effect that makes the learning possible (see Remark 4.3)."
            },
            "weaknesses": {
                "value": "Nothing in particular, the limitations of the work are clearly stated in the paper."
            },
            "questions": {
                "value": "- Q1. What modifications do you expect to be necessary so that similar analysis can be carried out for higher degree parities?\n- Q2. Using $\\ell_2$ loss is already discussed in the appendix but for the Gaussian setting. What are the challenges of using $\\ell_2$ (or other loss functions) for the Boolean parity analysis?\n\nRemark. It would be beneficial for readers if further discussion about the proof techniques (and their comparison with recent work) is included."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "8: accept, good paper"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission3450/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission3450/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission3450/Reviewer_chEd"
                ]
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission3450/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698841819916,
        "cdate": 1698841819916,
        "tmdate": 1699636297426,
        "mdate": 1699636297426,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "hWYhTgH7Yy",
        "forum": "HgOJlxzB16",
        "replyto": "HgOJlxzB16",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission3450/Reviewer_kd4Q"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission3450/Reviewer_kd4Q"
        ],
        "content": {
            "summary": {
                "value": "The authors investigate the problem of learning a XOR function on Boolean data using two-layer ReLU networks trained with minibatch stochastic gradient descent (SGD). By investigating the training dynamics of SGD by jointly training the two layers on the logistic loss they identify two phases: a first phase in which the output network is close to zero (\"signal-finding\"), and a second stage (\"signal-heavy\") )in which the signal components stay larger than their counterparts. They provably show that with dpolylog(d) samples the training algorithm reaches a o(1) population error."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "The authors analyze an important problem: learning a target function that depends only on two relevant directions with two-layer neural networks. The training algorithm considers joint updates of the first and second layer, this protocol is more closely connected to real-life settings than the layerwise training explored in many publications in the multi-index learning literature."
            },
            "weaknesses": {
                "value": "The manuscript's biggest weakness is the clarity of the exposition and its relationship with previous works. A more in-depth discussion is provided below."
            },
            "questions": {
                "value": "- I believe these works are relevant for the comparison with the literature in this context [1,2,3]. In [1] the authors show that even one step of GD in the $n=O(d)$ regime with a large learning rate beats kernel methods, but only a single index approximation of the target is learned. in [2] the authors expand the findings of [1] to the $n=O(d^l)$ scenario and investigate the learning of multi-index functions with a finite number of GD steps by extending the staircase condition to Gaussian data and a large batch setting. Finally, [3] proves that a smoothed version of SGD matches correlation statistical query lower bound: if the target function has information exponent $k$, smoothed-SGD attains $O(d^{\\frac{k}{2}})$ sample-complexity.\n\n-  Ben Arous et al. [2021] is present in the references but not in the text. What is the relationship between the sample complexity obtained in this work for XOR (multi-index) and for $k = 2$ (information-exponent) single index target functions? \n\n- It is just briefly mentioned how the findings differs from the results of Ben Arous et al. [2022], a better comparison must be done. Could the author comment on this point?\n\n-  Suggestion of relevant reference for the Saddle-to-Saddle dynamics [4].\n\n- The analysis of the joint training of the two layers is nice and welcome. Could the author comment on the consequences in terms of transfer learning? After the training procedure, has the first layer learned the relevant feature subspace such that other tasks dependent on the subspace U could be learned?  \n\n\n[1] Jimmy Ba, Murat A Erdogdu, Taiji Suzuki, Zhichao Wang, Denny Wu, and Greg Yang. High-dimensional asymptotics of feature learning: How one gradient step improves the representation [2022].\n\n[2] Yatin Dandi, Florent Krzakala, Bruno Loureiro, Luca Pesce, and Ludovic Stephan. How two-layer neural networks learn: one (giant) step at a time [2023]. \n\n[3] Alex Damian, Eshaan Nichani, Rong Ge, and Jason D. Lee. Smoothing the Landscape Boosts the Signal for SGD: Optimal Sample Complexity for Learning Single Index Models [2023].\n\n[4] Arthur Jacot, Fran\u00e7ois Ged, Berfin \u015eim\u015fek, Cl\u00e9ment Hongler, and Franck Gabriel. Saddle-to-saddle dynamics in deep linear networks: Small initialization training, symmetry, and sparsity [2021]."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "2: You are willing to defend your assessment, but it is quite likely that you did not understand the central parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission3450/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission3450/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission3450/Reviewer_kd4Q"
                ]
            }
        },
        "number": 4,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission3450/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698860147233,
        "cdate": 1698860147233,
        "tmdate": 1700568457883,
        "mdate": 1700568457883,
        "license": "CC BY 4.0",
        "version": 2
    }
]