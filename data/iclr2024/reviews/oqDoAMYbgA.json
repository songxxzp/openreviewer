[
    {
        "id": "WgxjdOeIzN",
        "forum": "oqDoAMYbgA",
        "replyto": "oqDoAMYbgA",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission1530/Reviewer_P37h"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission1530/Reviewer_P37h"
        ],
        "content": {
            "summary": {
                "value": "The paper presents Adaptive Softmax Trees, an extension of Softmax trees, designed for many-class classification tasks. Similar to Softmax trees, the method is using Tree Alternating Optimization (TAO) to learn decision trees with sparse hyperplane splits and small Softmax classifiers in the leaves. Different to Softmax trees, the current method does not assume a complete tree. Instead, it grows the tree iteratively and therefore is able to learn deeper trees that are not complete but adapted to the data distribution."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "4 excellent"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "Strengths:\n- Extension of the recently proposed Softmax trees that is designed for many-class classification tasks (typically in NLP) and is able to reduce the inference time and model size.\n- Experiments show the proposed approach leads to significantly shorter inference time and better generalization (lower testing error).\n- The paper is clear, written well, and easy to follow."
            },
            "weaknesses": {
                "value": "Weaknesses:\nThe main weakness is the somewhat limited technical novelty: this is a relatively straightforward extension of Softmax trees, combining it with iterative expansion/growing of leaves. The key contribution is described in Section 5, and the majority of the technical content is an extensive summary of related previous  works (primarily, Tree Alternating Optimization and Softmax Trees). The rest of the paper is dedicated to different experiments that, as noted in Strengths, shows clear empirical improvement over previous work, however there is no significant technical insight beyond that."
            },
            "questions": {
                "value": "The paper is clear and I do not have any questions"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 1,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission1530/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698607580162,
        "cdate": 1698607580162,
        "tmdate": 1699636081649,
        "mdate": 1699636081649,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "N7u1BCkB0g",
        "forum": "oqDoAMYbgA",
        "replyto": "oqDoAMYbgA",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission1530/Reviewer_qCCg"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission1530/Reviewer_qCCg"
        ],
        "content": {
            "summary": {
                "value": "This paper proposes a new algorithm to train a softmax tree of arbitrary structure to reduce the training and inference time for softmax layer. The tree structure is learned optimally by interleaving steps that grow the structure with steps that optimize the parameters of the current structure. The resulting softmax tree improves considerably the predictive accuracy while reducing the model size and inference time even further, as demonstrated in datasets with thousands of classes."
            },
            "soundness": {
                "value": "3 good"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "The paper provided detailed literature research and it also did detailed empirical comparison with baseline models.\n\nThe new model has much better training time and inference time."
            },
            "weaknesses": {
                "value": "In the result tables, number of parameters in these models are missing. So it's not clear if the new model has less parameters."
            },
            "questions": {
                "value": "Is GPU used in the model training and evaluation? How will the model might perform when using the GPU?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "6: marginally above the acceptance threshold"
            },
            "confidence": {
                "value": "2: You are willing to defend your assessment, but it is quite likely that you did not understand the central parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 2,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission1530/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1698815286959,
        "cdate": 1698815286959,
        "tmdate": 1699636081550,
        "mdate": 1699636081550,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "WIhIFcAK3M",
        "forum": "oqDoAMYbgA",
        "replyto": "oqDoAMYbgA",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission1530/Reviewer_u3Fd"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission1530/Reviewer_u3Fd"
        ],
        "content": {
            "summary": {
                "value": "The paper presents a method of adaptively building tree structure for Softmax Tree. The method performs top-down tree growing: starting from a shallow tree, it grows the leaves with small subtrees in a BFS manner. After growing all leaves at one level, it performs joint optimization of the tree parameters. The method is compared with static tree structures for Softmax Trees, and with other tree-based methods for multiclass classification, over various datasets."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "3 good"
            },
            "contribution": {
                "value": "3 good"
            },
            "strengths": {
                "value": "Determining an optimal tree structure for multi-class and multi-label tree-based methods is a challenging and important problem. The introduced method would only expand the leaf when the total loss doesn\u2019t degrade (allowing a slight margin for degradation), which gives some confidence on the obtained tree. The experimental part shows that the learned tree structure improves over the static structure."
            },
            "weaknesses": {
                "value": "1. The experimental study is limited: the comparisons with other methods are provided only on a single Wiki-small dataset. From that, it\u2019s not enough to judge on the comparison with other baselines.\n\n2. The training time seems to be the main bottleneck of the method, its training is slower than for almost any other tree method (as reported in the paper). Probably because of that, applying the method on bigger datasets becomes infeasible. (Fair to say, that the same shortcoming applies for the original Softmax Tree, and the presented method seems to double the training time).\n\n3. The method seems to be quite sensitive to hyperparameters, so in order to apply it method for a new problem, one has to perform some careful hyperparameter search to find a proper $\\alpha$."
            },
            "questions": {
                "value": "1. LOMTree is mentioned in the paper as one of the baselines but I didn\u2019t see any results for it.\n\n2. Can the method produce degraded trees, when only a single tree path is getting expanded? Is there any guardrail for it?\n\n3. Is the Wiki-small actually a multi-label dataset (the instances can have more than 1 label)? Was it somehow transformed to a multi-class problem?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": "5: marginally below the acceptance threshold"
            },
            "confidence": {
                "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
            },
            "code_of_conduct": {
                "value": "Yes"
            },
            "first_time_reviewer": {
                "value": "Yes",
                "readers": [
                    "ICLR.cc/2024/Conference/Program_Chairs",
                    "ICLR.cc/2024/Conference/Submission1530/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission1530/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission1530/Reviewer_u3Fd"
                ]
            }
        },
        "number": 3,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission1530/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1699393224459,
        "cdate": 1699393224459,
        "tmdate": 1699636081472,
        "mdate": 1699636081472,
        "license": "CC BY 4.0",
        "version": 2
    },
    {
        "id": "7XrraKCUlR",
        "forum": "oqDoAMYbgA",
        "replyto": "oqDoAMYbgA",
        "signatures": [
            "ICLR.cc/2024/Conference/Submission1530/Reviewer_FA55"
        ],
        "nonreaders": [],
        "readers": [
            "everyone"
        ],
        "writers": [
            "ICLR.cc/2024/Conference",
            "ICLR.cc/2024/Conference/Submission1530/Reviewer_FA55"
        ],
        "content": {
            "summary": {
                "value": "The paper introduces Adaptive Softmax Trees (ASTs), an extension of Softmax Trees. The original Softmax Tree is a mix of hard and soft decision tree algorithms. The internal nodes (here called decision nodes) contain hard routers and leaf nodes softmax estimators. Originally, Softmax Tree has a predefined tree structure and uses the Tree Alternating Optimization (TAO) algorithm for training its node parameters. The idea behind the proposed extension is to build the tree in an iterative manner, starting from the shallow predefined tree (trained with TAO) and in each step by trying to expand a leaf node into new subtrees, trained using the same TAO algorithm, that is added to the tree if it yields the improvement in the optimized objective. If the subtree is added, the new tree is again retrained using the TAO algorithm. The attractiveness of the proposed approach is evaluated on text classification and language modeling task and compared against a few baselines that also use linear classifiers. The results confirm the superiority of AST over the baselines and original ST in terms of predictive performance and inference times."
            },
            "soundness": {
                "value": "2 fair"
            },
            "presentation": {
                "value": "2 fair"
            },
            "contribution": {
                "value": "2 fair"
            },
            "strengths": {
                "value": "1. The empirical comparison seems to prove the attractiveness of the proposed approach."
            },
            "weaknesses": {
                "value": "1. The novelty of the paper is very limited as the proposed extension is quite simple and of a heuristic nature, as there is also no theoretical contribution accompanying it.\n\n2. Section 4 copies a lot of text from the paper of Zharmagambetov et al., 2021, which itself is not such a big issue for me, but unfortunately, I find both explanations hard to follow and missing important details. The biggest issues, in my opinion, are:\n    - $\\mathbf{y}_n$ is not defined,\n    - output of the $\\tau(\\mathbf{x}_n; \\Theta)$ is also not clearly defined,\n    - it's not clear what is a tree structure, I understand that it's given since it's parameterized by $\\Delta$ and $k$, it seems that classes in the leaves can be redundant. I understood that the class assignment is either random or obtained by some k-means clustering.\n\n3. It seems that while the ST provides very fast inference due to hard tree routing, it is costly to train, especially the proposed AST variant that repeats TAO training multiple for each and after each expansion of the tree.\n\n4. > Training HSM-based language models is efficient (usually logarithmic in vocabulary size), but it leads to no speedup at inference time: during prediction, an input instance is propagated to all the leave\n\n     This statement is not true, HSM structure allows efficient retrieval of top-k classes or all the classes about the given threshold of marginal probability $P(y | \\boldsymbol{x})$ by applying a proper tree search algorithm.\n\n5. The strength of softmax and hierarchical softmax is that they are fully differentiable and can be easily used as a part of more complex architectures. They also aim to provide calibrated estimates of conditional class probabilities $P(y | \\boldsymbol{x})$. Hierarchical softmax also speeds up both training and inference. As in the case of ST/AST, performance/speed-up trade-off can be easily controlled by selecting the proper tree structure. The ST/AST, while providing superior predictive performance, seem not to allow end-to-end training and do not aim to provide accurate probability estimates, which severely limits their applications. I belive the relevance of this work.\n\n6. I got the impression that the AST required a lot of hyperparameter tuning before it achieved better results than ST.\n\nNITs:\n1. There are some related works that authors might consider discussing:\n    - A quite recent algorithm that also mixes hard trees and soft trees (could serve as another baseline): *Sun, W., Beygelzimer, A., Iii, H. D., Langford, J., and Mineiro, P. (2019). Contextual memory trees.*\n    - Variant of HSM that builds tree structure online: *Beygelzimer, A., Langford, J., Lifshits, Y., Sorkin, G. B., and Strehl, A. L. (2009). Conditional probability tree estimation analysis and algorithms*\n    - Generalization of HSM from multi-class to the multi-label case: *Wydmuch, M., Jasinska, K., Kuznetsov, M., Busa-Fekete, R., and Dembczynski, K. (2018). A no-regret generalization of hierarchical softmax to extreme multi-label classification*\n\n2. Why not include hierarchical softmax in the empirical comparison for text classification? What variant is used on PTB task? Many variants are possible, e.g., the most computationally performant with a hamming tree, or popular in neural networks, two-level hierarchical softmax, which provides less speed-up in terms of complexity but is GPU-friendly and usually very close to flat softmax in terms of predictive performance.\n3. No citation for Penn Treebank (PTB) dataset"
            },
            "questions": {
                "value": "I would be happy to see the authors respond to my critique from the weaknesses section.\n\nAdditional questions:\n- How the structure of the new subtree is decided? \n- Is reported training time, a clock time, or CPU time (does it take into parallelism account)?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "details_of_ethics_concerns": {
                "value": "N/A"
            },
            "rating": {
                "value": "3: reject, not good enough"
            },
            "confidence": {
                "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        "number": 4,
        "invitations": [
            "ICLR.cc/2024/Conference/Submission1530/-/Official_Review",
            "ICLR.cc/2024/Conference/-/Edit"
        ],
        "domain": "ICLR.cc/2024/Conference",
        "tcdate": 1699439833342,
        "cdate": 1699439833342,
        "tmdate": 1699636081411,
        "mdate": 1699636081411,
        "license": "CC BY 4.0",
        "version": 2
    }
]