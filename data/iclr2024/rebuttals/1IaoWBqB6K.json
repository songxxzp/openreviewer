[
    {
        "title": "DiffDock-Pocket: Diffusion for Pocket-Level Docking with Sidechain Flexibility"
    },
    {
        "review": {
            "id": "RJLfJGMD58",
            "forum": "1IaoWBqB6K",
            "replyto": "1IaoWBqB6K",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission8469/Reviewer_TENj"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission8469/Reviewer_TENj"
            ],
            "content": {
                "summary": {
                    "value": "The paper extends the recently published diffusion-based docking tool DiffDock. DiffDock was originally developed for the challenging task of blind docking. In blind docking the task is to predict the bounded structure of a ligand combined with a protein without additional information as for example potential protein pockets. The following paper extends the idea of DiffDock in the sense of reducing the docking task to a given protein pocket and therefore being able to increase the complexity by considering the flexibility of the amino acid side chains."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "In my opinion, the paper possesses four key strengths:\n\n1.\tThe paper extends a state-of-the-art docking method to new functionality by modeling the flexibility of the side chain.\n2.\tIt includes an extensive experimental section and a detailed ablation study in the appendix. I appreciate the authors' transparency regarding a potential bottleneck related to steric clashes when compared to energy-based methods (such as GNINA), as illustrated in Table 5.\n3.\tThe authors have chosen a robust baseline and significantly improved upon it depending on the task. The results obtained using the Apo structures appear quite promising.\n4.\tFinally, the paper is well-written. The authors present the method, its underlying ideas, and the problem under consideration in a structured manner, along with a comprehensive appendix."
                },
                "weaknesses": {
                    "value": "I find one weakness in the paper: its novelty.\n\nThe proposed method, as I understand it (please refer to the 'Questions' section), appears to be primarily a version of DiffDock trained on the protein pocket along with the ligand, rather than the entire holo structure. While I acknowledge that incorporating the flexibility of side chains is a new feature for DiffDock, it's important to note that this concept has already been included in other diffusion-based docking tools. For instance, NeuralPlex, although unfortunately not publicly available.\n\nAn intriguing and substantial contribution would have been if the authors had enhanced the PoseBuster benchmark, a topic they discuss in the appendix. From my perspective, it seems this was not the case.\n\nI still have some questions and therefore I am waiting for the rebuttal to give a definitive decision. Although, it is a thoroughly written paper with good results I am hesitant to accept the paper to ICLR due to in my opinion only a slight extension to DiffDock."
                },
                "questions": {
                    "value": "- Do you perform sidechain conformer matching (described in Sec. 3.3) only for the training dataset or as well for the results section, i.e. Table 1 & 2?\n- Can you asses or elaborate more on the improvements compared to DiffDock?\n  - In Table 1 the improvements on the Apo Structures seem quite significant? Is it purely because you restrict yourself to the pocket? \n  - Did you perform significant changes / improvements to the architecture?\n-\tIn Table 2 the results for GNINA and SMINA for the holo structure seem to look quite bad. But isn\u2019t the sidechain for the holo structure already correct? \n-\tFor training the confidence model, you write: \u201cThe predictions are then compared with the ground truth training data to assess their quality.\u201d (Sec. 3.4 \u201cTraining\u201d). How do you assess the quality? Is it different to how DiffDock performed this task?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 1,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission8469/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698393253590,
            "cdate": 1698393253590,
            "tmdate": 1699637057725,
            "mdate": 1699637057725,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "0CVa6TQHbz",
                "forum": "1IaoWBqB6K",
                "replyto": "RJLfJGMD58",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8469/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8469/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Response part 1"
                    },
                    "comment": {
                        "value": "We would like to thank the reviewer for their thorough and detailed review and are happy to address all the suggestions and incorporate them into a revised version of the paper.\n> I find one weakness in the paper: its novelty.\n\n> The proposed method, as I understand it (please refer to the 'Questions' section), appears to be primarily a version of DiffDock trained on the protein pocket along with the ligand, rather than the entire holo structure. While I acknowledge that incorporating the flexibility of side chains is a new feature for DiffDock, it's important to note that this concept has already been included in other diffusion-based docking tools. For instance, NeuralPlex, although unfortunately not publicly available.\n\nThank you for raising your concerns. In this work, we tried to combine several technical contributions and existing solutions into a clean and working real-world solution addressing the community\u2019s main concerns for deep learning docking. The variety of changes we introduced (see next question) lead to a significant improvement in performance. We see that as a valuable contribution next to novel technical contributions. We tried to highlight the novelty of our work in a global comment.\n\nRegarding your comparison with NeuralPLexer, we would like to point out that although both approaches use diffusion, they operate completely differently. This difference is for both, the prediction of the ligand pose and the prediction of sidechains. NeuralPLexer works with a different training procedure, where they mask out certain parts of the protein and try to reproduce the correct positions. Our approach, however, operates on a reduced product space where we learn the torsional angles of the sidechains. We believe that our approach is a novel alternative. \n\nIn addition, we directly tackle the problem of known-pocket docking (large limitation of many existing deep learning docking methods) and provide publicly available code for the community to use and build on.\n\n> Can you asses or elaborate more on the improvements compared to DiffDock?\n\n> Did you perform significant changes / improvements to the architecture?\n\nThe two most apparent contributions are the inclusion of the binding pocket in the prediction and the modeling the sidechains close to the binding site as flexible. Introducing the flexibility of the sidechains requires changing the architecture, as the model needs to learn the scores of the torsional angles of the sidechains as well. Compared to the existing blind docking software DiffDock, we additionally introduce a graph to the score model that uses all atoms of the protein, instead of only the C-Alpha atoms. This is only possible due to the introduction of the binding pocket, as this reduces the memory footprint and computational effort needed for operating on all the atoms. This atom-based graph also enables modeling the sidechain atoms. Having this additional information on all the atoms and predicting the sidechain positions is also necessary to learn to avoid steric clashes, which the model would not be able to do otherwise.\n\nTo improve the performance on a wider variety of protein conformations, we have introduced split-based training that uses computationally generated ESMFold predictions whenever they are similar to the ground truth crystal structures. In that context, we have introduced sidechain conformer matching that aligns the sidechains of the apo structures such that they can be used efficiently during training. We carefully introduced a penalty term into this process that reduces the number of steric clashes, so that computationally generated (apo) structures can be used in a meaningful way during training.\n\nWe further introduced a confidence model that was trained to jointly predict the quality of the sidechains and the ligand pose. This approach was fine-tuned as well on computationally generated structures so that it can better assess the quality of diverse structures. To further enhance the results and to prevent the problem of overdispersion at inference, we introduce a low-temperature sampling approach. \n\nTo this end, we demonstrated that the proposed changes allow us to outperform existing approaches for cross-docking and docking to PDBBind in almost all benchmarks. Given the critical importance of these tasks, we believe our work and changes can have a significant impact on a wide variety of biological research."
                    }
                },
                "number": 10,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8469/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700739163767,
                "cdate": 1700739163767,
                "tmdate": 1700739163767,
                "mdate": 1700739163767,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "hdkXZVRTps",
                "forum": "1IaoWBqB6K",
                "replyto": "RJLfJGMD58",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8469/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8469/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Response part 2"
                    },
                    "comment": {
                        "value": "> Do you perform sidechain conformer matching (described in Sec. 3.3) only for the training dataset or as well for the results section, i.e. Table 1 & 2?\n\nThank you for raising these questions. Although we already tried to clarify this in the initial version of the paper, we now see that it still left some room for interpretation and ambiguity. We have reworked section 3.3 to be clearer, but would still like to elaborate on your questions.\n\nIn short, we only perform conformer matching during training and only for apo structures. During inference we apply random noise to the sidechains, so performing conformer matching would not provide any helpful information on the sidechain positions for the model. (It could however leak the ground truth crystal test data into the selection of the pocket and flexible sidechains, which is another reason why we do not use it during inference.) The results presented in Table 1 and 2 were performed without sidechain conformer matching. We consider the results one could achieve with sidechain conformer matching as the optimal target. Hence, in Figure 4 we display the best achievable result with conformer matching.\n\n> In Table 1 the improvements on the Apo Structures seem quite significant? Is it purely because you restrict yourself to the pocket?\n\nTo answer your question, we have added further evaluation in Appendix F.2 of the revised manuscript which emphasizes the importance and advantage of flexible docking. Although reducing the protein to its pocket already significantly improves docking for ESMfold structures, our results clearly show the benefit of modeling flexibility and the apo/holo split. \n\n> In Table 2 the results for GNINA and SMINA for the holo structure seem to look quite bad. But isn\u2019t the sidechain for the holo structure already correct?\n\nThe holo structure is indeed already correct, however, in this case all the methods randomly perturb the angles of the bonds of the flexible sidechains. This means that for the flexible sidechains, no ground truth atom positions are used for the predictions (except the backbone atoms). This functionality was already integrated in SMINA and GNINA and we handled it similarly for our method as to not introduce any data leakage. This explains the poor performance of these methods despite correct input. We clarified this in Section 4 in the revised version of our manuscript. \n\nPerhaps it is also important to mention that although they do not specifically talk about their sidechain prediction accuracy, in the paper where its authors introduce GNINA they themselves report that their sidechain prediction model does not improve the overall accuracy of docking:\n\"the difference in ligand RMSD between flexible and rigid docking for the top pose varies widely between systems and there in no clear advantage in flexible docking\" [2].\nWhich we can also witness in our reported results in Table 1 and 2. Since GNINA does much better on rigid docking, the much worse docking on holo-crystal structures with flexibility can be attributed (together with the more computationally difficult problem of flexibility modeling) to the incorrect estimation of sidechain conformations, which would align with our findings and reported results.\n\n> For training the confidence model, you write: \u201cThe predictions are then compared with the ground truth training data to assess their quality.\u201d (Sec. 3.4 \u201cTraining\u201d). How do you assess the quality? Is it different to how DiffDock performed this task?\n\nWe tried to further clarify this in Appendix C.2. Yes, our confidence model is different because it aims to predict the quality of both the sidechain positions and the ligand pose simultaneously. We train the confidence model by predicting whether the ligand pose is within 2A of the ground truth and the sidechain atoms within 1A. This way, our confidence model approximates the joint probability that both the ligand and sidechain prediction is correct.\n\n\n[1] Buttenschoen, M., et al., \"PoseBusters: AI-based docking methods fail to generate physically valid poses or generalise to novel sequences,\" 2023.\n\n[2] McNutt, A., et al. \"GNINA 1.0: Molecular docking with deep learning,\" in Journal of cheminformatics, vol. 13, no. 1, pp. 1\u201320, 2021."
                    }
                },
                "number": 11,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8469/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700739266175,
                "cdate": 1700739266175,
                "tmdate": 1700739532130,
                "mdate": 1700739532130,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "ZLyLtixImE",
            "forum": "1IaoWBqB6K",
            "replyto": "1IaoWBqB6K",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission8469/Reviewer_Mo9h"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission8469/Reviewer_Mo9h"
            ],
            "content": {
                "summary": {
                    "value": "The paper introduces \"DiffDock-Pocket\", a diffusion-based algorithm tailored for molecular docking, emphasizing the prediction of ligand poses within specific protein binding pockets. It also incorporates receptor flexibility and sidechain positioning near the binding site. The model showcases state-of-the-art performance on the PDBBind benchmark, with exceptional results when applied to in-silico generated structures."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "4 excellent"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "1. The proposed method builds upon DiffDock, incorporating sidechain prediction, which results in superior performance in site-specific docking compared to other existing methods.\n2. The paper is well written and follows a clear and logical structure, facilitating understanding and evaluation of the proposed method.\n3. The paper provides an anonymous repository with resources to replicate the presented results, which significantly contributes to the advancement of this field of research."
                },
                "weaknesses": {
                    "value": "1. The technical contribution is incremental. The paper mainly extands DiffDock\u2019s idea with sidechain prediction\n2. The paper claims that previous models like DiffDock only consider rigid receptor. However, this might be misleading as previous models incorporate just residue-level features, which do not utilize, and thus, do not need to incoorporate sidechain. The primary distinction is that DiffDock-Pocket extends DiffDock by adding sidechain prediction. Both models do not account for backbone flexibility, which should be clarified.\n3. The paper predominantly addresses site-specific docking, where the ground truth pocket is provided. A more comprehensive evaluation, including scenarios where the pocket is predicted by other models, would enhance the practical applicability of the findings.\n4. The method for curating the pocket center and selecting sidechains for modeling flexibility (within 3.5\u00c5 of any ligand) relies on the ligand's position, which could lead to potential data leakage. While the paper mentions that users will manually set these parameters during inference, further details and implications of this process need clarification.\n5. The significant improvement observed with in-silico structures generated by ESMFold2 might be attributed to additional training on this dataset. Further ablation studies are necessary when no in-silico structures are used for training.\n6. Previous work [1] has demonstrated that traditional methods like SMINA can achieve rapid inference speeds and high performance in docking when the pocket location is provided. The paper indicates that these traditional methods become significantly slower when sidechain flexibility is considered. A more comprehensive comparison, including performance and speed evaluations of traditional models with and without sidechain flexibility, would provide a more balanced and informative perspective.\n\n[1]. Yu, Yuejiang, et al. \"Do deep learning models really outperform traditional approaches in molecular docking?.\"\u00a0*arXiv preprint arXiv:2302.07134*\u00a0(2023)."
                },
                "questions": {
                    "value": "1. Is there any ablation study conducted to assess the impact of training on structures predicted by ESMFold?\n2. Have there been any experiments conducted on training DiffDock with a given pocket but without considering sidechain flexibility? Such experiments could better highlight the benefits of modeling sidechain flexibility."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 2,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission8469/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698814305381,
            "cdate": 1698814305381,
            "tmdate": 1699637057594,
            "mdate": 1699637057594,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "OairZibFRC",
                "forum": "1IaoWBqB6K",
                "replyto": "ZLyLtixImE",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8469/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8469/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Response part 1"
                    },
                    "comment": {
                        "value": "We would like to thank you for your thorough feedback and have tried to address all your concerns in a revised version of the document. We are happy to answer all your remaining questions.\n> The technical contribution is incremental. The paper mainly extands DiffDock\u2019s idea with sidechain prediction\n\nThank you for raising your concerns about our contributions. In this work, we tried to combine several technical contributions and existing solutions into a clean and working real-world solution addressing the community\u2019s main concerns for deep learning docking. The variety of changes we introduced (all-atom architecture, pocket reduction, sidechain flexibility, training on computationally generated structures, sidechain conformer matching, low-temperature sampling, \u2026) lead to a significant improvement in performance. We see that as a valuable contribution next to novel technical contributions. We tried to highlight the novelty of our work in a global comment.\n\n> The paper claims that previous models like DiffDock only consider rigid receptor. However, this might be misleading as previous models incorporate just residue-level features, which do not utilize, and thus, do not need to incoorporate sidechain. The primary distinction is that DiffDock-Pocket extends DiffDock by adding sidechain prediction. Both models do not account for backbone flexibility, which should be clarified.\n\nThank you for bringing this to our attention. We agree with your points and have changed the document in various places to tone down and clarify these claims throughout the paper. However, it is important not to underestimate the importance of explicitly predicting the sidechain rearrangement. While it is true that DiffDock can implicitly reason about flexible sidechains the fact that it does not predict the sidechain rearrangement makes its prediction in case of flexible sidechains very hard to use in any downstream application like affinity prediction where accurate atomic structures are necessary.\n\n> The paper predominantly addresses site-specific docking, where the ground truth pocket is provided. A more comprehensive evaluation, including scenarios where the pocket is predicted by other models, would enhance the practical applicability of the findings.\n\nAlthough not on the PDBBind dataset, but for cross-docking, we have evaluated a variety of different pocket definitions for our approach in Appendix F.7, where we demonstrate good performance even with out-of-distribution pocket definitions. Furthermore, we believe that our model could be fine-tuned to operate on pockets predicted by a certain approach to create an end-to-end approach. \n\n> The method for curating the pocket center and selecting sidechains for modeling flexibility (within 3.5\u00c5 of any ligand) relies on the ligand's position, which could lead to potential data leakage. While the paper mentions that users will manually set these parameters during inference, further details and implications of this process need clarification.\n\nWe believe our pocket definition to be robust, as it is defined by the mean of the C-Alpha atoms close to the binding site instead of relying on the ligand atoms. Similarly, the selection of the flexible sidechains has very little potential for data leakage. The way we handle the flexible sidechains is by first obscuring the sidechain positions with random noise and then creating the graphs and edges with this obscured information. This way, the model is not aware which sidechains are flexible, reducing the possibility of data leakage. We appreciate this comment, and have clarified this in Appendix C.4."
                    }
                },
                "number": 8,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8469/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700738916569,
                "cdate": 1700738916569,
                "tmdate": 1700738916569,
                "mdate": 1700738916569,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "8RJ5Iapboa",
            "forum": "1IaoWBqB6K",
            "replyto": "1IaoWBqB6K",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission8469/Reviewer_XNuQ"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission8469/Reviewer_XNuQ"
            ],
            "content": {
                "summary": {
                    "value": "The paper presents a ligand docking model, DiffDock-Pocket, that, given a target receptor pocket, predicts the conformation of a given ligand in that pocket, as well as the conformation of the pocket\u00b4s side chains. The model claims state-of-the-art performance in ligand docking, given either the apo or holo form of the receptor. Notably, the performance increase compared to other models is especially pronounced in the apo case."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "1. The paper is well-written and the methodology is presented nicely.\n2. The way of considering the all atom structure of the side chains pertaining to a target pocket in the diffusion process is novel.\n5. The results are convincing."
                },
                "weaknesses": {
                    "value": "1. The model assumes prior knowledge of the pocket. Perhaps one might be interested in allosteric binding sites.\n2. The details of the differences between the diffusion process of DiffDock-Pocket and DiffDock are not entirely clear.\n3. It is not clear on which subsets of the data the model performs well and vice versa. E.g., what about membrane proteins?\n4. The way in which sidechain conformer matching step affects the results is not entirely clear."
                },
                "questions": {
                    "value": "1. How much information relevant to the pocket-docking task is lost by discarding amino acids that are too far away from the binding site? One scenario that comes to mind is membrane receptors, where conformational changes on the extracelluar side induced conformational changes on the intercellular side.\n2. When performing \"sidechain conformer matching\", are the bond lengths of the computationally generated structures heterogeneous? Can you elaborate on how the imperfect conformer matching affects the results?\n3. Does the diffussion on the product space come with the requirement that the torsional updates don't induce angular velocity, as in DiffDock?\n4. How do the receptor's atom and amino acid level graphs tie into eachother?\n5. In Table 1, there is clearly a performance increase with DiffDock-Pocket, particularly in the apo protein case. When comparing the apo and holo form of examine proteins, what is the proportion of conformational changes due to backbone flexibility and conformational changes due to side chain flexibility? How would the model perform if the majority of the conformational changes were in the backbone?\n6. Would it be possible to use DiffDock to identify the pocket and then DiffDock-Pocket to refine the prediction, in an end-to-end fashion?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "8: accept, good paper"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 3,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission8469/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698839458015,
            "cdate": 1698839458015,
            "tmdate": 1699637057483,
            "mdate": 1699637057483,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "snXDjls2zL",
                "forum": "1IaoWBqB6K",
                "replyto": "8RJ5Iapboa",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8469/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8469/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Response part 1"
                    },
                    "comment": {
                        "value": "We appreciate the effort and knowledge that went into writing this review and are happy to address all remaining questions and concerns.\n\n> The model assumes prior knowledge of the pocket. Perhaps one might be interested in allosteric binding sites.\n\n> How much information relevant to the pocket-docking task is lost by discarding amino acids that are too far away from the binding site? One scenario that comes to mind is membrane receptors, where conformational changes on the extracelluar side induced conformational changes on the intercellular side.\n\nWith regard to docking results on the benchmarked datasets, we can report that having information on the whole protein, as opposed to the reduced pocket, does not significantly influence predictions on average. As we describe in section 3.1, pocket knowledge can also be introduced by centering the ligand\u2019s initial random configuration around the pocket\u2019s center without removing any amino acids. We have evaluated this method and compared it to the pocket reduction method on holo-crystal and ESMFold structures and, in both cases, found that the pocket reduction method does not lose accuracy. In some cases, it even slightly increases the percentage of ligand structure predictions under the threshold of 2 Angstroms RMSD. However, by removing parts of the protein, the model performs significantly faster. We used this to increase the size of the model with the caveat that, in some rare instances, the model might make worse predictions but can achieve better accuracy overall. We thank you for the feedback, and have updated the document to highlight the retained performance. \n\nRegarding conformation changes outside of our pocket, it is possible to manually set which amino acids are retained and which amino acids are modeled flexible. Nevertheless, we anticipate that our current model may not perform optimally with choices that are different from the training data (i.e., by modeling amino acids flexible that are far from the ligand). It would, however, be a very useful direction to explore when training a model, perhaps by allowing a user to select two regions for flexible modeling or by randomly picking which amino acids are modeled flexible. We thank the reviewer for bringing it to our attention and are considering a revision that was trained in such a way.\n\n> It is not clear on which subsets of the data the model performs well and vice versa. E.g., what about membrane proteins?\n\nThank you for bringing this to our attention. We believe this to be a strong addition to our paper and have added a table comparing the docking performance for membrane proteins to Appendix F.3. While the number of membrane proteins in our test set is limited, we still believe that it can give insight into the model\u2019s performance on these types of proteins. \n\n> The details of the differences between the diffusion process of DiffDock-Pocket and DiffDock are not entirely clear.\n\nThank you for pointing this out. We tried to present the underlying algorithm for training and inference (i.e., diffusion) in a similar fashion as the authors of DiffDock did, so that it can be compared. Please compare Algorithm 2 and 3 in our paper with Algorithm 1 and 2 in DiffDock. As for the diffusion process itself, we introduce a new term $\\delta$ that depends on the sidechains. The aim is to approximate the conformer matched sidechains in the loss.\n\n> The way in which sidechain conformer matching step affects the results is not entirely clear.\n\n> When performing \"sidechain conformer matching\", are the bond lengths of the computationally generated structures heterogeneous? Can you elaborate on how the imperfect conformer matching affects the results?\n\nThank you for raising these questions. Although we already tried to clarify these points in the initial version of the paper, we now see that it still left some room for interpretation and ambiguity. We have reworked section 3.3 to be clearer and also address these concerns/questions, but would still like to elaborate on your questions.\n\nSidechain conformer matching is a necessity to use computationally generated structures for training, while still learning correct torsional angles. The bond lengths between the generated structures and the holo crystal structures can differ, and therefore it is not possible to perfectly match the holo structure by only torsional rotations. The different bond lengths can occur because of inaccuracies of in-silico modeling, as well as chemical changes the bonds undergo during binding. Hence, when we would simply apply the same angles that the holo structure has onto the in-silico/apo structure, we would not necessarily produce the conformation that aligns closest to the holo-structure. To minimize this issue, we only use computationally generated structures during training that are similar enough (in terms of RMSD) to the ground truth holo crystal structures."
                    }
                },
                "number": 5,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8469/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700738722764,
                "cdate": 1700738722764,
                "tmdate": 1700738722764,
                "mdate": 1700738722764,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "mh2OObP0cF",
                "forum": "1IaoWBqB6K",
                "replyto": "8RJ5Iapboa",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8469/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8469/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Response part 3"
                    },
                    "comment": {
                        "value": "> Would it be possible to use DiffDock to identify the pocket and then DiffDock-Pocket to refine the prediction, in an end-to-end fashion?\n\nWe see two different ways on how predictions in an end-to-end fashion could be achieved with DiffDock. Firstly, one could construct a joint training of both models, where in the first step the architecture of DiffDock predicts the ligand pose, and then this is used as a starting position for DiffDock-Pocket. Both models could then be optimized jointly, with the potential to improve blind docking albeit a longer runtime. However, due to the long training time such a procedure would take, it is not possible to address this within the rebuttal period.\n\nThe second way would include using both models with the currently trained models in sequence. First, DiffDock predicts a ligand pose, which is then used as an input to DiffDock-Pocket. Here, one has to consider a suitable center for the pocket. Since DiffDock can predict ligands in multiple pockets, we can either only use the top-1 prediction, or use multiple samples from DiffDock to first identify the pockets. Multiple ligand positions in the pocket could then be averaged to produce a robust prediction for the center. As DiffDock can predict a ligand pose within 5A in 63.2% of cases [2, Table 5], it can be meaningful to further refine the results with DiffDock-Pocket.\n\nWe believe that both approaches are interesting and thank the reviewer for bringing this to our attention and would like to explore this further.\n\n[1] Jordan J. Clark, et al., \"Inherent versus induced protein flexibility: Comparisons within and between apo and holo structures,\" in PLOS Computational Biology, vol. 15, no. 1, pp. e1006705, 2019.\n\n[2] Gabriele Corso, et al., \"DiffDock: Diffusion Steps, Twists, and Turns for Molecular Docking,\" in International Conference on Learning Representations, 2023."
                    }
                },
                "number": 7,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8469/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700738790959,
                "cdate": 1700738790959,
                "tmdate": 1700738821045,
                "mdate": 1700738821045,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "CL5iUjgLry",
            "forum": "1IaoWBqB6K",
            "replyto": "1IaoWBqB6K",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission8469/Reviewer_rxhe"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission8469/Reviewer_rxhe"
            ],
            "content": {
                "summary": {
                    "value": "This article establishes a diffusion model to generate the binding pocket of proteins. The author demonstrates that the structure generated by DIFFDOCK-POCKET outperforms other approaches."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "The structure of the binding pocket is difficult to predict due to multiple conformations, the absence of complex PDB data, etc. The diffusion model established in this article may provide some insights into solving the problem of predicting the structure of binding pockets bound with ligands."
                },
                "weaknesses": {
                    "value": "1. The authors do not present the performance of the model on specific proteins but provide only the overall performance. In other words, the authors should provide 2-3 examples comparing the 3D structure (atom level) of the pocket with the PDB structure.\n2. In the introduction, \u201cThe 3D structure of each protein governs the possible interaction partners and, consequently, determines its function.\u201d Not all proteins bind other molecules and then determine their functions, such as antibodies, IDP, structural proteins like 1POK, etc.\n3. The performance is only compared with computational methods (SMINA/GNINA). Other deep learning methods are missed."
                },
                "questions": {
                    "value": "1. In the abstract, \u201cWhen a small molecule binds to a protein, the 3D structure of the protein and its function change.\u201d Why will the function of protein change when it binds molecules? The function of a protein is decided by its sequence and structure.\n2. In the results section, the authors only use RMSD to assess the performance of the models. Why don't they use other standards at the same time, such as TM-score, to evaluate the performance?\n3. The authors only use an RMSD below 2 angstroms in Table 1 and 1 angstroms in Table as a binary criterion. What makes this discrepancy?  What are the successful rates for different methods at 1/1.5/2 angstroms?\n4. In the introduction, \u201cWhen a molecule (ligand) interacts with a protein (receptor) and binds to it, they form a new complex with a different 3D structure and function.\u201d How to quantitively define the \u201cnew\u201d and \u201cdifferent\u201d?\n5. What about the performance of VINA for docking prediction in PDBBind docking?  Also why VINA's performance is significantly worse than other methods in Table 3? It is generally believed the best method in terms of binding prediction."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "3: reject, not good enough"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 4,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission8469/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698849751553,
            "cdate": 1698849751553,
            "tmdate": 1699637057373,
            "mdate": 1699637057373,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "KEwtiCFzPh",
                "forum": "1IaoWBqB6K",
                "replyto": "CL5iUjgLry",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8469/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8469/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Response part 1"
                    },
                    "comment": {
                        "value": "Thank you very much for your specific and thorough feedback that helps us to improve our work. We responded to all your questions below and have addressed all your concerns in our paper.\n\n> The authors do not present the performance of the model on specific proteins but provide only the overall performance. In other words, the authors should provide 2-3 examples comparing the 3D structure (atom level) of the pocket with the PDB structure.\n\nWe believe this to be an excellent illustration of our method and have added visualizations of the reverse diffusion process for various proteins to the [GitHub repository]((https://anonymous.4open.science/r/DiffDock-Pocket-AQ32/visualizations/README.md)) and renderings of the final poses to Appendix G.\n\nAdditionally, we also evaluated our model on membrane proteins in Appendix F.3. We believe that this further addresses your concerns about the model\u2019s performance on specific (types of) proteins.\n\n> In the introduction, \u201cThe 3D structure of each protein governs the possible interaction partners and, consequently, determines its function.\u201d Not all proteins bind other molecules and then determine their functions, such as antibodies, IDP, structural proteins like 1POK, etc.\n\n> In the abstract, \u201cWhen a small molecule binds to a protein, the 3D structure of the protein and its function change.\u201d Why will the function of protein change when it binds molecules? The function of a protein is decided by its sequence and structure.\n\n> In the introduction, \u201cWhen a molecule (ligand) interacts with a protein (receptor) and binds to it, they form a new complex with a different 3D structure and function.\u201d How to quantitively define the \u201cnew\u201d and \u201cdifferent\u201d?\n\nThank you for pointing out the inaccuracy in our wording. We addressed all the places in the paper, clarified the used expressions, and made it more specific. While our prior wording was inaccurate, it was motivated by our objective to emphasize the significant role that molecular binding can play in enabling or inhibiting a protein to fulfill its function(s). Our goal to emphasize this was especially driven by our method's intended application in drug discovery efforts. We hope that the revision makes this clearer while being more accurate. \n\n> The performance is only compared with computational methods (SMINA/GNINA). Other deep learning methods are missed.\n\nAs we reported in our related work review, deep learning methods generally do not account for binding sites or flexibility. NeuralPLexer [1], a recent deep learning model that does predict receptor atoms, does not provide available code, thus making evaluation infeasible. Similarly, the source code of DockGPT (Generative Protein Transformer for Docking) [2] is not available either. We believe that this is another benefit of our method, as we have made the source code immediately available to the public.\n\nBenchmarking against DiffDock is a viable alternative, not only for showcasing the enhanced accuracy resulting from incorporating pocket knowledge and sidechain flexibility in our model but also because it claims to have nearly doubled the accuracy compared to previous blind docking deep learning models [6] and is considered one of the best deep learning methods for docking [8]. We thank you for your suggestion, and have clarified this in the paper.\n\nIf you are aware of any deep learning methods that perform better than SMINA/GNINA/DiffDock on site-specific docking that are publicly available, we would be happy to incorporate them into another revision."
                    }
                },
                "number": 1,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8469/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700738231216,
                "cdate": 1700738231216,
                "tmdate": 1700738354906,
                "mdate": 1700738354906,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "fqYCfawjaW",
                "forum": "1IaoWBqB6K",
                "replyto": "CL5iUjgLry",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8469/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8469/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Response part 2"
                    },
                    "comment": {
                        "value": "> In the results section, the authors only use RMSD to assess the performance of the models. Why don't they use other standards at the same time, such as TM-score, to evaluate the performance?\n\nThank you for raising your concerns. In our instance, the TM-score would not be a suitable metric to evaluate the performance because our approach keeps the backbone rigid and the TM-score is used to compute the distance between the C-alpha atoms of the protein structures. An extension of the TM-score to all atom positions is not straightforward, as it uses normalizing constants that are specific to the backbone. Changing these computations could be confusing to some readers, as the calculated scores would not have the same meaning anymore (i.e., different thresholds for good predictions). We believe that the sidechain RMSD is therefore a more suitable metric to compare semi-flexible approaches, as used by previous work [5].\n\n> The authors only use an RMSD below 2 angstroms in Table 1 and 1 angstroms in Table as a binary criterion. What makes this discrepancy? What are the successful rates for different methods at 1/1.5/2 angstroms?\n\nWe selected the percentage of structures with RMSD below 2 as our metric because they were used by prior works to assess the quality of docking procedures [3,4,5]. Specifically, all methods that we compared DiffDock-Pocket against relied on this metric in their respective publications.\n\nSimilarly, for sidechain RMSD, we used the metric also showcased by GNINA (RMSD below 1A) [5]. The threshold is in this case lower because the backbone of the protein is fixed, allowing less variance in the RMSD. In our tests, we saw that when applying random torsional angles to the sidechain bonds, the mean RMSD was only 3.5 Angstroms. We thus believe that a lower threshold than for the ligand is a suitable evaluation. We thank you for raising your concerns and have updated this in our paper to reflect the reasoning.\n\nWe fully agree with you that a single binary threshold cannot capture the performance of our docking procedure. We have hence reported the cumulative distribution results for sidechain RMSD results in Figure 4 (and Figure 6) and for docking RMSD in Figure 5 in the appendix. These figures display what percentage of predicted structures are below any given threshold. Table 8, 10, and 11 show the percentiles, which can be used for a more comprehensive evaluation as well. In almost all instances, the performance of the methods at different thresholds aligns with the binary criterion, and DiffDock-Pocket outperforms other methods. For holo-crystal structures, we see that GNINA achieves a slightly higher percentage under 1 Angstrom docking RMSD. However altogether this affects less than 20 percent of generated structures."
                    }
                },
                "number": 2,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8469/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700738436234,
                "cdate": 1700738436234,
                "tmdate": 1700739427567,
                "mdate": 1700739427567,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "IKFjggtviJ",
                "forum": "1IaoWBqB6K",
                "replyto": "CL5iUjgLry",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8469/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8469/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Response part 3"
                    },
                    "comment": {
                        "value": "> What about the performance of VINA for docking prediction in PDBBind docking? Also why VINA's performance is significantly worse than other methods in Table 3? It is generally believed the best method in terms of binding prediction.\n\nIn selecting our baselines, we aimed to benchmark against freely available state-of-the-art models in deep learning and score-based modeling. For selecting our search-based modeling, we considered that the method GNINA has been reported to consistently outperform VINA on redocking and cross-docking tasks when the binding pocket was defined [3]. This can also explain why it performs significantly better than VINA in Table 3 and hence, why we did not include it in our site-specific docking evaluation. Finally, we would like to note that while they are considered different methods, SMINA (and GNINA) is largely based on different recombination of VINA features that were shown to provide a better performance [7]. We have updated the document to better reflect this. \n\n[1] Zhuoran Qiao., et al., \"State-specific protein-ligand complex structure prediction with a multi-scale deep generative model,\" 2023.\n\n[2] M. McPartlon, J. Xu. \"Deep Learning for Flexible and Site-Specific Protein Docking and Design\" in bioRxiv 2023.\n\n[3] Alhossary, A., et al., \"Fast, accurate, and reliable molecular docking with QuickVina 2,\" in Bioinformatics, vol. 31, no. 13, pp. 2214-2216, 2015.\n\n[4] C. Hassan. \"Protein-Ligand Blind Docking Using QuickVina-W With Inter-Process Spatio-Temporal Integration,\" in Scientific Reports, vol. 7, no. 1, pp. 15451, 2017.\n\n[5] McNutt, A., et al., \"GNINA 1.0: Molecular docking with deep learning,\" in Journal of cheminformatics, vol. 13, no. 1, pp. 1\u201320, 2021.\n\n[6] Corso, G.,, et al., \"DiffDock: Diffusion Steps, Twists, and Turns for Molecular Docking,\" in International Conference on Learning Representations, 2023. \n\n[7] Koes, David Ryan, Matthew P. Baumgartner, and Carlos J. Camacho. \"Lessons learned in empirical scoring with smina from the CSAR 2011 benchmarking exercise.\" Journal of chemical information and modeling 53.8 (2013): 1893-1904.\n\n[8] Buttenschoen, M., et al., \"PoseBusters: AI-based docking methods fail to generate physically valid poses or generalise to novel sequences,\" 2023."
                    }
                },
                "number": 3,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8469/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700738453844,
                "cdate": 1700738453844,
                "tmdate": 1700738526147,
                "mdate": 1700738526147,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    }
]