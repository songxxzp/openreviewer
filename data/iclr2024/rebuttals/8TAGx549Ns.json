[
    {
        "title": "REX: Rapid Exploration and eXploitation for AI agents"
    },
    {
        "review": {
            "id": "qBHRqqDfjA",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission2031/Reviewer_1Dq3"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission2031/Reviewer_1Dq3"
            ],
            "forum": "8TAGx549Ns",
            "replyto": "8TAGx549Ns",
            "content": {
                "summary": {
                    "value": "The paper motivates their method by identifying current ICL-agents lack: 1) systematic rewards incorporation, 2) Exploration-Exploitation trade-off, 3) Accuracy and latency. They introduced a method called Rapid Exploration and eXploitation for AI agents (REX) to address the aforementioned issues.\n\nIn particular, REX uses MCTS as the base search algorithm to"
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "- The paper explores a very relevant topic that is less looked at, which is the exploration problem in reasoning tasks.\n- The paper is easy to read, explains their method well\n- The motivation of exploration and exploitation is clear and is a topic that needs attention in LLM-based reasoning/agents"
                },
                "weaknesses": {
                    "value": "- The evaluation is somewhat lacking, only evaluated on blocksworld and GSM8K, and ablations were missing (only statistics of # of actions were given), no intuition on how to tune the hyperparameters B,K,C\n- Baselines is missing, see question 1\n- some implementation details are missing, see question 2\n- needs more intuition/analytics for how REX works, which one is better in what situation, when to use it, see question 3 & 4"
                },
                "questions": {
                    "value": "How come RAP scores are missing for every evaluated environment? It is mentioned RAP is not compatible with OAI APIs, maybe supply more results with open-source models?\n\nhow was each action generated? If im not mistaken they are each reasoning steps. And if temperature is 0, how come there are variations to the steps generated when prompted twice? is it caused by using previous history of steps in the UCB prompt (State-Action-Feedback in figure 4)?\n\nDo you have some intuition on when is REX-UCL better than REX-UCB and vice-versa? (Paper only included REX-UCL is better at exploration than REX-R)\n\nHow come when more steps (6) is required, method is worse than Reflexion? Shouldn't it be the opposite, since REX employs search trees. Do you have any intuition?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "2: You are willing to defend your assessment, but it is quite likely that you did not understand the central parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 1,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission2031/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1697442842769,
            "cdate": 1697442842769,
            "tmdate": 1699636135028,
            "mdate": 1699636135028,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "kXObMarE8w",
                "forum": "8TAGx549Ns",
                "replyto": "qBHRqqDfjA",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission2031/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission2031/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "Thank you for your time and valuable feedback! We have tried to address your concerns below:\n\n---\nWeakness:\n\n---\n**The evaluation is somewhat lacking, only evaluated on blocksworld and GSM8K, and ablations were missing (only statistics of # of actions were given), no intuition on how to tune the hyperparameters B,K,C**\n* The primary rationale behind selecting Blocksworld and GSM8K is rooted in their suitability for evaluating distinct facets: Blocksworld provides an ideal dataset for assessing the planning capability of LLM and its respective technique, while GSM8K offers a suitable dataset for evaluating problem-solving abilities. We consider these two categories of datasets, focusing on Planning and Problem Solving, as strong benchmarks for our evaluation.\n* B, K, C values we set based on the grid search technique. We set a reasonable range for all the parameters - $1 \\leq C \\leq 10000$\n, $1 \\leq B \\leq 1000$, $1 \\leq K \\leq 1000$ and ran a grid search to approximate the values.\n\n\n---\nQuestions:\n\n---\n\n**How come RAP scores are missing for every evaluated environment? It is mentioned RAP is not compatible with OAI APIs, maybe supply more results with open-source models?**\\\nWe added RAP to demonstrate its slower performance compared to REX in problem-solving. Reflexion and CoT were used as other advanced techniques for performance comparison.\n\n**how was each action generated? If im not mistaken they are each reasoning steps. And if temperature is 0, how come there are variations to the steps generated when prompted twice? is it caused by using previous history of steps in the UCB prompt (State-Action-Feedback in figure 4)?**\n* The LLM receives input comprising details about the problem requiring a solution, a set of few-shot examples, and potential actions derived from previous interactions, each categorized as HIGH or LOW (as outlined in Algorithm 1 in the paper). The LLM is then prompted to select an action with a higher likelihood of success at each stage. Further elaboration on the specific prompt structure and action generation is provided in Section B of the Appendix, while Section C contains illustrative examples.\n* Based on the trajectory and the final answer generated by the LLM, rewards are computed following the procedure outlined in Algorithm 1 in the paper. These rewards are utilized to calculate UCB scores (equation 1), which are further categorized as HIGH or LOW. Subsequently, these categorized scores are incorporated into the prompt for the succeeding iteration. In essence, the Agent suggests a solution, receives feedback, and then proposes a different solution in the subsequent iteration based on this received feedback. In our context, the Agent is represented by the LLM, and each prompt iteration contains updated information on the effectiveness of the (state, action) pair. Therefore, setting the temperature (t) to 0 should not inhibit the Agent from suggesting alternative solutions. More details on this is available in Section B & C of the Appendix. \n\n**Do you have some intuition on when is REX-UCL better than REX-UCB and vice-versa? (Paper only included REX-UCL is better at exploration than REX-R)**\n* Accuracy:\n    * REX-UCL demonstrates strong performance in mathematical reasoning scenarios, particularly in cases with a significantly expansive action space. For instance, in GSM8K where the number of operands can be extensive, REX-UCL effectively narrows down the action space by effectively suppressing the respective logits.\n    * REX-UCB tends to perform well in planning scenarios, where the action space is bounded. \n* Speed:\n    * REX-UCB is faster than REX-UCL, below is the number of API calls made by these two techniques for Blocksworld and GSM8K datasets: \n| Method\t| Blocksworld |\tGSM8K |\n|-----------|-------------|-----------|\n|REX-UCB|\t10\t|10|\n|REX-UCL|\t60\t|80|\n(For Blocksworld, depth(d)=6, number of passes(n)=10, number of potential actions(m)=4; For GSM8K, depth(d)=8, number of passes(n)=10, number of potential actions(m)=4)\n\n**How come when more steps (6) is required, method is worse than Reflexion? Shouldn't it be the opposite, since REX employs search trees. Do you have any intuition?**\\\nReflexion utilizes natural language feedback, whereas REX employs a simpler form of feedback, either HIGH/LOW or a scalar value. We posit that in specific scenarios, natural language feedback may convey more valuable information compared to our proposed feedback system. Consequently, Reflexion outperforms REX in the 6-step subset. Our approach is particularly advantageous in real-world situations where the true nature of an action remains ambiguous, such as when selecting an API. In such cases, we believe our strategy holds an advantage. Results in Table 1 are averaged over 10 runs/iterations. While 10 iterations suffice for a 2-step problem to find a solution, arriving at the correct solution quickly may be more challenging for a 6-step problem."
                    }
                },
                "number": 4,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission2031/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700599763811,
                "cdate": 1700599763811,
                "tmdate": 1700599763811,
                "mdate": 1700599763811,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "PBUMbeBgF8",
                "forum": "8TAGx549Ns",
                "replyto": "kXObMarE8w",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission2031/Reviewer_1Dq3"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission2031/Reviewer_1Dq3"
                ],
                "content": {
                    "comment": {
                        "value": "Thank you for your clarifications, I do not have any additional ones."
                    }
                },
                "number": 5,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission2031/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700640367431,
                "cdate": 1700640367431,
                "tmdate": 1700640367431,
                "mdate": 1700640367431,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "LTQHoaJ2zs",
            "forum": "8TAGx549Ns",
            "replyto": "8TAGx549Ns",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission2031/Reviewer_b79r"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission2031/Reviewer_b79r"
            ],
            "content": {
                "summary": {
                    "value": "The paper addresses the problem of improving LLM-based reasoning techniques through algorithms that wrap the core LLM inferences. To this end, the paper investigates ways to use Monte Carlo Tree Search with LLM reasoning, by tracking the success of different reasoning traces and using this to guide subsequent reasoning attempts. Two approaches are proposed:\n1) Planning full trajectories and using upper confidence bound (UCB) scores to guide the selection of actions from the sequence\n\t- Uses in-context learning as the mechanism to update model action reward estimates\n\t- Feedback is provided to the LLM by labeling prompt actions as high or low reward\n2) Planning at the level of individual actions and using UCB to reweight predicted token logits for different actions\n\nThree algorithms are proposed (a variant of the first approach uses only raw rewards, rather than UCB scores) and evaluated on a block arrangement task and grade school mathematics problems. The proposed algorithms are compared with two baselines from the literature and found to have higher accuracy in some tasks. The new algorithm is shown to have favorable time complexity compared to three baselines."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "# originality\nCombining search techniques with LLMs is an emerging area. MCTS is only recently being studied in this context, making the work original in that respect.\n\n# quality\nThe proposed algorithms are evaluated on two different domains with varying size and reasoning requirements. Both accuracy and time complexity are compared.\n\n# clarity\nThe figures and algorithm listings help clarify the core algorithms.\n\n# significance\nEnabling LLMs to incorporate feedback into reasoning is a crucial capability for amortizing expensive inference and coping with partially unknown application domains. This is an important problem and new techniques to address this problem - like using MCTS to structure search and track action quality and uncertainty - are important. The work aims to leverage MCTS while reducing the number of LLM invocations needed compared to prior work (RAP)."
                },
                "weaknesses": {
                    "value": "# originality\nThe MCTS formulation is similar to RAP in some ways, but differs in many key details, particularly around how the world modeling is done, where RAP explicitly models the world but REX uses the implicit model of the LLM. Augmenting LLMs with search techniques is not itself novel, but this is not a substantial lack of originality per se either.\n\n# quality\nEvaluation results only weakly support the REX models. The performance improvements are primarily for (some) small Blocksworld domains, with comparable performance on GSM8K. This makes it unclear to what degree the algorithm is an improvement over existing methods.\n\nBenchmarking is only done on relatively simple example tasks, making it difficult to assess how well these results translate to real world use cases.\n\nEvaluation does not match techniques on the number of tokens they generate or evaluation calls they make. This makes fair comparisons impossible, as the different methods are afforded different computational budgets for the same objective.\n\n# clarity\nThe text can be hard to follow. Partially this is due to framing the technique as reinforcement learning, despite the lack of a policy being learned (though presumably the MCTS count tables could be preserved and treated as a learned policy of sorts). The core algorithm description was difficult to follow and the main figures did not support understanding this algorithm.\n\n# significance\nThe results do not show substantial improvements over prior efforts, limiting the significance attributable to the technical novelties."
                },
                "questions": {
                    "value": "- Figure 2\n\t- Consider adjusting the visuals here to make the differences clearer. Perhaps by showing where LLM evaluations occur along the search tree to make it clearer that REX-UCL is evaluating the LLM for each step of the depth of the tree. \n\t- Figure 3 was helpful, but I could not understand what Figure 2 was meant to illustrate by highlighting some lines in the rollout as red.\n- Table 1\n\t- Is it possible to provide uncertainty estimates on the scores provided? (For example, using multiple seeds for different runs of the algorithms)\n\t- What does \"size\" mean in this table?\n\t- What is the intuition for why the REX methods do worse in the largest Blocksworld scenario? They show strong advantages in the 2-step scenario (80% vs 41.7%), but their advantage shrinks in the 4-step scenario (44.6% vs 42.0%) and becomes a deficit in the 6-step scenario (25.4% vs 30.0%).\n\t- Is there other evidence for the strength of REX on GSM8k-test? The results look very close to CoT for REX-UCB and to Reflexion for REX-UCL. Could the results be subdivided by number of steps required? \n\t\t- Note that Reflexion requires `3n` time complexity, while REX-UCL requires `dn`, so on a 3-step problem the two are the same (if I understood correctly), while on a 4 or more step problem REX-UCL will be more computationally demanding unless search depth is limited.\n\t- What search depth(s) (`d`) were used for the experiments?\n- Section 5.4\n\t- Could the results in table 1 be replicated with a model that exposes logits and compared?\n\t\t- These additional results would strengthen the claims about the core technique.\n\t\t- This would also enable a comparison to RAP.\n\t- How were `C`, `B`, and `K` selected for the experiments?\n- General\n\t- Consider computing the results with (approximately) matching compute budgets for the methods being compared. Ideally this would be a matching number of generated tokens. A more coarse comparison would be matching the number of inference calls made. Regardless, some baseline equivalence should be established for the compute budget to allow fair comparison of the accuracy."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "3: reject, not good enough"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 2,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission2031/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698023076385,
            "cdate": 1698023076385,
            "tmdate": 1699636134934,
            "mdate": 1699636134934,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "wbbgfigH25",
                "forum": "8TAGx549Ns",
                "replyto": "LTQHoaJ2zs",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission2031/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission2031/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "Thank you for your time and valuable feedback! We have tried to address your concerns below:\n\n---\nQuestions:\n\n---\n\n**- Consider adjusting the visuals here to make the differences clearer. Perhaps by showing where LLM evaluations occur along the search tree to make it clearer that REX-UCL is evaluating the LLM for each step of the depth of the tree.**\\\n**- Figure 3 was helpful, but I could not understand what Figure 2 was meant to illustrate by highlighting some lines in the rollout as red.**\\\nThe primary purpose of Figure 2 is to illustrate the transformation of the classical MCTS technique into various REX variations. Figure 2(b) specifically details the rollout strategy for REX-UCL. The phrase 'Repeat d times,' highlighted in red in Figure 2(b), signifies invoking the LLM 'd' times. As each invocation of LLM triggers the simultaneous execution of the Selection and Expansion steps within the REX-UCL strategy, the loop is situated under these blocks. Additionally, the red arrow marks in Figure 2(b) represent the step-by-step invocation of LLM. Further elaboration on the LLM input, specifically the prompt structures for REX-UCB and REX-UCL, is provided in section B of the Appendix.\n\n**Is it possible to provide uncertainty estimates on the scores provided? (For example, using multiple seeds for different runs of the algorithms)**\\\nWe have set the temperature to 0.0 to ensure that it does not obscure the effectiveness of the proposed approach and to facilitate a stable comparison. The following stats were derived from 5 runs each with gpt-3.5-turbo-0301 LLM. We applied REX-UCB and REX-UCL to the Blocksworld dataset to demonstrate the observable level of uncertainty. For the results reported in the paper, the same experimental setup was used for other techniques (CoT, Reflexion) as well. The mean(\u03bc) and standard deviation(\u03c3) of number of correct answers across 5 runs is presented below:\n\n| Method | Blocksworld (2 step) | Blocksworld (4 step) | Blocksworld (6 step) |\n|----------|-----------|----------|-----------|\n|  | No of questions = 30 | No of questions = 56 | No of questions = 114 |\n| REX-UCB | \u03bc=24, \u03c3=0.4 | \u03bc=21.6, \u03c3=0.89 | \u03bc=28.8 \u03c3=1.63 |\n| REX-UCL | \u03bc=18, \u03c3=0.4 | \u03bc=24.8, \u03c3=0.48 | \u03bc=22.8, \u03c3=0.47 |\n\n**Note:** In the paper, the results reported are average over 10 runs.\n\n**What is the intuition for why the REX methods do worse in the largest Blocksworld scenario?**\\\nAs the complexity of a problem increases (measured in terms of the number of steps required to solve it), the permutations of action sequences, i.e., trajectories, also increase. For instance, in the 6-step Blocksworld problem, which comprises 6 steps involving 4 actions (pick, put, stack, unstack) and several blocks, there are approximately 6 * 4 * 4 (= 96) potential actions to consider simultaneously. This potentially contributes to a decline in the model's performance. Moreover, we conducted all experiments with 10 runs/passes. Increasing the number of runs for more complex problems could potentially enhance performance.\n\n**Is there other evidence for the strength of REX on GSM8k-test?**\\\nAs already stated, the experimental results were obtained by averaging the results across 10 random runs. This supports the robust and consistent superiority of REX over Reflexion and CoT. As you have pointed out, REX has superior speed when d<=3.\n\n**What search depth(s) (d) were used for the experiments?**\\\nWe have set d=6 for Blocksworld and d=8 for GSM8K.\n\n**Could the results in table 1 be replicated with a model that exposes logits and compared?**\\\n(Currently working on it. Will share the results soon.)\n\n**How were C, B, and K selected for the experiments?**\n The above values we set based on the grid search technique. We set a reasonable range for all the parameters - $1 \\leq C \\leq 10000$, $1 \\leq B \\leq 1000$, $1 \\leq K \\leq 1000$ and ran a grid search to approximate the values.\n\n**Consider computing the results with (approximately) matching compute budgets for the methods being compared. Ideally this would be a matching number of generated tokens. A more coarse comparison would be matching the number of inference calls made. Regardless, some baseline equivalence should be established for the compute budget to allow fair comparison of the accuracy.**\\\nThe time complexity presented in Table 1 roughly addresses this concern. Below is the number of inference calls made by each of the techniques for every task/problem in Blocksworld and GSM8K datasets:\n(For Blocksworld, depth(d)=6, number of passes(n)=10, number of potential actions(m)=4; For GSM8K, depth(d)=8, number of passes(n)=10, number of potential actions(m)=4)\n| Method | Blocksworld | GSM8K |\n|----------|-----------|----------|\n| CoT | 10 | 10 |\n| Reflexion | 30 | 30 |\n| RAP | 240 | 320 |\n| REX-R | 10 | 10 |\n| REX-UCB | 10 | 10 |\n| REX-UCL | 60 | 80 |"
                    }
                },
                "number": 3,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission2031/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700591900044,
                "cdate": 1700591900044,
                "tmdate": 1700591900044,
                "mdate": 1700591900044,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "bTKF3Qa5WQ",
                "forum": "8TAGx549Ns",
                "replyto": "wbbgfigH25",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission2031/Reviewer_b79r"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission2031/Reviewer_b79r"
                ],
                "content": {
                    "comment": {
                        "value": "Thank you for the responses! The answers clarified several areas I did not understand.\n\n> Below is the number of inference calls made by each of the techniques for every task/problem in Blocksworld and GSM8K datasets\n\nIt looks like REX-UCL benefits from substantially more compute than CoT or REX-R & REX-UCB. What do the results in Table 1 look like if the other methods are allocated 60 / 80 inference calls?"
                    }
                },
                "number": 6,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission2031/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700692281354,
                "cdate": 1700692281354,
                "tmdate": 1700692281354,
                "mdate": 1700692281354,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "TBUFObnmyf",
            "forum": "8TAGx549Ns",
            "replyto": "8TAGx549Ns",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission2031/Reviewer_up34"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission2031/Reviewer_up34"
            ],
            "content": {
                "summary": {
                    "value": "The paper presents REX \u2013 a method to achieve more efficient exploration of the action space, leading to a more robust performance in LLM based AI agents.  Through empirical results in blocksworld and GSM8K (math word problems), the approach is shown to achieve superior performances relative to existing approaches."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "Overall the paper is well motivated and well written. Proposed mechanisms such as integration of rewards into the prompt are novel."
                },
                "weaknesses": {
                    "value": "The approach seems to be limited to problems with discrete actions, and assumes the scores can be mapped to HIGH/LOW which may not always be possible."
                },
                "questions": {
                    "value": "1.\tThe paper presents two algorithms : REX-UCB and REX-R, which differ only in the way the rewards are classified. I wonder whether these could have been unified into one coherent approach. If not, it is important to explicitly mention when one should use which algorithm.\n\n2.\tIs the approach limited to discrete actions? Could it be adapted for continuous action space problems?\n\n3.\tIs it assumed that a user can map the UCB scores to HIGH/LOW? This may not always be possible. \n\n4.\tCan the method deal with non-binary rewards?\n\n5.\tHow would the method fare in tasks that involve a long sequence of steps till the final solution is found? Would the LLM\u2019s prediction accuracy (of intermediate steps -with reference to line 7 in Alg 1) be a limitating factor in such tasks?\n\n6.\tCan the tasks described be solved with reinforcement learning alone? If so, this would be a natural baseline to add to the experiments.\n\n7.\tAn intuitive example to accompany 1. And 2. In Section 4.1 would have provided a much clearer picture of the approach.\n\n8.\tThe introduction could have included more emphasis about how the contributions (1), (2) and (3) are achieved.\n\n9.\tIn section 4.1 - `form\u2019 should be \u2018from\u2019. This mistake is also repeated in later parts of the paper."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "details_of_ethics_concerns": {
                    "value": "N/A"
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission2031/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission2031/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission2031/Reviewer_up34"
                    ]
                }
            },
            "number": 3,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission2031/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698583888283,
            "cdate": 1698583888283,
            "tmdate": 1699636134851,
            "mdate": 1699636134851,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "sVIeWpx6pz",
                "forum": "8TAGx549Ns",
                "replyto": "TBUFObnmyf",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission2031/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission2031/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "Thank you for your time and valuable feedback! We have tried to address your concerns below:\n\n---\nQuestions:\n---\n\n**1. The paper presents two algorithms : REX-UCB and REX-R, which differ only in the way the rewards are classified. I wonder whether these could have been unified into one coherent approach. If not, it is important to explicitly mention when one should use which algorithm.**\n* As noted in the paper, REX-R equals REX-UCB when setting the constant $C$ in equation (1) to zero. We introduced these two distinct approaches to highlight the importance of the UCB score over absolute reward. Merely relying on feedback (as Reward) isn't enough for optimal performance; achieving superior results requires a nuanced balance between exploring and exploiting the action space.\n* REX-UCB has showcased better performance compared to REX-R, indicating our preference for REX-UCB across all scenarios. The introduction of REX-R aimed to emphasize that relying solely on Reward for feedback does not lead to optimal performance, as highlighted in the earlier point.\n\n**2. Is the approach limited to discrete actions? Could it be adapted for continuous action space problems?**\\\nYes, in most cases, the approach can be extended to a continuous action space.\n* A straightforward method involves converting the continuous space into a discrete one. However, this approach would yield discrete actions rather than continuous ones.\n* If the continuous action space possesses inherent ordering, such as being all positive real numbers ($\\mathbb{R}^+$), the algorithm remains applicable but may introduce some associated error. This reliance largely hinges on the LLM's capacity to discern relative distinctions among various actions. For instance, within the $\\mathbb{R}^+$ action space, actions with greater absolute values might yield higher rewards. Consequently, the LLM might learn to predict higher-value actions. Conversely, if cyclic patterns exist between the reward and action space, the LLM might face potential confusion. In summary, REX can definitely be used for continuous action space, but REX's performance in continuous action spaces is contingent upon factors like the environment's nature, the underlying LLM employed, and the complexity of the problem. \n\n**3. Is it assumed that a user can map the UCB scores to HIGH/LOW? This may not always be possible.**\\\nNo, this assumption was never made. In Algorithm 1, line 5, we can see that the action with the highest UCB score gets 'HIGH' and all the remaining actions get 'LOW'. The user is never involved in any of the REX algorithms.\n\n**4. Can the method deal with non-binary rewards?**\\\nCertainly! The current REX implementation supports non-binary rewards. Essentially, our approach utilizes UCB scores, meaning if the UCB formula can handle diverse rewards, our approach can as well.\n\n**5. How would the method fare in tasks that involve a long sequence of steps till the final solution is found? Would the LLM\u2019s prediction accuracy (of intermediate steps -with reference to line 7 in Alg 1) be a limitating factor in such tasks?**\\\nIndeed, as outlined in the \"Limitations\" in Section 5.4 of the paper, our approach relies on In-Context learning, where the input size limitation of the LLM poses a constraint. However, a potential workaround involves segmenting the sequence of actions, summarizing them, and adding them to the prompt. While this solution may partially alleviate the problem, it won't completely resolve it.\n\n**6. Can the tasks described be solved with reinforcement learning alone? If so, this would be a natural baseline to add to the experiments.**\\\nNot really. We have taken into account benchmark datasets like GSM8K, where questions are presented in natural language. Thus, relying solely on RL techniques is impractical in this scenario.\n\n**7. An intuitive example to accompany 1. And 2. In Section 4.1 would have provided a much clearer picture of the approach.**\\\nExamples are provided in Section C of the Appendix. Happy to share more examples, if you're interested.\n\n**8. The introduction could have included more emphasis about how the contributions (1), (2) and (3) are achieved.**\\\nIn the Introduction, our emphasis has been on establishing the significance and current trends in Autonomous Agents. We consider it vital to convey the motivation behind our project. The achievement of (1), (2), and (3) is outlined in the final paragraph of the Introduction. We delve deeper into these aspects within the \"Proposed Methodology\" and \"Experiments\" sections.\n\n**9. In section 4.1 - `form\u2019 should be \u2018from\u2019. This mistake is also repeated in later parts of the paper.**\\\nThank you for helping us identify this typo. We have corrected it."
                    }
                },
                "number": 2,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission2031/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700551326736,
                "cdate": 1700551326736,
                "tmdate": 1700551326736,
                "mdate": 1700551326736,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "HapM3C0Kib",
                "forum": "8TAGx549Ns",
                "replyto": "sVIeWpx6pz",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission2031/Reviewer_up34"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission2031/Reviewer_up34"
                ],
                "content": {
                    "comment": {
                        "value": "Thanks for your detailed responses. They have helped me understand your approach better."
                    }
                },
                "number": 7,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission2031/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700692912675,
                "cdate": 1700692912675,
                "tmdate": 1700692912675,
                "mdate": 1700692912675,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "hFoPeiZmCr",
            "forum": "8TAGx549Ns",
            "replyto": "8TAGx549Ns",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission2031/Reviewer_3Nop"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission2031/Reviewer_3Nop"
            ],
            "content": {
                "summary": {
                    "value": "The authors propose an algorithm called Rapid Exploration and Exploitation (REX) to improve the performance of AI agents while balancing the exploration-exploitation trade-off. REX introduces an additional layer of rewards and integrates concepts similar to Upper Confidence Bound (UCB) scores, leading to more robust and efficient AI agent performance. The authors evaluate the performance of the proposed method in several benchmark tasks."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "- Important and timely topic\n- Nice connections between RL/bandit literature and LLM\n- I agree with the authors that MCTS is a promising approach to combine with LLM; hence, the authors try to make progress in a good direction."
                },
                "weaknesses": {
                    "value": "- Regarding experiments, I have several concerns. First, I consider that the authors should compare of the performance of their LLM-based approaches with SOTA methods that are not based on LLMs. Second, the authors state that \"RAP is not compatible with OpenAI APIs; therefore, we have exclusively focused on evaluating the time complexity of RAP, without delving into its accuracy\", but I do not think that this is a good reason why the authors do not have to empirically evaluate RAP. If the authors emphasize the better computational complexity of their proposed method, they may want to add rigorous theoretical analysis.\n\n- The ideas presented in this paper are quite similar to Tree-of-Thoughts (Yao et al., 2023). Though this is a recent work, but uploaded on arXiv on May 17, 2023; hence, this cannot be regarded as a concurrent work unless I misunderstand the ICLR rule. I would recommend the authors to at least the similarities and differences and compare the authors' proposed method with Yao et al. (2023) in same benchmarks.\n    - Yao, Shunyu, et al. \"Tree of thoughts: Deliberate problem solving with large language models.\" arXiv preprint arXiv:2305.10601 (2023).\n\n- Maths are sometimes weird to me. For example:\n    - Algorithm 1, line 3: $\\forall (s,a) \\in Q$. $Q$ is not a set of state-action pairs. This part should be $\\forall (s,a) \\in S \\times A$.\n    - Algorithm 1, line 14: $\\forall (s,a) \\in H$. $H$ is a time step.\n- The overall alogrithmic flow is not clear to me. I guess it is mainly because \"AGENT.FUNCTION()\" (FUNCTION = {SOLVE, VALIDATEACTION, CALCULATEUCB}) is not explained. In addition to the math problems mentioned earlier, the algorithmic flow in this paper is hard to follow."
                },
                "questions": {
                    "value": "[Q1] Could you tell me the similarities and differences between the authors' approach and Tree-of-Thoughts (Yao et al., 2023)? Is it possible to compare the performance of the two methods in the same benchmark? Because the authors use BlocksWorld and GSM8K and Yao et al. (2023) use Game of 24, Creative Writing, and Mini Crosswords, I guess some of them are used for the comparison. \n\n[Q2] Although I can guess what are Agent.Solve and CALCULATEUCB to some extent, there is almost no information on what is Agent.ValidateAction. Could you elaborate more?\n\n[Q3] I suspect that the high performance of REX in BlocksWorld is due to the data leak. Did the authors use the ordinary BlocksWorld environments with default settings?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "3: reject, not good enough"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 4,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission2031/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698623430435,
            "cdate": 1698623430435,
            "tmdate": 1699636134776,
            "mdate": 1699636134776,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "dDOFjnPegu",
                "forum": "8TAGx549Ns",
                "replyto": "hFoPeiZmCr",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission2031/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission2031/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "Thank you for your time and valuable feedback! We have tried to address your concerns below:\n\n---\n## Weaknesses:\n---\n**First, I consider that the authors should compare of the performance of their LLM-based approaches with SOTA methods that are not based on LLMs.**\\\nOur paper focuses on demonstrating the efficiency of MCTS, particularly the UCB scoring mechanism, within LLMs. Comparing with non-LLM methods might not be feasible for datasets where questions are in natural language, making it challenging to adapt them to non-LLM approaches. Dataset nature impacts comparison feasibility; transforming natural language to discrete states for non-LLM methods may not be viable for all datasets. Hence we have only considered LLM-based approaches for comparison. \n\n**Second, the authors state that \"RAP is not compatible with OpenAI APIs; therefore, we have exclusively focused on evaluating the time complexity of RAP, without delving into its accuracy\", but I do not think that this is a good reason why the authors do not have to empirically evaluate RAP.**\\\nWe added RAP to demonstrate its slower performance compared to REX in problem-solving. Reflexion and CoT were used as other advanced techniques for performance comparison.\n\n**I would recommend the authors to at least the similarities and differences and compare the authors' proposed method with Yao et al. (2023) in same benchmarks.**\\\nAlthough visually similar, REX and ToT differ in several ways:\n1. ToT samples possible actions at each state and pursues the most promising action based on voting, while REX directly determines actions from the UCB score, making it more systematic.\n2. In ToT, an invalid trajectory leads to backtracking and pursuit of the next best trajectory. Conversely, in REX, upon encountering an invalid trajectory, feedback in the form of the UCB score is utilized. In the subsequent iteration, REX pursues the most promising action sequence.\n\n**Algorithm 1, line 3: $\\forall (s, a) \\in Q$. $Q$ is not a set of state-action pairs. This part should be $\\forall (s, a) \\in S $x $A$**\\\nIn Algorithm 1, $Q$ includes all possible combinations of $(s, a)$. Equation (1) shows that to compute the UCB score, every $(s, a)$ pair must have a representation in $Q$. To avoid confusion for the reader, we opted to maintain the expression as \"$\\forall (s, a) \\in Q$\".\n\n**Algorithm 1, line 14: $\\forall (s, a) \\in H$. $H$ is a time step.**\\\nAs already defined in the \"*Require:*\" section of Algorithm 1, $H$ represents sequence-of-intermediate-steps. so in line 14, we are conveying the idea that - for every intermediate step taken in the latest solution, we are updating $Q(s, a)$\n\n**The overall alogrithmic flow is not clear to me. I guess it is mainly because \"AGENT.FUNCTION()\" (FUNCTION = {SOLVE, VALIDATEACTION, CALCULATEUCB}) is not explained. In addition to the math problems mentioned earlier, the algorithmic flow in this paper is hard to follow.**\\\nWe have added more details about these functions in Section D of the Appendix.\n\n---\n## Questions:\n---\n**[Q1] Could you tell me the similarities and differences between the authors' approach and Tree-of-Thoughts (Yao et al., 2023)? Is it possible to compare the performance of the two methods in the same benchmark? Because the authors use Blocksworld and GSM8K and Yao et al. (2023) use Game of 24, Creative Writing, and Mini Crosswords, I guess some of them are used for the comparison.**\n* We have addressed the similarities and differences between REX and ToT in the above section.\n* (Currently running ToT on Blocksworld and GSM8K, We will share the results soon. )\n\n**[Q2] Although I can guess what are Agent.Solve and CALCULATEUCB to some extent, there is almost no information on what is Agent.ValidateAction. Could you elaborate more?**\n* Details available in Appendix - Section D\n\n**[Q3] I suspect that the high performance of REX in BlocksWorld is due to the data leak. Did the authors use the ordinary BlocksWorld environments with default settings?**\\\n* We have confirmed that there's no data leakage in our setup. We created our few-shot examples (3 in total) to form the prompt and used these examples consistently across Reflexion, CoT, and all REX variations. It's impossible for REX to experience data leakage while others do not."
                    }
                },
                "number": 1,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission2031/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700547898092,
                "cdate": 1700547898092,
                "tmdate": 1700547898092,
                "mdate": 1700547898092,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "Wy8248GkfJ",
                "forum": "8TAGx549Ns",
                "replyto": "dDOFjnPegu",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission2031/Reviewer_3Nop"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission2031/Reviewer_3Nop"
                ],
                "content": {
                    "title": {
                        "value": "Thank you"
                    },
                    "comment": {
                        "value": "Thank you for the clarifications. I've read other reviews and rebuttals.\nI do not have additional questions."
                    }
                },
                "number": 8,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission2031/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700693635586,
                "cdate": 1700693635586,
                "tmdate": 1700693635586,
                "mdate": 1700693635586,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    }
]