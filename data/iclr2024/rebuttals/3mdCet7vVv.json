[
    {
        "title": "Maestro: Uncovering Low-Rank Structures via Trainable Decomposition"
    },
    {
        "review": {
            "id": "KPLklSOFhK",
            "forum": "3mdCet7vVv",
            "replyto": "3mdCet7vVv",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission4088/Reviewer_LrqS"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission4088/Reviewer_LrqS"
            ],
            "content": {
                "summary": {
                    "value": "The authors introduce Maestro, a technique designed for efficient layer-wise low-rank factorization during training. This method incorporates an ordered drop strategy combined with group lasso regularization, encouraging the progressive adoption of lower-rank weights during training. The evaluation is conducted on CIFAR10, MNIST, and Multi-30k, comparing Maestro against various low-rank approaches and several pruning and quantization techniques. Furthermore, the paper offers multiple ablation studies and provides theoretical analysis for specific problems."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "1. The paper is easy to follow. \n2. The theoretical properties are sound with the proposed method.\n3. The algorithm seems reasonable."
                },
                "weaknesses": {
                    "value": "The algorithm seems reasonable to me. However, for the experiments, ImageNet results are missing. As an important benchmark, ImageNet is often used to compare performance between the compression-related tasks. For instance, Cutterfish presented their ResNet-50 results using the ImageNet dataset. To highlight effectiveness, it would be beneficial to include evaluations based on the ImageNet dataset. Additionally, tests on larger models would enhance the comprehensiveness of the study.\n\nIs the #GMACs the training cost? If not, please show the training cost."
                },
                "questions": {
                    "value": "How does the proposed method perform on ViT and other larger models using the ImageNet dataset?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 1,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission4088/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698717511401,
            "cdate": 1698717511401,
            "tmdate": 1699636373400,
            "mdate": 1699636373400,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "UJwmB04Agl",
                "forum": "3mdCet7vVv",
                "replyto": "KPLklSOFhK",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission4088/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission4088/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Reply to reviewer LrqS"
                    },
                    "comment": {
                        "value": "We thank the reviewer for their feedback and appreciate their comments. Let us reply point-by-point.\n\nWrt scaling to the **ILSVRC results**, we have conducted experiments on ResNet-50 trained on ImageNet and showcase how our method performs. However, due to unforeseen technical difficulties with the filesystem of our GPU infrastructure, we only have preliminary results, **up to epoch 60**. We will continue the training process and can update the manuscript upon termination. For what it's worth, current results show similar convergence dynamics with Pufferfish,  with training reaching **70.05% of accuracy at 47% of MACs and 32% of the original parameters**. Moreover, we have results for TinyImageNet and Multi-30K, both of which should hint the scaling ability of our technique. Last, while we did our best to have the results in time, we would like to point out that similar works have been published in ICLR without scaling their evaluation to ImageNet levels (Khodak et al., ICLR'21).\n\n| Method | Accuracy | GMACs | Parameters |\n| --- | --- | --- | --- |\n| Pufferfish | 76.34 % (~70% on epoch 60) | 3.6 (87%) | 15.2 (59.5%)\n| Cuttlefish | 76.44 % | 3.6 (87%) | 14.7 (57.4%)\n| Ours | 70.05% (on epoch 60) | 1.96 (47%) | 8.2 (32%) |\n\nMoreover, we did not have the time to conduct extra training for **ViTs on ImageNet** due to limited time and resources. Since the ResNet-50 on ImageNet experiment was also requested by Reviewer ZdCx, we have prioritised this. Nevertheless, we have had no indication of scalability issues so far, therefore, we anticipate similar behaviour.\n\n**Wrt GMACs**, they correspond to inference cost on Tables 2-4. However, we have quantified the training cost in GMACs on Tables 11-14 of the appendix. We have now clarified that in the manuscript and included a pointer to the appendix.\nWe hope that these answer the reviewer's raised points and can raise their score accordingly.\n\n\n[1] Khodak, M., Tenenholtz, N., Mackey, L., & Fusi, N. (2021). Initialization and regularization of factorized neural layers. ICLR'21."
                    }
                },
                "number": 5,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission4088/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700740069208,
                "cdate": 1700740069208,
                "tmdate": 1700740069208,
                "mdate": 1700740069208,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "hoNfoK0O6U",
            "forum": "3mdCet7vVv",
            "replyto": "3mdCet7vVv",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission4088/Reviewer_CAHp"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission4088/Reviewer_CAHp"
            ],
            "content": {
                "summary": {
                    "value": "This work mainly focuses on incorporating trainable low-rank layer decompositions in deep-learning models. The authors propose MAESTRO, which progressively finds the optimal rank of each layer during the training by imposing importance ordering via the existing Ordered Dropout technique. The redundant ranks are zeroed out by using the hierarchical group lasso term as the regularizer in the loss function. MAESTRO accounts for data distributions and the target function rather than applying SVD on pre-learned model weights."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "The novelty of the work lies in applying the existing Ordered Dropout technique from Federated Learning (FjORD) to optimally order the heterogeneous ranks of various layers in DNNs based on importance criterion, which results in discovering layer-wise low-rank decompositions. In contrast to uniform dropout across the width in each layer ( FjORD), MAESTRO independently decomposes each layer to uncover optimal rank. The authors provide applications of MAESTRO to various layer types in CNNs, FC, and Transformers. \n\nThe paper is easy to understand and is well-structured. The experiments are comprehensive and justify theoretical insights."
                },
                "weaknesses": {
                    "value": "1. The paper suffers from typos. The authors are encouraged to review and proofread the draft.\n- Page 1: \u2026*find progressively*\u2026\n- Page 2: \u2026*novelly fuse*\u2026\n- Page 3: ..*have been proposed*\u2026 (multiple instances)\n- Page 4: \u2026*HMA*\u2026.\n- Page 5: \u2026.*orthoghonal*\u2026.\n\n2. It is recommended that authors explore a better illustration for Figure 1. For instance, there is not much difference visually in Factorized mapping and Ordered Representation when printed in black/white. It might be helpful to provide a better illustration for the Ordered Dropout process (it is challenging to understand it with symbols without any reference in the figure caption. In current form, it is assumed that the readers will be familiar with OD). Since MAESTRO provides layer-wise decomposition and is generally applicable to various DNN layers, it might be useful to incorporate the various layer types of the DNN network (Sec 3.2) in Figure 1 as an overall summary of the proposed work and its applicability."
                },
                "questions": {
                    "value": "Suggestions are provided in the above section."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "8: accept, good paper"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 2,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission4088/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698807229700,
            "cdate": 1698807229700,
            "tmdate": 1699636373327,
            "mdate": 1699636373327,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "SEWcA3G3ri",
                "forum": "3mdCet7vVv",
                "replyto": "hoNfoK0O6U",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission4088/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission4088/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Reply to reviewer CAHp"
                    },
                    "comment": {
                        "value": "We would like to thank the reviewer for their valuable feedback and insightful comments.\n\nIn the new manuscript, we have fixed all of the indicated typos and have further changed Figure 1 to better illustrate the inner workings of Maestro without the need for prior knowledge of OD.\n\nAs requested, the current version of Figure 1 is readable even when printed in black/white. Regarding the various DNN layers, we do not specifically visualize those as their implementation is equivalent to linear layers, as discussed in section 3.2, where the main trick is that we can represent these types of layers as a special case of linear mapping that we then decompose using our technique. If the reviewer believes that our presentation would benefit from further visualization of CNNs, RNNs, and Transformers, we are happy to include such figures in the camera-ready version.\n\nWe appreciate both of these suggestions and believe that they ameliorate the quality and legibility of our manuscript."
                    }
                },
                "number": 4,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission4088/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700739856337,
                "cdate": 1700739856337,
                "tmdate": 1700739856337,
                "mdate": 1700739856337,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "ML8evsHc8c",
            "forum": "3mdCet7vVv",
            "replyto": "3mdCet7vVv",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission4088/Reviewer_Mad7"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission4088/Reviewer_Mad7"
            ],
            "content": {
                "summary": {
                    "value": "This paper proposes a low-rank compression scheme for deep neural networks, which factorizes fully connected, convolutional, and attention layers in the form A=UV, and progressively reduces the rank of the U and V matrices. For convolutional layers the factorization is applied to the unrolled 2D matrix, while for attention layers it is applied to the Q, K, V matrices. They use ordered dropout and hierarchical group-lasso to facilitate the reduction of the rank of U/V matrices."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "4 excellent"
                },
                "contribution": {
                    "value": "1 poor"
                },
                "strengths": {
                    "value": "Unlike unstructured pruning methods, low-rank compression can preserve the dense structure of matrices, which can extract more performance from GPUs. For the training of transformers on the Multi30k dataset shown in Table 3, the proposed method is able to reduce the number of parameters by more than half compared to the baseline (Pufferfish), while also reducing the perplexity."
                },
                "weaknesses": {
                    "value": "Low-rank compression and Lasso have been around for a very long time, and the only novelty seems to be the use of ordered dropout. The improvement over existing methods is marginal for the experiments with CNNs. The proposed method is obviously very sensitive to the choice of the Lasso coefficient lambda, but there is no theory behind how it can be chosen effectively."
                },
                "questions": {
                    "value": "How is the initial factorized mapping performed without SVD? How is the initial maximal rank r chosen?\n\nHow does the proposed method compare with other structured pruning methods?\n\nTypos\np.4 \u201cmulti-head attention (HMA)\u201d > \u201cmulti-head attention (MHA)\u201d\np.5 \u201cwe one could leverage\u201d > \u201cone could leverage\u201d\np.5 \u201cSingular Value Decomposition (SVD)\u201d Why define this here when it has been repeatedly used in previous sections?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission4088/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission4088/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission4088/Reviewer_Mad7"
                    ]
                }
            },
            "number": 3,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission4088/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698820856397,
            "cdate": 1698820856397,
            "tmdate": 1699636373239,
            "mdate": 1699636373239,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "vAyzs18vOT",
                "forum": "3mdCet7vVv",
                "replyto": "ML8evsHc8c",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission4088/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission4088/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Reply to reviewer Mad7"
                    },
                    "comment": {
                        "value": "We would like to thank the reviewer for their time and effort in reviewing our manuscript.\n\nFirst, we have fixed the indicated typos. Thank you for raising these.\n\nPlease allow us to reply to the rest of the reviewer's  concerns below:\n\n> The only novelty seems to be the use of ordered dropout\n\nWe appreciate the reviewer's perspective, but we do not think that this renders our contribution as \"marginal.\" We have non-trivially extended ordered dropout to low-rank decompositions and have further allowed for non-uniform ranks across layers, contrary to FjORD. This has been acknowledged and mentioned as a strong point by Reviewer ZdCx. Moreover, we have used the lasso penalty specifically to optimally consolidate knowledge so that the network can leverage this structure and more efficiently compress the model. As a result, we believe this is a significant step in this area of research.\n\n> The proposed method is obviously very sensitive to the choice of the Lasso coefficient lambda, but there is no theory behind how it can be chosen effectively.\n\nThank you for raising this important point. We acknowledge that while our method can operate with various values of the Lasso coefficient lambda, there is indeed a degree of sensitivity to its selection. Our experiments have shown that Maestro can function effectively even when the Lasso coefficient is absent (set to zero), demonstrating the flexibility of our method. However, we do agree that the choice of lambda can influence the performance and efficiency of the method to some extent.\nTo address this, we discuss some guidelines for selecting an appropriate lambda value. We provide an empirical way for hyperparameter tuning. \n\nSpecifically, one can select the value of $\\lambda_{gl}$ by starting with a large lambda value and gradually decrease the Lasso coefficient by a factor of 2 until the required criteria (footprint, accuracy) are met. This heuristic finds a close-to-optimal value for the hyperparameter, while the total cost of training remains comparable below the baseline of training the whole model. Please see Tables 11-14 for our lambda sweeps and the optimal values per dataset. The theoretical underpinning behind the selection of $\\lambda_{gl}$ is that we want the loss component that relates to hierarchical lasso to be lower than the learning component, so that it does not dominate the learning objective, but not too low that it does not sparsify the network.\n\nNevertheless, it is important to highlight that Maestro does not specifically require the group Lasso penalty for operation; we utilize it primarily to enhance training efficiency. As demonstrated in Figure 4, we can implement post-training pruning (or even during training, which is not currently shown in our manuscript) even when the Lasso coefficient is set to zero, and still achieve competitive performance across a wide range of computational and memory constraints due to the nature of ordered dropout.\nPlease let us know whether we have sufficiently answered your concern.\n\n> How is the initial factorized mapping performed without SVD? How is the initial maximal rank r chosen?\n\nIn our manuscript, we describe initializing our network using standard neural network initialization techniques, followed by factorization using SVD to obtain the Maestro layer. Additionally, we explore an alternative approach where each layer is pre-factorized as illustrated in Figure 1, with each matrix initialized using standard neural network initialization methods (e.g., the default initialization in PyTorch). Both approaches lead to the same final results.vWe decided to use SVD as the default initialization method for Maestro in future tasks that we have in mind. For instance, this is particularly relevant when starting with pre-trained model weights. By decomposing weights using SVD, the initial output of the full network remains unchanged. Moreover,  SVD can be viewed as an approximation to Maestro that only considers current weights and is computationally inexpensive to compute once, while Maestro also accounts for both data and the full network dynamics.\n\nRegarding the initial maximal rank, for a linear mapping from $\\mathbb{R}^m$ to $\\mathbb{R}^n$, we set $r = \\min$ {$m, n$}. This ensures that our network initially has the same capacity as the original network."
                    }
                },
                "number": 3,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission4088/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700739744676,
                "cdate": 1700739744676,
                "tmdate": 1700739744676,
                "mdate": 1700739744676,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "hi0mIdcLFJ",
            "forum": "3mdCet7vVv",
            "replyto": "3mdCet7vVv",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission4088/Reviewer_ZdCx"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission4088/Reviewer_ZdCx"
            ],
            "content": {
                "summary": {
                    "value": "The paper proposes MAESTRO, which is a trainable low-rank approximation technique for deep neural networks. It proposes a progressive shrinking approach that decomposes the weights of each layer into low-rank components using an extended version of Ordered Dropout. This allows for efficient compression and trade-off between model size and accuracy. The method is evaluated on various models, datasets, and modalities, showing superior performance compared to other compression methods."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "- The paper extends the Ordered Dropout technique to handle non-uniformity in the search space by allowing different ranks per layer. \n\n- It introduces a trainable aspect to the decomposition, which enables the model to reflect the data distribution. \n\n- It provides a latency-accuracy trade-off mechanism for deploying the network on constrained devices."
                },
                "weaknesses": {
                    "value": "- The citation style seems not correct. It should include the author's names in place of numerical references.\n\n- Why the method named after \"Maestro\"? It is never introduced and seems weird to me.\n\n- The proposed technique appears as a logical improvement from Ordered Dropout. Its effectiveness, however, is primarily demonstrated through toy architectures and datasets, such as ResNet18 and Cifar10. For the method to gain practical and impactful validation, I recommend conducting additional experiments on more complex datasets like ImageNet to substantiate its superiority.\n\n- Building on the previous point, there are alternative methods that report better accuracy with more compact architectures. For instance, the OTOv2 framework:\n\nChen, Tianyi, et al. \"Only train once: A one-shot neural network training and pruning framework.\" Advances in Neural Information Processing Systems 34 (2021): 19637-19651.\n\nIt structurally prunes the model during training (hence still training efficient), and it achieves a 93.3% accuracy with only 0.55M parameters on Cifar10 using VGG16. This is in contrast to the 93.10% accuracy with 2.20M parameters reported by the proposed method. This comparison casts doubt on the practical utility and the advantages of the low-rank based method presented."
                },
                "questions": {
                    "value": "See the weaknesses part above."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 4,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission4088/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1699077754729,
            "cdate": 1699077754729,
            "tmdate": 1699636373149,
            "mdate": 1699636373149,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "LAtx0qGzFi",
                "forum": "3mdCet7vVv",
                "replyto": "hi0mIdcLFJ",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission4088/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission4088/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Reply to reviewer ZdCx"
                    },
                    "comment": {
                        "value": "We would like to thank the reviewer for their valuable feedback and time invested in reviewing our manuscript.\n\nWrt the **manuscript presentation**, we have now changed the citation style to conform to the ICLR style.\n\nWrt the **title**, we did not feel that the name needed further explanation since Maestro does not constitute an abbreviation. However, to give some context to the reviewer, our interpretation of the name is that it coordinates the ranks that need to be used for training/inference of a model, much like a Maestro conducts an orchestra. (Like orchestrator components in distributed systems)\n\nWrt to **running experiments on ImageNet** to validate the scalability of our contribution, we have started training ResNet-50 on ImageNet. However, due to unforeseen technical difficulties with the filesystem of our  GPU infrastructure, we only have preliminary results, **up to epoch 60**. We will continue the training process and can update the manuscript upon termination. For what it's worth, current results show similar convergence dynamics with Pufferfish, with training reaching 70.05% of accuracy at 47% of MACs and 32% of the original parameters. Moreover, we have results for TinyImageNet and Multi-30K, both of which should hint at the scaling ability of our technique. Last, while we did our best to have the results in time, we would like to point out that similar works have been published in ICLR without scaling their evaluation to ImageNet levels (Khodak et al., ICLR'21).\n\n| Method | Accuracy | GMACs | Parameters |\n| --- | --- | --- | --- |\n| Pufferfish | 76.34 % (~70% on epoch 60) | 3.6 (87%) | 15.2 (59.5%)\n| Cuttlefish | 76.44 % | 3.6 (87%) | 14.7 (57.4%)\n| Ours | 70.05% (on epoch 60) | 1.96 (47%) | 8.2 (32%) |\n\nLast, we have **positioned our work against the OTOv2** framework, as requested. Indicatively, OTOv2 involves a much more involved (and costly) training process because the HSPG solving step does not offer a method to trade off accuracy for model size further. In contrast, Maestro enables a more efficient training method along with flexible gains upon deployment without the need to retrain (one-shot). Last, wrt the mentioned figures, let us first note that we are comparing VGG-16 (OTOv2) vs. VGG-19 (Maestro). Be that as it may, our original accuracy of vanilla VGG-19 is 92.94% (vs. 93.2%). Compared to OTOv2's performance of 26.8% of MACs, 5.5% of parameters at +0.1 pp of accuracy, the closest operating points of ours are at:\n\n* 33% of MACs, 11% of parameters at +0.16 pp of accuracy\n* 20% of MACs, 6% of parameters at -0.24pp of accuracy\n\nWhile competitive, we may not be beating this baseline on the end accuracy. However, we believe the benefits of training overhead and deployment flexibility make Maestro an advantageous approach in many cases.\n\n[1] Khodak, M., Tenenholtz, N., Mackey, L., & Fusi, N. (2021). Initialization and regularization of factorized neural layers. ICLR'21."
                    }
                },
                "number": 2,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission4088/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700739523527,
                "cdate": 1700739523527,
                "tmdate": 1700740080824,
                "mdate": 1700740080824,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    }
]