[
    {
        "title": "Retro-fallback: retrosynthetic planning in an uncertain world"
    },
    {
        "review": {
            "id": "POfqOCbFrA",
            "forum": "dl0u4ODCuW",
            "replyto": "dl0u4ODCuW",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission2450/Reviewer_1DzG"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission2450/Reviewer_1DzG"
            ],
            "content": {
                "summary": {
                    "value": "The submission has a clear description and clarifies that low-feasibility of retrosynthetic routes limit the real-world practicability in lab. The quantitative results and the comparison to prior methods may need to be clarified to support the statement of enhancing the generated route practicability."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "1. This paper draws an insight to the unperfect reactions by the one-step prediction model and redefined the buyability of real-world molecules.\n\n2. This paper uses a novel approach based on stochastic processes to solve the retrosynthetic problem."
                },
                "weaknesses": {
                    "value": "1. More quantitative experimental results and baseline comparisons need to be clarified.\n\n2. This paper has a solid motivation and a novel solution to perform the route planning but is limited by the proposed SSP metric. SSP attempts to calibrate the feasibility of chemical reactions. However, it will not perform better than a forward one-step prediction model since they are trained on the similar reaction dataset. Besides, SAScore is a trivial metric as it prefers unrealistic large carbon rings."
                },
                "questions": {
                    "value": "The quantitative results seem not adequate enough to support the findings, could the author present more quantitative results?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "details_of_ethics_concerns": {
                    "value": "NA."
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission2450/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission2450/Reviewer_1DzG",
                        "ICLR.cc/2024/Conference/Submission2450/Senior_Area_Chairs"
                    ]
                }
            },
            "number": 1,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission2450/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698718266948,
            "cdate": 1698718266948,
            "tmdate": 1700658912662,
            "mdate": 1700658912662,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "ywWqYX54Zb",
                "forum": "dl0u4ODCuW",
                "replyto": "POfqOCbFrA",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission2450/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission2450/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Initial response to reviewer 1DzG"
                    },
                    "comment": {
                        "value": "Thanks for reading our paper and providing helpful comments. We will respond to your comments and questions below. Please also refer to our general response ([link](https://openreview.net/forum?id=dl0u4ODCuW&noteId=GbZ5C1tSlR)).\n\n**Weakness 1: more results**\n\nWe have performed _over 6000_ new search comparisons on the retro* and FusionRetro test datasets to strengthen our quantitative results. The results are shown in sections F.4-F.5 and confirm that retro-fallback is more effective at maximizing SSP than other algorithms while being no worse with respect to other metrics.\n\nWe believe that these additional results are more than enough to support our claims. We remind the reviewer that previous papers in multi-step retrosynthesis (e.g. retro*, DFPN-E, PDVN) were accepted to similar conferences despite performing fewer experiments.\n\nThe baselines for comparison are described in detail in sections F.1.4-F.1.5. Essentially we did our best to configure some of the most common baseline algorithms for multi-step retrosynthesis to optimize SSP (knowing it is not possible to directly set SSP to be the \"objective\"). We are happy to answer any specific questions you may have about them.\n\n**Weakness 2: limits of SSP metric**\n\nWe think the reviewer may have misunderstood our SSP metric. First, SSP is not a single specific metric, but rather a way to translate the predictions of a reaction feasibility model into a metric for entire synthesis plans. Its values depend on an underlying reaction feasibility model, and therefore it is not an *alternative* to a forward one-step prediction model, but would likely be *implemented* using such a model.\n\nSecond, SSP does not depend on SAScore in any of our experiments. We used SAScore as a _search heuristic_ to guide our algorithms, but never to evaluate the quality of the synthesis plans found during search. We agree it is trivial and has unrealistic preferences which make it unsuitable to evaluate route quality.\n\n**Overall**: we hope we have addressed your concerns, in particular your request for additional quantitative results. Please let us know if you have any follow-up questions."
                    }
                },
                "number": 6,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission2450/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700307597287,
                "cdate": 1700307597287,
                "tmdate": 1700307597287,
                "mdate": 1700307597287,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "ntmSepUfay",
                "forum": "dl0u4ODCuW",
                "replyto": "ywWqYX54Zb",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission2450/Reviewer_1DzG"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission2450/Reviewer_1DzG"
                ],
                "content": {
                    "comment": {
                        "value": "I appreciate the authors for preparing the rebuttal, the clarifications partially addressed my concerns. After checking the rebuttal and comments from other reviewers, I would like to maintain my rating."
                    }
                },
                "number": 8,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission2450/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700659109007,
                "cdate": 1700659109007,
                "tmdate": 1700659109007,
                "mdate": 1700659109007,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "dH2z8rlsma",
            "forum": "dl0u4ODCuW",
            "replyto": "dl0u4ODCuW",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission2450/Reviewer_ghCd"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission2450/Reviewer_ghCd"
            ],
            "content": {
                "summary": {
                    "value": "This paper aims to find multiple retrosynthesis plans to cope with the uncertainty of infeasible reactions or non-buyable molecules. To achieve this goal, the paper first presents a evaluation metric SSP to quantify the probability of at least one synthesis plan can work (judged by a feasibility and buyability model), and further designs a retrosynthetic planning algorithm retro-fallback that can greedily expand molecules to maximizes SSP, specially when all existing synthesis plans currently fail."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "1. The objective for addressing the uncertainty of infeasible reactions or non-buyable molecules is well-motivated and important in practice, and the paper laid out a clear and general formalism for this objective (e.g., feasibility, buyability, SSP);\n2. The path from motivation to solution is well-paved, from trivial/straightforward solution to the proposed one, and discussed the connection to related work systematically;\n3. The evaluation directly answers questions about the claims made by the paper."
                },
                "weaknesses": {
                    "value": "1. While I appreciate the general formulation and systematic discussion about planning algorithms, given the existence of retro*, the novelty and advantage of this work (e.g., performing parallel updates using multiple samples) is not that obvious to me. I would encourage adding more discussion when talking about detailed method. \n2. Since this work focuses on multi-step retrosynthesis, related works [1] working on this should be discussed.\n\n[1] Liu, Songtao, et al. \"FusionRetro: molecule representation fusion via in-context learning for retrosynthetic planning.\" International Conference on Machine Learning. PMLR, 2023."
                },
                "questions": {
                    "value": "1. How does Algorithm 1 generate multiple possible reaction graph for a target molecule? \n2. Algorithm 1 could generate plan that is not a valid plan, e.g., when the algorithm terminates, there are still tip nodes in G'. To take such cases into consideration, can the authors also evaluate performance using two other metrics: the success rate as in Retro*, and the set-wise exact match accuracy as in FusionRetro?\n3. How sensitive the method is to the number of samples when computing line 4-6 in Algorithm 1?\n4. It is interesting to see retro-fallback with transformer can be more computational efficient, and the authors elaborate more on that (e.g., how to combine both for improvement)?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 2,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission2450/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698987264806,
            "cdate": 1698987264806,
            "tmdate": 1699636180924,
            "mdate": 1699636180924,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "dpSpUAeQiK",
                "forum": "dl0u4ODCuW",
                "replyto": "dH2z8rlsma",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission2450/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission2450/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Initial response to reviewer ghCd"
                    },
                    "comment": {
                        "value": "Thanks for reading our paper and providing helpful comments. We will respond to your comments and questions below. Please also refer to our general response ([link](https://openreview.net/forum?id=dl0u4ODCuW&noteId=GbZ5C1tSlR)).\n\n**Weakness 1: novelty/advantage of this work over retro\\***\n\nThere are two ways to view the advantage and novelty of retro-fallback over retro\\*:\n\n1. Objective: retro-fallback optimizes the SSP objective (i.e. probability that at least one synthesis route is successful) while retro* minimizes a scalar cost. Critically, _there is no way to set the costs in retro* so that it optimizes SSP_. An example which illustrates this well is when there are correlations between reaction outcomes (e.g. either reaction A or reaction B will work, but not both). This cannot be represented by assigning individual scalar costs to reactions A and B. Therefore retro-fallback _can optimize objectives which retro* is incapable of._\n2. Mechanism: retro-fallback performs $k$ independent updates and aggregates them to estimate a conditional expectation, while retro* uses just a single cost function. Retro-fallback is a more complicated algorithm than retro\\*.\n\nWe have revised the comparison of retro* vs retro-fallback in section 5 to hopefully make this distinction more clear.\n\n**Weakness 2: FusionRetro not discussed**\n\nThank you for pointing us to this work, we were not aware of it. FusionRetro was a very interesting paper that proposes a hybrid single-step model and multi-step search algorithm, as well as a new metric. We have added a citation to this work and dedicated a section in the appendix to discussing it (G.4). We have also added an experiment using their benchmark dataset and metric in apprix F.5 (described below and in our general response).\n\n**Question 1: how does algorithm 1 generate multiple reaction graphs**\n\nMuch like retro*, proof number search, or MCTS, retro-fallback does not directly generate synthesis plans: instead, it grows an explicit search graph which contains the synthesis plans implicitly. A second enumeration step is required afterwards to extract the synthesis plans. Algorithm 1 just states the procedure for growing the search graph but omits this second step. We omitted it because other works (e.g. retro*) also do not discuss it and because enumerating paths in a graph can be done with relatively simple depth-first or breadth-first search algorithms.\n\n**Question 2: invalid plans/extra experiments**\n\nOur answer to Q1 should hopefully clarify this. Retro-fallback will almost certainly leave tip nodes in G, but the secondary algorithm to enumerate synthesis routes will skip over any routes whose end nodes are not purchasable. Therefore it is not possible to output invalid plans.\n\nNonetheless we still performed an experiment with the FusionRetro dataset/metric as the reviewer suggested. Essentially we ran retro-fallback and our baseline algorithms on the FusionRetro test set using one of our existing feasibility models. The results are shown in appendix F.5 and suggest that retro-fallback achieve a higher SSP score while performing similarly on the FusionRetro exact matching metric.\n\nWe further note that the \u201csuccess rate\u201d metric was already included in the paper under the name \u201cfraction solved\u201d (see figures F.6-F.7). Retro-fallback consistently outperformed the baseline algorithms according to this metric and did so on the FusionRetro benchmark too.\n\n**Question 3: sensitivity to number of samples**\n\nThis is a good question. In figure 3 (right) we show empirically that performance generally improves as the number of samples increases, but that this effect seems to plateau after ~1000 samples. Therefore the method seems to only be sensitive when the number of samples is relatively small.\n\n**Question 4: combining with transformer**\n\nGood question: we think the best potential to combine our method with a transformer is to use it as the single-step reaction prediction model or feasibility model. By not relying on templates, such a model could be very flexible. We discuss combining retro-fallback and FusionRetro specifically in appendix G.4. This is an exciting direction for future research!"
                    }
                },
                "number": 5,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission2450/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700307398237,
                "cdate": 1700307398237,
                "tmdate": 1700307398237,
                "mdate": 1700307398237,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "F81g4R35MM",
            "forum": "dl0u4ODCuW",
            "replyto": "dl0u4ODCuW",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission2450/Reviewer_L6R1"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission2450/Reviewer_L6R1"
            ],
            "content": {
                "summary": {
                    "value": "This paper proposes an algorithm for retrosynthetic planning named Retro-Feedback.\nThe algorithm is tested on a benchmark problem and achieved improving\nperformance compared with existing algorithms, including Retro* and MCTS."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "- The algorithm is described in detail.\n\n- The improving performance on the benchmark problems.\n\n- Proposed a novel measure of successful synthesis probability (SSP) for retrosynthesis."
                },
                "weaknesses": {
                    "value": "- The reviewer has several questions explained in the Questions below."
                },
                "questions": {
                    "value": "1. On page 4.\n\"... while algorithms like breadth-first search or proof-number search (Kishimoto et al., 2019) have no customizable rewards or costs of any kind.\"\\\nIn Section 5.\n\"In fact, if costs are defined to be negative log probabilities then the updates for \u03c8 and \u03c1 are essentially equivalent to the \u201creaction number\u201d and \u201cretro* value\u201d updates from (Chen et al., 2020).\"\\\nThe reviewer could not find the key difference between retro-fallback and the two existing algorithms, DFPN-E [Kishimoto+ 2019] or Retro* [Chen+ 2020].\nIf we use the negative log probabilities as the proof or disproof number, retro-feedback, Retro*, and DFPN-E seem very similar.\\\nProbably, the reviewer did not understand what this sentence meant.\n\"The key difference is that retro-fallback performs parallel updates...\"\\\nWhat does \"parallel\" mean in this case?\nCould the authors elaborate on this part?\n\n1. The reviewer might have misunderstood something, but the problem described in Section   4.1 could easily avoided if the authors used a hash table for implementing the search algorithms.\n(Using a hash table is a standard technique for proof-number search.)\nIf a hash table is used, a cycle could be easily detected, so it is possible to avoid problems caused by the same molecule or reaction appearing multiple times in a path.\n\n1. P. 1.\n\"Although existing algorithms may find multiple synthesis plans, they are generally not designed to do so, and there is no reason to expect the plans found will be suitable as backup plans (e.g. they may share steps with the primary plan and thereby fail alongside it).\"\\\nThe following paper proposes an AND-OR-tree-based search algorithm for retrosynthesis, which keeps enumerating (probably) all the synthetic routes one by one in the order of some preference.\n> Shibukawa, R., Ishida, S., Yoshizoe, K. et al. CompRet: a comprehensive recommendation framework for chemical synthesis planning with algorithmic enumeration. J Cheminform 12, 52 (2020). https://doi.org/10.1186/s13321-020-00452-5\n\nMinor comments.\n1. There is an older paper that proposes to use AND-OR tree search for retrosynthesis. Please consider referring to this paper.\n> Heifets, A., & Jurisica, I. (2021). Construction of New Medicines via Game Proof Search. Proceedings of the AAAI Conference on Artificial Intelligence, 26(1), 1564-1570. https://doi.org/10.1609/aaai.v26i1.8331\nhttps://ojs.aaai.org/index.php/AAAI/article/view/8331\n\n1. Is it reasonable to assume there is always only one product?\n\n1. P. 2. \"tip nodes\"\n  In graph search terminology, I think this is called \"frontier nodes\"."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission2450/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission2450/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission2450/Reviewer_L6R1"
                    ]
                }
            },
            "number": 3,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission2450/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1699031736866,
            "cdate": 1699031736866,
            "tmdate": 1700678555804,
            "mdate": 1700678555804,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "ToJgkKyh7Y",
                "forum": "dl0u4ODCuW",
                "replyto": "F81g4R35MM",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission2450/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission2450/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Answers to questions from reviewer L6R1"
                    },
                    "comment": {
                        "value": "Thanks for reading our paper and providing helpful comments. We will answer your questions below. Please also refer to our general response ([link](https://openreview.net/forum?id=dl0u4ODCuW&noteId=GbZ5C1tSlR)).\n\n**Q1 (key difference between retro-fallback and existing algorithms DFPN-E and Retro\\*)**\n\nThere are two ways to view the differences. The first is in the objective: retro-fallback aims to find a _set_ of synthesis plan which act as backup plans for each other (thereby maximizing our SSP metric) while retro*/DFPN-E aim to find a _single_ plan which minimizes some scalar cost. Importantly, this cost _cannot_ simply be set to SSP (we explain this in more detail in section 4.1 and appendix C). As an intuitive example, imagine that either reaction A or reaction B will be feasible, but not both: this dependency cannot be captured by a scalar cost. _Therefore, retro-fallback is pursuing a fundamentally different objective than the existing algorithms mentioned in your review._\n\nThe second way to view the differences is mechanistically. The main difference is that retro*/DFPN-E all perform a _single_ cost update in an AND/OR graph while retro-fallback performs _$k$ separate updates_ (one for each sample from the stochastic processes). This is what we meant by \u201cparallel updates\u201d. Although the individual update equations are equivalent to those of retro* in one special case, they are not equivalent in general. As far as we can tell, the updates are not equivalent to DFPN-E in any cases.\n\nIn summary, although these algorithms all perform heuristic-guided search on an AND/OR graph, their objectives and mechanisms are distinct, so we think the algorithms are quite different. We revised some text in section 5 to clarify this (e.g. we removed the confusing term \u201cparallel updates\u201d). Please let us know if this addresses your concerns.\n\n**Q2 (hash table)**\n\nWe believe the reviewer may be asking about section 4.2 rather than section 4.1 because cycles are not discussed in section 4.1.\n\nIf considering just a single synthesis plan, we agree that hash tables can be useful to check whether a cycle is present and potentially to remove it (in fact we use hash tables in our analysis code to enumerate valid synthesis plans). However, the problem described in section 4.2 is to calculate the recursively-defined quantities $\\rho$ and $\\psi$ for all nodes in the graph. We _do not_ calculate this by enumerating all plans (that would scale poorly because a graph can contain a combinatorially large number of paths). Instead we advocate for a dynamic-programming style update which will run in polynomial time. Our comment at the end of the section merely states that because the graph contains cycles, we cannot do a simple dynamic programming update in linear time. The graph contains cycles because we do not include duplicate molecule/reaction nodes like some previous works. At no point in the updating process are individual synthesis plans considered or enumerated. Therefore we don\u2019t see how a hash table would resolve this issue.\n\nPlease let us know whether this answers your question, and in particular whether you really did mean to write section 4.1.\n\n**Q3 (multiple plans)**\n\nThe CompRet paper you referenced considers the problem of _extracting_ individual synthesis plans from a search graph, while retro-fallback (and retro*, MCTS, DFPN-E) are all algorithms to _construct_ a search graph. Algorithms like CompRet are required to extract the routes afterwards. We used a simple best-first search algorithm to do this but will look into CompRet as an alternative (and have added a citation to this paper). Thanks for the reference!\n\n**Minor comments**\n\n- Older paper: thanks for the reference, we have added a citation in section 2. We were not aware of this paper.\n- Assuming one product: all existing multi-step retrosynthesis algorithms (e.g. retro*, DFPN-E) make this assumption, even if they do not state it explicitly. We think it is reasonable since many reactions have a single main product, and multi-product reactions can be represented as two separate reactions (e.g. A+B -> C+D can become A+B->C and A+B->D). \n- Tip nodes: we copied the usage of this term from Jim\u00e9nez and Torras (2000) but are happy to use the term \u201cfrontier node\u201d if you think that is clearer."
                    }
                },
                "number": 4,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission2450/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700307162497,
                "cdate": 1700307162497,
                "tmdate": 1700307169044,
                "mdate": 1700307169044,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "miM7Jvx2Yh",
                "forum": "dl0u4ODCuW",
                "replyto": "F81g4R35MM",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission2450/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission2450/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Polite follow up on our rebuttal"
                    },
                    "comment": {
                        "value": "We thank again reviewer L6R1 for their effort during the reviewing process. We believe we have addressed the stated concerns with our response ([link here](https://openreview.net/forum?id=dl0u4ODCuW&noteId=ToJgkKyh7Y)) and we would like to ask the reviewer if they think this is the case as well. If the response is affirmative, and based on the higher ratings provided by the other reviewers, we would like to ask the reviewer if they are happy to increase their score."
                    }
                },
                "number": 9,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission2450/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700662231766,
                "cdate": 1700662231766,
                "tmdate": 1700662253150,
                "mdate": 1700662253150,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "2Qw1Yc6kY8",
                "forum": "dl0u4ODCuW",
                "replyto": "ToJgkKyh7Y",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission2450/Reviewer_L6R1"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission2450/Reviewer_L6R1"
                ],
                "content": {
                    "title": {
                        "value": "Reply to the answers."
                    },
                    "comment": {
                        "value": "Thank you for the detailed feedback.\nI still have some questions.\n\n1. Does this phrase, \"either reaction A or reaction B will be feasible, but not both,\" mean that using some of the pairs of chemical reactions is not feasible? Sorry for my lack of chemistry knowledge, but I was unaware of such cases.\nI think your answer resolves Q1.\n\n1. I was asking about section 4.2. Sorry for confusing you. I am not sure if I understood the answer. To my knowledge, from the algorithm viewpoint, existing algorithms such as df-pn, df-pn+, DFPN-E, and CompRet detect duplicate nodes correctly by using a hash table. I apologize for asking on the last day, but I could not understand the sentence, \"The graph contains cycles because we do not include duplicate molecule/reaction nodes like some previous works.\" What do the authors mean by \"some previous works\"?\n\n1. If I understood correctly, CompRet constructs and extracts the synthesis plans. Please clarify if this is wrong."
                    }
                },
                "number": 11,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission2450/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700678538267,
                "cdate": 1700678538267,
                "tmdate": 1700678538267,
                "mdate": 1700678538267,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "30a2GKNNCq",
                "forum": "dl0u4ODCuW",
                "replyto": "F81g4R35MM",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission2450/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission2450/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Further answers for reviewer L6R1"
                    },
                    "comment": {
                        "value": "Thank you very much for responding to our rebuttal. We saw that you increased your score and appreciate that. We will try to answer your extra questions.\n\n**Q1: different reactions being feasible**\n\nThis is a fair question and we understand your confusion. We will try to give a much more detailed answer.\n\nThe case we were referring to was a case where a feasibility model predicts that either a reaction A is feasible or a reaction B is feasible, but likely not both. For example, imagine a chemist knows that the reaction $P+Q$ will produce either $R$ (reaction A) or $S$ (reaction B) but doesn't know which one. An example probability distribution over feasibility outcomes which quantifies this is:\n\n|Outcome|Probability|\n|-----|-----|\n|A,B both feasible|0.0|\n|A feasible, B infeasible|0.5|\n|A infeasible, B feasible|0.5|\n|A, B both infeasible|0.0|\n\n(Note that the probabilities above sum up to 1)\n\nSo yes, using some of these pairs would not be feasible together.\n\n**Q2: de-duplication**\n\nWe think there might be confusion between two kinds of cycles. The first kind of cycle is if a route contains two reactions which undo each other, e.g. $A\\rightarrow B \\rightarrow A \\rightarrow C$. The second kind of cycle is if there exists a path in the serach graph $\\mathcal{G}'$ which revisits a node.\n\nThe previous works we refer to (specifically retro* and DFPN-E) use represent the search graph as a _tree_, which by construction will never contain the second kind of cycle. They construct a tree by allowing duplicate nodes in the graph. For example, if the reactions $B+C\\rightarrow A$ and $D+C\\rightarrow A$ are both in the search graph, there will be two $C$ nodes added to the graph. To avoid synthesis routes which contain the first kind of cycle, hash tables can be used to track which reactions have already been visited so that nodes which would imply a cyclic route are not added.\n\nIn our implementation of retro-fallback we use a search graph which only contains one node for each molecule, and is therefore not a tree. Figure B.1 shows an example of such a graph (which does not contain a cycle). However, in general it is possible for such graphs to contain a cycle if reactions like $A\\rightarrow B$ and $B\\rightarrow A$ are both possible. Our discussion of cycles pertains to _this_ type of cycles. Identifying whether cycles are present is still easy (and can be done with the hash table), but simply identifying the cycles does not yield a way to solve the recursive update equations for $\\psi$ and $\\rho$. Does that make sense?\n\n**Q3: CompRet**\n\nSorry, we made a small mistake. Quoting the intro of this paper:\n\n> CompRet implements the following three steps to recommend synthetic routes: (1) constructing a chemical reaction network based on the depth-first proof number search (DFPN) and template-based retrosynthesis [29, 30], without a large chemical reaction network such as the NOC, (2) enumerating all synthetic routes from the network using a novel algorithm, and (3) recommending multiple synthetic routes by developing a naive visualization method and simple score functions.\n\nWhen we described CompRet in our revised paper, we were only referring to step (2) because that was the novel algorithm proposed in the paper. However, looking again it seems that CompRet refers to the combination of all 3 steps. Apologies for the confusion. Still, DFPN and the route extraction regime in CompRet only consider metrics for individual routes and do not appear to have any mechanisms to return secondary routes which are suitable _backup plans_ for the first route, which is retro-fallback's goal. Does this match the reviewer's understanding of CompRet?"
                    }
                },
                "number": 12,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission2450/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700693384047,
                "cdate": 1700693384047,
                "tmdate": 1700736561279,
                "mdate": 1700736561279,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "cSQIubRuIJ",
                "forum": "dl0u4ODCuW",
                "replyto": "30a2GKNNCq",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission2450/Reviewer_L6R1"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission2450/Reviewer_L6R1"
                ],
                "content": {
                    "title": {
                        "value": "Reply to the further answers"
                    },
                    "comment": {
                        "value": "I thank the authors for the quick reply.\nQ1 and Q3 are resolved.\n\nQ2, \nI was not aware that DFPN-E allows the second type of cycles. Thank you for the explanation. But at least, the original df-pn variants do not allow duplicate nodes. Otherwise it would be a problem when solving two player games. Do I misunderstand something specific to chemistry?"
                    }
                },
                "number": 13,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission2450/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700698767334,
                "cdate": 1700698767334,
                "tmdate": 1700698767334,
                "mdate": 1700698767334,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    }
]