[
    {
        "title": "Tree Search-Based Policy Optimization under Stochastic Execution Delay"
    },
    {
        "review": {
            "id": "dkUes0GYLe",
            "forum": "RaqZX9LSGA",
            "replyto": "RaqZX9LSGA",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission8215/Reviewer_Rzwe"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission8215/Reviewer_Rzwe"
            ],
            "content": {
                "summary": {
                    "value": "The paper introduces(?) an MDP variant with stochastic execution delay. For the problem considered the authors show that  the optimal policy lays in a class of Markov policies. A variant of an MCTS algorithm, EfficientZero, is proposed that deals with the stochastic delay in the execution. Empirical evaluation are performed on a set of modified Atari benchmarks with superior results against some baselines."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "The delayed MDP variant seems a relevant problem.\n\nThe theoretical insight for the considered variant is valuable, and the proposed algorithm extension seems reasonable."
                },
                "weaknesses": {
                    "value": "It is not clear that this is a new MDP variant, or it is a particular version of the one with random delays considered in the Bouteiller article (cited in the paper) - with no observation delays. \n\nThe algorithm is described only in terms of differences to EfficientZero, which makes it hard to understand."
                },
                "questions": {
                    "value": "The relation between the MDP variant considered here and the one discussed in the Bouteiller article should be made clear. I would prefer also some motivating discussion on the choice of dealing with the action delays. Personally, I would find more natural if the action delays would not be limited to discrete values, and being executed after the delay (in many physical systems, the evolution of the system is not restricted to discrete steps anyway, even if the decision are). This would avoid the drop and duplication of the actions. Also, we might not necessarily observe the realization of execution delay, unless we can reverse engineer it from a known transition model (when it is deterministic). \n\nI can see arguments for the considered variant as well. Since the `proper' way to incorporate stochastic action delays in the MDP is not well established, I would like to see some (more) motivating discussion on the choice, and not only how it is handled. \n\nWhile MuZero and (somewhat to lesser extent) EfficientZero are well known, it is still difficult to understand the new algorithm described only in terms of differences to EfficientZero. The algorithm should be described completely, while pointing out the relevant differences.\n\nThe experiments are fairly extensive, but there is the issue of lack of clear baselines when a new problem is proposed. Maybe adapting the Delay-Correcting Actor-Critic of Bouteiller (even if does not have an MCTS module)?\n\nMinor: the initial state distribution (\\mu) in the MDP tuple is not present in the SED-MDP definition. Is this an intentional omission? \n\nOverall, I feel that there is a valuable contribution in the paper, but the presentation issues are fairly significant, and make the evaluation of the contribution difficult."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission8215/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission8215/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission8215/Reviewer_Rzwe"
                    ]
                }
            },
            "number": 1,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission8215/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698775672048,
            "cdate": 1698775672048,
            "tmdate": 1700647581407,
            "mdate": 1700647581407,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "c0KReHRY2q",
                "forum": "RaqZX9LSGA",
                "replyto": "dkUes0GYLe",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8215/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8215/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "Dear reviewer, thank you for your response. Please find our answers in the following.\n\n\n**W1: What is the difference from the formulation of (Bouteiller et al., 2020)?** \nIn fact, there is a crucial difference between our work and (Bouteiller et al., 2020). The formulation in the latter included an augmentation of the state space with the action queue and delay values: X=S\u00d7A^K\u00d7N^2. This makes the decision process Markovian and therefore all standard results on non-delayed RL hold naturally at the expense of an exponentially larger new (embedded) state space. In our SED-MDP, however, the state space remains unembedded. We therefore devise the theoretical machinery needed to be able to prove that non-Markov policies are as beneficial as history-dependent policies, as long as they can be non-stationary.\n\n**Q1: What about continuous time delay and estimation of it without observing it?** We appreciate the useful real-world direction. We agree and added this direction to the summary as relevant future work.   We mentioned another approach when dealing with unobserved stochastic delays. Using a robust criterion with respect to multiple possible realizations of delays may lead to conservative policies, adapted to the delay complexity. \n\n**Q2: Can you add motivating examples to having stochastic delay?** Sure. Perhaps the most prominent example of why delay can be stochastic is in real world systems that rely on transmission of data. Often, there is interference in transmission that can stem both from internal or external sources. Internal sources may be due to sensing HW that can be dependent on the temperature and pressure conditions. Whereas external sources can stem in the case of a robot or AV whose policy infers actions remotely (e.g., in the cloud). We added this motivation to the introduction.  \n\n**Q4: Can you baselines such as DCAC?** \nThe Delay-Correcting Actor-Critic of Bouteiller et al., (2020) uses augmented state space, embedding the entire action queue, which we avoid by planning. Moreover, the DCAC algorithm does not support discrete action space and adapting Soft Actor Critic to these settings is a complex task as shown in (Zhou et al., 2022, Revising  discrete soft actor-critic) that requires significant modifications of the model structure, deviating from DCAC. With such a support to discrete action space, one could have used, for comparison, an adapted version of Soft Actor Critic for delayed environments - a Delayed Actor Critic with planning - but we believe this extension doesn't naturally align with the context."
                    }
                },
                "number": 7,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8215/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700644611004,
                "cdate": 1700644611004,
                "tmdate": 1700644611004,
                "mdate": 1700644611004,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "AmBZQgxoD3",
                "forum": "RaqZX9LSGA",
                "replyto": "c0KReHRY2q",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8215/Reviewer_Rzwe"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8215/Reviewer_Rzwe"
                ],
                "content": {
                    "comment": {
                        "value": "I appreciate the effort of the authors to improve on the presentation. I am raising my score slightly, although I still feel that it is a borderline paper."
                    }
                },
                "number": 8,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8215/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700647757483,
                "cdate": 1700647757483,
                "tmdate": 1700647757483,
                "mdate": 1700647757483,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "gw8xq7KQFW",
            "forum": "RaqZX9LSGA",
            "replyto": "RaqZX9LSGA",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission8215/Reviewer_zW4Z"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission8215/Reviewer_zW4Z"
            ],
            "content": {
                "summary": {
                    "value": "In the real world, state information may not instantly be observed, actions may not instantly be applied, and reward feedback may not be immediate for various environmental reasons. The authors tackle this problem, called stochastic execution delay in MDPs, through the introduction of a new formalism, SED-MDPs. They prove that during policy optimization it is sufficient to restrict the search to the set of Markov policies and present a novel algorithm called Delayed EfficientZero, which shows improved performance over EfficientZero and Delayed-Q on Atari benchmarks."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "The authors motivate the problem well. It's easy to understand why stochastic execution delay is an important problem in RL. The contributions are also strong. The extension of ED-MDPs into SED-MDPs seems useful, and Theorem 4.2 is a nice theoretical result that shows Delayed EfficientZero is a well-principled algorithm for them. The results seem promising, given that Figure 5 is correctly labeled and not Figure 3."
                },
                "weaknesses": {
                    "value": "There are some clarity issues with the experiments, particularly in Figure 3. It seems mislabeled. Figure 5 in the appendix suggests blue should be SD-EZ, red delayed DQN, and white Oblivious-EZ. It also looks like delays appear from \"low to high\" rather than from \"high to low\" as suggested in the caption. It would also be nice for comparison's sake to standardize the figure so that the same game appears on a single row in both columns.\n\nSince SED-MDP is a new formalism, it may benefit the paper to include experiments in simpler domains. A central point of the paper seems to be constant vs. stochastic delays, but the experiments don't seem to show much of a difference between algorithms in the two environments for a given Atari game."
                },
                "questions": {
                    "value": "My low score is down to the problems with Figure 3, which is central to supporting the claim about improved performance over Atari. If the authors can confirm my suspicions and commit to fixing the figure in the rebuttal, or at least clarify the situation, I will strongly consider raising my score (after considering other reviews as well)."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission8215/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission8215/Reviewer_zW4Z",
                        "ICLR.cc/2024/Conference/Submission8215/Senior_Area_Chairs"
                    ]
                }
            },
            "number": 2,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission8215/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698794433899,
            "cdate": 1698794433899,
            "tmdate": 1700601745780,
            "mdate": 1700601745780,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "3Kb4Al4nXB",
                "forum": "RaqZX9LSGA",
                "replyto": "mC5aECyvAa",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8215/Reviewer_zW4Z"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8215/Reviewer_zW4Z"
                ],
                "content": {
                    "comment": {
                        "value": "I acknowledge that I've read the author comments and am raising my score accordingly."
                    }
                },
                "number": 3,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8215/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700601719043,
                "cdate": 1700601719043,
                "tmdate": 1700601719043,
                "mdate": 1700601719043,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "qrhWzL4IP9",
                "forum": "RaqZX9LSGA",
                "replyto": "gw8xq7KQFW",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8215/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8215/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "Dear reviewer, thank you for your response. Please find our answers in the following.\n\n**W1: Is the legend in Figure 3 wrong?** Good catch, the legend in Figure 3 was indeed wrong. Also, we added a table in the appendix, summarizing all the scores, including standard deviations for the four seeds.\n\n**W2: Can you make a each game appear in a single row in both columns?** Thanks for the suggestion. We have now standardized the game to appear in the same rows in both columns for comparison\u2019s sake.\n\n**W3: Do we expect a difference between constant and stochastic delays?** We do not expect a significant difference in the score behavior between constant and stochastic delays. Since the delay process we used was not biased toward a single value, the effect of stochasticity in delays can be to ease the state prediction when delays become smaller. For both settings, the scores should decrease when the delay increases."
                    }
                },
                "number": 6,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8215/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700644357624,
                "cdate": 1700644357624,
                "tmdate": 1700644357624,
                "mdate": 1700644357624,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "00KS4Ch07S",
            "forum": "RaqZX9LSGA",
            "replyto": "RaqZX9LSGA",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission8215/Reviewer_eDQ2"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission8215/Reviewer_eDQ2"
            ],
            "content": {
                "summary": {
                    "value": "The paper focus on MDPs in which there is a stochastic delay in the execution of the action selected by an agent acting in the MDP. Stochastic exectuion delay can result in the agent executing actions in the wrong state as the environment changes in real-time. Prior work focuses in fixed-delay times. This work provides a framework for situations in which the delay time is stochastic."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "**Orignality:\"\" The approach introduced in the paper is a novel algorithm for a problem framed in a more realistic way than before.\n\n**Clarity:** The paper is relatively clear and easy to understand. Some minor tweaks could be useful (see later.)\n\n**Significance:** The approach proposed would be of interest to others working MDPs with stochastic delays.\n\n**Quality:** The algorithm designed seems reasonable. The theoretical analysis looks sound however I did not thoroughly go through the proofs. The experiments chosen made sense however there are weaknesses in the results (see later.)"
                },
                "weaknesses": {
                    "value": "- I may be misunderstanding the graphs, but it looks as if SD-EZ scores worse than the other algorithms in most of the games in the plots in Fig 3a and 3b. Also, there are no confidence intervals or significance testing of any kind.\n\n- The algorithmic description is slightly difficult to follow. Perhaps breaking down the data structures (lists, etc.) used into a list would help ease the process."
                },
                "questions": {
                    "value": "No questions."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission8215/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission8215/Reviewer_eDQ2",
                        "ICLR.cc/2024/Conference/Submission8215/Senior_Area_Chairs"
                    ]
                }
            },
            "number": 3,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission8215/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698796630389,
            "cdate": 1698796630389,
            "tmdate": 1700693032075,
            "mdate": 1700693032075,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "A02U0bR7g2",
                "forum": "RaqZX9LSGA",
                "replyto": "00KS4Ch07S",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8215/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8215/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "Dear reviewer, thank you for your response. Please find our answers in the following.\n\n**W1 Mistake in Figure 3** \nGood catch, the legend in Figure 3 was indeed wrong; we fixed it in the revised version. Also, we added a table in the appendix, summarizing all the scores, including standard deviations for the four seeds. \n\n**W2 Algorithmic description** \nWe added a description of the actors in the original EfficientZero model of Ye et al., (2021) along with a pseudo-code of the episode sampling procedure to Appendix B, to clarify the order of execution of the different components during episode collection."
                    }
                },
                "number": 5,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8215/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700643882349,
                "cdate": 1700643882349,
                "tmdate": 1700644137472,
                "mdate": 1700644137472,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "RCHRXoBmkP",
                "forum": "RaqZX9LSGA",
                "replyto": "A02U0bR7g2",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8215/Reviewer_eDQ2"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8215/Reviewer_eDQ2"
                ],
                "content": {
                    "comment": {
                        "value": "I appreciate the authors' response. I am changing my score accordingly."
                    }
                },
                "number": 9,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8215/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700693008663,
                "cdate": 1700693008663,
                "tmdate": 1700693008663,
                "mdate": 1700693008663,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "1pfEmEmKqB",
            "forum": "RaqZX9LSGA",
            "replyto": "RaqZX9LSGA",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission8215/Reviewer_yeMT"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission8215/Reviewer_yeMT"
            ],
            "content": {
                "summary": {
                    "value": "This paper studies the delayed MDP problem, where stochastic delays are considered during the execution of actions. The authors introduce the concept of Stochastic Delayed Execution MDPs (SED-MDPs) as a solution to address random delays without relying on state augmentation. In particular, they show that optimizing within the set of Markov policies effectively reaches optimal performance.  Empirical validation across Atari games are performed under both constant and stochastic delay settings."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "Standard RL assumes immediate availability of information for decision-making, overlooking delays prevalent in various real-world applications.  Existing approaches resort to state augmentation,  which is inefficient in handling exponential computational complexity and dependence on delay values, hindering its scalability to random delays. To address this issue, the authors propose Delayed EfficientZero, a delayed variant of EfficientZero, which is a model-based algorithm that optimizes over the class of Markov policies. The proposed method is able to accurately infer future states from the action queue, and thus handles delayed execution while preserving the sample efficiency of EfficientZero.\n\nThe authors establish the insight of optimizing within the set of Markov policies offers a more efficient and scalable solution compared to history-dependent policies. They introduce a model-based algorithm, namely, Delayed EfficientZero, that builds upon EfficientZero. The proposed algorithm yields non-stationary Markov policies, maintaining efficiency and scalability without making assumptions about the delay distribution.\n\nDelayed feedback analysis is a rising topic in RL. Existing methods mainly focus on delays in states / trajectory / rewards. This work instead concerns delays in actions during policy execution, and this setting can be useful in practice."
                },
                "weaknesses": {
                    "value": "1. This paper adopts the ED-MDP formulation of (Derman et al., 2021) that sidesteps state augmentation, and extend it to the random delay\ncase. This extension appears to be a direct application of the previous formulation, authors are expected to explain the technical challenges compared to the constant delay formulation, and be clear about their technical contribution in terms of this formulation.\n\n2. This paper mainly develops based on the ED-MDP formulation of (Derman et al., 2021), random delay formulation in (Bouteiller et al., 2020),  and EfficientZero (Ye et al., 2021). The technical novelty in terms of the algorithm appears to be limited. Authors are expected to highlight the technical challenges and novelties.\n\n3. While authors provide a thorough experimental study on 15 Atari benchmarks, they only consider small delays by setting $M = \\{5, 15, 25\\}$. It is desirable to see how the performance can be when delays are large."
                },
                "questions": {
                    "value": "Under stochastic execution-delay MDPs (SED-MDPs), if at a specific time step (especially at the beginning of the game), there is no action available due to the delay, how does the proposed method execute the policy?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 4,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission8215/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698990944172,
            "cdate": 1698990944172,
            "tmdate": 1699637019715,
            "mdate": 1699637019715,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "yFHdQjJ6hI",
                "forum": "RaqZX9LSGA",
                "replyto": "1pfEmEmKqB",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8215/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8215/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "Dear reviewer, thank you for your response. Please find our answers in the following.\n\n**W1 How is the extension technically challenging compared to the existing ED-MDP formulation of Derman et al., (2021)?**\nWhile both our work and that of Derman et al., (2021) tackle RL under delayed execution, we present new theoretical and algorithmic contributions. We understand the reviewer is asking regarding the theoretical part, so we answer it here. Unlike the fixed delay case of Derman et al., (2021), in an SED-MDP, the decision time of an executed action at $t$ is *random*. As a result, for a given policy, the process distribution can be different depending on the realization of the delay process. This is not the case of constant delay, as the SED-MDP process distribution stays the same once the policy is given. Yet, in Thm. 4.2, we show that *even* when the delay values are generated from a random process, for any history-dependent policy, we can achieve the same process distribution under a Markov policy. The technicalities of the proof require introducing the notion of *effective decision time* at time $t$, i.e., the effective time at which an action executed at $t$ has been drawn. Thus, instead of having $a_t\\sim \\pi_{t-m}$ for a constant execution delay $m$, we now have $a_t\\sim\\pi_{\\tau_t}$, where $\\tau_t}$ is the effective decision time \u2013 the time at which the action performed at time $t$ was previously decided. In some sense, the resulting process becomes a stopped process in the random delay case.  \n\n**W2 Technical challenges and novelties in Delayed EfficientZero** \nAs opposed to the Delay-Correcting Actor-Critic of Bouteiller et al., (2020), we leverage a model-based approach, which is different from their solution: Bouteiller et al., (2020) work on an augmented state space, a continuous action space, and effectively small delay values compared to ours (observation and execution delays are smaller than 7 in any of their wifi delay sampler).  The technicalities in our work also differ from Delay-Correcting Actor Critic as we describe here. We address our approach by leveraging the popular model-based approach of Ye et al., (2021), but this requires a significant effort to extend to the delayed setting. When delays exist in tree search-based algorithms, one has to perform these searches successively while keeping parallelism efficiency.  We do so by implementing a parallelized MCTS search for predicted states, game trajectory manipulation, and matching stochastic delays after observation are obtained as described in Section 5 and in the added Appendix B. \n\n**W3 Longer delay values**\nThank you for your suggestion. We added experiments per your request on two Atari domains with larger delay values of {35,45}. The learning curves for Asterix and Hero can be found in the following link: \nhttps://ibb.co/q7npffz \nWe also added them to Appendix C.3 in the revised version and the result explanations at the end of section 6.\n\n**Q1 What action to take when none is available?** \nAs standard in control theory or previous delayed RL works, delay values are upper bounded (by, say, $M$) even though they are random. Thus, we specify an initial queue of $M$ actions to execute if none is available from the agent\u2019s policy. Otherwise, especially when $t>M$, an action drawn from the agent\u2019s policy is always available, and we use the latest executable action. This implies that some actions are duplicated when the realized delay value increases."
                    }
                },
                "number": 4,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8215/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700643642777,
                "cdate": 1700643642777,
                "tmdate": 1700644167235,
                "mdate": 1700644167235,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    }
]