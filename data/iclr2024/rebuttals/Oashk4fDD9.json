[
    {
        "title": "Injecting a Structural Inductive Bias into a Seq2Seq Model by Simulation"
    },
    {
        "review": {
            "id": "1DHFOZ8NR2",
            "forum": "Oashk4fDD9",
            "replyto": "Oashk4fDD9",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission5755/Reviewer_sUW9"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission5755/Reviewer_sUW9"
            ],
            "content": {
                "summary": {
                    "value": "The paper explores the direction of injecting inductive biases (into Transformers) by modifying the data (particularly, through synthetic pre-training). The paper tries to inject Finite State Transducer (FST)-like biases by generating relevant synthetic pre-training data. The paper pre-trains a Transformer on the synthetic data and test it for OOD generalization during fine-tuning different FST tasks. The paper found better OOD generalization with FST pre-training and prefixes than other baselines. The paper also shows positive transfer on some natural language tasks."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "1. Decent focused exploration on injection of inductive bias through synthetic pre-training. \n\n2. Shows the ability to demonstrate OOD generalizations (iteration generalization and systematic generalization) in FST-tasks from synthetic pre-training.\n\n3. Shows transfer from pre-training on FST to some specific natural language tasks."
                },
                "weaknesses": {
                    "value": "1. If By-T5 is already pre-trained in natural data before the synthetic pre-training, I wonder how much of an influence there is from the \"pre-pre-training\" in enabling OOD generalization and such. \n\n2. The scope feels limited. We already have prior works showing the viability of synthetic pre-training and knowledge transfer from natural language tasks. It is not as clear what the motivation for exploring particularly FST-related tasks is. Transformers have been shown to underperform in OOD generalization on logical inference [1,2], ListOps [2], Flip-Flop languages [3], parity tasks/sensitive tasks [4], automata tasks [5], and others [6]. It would have been good to contrast the approach with some of such works, reconcile with them, and see if the synthetic pre-training proposed here can be used. \n\n[1] The Importance of Being Recurrent for Modeling Hierarchical Structure - Tran. et al. EMNLP 2018\n\n[2] Ordered Memory - Shen et al. NeurIPS 2019\n\n[3] Exposing Attention Glitches with Flip-Flop Language Modeling - Liu et al. NeurIPS 2023\n\n[4] Simplicity Bias in Transformers and their Ability to Learn Sparse Boolean Functions - Bhattamishra et al. ACL 2023\n\n[5] Transformers Learn Shortcuts to Automata  - Liu et al. ICLR 2023\n\n[6] Neural Networks and the Chomsky Hierarchy - Del\u00e9tang et al. ICLR 2023"
                },
                "questions": {
                    "value": "1. What are the average and maximum sequence lengths in the pre-training data, training data, and iteration generalization data? \n\n2. Would it be possible to explore generalizations to higher lengths e.g. 100 or more?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 1,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission5755/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698732886208,
            "cdate": 1698732886208,
            "tmdate": 1699636604121,
            "mdate": 1699636604121,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "eHPYV6ETmL",
                "forum": "Oashk4fDD9",
                "replyto": "1DHFOZ8NR2",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission5755/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission5755/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Thank you for your review!"
                    },
                    "comment": {
                        "value": "Thank you for your review! \n\n> If By-T5 is already pre-trained in natural data before the synthetic pre-training, I wonder how much of an influence there is from the \"pre-pre-training\" in enabling OOD generalization and such.\n\nWe tried to train a ByT5-style model from scratch. However, none of the hyperparameter configurations we tried resulted in a model that would converge well. We hypothesize that a model has to be in a reasonable space to begin with to make learning easier.\n \nWhile we cannot exactly attribute what part of the generalization ability comes from the _combination_ of the original ByT5 weights and our pre-training, ByT5 on its own does not have a strong inductive bias for FST-like tasks and performs worse in our experiments.\n\n> We already have prior works showing the viability of synthetic pre-training and knowledge transfer from natural language tasks. \n\nWe briefly review some methods for pre-training with synthetic data in our Related Work section. In contrast to these, our methodology relies on simulating a computational device (FSTs, specifically).\n\nWe view our contribution not only as a pretraining procedure but it also includes a specific fine-tuning method (prefix of tunable embeddings) mirroring the pre-training. We have now included an ablation of the tunable prefix during fine-tuning (see Tables 1,3,4). The results show that using a tunable prefix is important for achieving the best performance.\n\n> The scope feels limited [...] It is not as clear what the motivation for exploring particularly FST-related tasks is. \n\nFSTs are an important computational device for NLP on the level of phonology and morphology. Our methodology of simulating a computational device is also quite general, and we view this as a stepping stone to more expressive computational devices with broader applications, such as Pushdown Transducers which could help with processing hierarchical structure. We hope that the results of this work can inform that exploration.\n\n> What are the average and maximum sequence lengths in the pre-training data, training data, and iteration generalization data?\n\nIn the pretraining data: the average input sequence length is 15.57 and the maximum is 35. The distribution of the training/test length for iteration generalization depends on the number of states in the FST:\n|  Num States | Data  | Min | Max | Average |\n| ----------- | ----- | --- | --- | ------- |\n| 4           | train | 2   | 11  | 4.66    |\n| 4           | test  | 4   | 30  | 18.97   |\n| 5           | train | 2   | 14  | 5.39    |\n| 5           | test  | 4   | 30  | 19.53   |\n| 7           | train | 2   | 20  | 6.12    |\n| 7           | test  | 4   | 30  | 20.13   |\n| 10          | train | 2   | 25  | 7.31    |\n| 10          | test  | 4   | 30  | 20.62   |\n\n> Would it be possible to explore generalizations to higher lengths e.g. 100 or more?\n\nWe ran an experiment on FSTs with 4 states (i.e. from the pre-training distribution), where models are trained on inputs of length up to 15, and tested on inputs of length 40 - 70, and on lengths 90 to 110. Note that this is beyond the lengths seen during pre-training. The results are below (averaged over 5 tasks), and show that our pretraining still has a strong positive impact:\n\n\n|  Model      | Max pre-training length | Test length | Acc  | Edit distance |\n| ----------- | ----------------------- | ----------- | ---- | ------------- |\n| ByT5        | 1024                    | 40 to 70    | 29.3 | 15.6          |\n| SIP-d4      | 35                      | 40 to 70    | **69.4** | **2.61**          |\n| ByT5        | 1024                    | 90 to 110   | 1.4  | 55.37         |\n| SIP-d4      | 35                      | 90 to 110   | 3.4  | 34.5          |\n| SIP-d4-long | 110                     | 90 to 110   | **81.5** | **1.09**          |\n\nWe hypothesize that the accuracy of SIP-d4 drops on lengths 90 to 110 because the relevant positional embeddings were not pre-trained.\nSIP-d4-long is a version of SIP-d4 that has been further pre-trained on strings of length up to 110. We refer to the new Appendix I for more details."
                    }
                },
                "number": 4,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission5755/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700231724419,
                "cdate": 1700231724419,
                "tmdate": 1700231724419,
                "mdate": 1700231724419,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "6m1YImcBgY",
                "forum": "Oashk4fDD9",
                "replyto": "eHPYV6ETmL",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission5755/Reviewer_sUW9"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission5755/Reviewer_sUW9"
                ],
                "content": {
                    "comment": {
                        "value": "Thank you for the additional feedback and data. They should improve the paper.\n\n> However, none of the hyperparameter configurations we tried resulted in a model that would converge well. We hypothesize that a model has to be in a reasonable space to begin with to make learning easier.\n\nThis is interesting and could be highlighted in the paper."
                    }
                },
                "number": 6,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission5755/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700243340662,
                "cdate": 1700243340662,
                "tmdate": 1700243340662,
                "mdate": 1700243340662,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "MIYcZvEbJ0",
            "forum": "Oashk4fDD9",
            "replyto": "Oashk4fDD9",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission5755/Reviewer_Tami"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission5755/Reviewer_Tami"
            ],
            "content": {
                "summary": {
                    "value": "In this paper, the authors inject an inductive bias towards Finite State Transducers (FSTs) into a Transformer by pre-training it to simulate FSTs given their descriptions. The proposed method is simple, adjustable and efficient to inject a structural inductive bias for FST-like\ntasks into a Transformer. Experimental resuts show that the proposed method has better systematic generalization on tasks beyond the pre-training distribution and strong results when transferring to natural FST-like data, as demonstrated on low-resource grapheme-to-morpheme conversion."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "1. The proposed method, which involves injecting Finite State Transducers (FSTs) into a Transformer, is novel and presents a promising direction for solving complex tasks in the real world.\n\n2. This paper is well-written and the method is clearly described.\n\n3. Experimental results show that the proposed method can outperform previous work in a wide range of tasks."
                },
                "weaknesses": {
                    "value": "1. The author needs to provide more ablation experiments and analysis to understand the changes brought about by the FST on the results and why it can bring consistent improvements.\n\n2. Despite the many experiments conducted in this paper, I still hope that the authors can apply the method to large language models. It is very important to determine whether the proposed method is still effective in LLMs and whether it can solve some problems existing in larger models, such as hallucinations."
                },
                "questions": {
                    "value": "n/a"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission5755/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission5755/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission5755/Reviewer_Tami"
                    ]
                }
            },
            "number": 2,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission5755/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698902853803,
            "cdate": 1698902853803,
            "tmdate": 1699636604030,
            "mdate": 1699636604030,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "tGcXubPGYg",
                "forum": "Oashk4fDD9",
                "replyto": "MIYcZvEbJ0",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission5755/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission5755/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Thank you for your review!"
                    },
                    "comment": {
                        "value": "Thank you for your review!\n\n> [...] more ablation experiments and analysis to understand the changes brought about by the FST on the results and why it can bring consistent improvements.\n\nWe have included an analysis in Appendix G that gives some insights into what the learned prefix can represent. In a nutshell, when finetuning on tasks from the pre-training distribution and adapting only the prefix (i.e. keeping the rest of the model frozen), the learned prefix resembles an encoding of the ground truth FST.\n\nWe have also included an ablation where we don\u2019t use a prefix of tunable embeddings during fine-tuning (see Tables 1,3,4). The results show that a tuneable prefix is important for achieving the best performance.\n\n> Despite the many experiments conducted in this paper, I still hope that the authors can apply the method to large language models. It is very important to determine whether the proposed method is still effective in LLMs and whether it can solve some problems existing in larger models, such as hallucinations.\n\nIn future work, we are planning to integrate pre-training to simulate computational devices (e.g. FST or grammars) into LLMs. This will likely require training on a mixture of simulated data and other pre-training data, so will be computationally expensive. \n\nWe think that simulating computational devices could potentially help with some problems of LLMs, in particular systematic generalization, but also specific forms of hallucinations, where the model ignores a rule and resorts to default behaviour (see also the [MemoTrap dataset](https://github.com/liujch1998/memo-trap)). For example, consider the following simple text editing problem (similar to Section 7.2)\n|Input | Output|\n| ------ | ------- |\n| Howard Phillips Lovecraft | H.P. Lovecraft |\n| John Ronald Reuel Tolkien | J.R.R. Tolkien |\n| Thomas Stearns Eliot | T.S. Eliot |\n\nThe current version of ChatGPT outputs \u201cJ.K. Rowling\u201d for the name \u201cJohn Edward Rowling\u201d, hallucinating the K."
                    }
                },
                "number": 3,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission5755/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700231177447,
                "cdate": 1700231177447,
                "tmdate": 1700231177447,
                "mdate": 1700231177447,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "4Gn9Hp3hyE",
                "forum": "Oashk4fDD9",
                "replyto": "MIYcZvEbJ0",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission5755/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission5755/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "Please feel free to reach out if you have any additional questions or would like any clarification. We'll do our best to respond in the remaining 40 hours before the discussion period ends."
                    }
                },
                "number": 10,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission5755/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700590307193,
                "cdate": 1700590307193,
                "tmdate": 1700590307193,
                "mdate": 1700590307193,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "R8bzgUvy7f",
            "forum": "Oashk4fDD9",
            "replyto": "Oashk4fDD9",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission5755/Reviewer_Lr31"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission5755/Reviewer_Lr31"
            ],
            "content": {
                "summary": {
                    "value": "This paper creates an approach (SIP) to effectively combine FST\u2019s topology information into transformer, through pre-training on vast amount of sampled FSTs and fine-tuned on a tunable embeddings. The author demonstrated various experimental results to support their claim that SIP is able to inject the inductive bias from FSTs into downstream tasks to achieve better performances."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "Overall, I think the approach of injecting inductive bias that is end2end trainable is interesting, though limiting the capacity of FST by only allowing deterministic designs. The approach treats FST as a prompt prefix / soft-prompt, which is shown to help generation on \u201cFST-like\u201d tasks and allow the incorporate of FSTs within a larger transformer-based neural model.\n\n1.Inductive bias from FST topology as soft-prompt for transformer supports end2end training \n\n2.The idea of simulation prior for generalization is interesting and the author proposes an interesting pipeline (FST data synthesis for pre-training then use average encoding for downstream task). Though I wonder what exactly is learned from the use of turnable encoding for downstream task."
                },
                "weaknesses": {
                    "value": "I don\u2019t think it\u2019s very surprising that transformer is able to learn complex structure encoded from FST, especially when the pre-training data is synthetically generated with a small amount of states. \nMoreover,  the use of the current proposed framework would be limited when #states/transition explodes, in addition to that fact that positional embedding from transformer is used as normal, which made encoding of identical FSTs with different state ordering represent different things. The need to encode FST as a sequence of prefix encoding also makes the design of FST topology limited. Overall, I feel this work might scarifies too much symbolic information obtainable from FSTs in order to fit it into the prefix encoding framework. \n\n1.Limitation of FST which has to be deterministic.\n\n2.The setup looks up state and transition from the embedding table which is not scalable.\n\n3.Positional information of transformer is used as usual, which means two identical FST with different state ordering have different representation in the transformer. This could result in unwanted behavior."
                },
                "questions": {
                    "value": "1.What exactly is learned from the tunable embedding? As the author assumes no FST information is available from downstream task, such embedding should be tuned toward certain encoding from pre-training stage right? Have the authors performed any analysis on such embedding?\n\n2.The nature of FST accepts compositional design (that is, addition or composition of different FSTs can be easily combined). I wonder if the proposed approach, when trained on different FSTs encoding, would generalize well to the task that is solvable by their composition?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "2: You are willing to defend your assessment, but it is quite likely that you did not understand the central parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission5755/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission5755/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission5755/Reviewer_Lr31"
                    ]
                }
            },
            "number": 3,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission5755/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1699415864113,
            "cdate": 1699415864113,
            "tmdate": 1700628859847,
            "mdate": 1700628859847,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "ZibrhOjbGR",
                "forum": "Oashk4fDD9",
                "replyto": "R8bzgUvy7f",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission5755/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission5755/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Thank you for your review!"
                    },
                    "comment": {
                        "value": "Thank you for your review!\n\n> 1. Limitation of FST which has to be deterministic. / The need to encode FST as a sequence of prefix encoding also makes the design of FST topology limited\n\nAny FST can be encoded with our method (as you mention though, the encoding is not unique, e.g. because of different orderings of transitions, see also our reply to your third point). In addition to our experiments with deterministic FSTs, we pretrain on non-deterministic FSTs in section 6.4, which improves OOD accuracy on tasks with underlying non-deterministic FSTs in comparison to pretraining on deterministic FSTs.\n\nOur framework could also easily be extended to stochastic/weighted FSTs by including the weights in the prefix as well.\n\n> 2.The setup looks up state and transition from the embedding table which is not scalable\n\n> the current proposed framework would be limited when #states/transition explodes\n\nWhile encoding very large FSTs into a prefix can make pre-training expensive (due to the quadratic runtime complexity of the transformer), our results in section 6.3 show that improvements can already be achieved by pre-training on smaller FSTs, which mitigates this issue to a certain extent.\n\nWe would also like to mention that other works in this area use black box meta-learning, where the prefix contains a small synthetic dataset of input/output pairs [1, 2]. Instead of encoding a synthetic dataset, we encode the underlying rules of the task, which is much more scalable.\n\n> 3.Positional information of transformer is used as usual, which means two identical FST with different state ordering have different representation in the transformer. This could result in unwanted behavior.\n\nWe ran an experiment to test how sensitive our pre-trained model is to different orderings of the transitions in the prefix: when given an encoding of an FST (from the same distribution as the training data), and a version of the encoding where the order of transitions is randomly permuted, the model predicts the same output in 98.3% of the cases. In the cases where the predictions are not exactly the same, they differ by 1.65 characters on average. We hypothesize that the transformer learns to encode them in a relatively position-agnostic way (e.g., by suppressing positional encodings); however, we did not perform a 'mechanistic' analysis of how it has been achieved.\n\nTo a lesser extent, this robustness towards permuting the prefix holds also in the fine-tuned case, when only the prefix is tuned and the other model parameters are frozen during finetuning: randomly permuting the order of the vectors in the tuned prefix reduces accuracy by 7.0 percentage points on average, with a median reduction of only 1.3 points (see the new Appendix G for details).\n\n> 1.What exactly is learned from the tunable embedding? [...] such embedding should be tuned toward certain encoding from pre-training stage right?\n\nWe performed an analysis that computes the cosine similarity between the tuned prefix of a model (when only the prefix is tuned and the rest of the model is frozen) and an encoding of the \u201cground truth\u201d FST. This analysis revealed that the learned prefix is reliably more similar to the ground truth FST than to 10,000 different FSTs with similar properties (see the new Appendix G for details). This shows that information is represented in the prefix in a somewhat similar way to encodings of symbolic FSTs.\n\n> 2. The nature of FST accepts compositional design (that is, addition or composition of different FSTs can be easily combined). I wonder if the proposed approach, when trained on different FSTs encoding, would generalize well to the task that is solvable by their composition?\n\nThank you for suggesting this interesting research direction! It is not clear what the composition function could be for the encoding learned through fine-tuning. However, we think it might be possible to adapt the model to the composition of two FSTs when their encodings are available using a small amount of training data from the composition of the FSTs. There may also be a way to meta-learn the model to accept a certain composition function (e.g., involving the concatenation of prefixes).\n  \n\n[1] Compositional generalization through meta sequence-to-sequence learning - Lake. NeurIPS 2019.\n\n[2] Human-like systematic generalization through a meta-learning neural network - Lake and Baroni, Nature 2023."
                    }
                },
                "number": 2,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission5755/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700230733088,
                "cdate": 1700230733088,
                "tmdate": 1700230733088,
                "mdate": 1700230733088,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "CWWGo4S9Ao",
                "forum": "Oashk4fDD9",
                "replyto": "R8bzgUvy7f",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission5755/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission5755/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "Please feel free to reach out if you have any additional questions or would like any clarification. We'll do our best to respond in the remaining 40 hours before the discussion period ends."
                    }
                },
                "number": 9,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission5755/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700590279037,
                "cdate": 1700590279037,
                "tmdate": 1700590279037,
                "mdate": 1700590279037,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "PA5a9j1dbB",
                "forum": "Oashk4fDD9",
                "replyto": "CWWGo4S9Ao",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission5755/Reviewer_Lr31"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission5755/Reviewer_Lr31"
                ],
                "content": {
                    "comment": {
                        "value": "Hi, thanks for your response, and sorry for the delay! \n\nI've read your updated version carefully, and I believe it resolves most of my concerns. Still, I think the FST setup in this paper is not sophisticated enough, maybe adding more complex FSTs (like stochastic/weighted FSTs mentioned by the authors) may help.\n\nBesides, I have an open question for the authors: SIP mainly focuses on Grapheme-to-phoneme tasks, which are relatively easy to solve and may suffer from limited practical impact (I understand most FST research does not play a chase game for practicability but for fun). Any ideas to extend SIP to more complex language reasoning tasks?\n\nOverall, I increased my score to 6."
                    }
                },
                "number": 11,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission5755/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700628848515,
                "cdate": 1700628848515,
                "tmdate": 1700628848515,
                "mdate": 1700628848515,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    }
]