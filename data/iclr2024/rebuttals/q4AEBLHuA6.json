[
    {
        "title": "Solving High Frequency and Multi-Scale PDEs with Gaussian Processes"
    },
    {
        "review": {
            "id": "l1IZ5JmNI8",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission5989/Reviewer_J8Ew"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission5989/Reviewer_J8Ew"
            ],
            "forum": "q4AEBLHuA6",
            "replyto": "q4AEBLHuA6",
            "content": {
                "summary": {
                    "value": "The paper discusses the numerical solution of multi-scale partial differential equations (PDEs) with Gaussian processes (GPs).\nTo this end, the submission proposes to use variations of the spectral mixture kernel as a prior model.\nAdditionally, selecting a covariance function that factorises into the product of dimension-wise covariances implies a Kronecker structure in the covariance matrices.\nAs a result, the algorithm requires less-than-cubic complexity to evaluate the loss function, and a user can optimise the PDE solution and (hyper)parameters efficiently. \nExperiments demonstrate the advantage of this method over physics-informed neural networks and those Gaussian-process-based solvers that use more traditional prior distributions."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "The topic of the paper (machine-learning-based PDE solvers) is of growing interest in the ICLR community and contributes some valuable concepts to this area. More specifically, the following contributions are novel, to the best of my knowledge:\n\n* Using a spectral mixture kernel for solving multi-scale PDEs\n* Numerically optimising the joint distribution of PDE solution and PDE information can be efficient if a Kronecker-factorised prior is used (something that is not necessarily the case for more traditional MLE or MAP estimation without further assumptions).\n\nThe manuscript is easy to follow for a reader who is roughly familiar with physics-informed neural networks, PDEs, and GPs.\nOverall, I consider this to be a good paper."
                },
                "weaknesses": {
                    "value": "The weaknesses of this submission are mostly presentational (with two exceptions that concern the experiments).\nI believe the following issues can _and should_ all be corrected before publication.\n\n\n1. The manuscript misses a range of closely related work about solving partial differential equations with Gaussian processes:\n\n    * Howhadi [1] discusses Bayesian numerical homogenisation (solving multi-scale PDEs with GPs), a central piece of related work that this paper should address prominently. \n    * Accessing the derivatives of the Gaussian process as a function of $\\vec{\\mathcal{U}}$ (the trick suggested in Equation (13)) is discussed in Section 2 and Section 3 in the paper by Kr\u00e4mer et al. [2].\n    * The related work section (Section 5) mentions the work on solving PDEs with GPs by Chen et al. (2021) and Long et al. (2022b) but completely misses all work that belongs to the field of probabilistic numerical algorithms (see, for instance, [1-3] below and the references therein).\n\n    I am aware that large parts of the ICLR community may be more familiar with physics-informed neural networks than with Gaussian-process-based differential-equation solvers and that taking this into account for the exposition therefore makes sense for an ICLR paper. However, the works mentioned above are closely related and must be discussed appropriately.\n\n2. I am surprised the submission never mentions traditional approaches to solving multi-scale problems, such as those based on numerical homogenisation (a starting point could be [4]). I know that the paper targets the ICLR community and that large parts of this community may be more interested in machine-learning-based PDE solvers than traditional PDE solvers. Still, existing approaches should be credited by (at least) mentioning their existence. (This relates to point 4. below)\n\n3. I am also surprised that the experiments only discuss the precision of the approximations rather than the work required to achieve this precision. The experiments in Appendix C suggest that the per-iteration runtime of the proposed algorithm is comparable to that of a physics-informed neural network. However, Figure 9 indicates that tens of thousands of iterations are needed. What is each algorithm's overall runtime (training time) to achieve the precisions in Tables 1 and 2?\n\n4. What would we find if we included a non-machine-learning-based solver in the experiments and compared the runtime to the accuracy of all these methods? I would like to see this comparison. I am not saying that the proposed method must outperform traditional solvers, which have been studied and optimised for a long time, but that the context is critical.\n\n\n5. This could be personal taste, but I think the paper might benefit from a slightly more rigorous notation surrounding Equation (14), for instance, by clarifying which joint probability density Equation (14) is the logarithm of. I am imagining something like mentioning $$\n\\mathcal{L} = \\log p(\\mathcal{U}, \\mathcal{H} \\mid \\Theta, \\tau_1, \\tau_2)$$ somewhere at the beginning of Section 4. Contextualising this term against the maximum-a-posteriori and maximum-likelihood loss for the same estimation problem would be even better. What do the authors think?\n\n\nI consider points 1 and 2 essential and 3 and 5 slightly less important to resolve before publication. \nI expect all four of those issues to be relatively straightforward to fix.\nPoint 4 would be optional, as incorporating it is non-trivial. However, I would like to see those results.\n\nI am open to revising my score once these issues have been addressed.\n\n\n\n\n\n**References:**\n\n[1] Howhadi, Bayesian numerical homogenization. Multiscale Modeling \\& Simulation. 2015.\n\n[2] Kr\u00e4mer et al.: Probabilistic numerical method of lines for time-dependent partial differential equations. AISTATS. 2022.\n\n[3] Hennig et al.: Probabilistic numerics. Cambridge University Press. 2022.\n\n[4] Altmann et al.: Numerical homogenisation beyond scale separation. Acta Numerica. 2021."
                },
                "questions": {
                    "value": "None"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "5: You are absolutely certain about your assessment. You are very familiar with the related work and checked the math/other details carefully."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission5989/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission5989/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission5989/Reviewer_J8Ew"
                    ]
                }
            },
            "number": 1,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission5989/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1697444890567,
            "cdate": 1697444890567,
            "tmdate": 1700638672874,
            "mdate": 1700638672874,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "ccjDeDfpmh",
                "forum": "q4AEBLHuA6",
                "replyto": "l1IZ5JmNI8",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission5989/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission5989/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Thanks for your insightful and constructive comments"
                    },
                    "comment": {
                        "value": "Thanks for your insightful and constructive comments. Here are our responses. C: comments; R: responses\n\n>C1: \"The manuscript misses a range of closely related work about solving partial differential equations with Gaussian processes\"\n\nR1: Thanks much for providing these excellent references. We do agree these works are related and important. We will cite and discuss them in our paper to appreciate their contributions.\n\n>C2: \"I am surprised the submission never mentions traditional approaches to solving multi-scale problems, such as those based on numerical homogenisation (a starting point could be [4]). I know that the paper targets the ICLR community and that large parts of this community may be more interested in machine-learning-based PDE solvers than traditional PDE solvers. Still, existing approaches should be credited by (at least) mentioning their existence. (This relates to point 4. below)\"\n\nR2: We appreciate the reviewer suggesting and providing references for traditional approaches.  We do agree. We will add references and credit those methods (including [4]) in our paper.\n\n>C3: \"I am also surprised that the experiments only discuss the precision of the approximations rather than the work required to achieve this precision. The experiments in Appendix C suggest that the per-iteration runtime of the proposed algorithm is comparable to that of a physics-informed neural network. However, Figure 9 indicates that tens of thousands of iterations are needed. What is each algorithm's overall runtime (training time) to achieve the precisions in Tables 1 and 2?\"\n\nR3: Great observation and questions. Actually, the number of iterations needed to reach a decent accuracy depends on the problem. That is why we report the average per-iteration time. In most cases, our method needs  <100K iterations to achieve the accuracy reported in the tables, e.g., 10K for $u_1$ and 20K for $u_3$ for 1D Poisson. In the most challenging cases, including $u_5$ for 1D Poisson and $u_7$ for 2D Poisson, it needs more iterations (>=200K). This is also comparable to the number of iteration required in PINN based methods, e.g., in [1], the PINN is trained with 10K ADAM iterations and 50K L-BFGS iterations.\nThanks for the great suggestion. We will supplement the detailed total running time for each test case in our paper.\n\n[1] Shibo Li, Michael Penwarden, Yiming Xu, Conor Tillinghast, Akil Narayan, Robert Kirby, and Shandian Zhe, \u201cMeta Learning of Interface Conditions for Multi-Domain Physics-Informed Neural Networks\u201d, The 40th International Conference on Machine Learning (ICML), 2023."
                    }
                },
                "number": 6,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission5989/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700078028763,
                "cdate": 1700078028763,
                "tmdate": 1700078028763,
                "mdate": 1700078028763,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "7oMhWpdXbK",
                "forum": "q4AEBLHuA6",
                "replyto": "l1IZ5JmNI8",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission5989/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission5989/Authors"
                ],
                "content": {
                    "comment": {
                        "value": ">C4: \"What would we find if we included a non-machine-learning-based solver in the experiments and compared the runtime to the accuracy of all these methods? I would like to see this comparison. I am not saying that the proposed method must outperform traditional solvers, which have been studied and optimised for a long time, but that the context is critical.\"\n\nR4: Great suggestion! We actually have included the result of a Spectral method based on Fourier bases plus least mean square (denoted by \"Spectral method\") in our tables. We followed your advice to test with three other non-ML solvers. The first one is finite difference (discretion resolution = 400, no less than the number of collocation points used in our method), implemented by [PyPDE](https://py-pde.readthedocs.io/en/latest/examples_gallery/poisson_eq_1d.html#sphx-glr-examples-gallery-poisson-eq-1d-py) library. The second one is [Chebfun](https://www.chebfun.org/) that uses Chebshev polynomials. The third one is spectral Galerkin method (with legendre and chebyshev polynomials, 48 quadrature nodes), implemented by [shenfun](https://shenfun.readthedocs.io/en/latest/) library. We list the results on solving the 1D Poisson equations in the paper. We highligh our method and the best of the other methods.\n\nWe can see that finite difference though gives reasonable results, its accuracy is consistently inferior to our method. The solution accuracy of Chebfun is consistently high. Spectral Galerkin, however, seems to fail in all the cases. The three methods run much faster than our method and PINN. This is reasonable, because the ML solvers use optimization to approximate the solution rather than interpolation. We will supplement the results for all the test PDEs in our paper.\n\n|  Relative $L_2$ Error  | $u_1$ |   $u_2$ |  $u_3$   | $u_4$   | $u_5$   |\n| :---        |            ---: |---:  | ---:  | ---:  | ---:\n| GP-HM-StM    | 6.53e-7   | 2.71e-3   |   3.17e-6  | 8.97e-6 | 4.22e-4|\n| GP-HM-GM  | 3.99e-7      | 2.73e-3   | 3.92e-6   |1.55e-6|1.82e-3|\n| Spectral Method (Fourier + LMS)   |   2.36e-2    | 3.47e0   | 1.02e0   |1.02e0|9.98e-1||\n| Finite Difference   |   5.58e-1    | 4.78e-2   | 2.34e-1   |1.47e0|1.40e0|\n| Chebfun   |   3.05e-11   | 1.17e-11   | 5.81e-11   |1.14e-10|8.95e-10|\n| Spectral Galerkin(legendre)   |   4.59e3    | 3.05e2   | 2.62e3   |2.72e4|1.29e3|\n| Spectral Galerkin (chebyshev)   |   9.49e2   | 7.84e2   | 1.99e3   |2.55e4|1.05e3|\n\n>C5: \"This could be personal taste, but I think the paper might benefit from a slightly more rigorous notation surrounding Equation (14), for instance, by clarifying which joint probability density Equation (14) is the logarithm of. I am imagining something like mentioning \"\n\nR5: This is a great suggestion. We will add the clarification of the joint probability (as suggested) in Eq4 to make the whole probabilistic modeling structure (learning objective) more clear."
                    }
                },
                "number": 7,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission5989/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700078611422,
                "cdate": 1700078611422,
                "tmdate": 1700259298232,
                "mdate": 1700259298232,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "GTZOWUP9z2",
                "forum": "q4AEBLHuA6",
                "replyto": "7oMhWpdXbK",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission5989/Reviewer_J8Ew"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission5989/Reviewer_J8Ew"
                ],
                "content": {
                    "comment": {
                        "value": "Thanks for the reply!\n\nR4: I missed the spectral method; thanks for clarifying. I appreciate the additional experiments, too. When including those results in the paper, I would like to see a mention of the total runtimes to achieve those numbers (which relates to Reviewer FJgw's comment about \"chebfun\").\n\nOverall, thanks for promising all those revisions.\nI am open to revising my score upon seeing the promised updates in the PDF."
                    }
                },
                "number": 8,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission5989/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700471957502,
                "cdate": 1700471957502,
                "tmdate": 1700471957502,
                "mdate": 1700471957502,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "n8kf2Ugk2D",
                "forum": "q4AEBLHuA6",
                "replyto": "l1IZ5JmNI8",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission5989/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission5989/Authors"
                ],
                "content": {
                    "title": {
                        "value": "updated manuscript  (near the end of rebuttal)"
                    },
                    "comment": {
                        "value": "Dear Reviewer J8Ew,\n\nWe have followed your suggestions to **update the new version of our manuscript**, where  **new results, like running non-ML solvers (including chebfun), total running time, and polished statements are added and highlighted in blue**.\n\nSince the End of author/reviewer discussions is just in one day, may we know if our response addresses your main concerns?  We are happy to engage in more discussion and paper improvements.\n\nThank you again for reviewing our paper!\n\nAuthors"
                    }
                },
                "number": 15,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission5989/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700604636364,
                "cdate": 1700604636364,
                "tmdate": 1700604636364,
                "mdate": 1700604636364,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "0b46jbrPoE",
                "forum": "q4AEBLHuA6",
                "replyto": "n8kf2Ugk2D",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission5989/Reviewer_J8Ew"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission5989/Reviewer_J8Ew"
                ],
                "content": {
                    "comment": {
                        "value": "Thanks for the updates.\n\nI am happy to see the included runtimes and have updated my score accordingly.\n\nSome revisions were promised but did not make it into the revision (e.g. discussion of numerical homogenization or probabilistic numerics, plus some presentational edits). Still, I recommend accepting this paper now.\n\nThanks to the authors for the active discussion!"
                    }
                },
                "number": 17,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission5989/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700639190615,
                "cdate": 1700639190615,
                "tmdate": 1700639190615,
                "mdate": 1700639190615,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "qvXLdLfe8t",
            "forum": "q4AEBLHuA6",
            "replyto": "q4AEBLHuA6",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission5989/Reviewer_FJgw"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission5989/Reviewer_FJgw"
            ],
            "content": {
                "summary": {
                    "value": "In this paper, the authors consider the problem of solving high-frequency partial differential equations (PDEs) using a Gaussian Process approach. The aim is to propose an alternative to PINNs, which struggle for high-frequency or multiscale PDE using a GP framework. To do so, the authors consider a prior distribution of the solution to the PDE as a mixture of student t distributions to capture high frequencies. Then, they propose a computationally fast GP method, which consists of constructing a sample grid on the domain through a Cartesian product of points, which is then exploited in the algorithm."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "- The paper is well-structured and the problem is clearly introduced and motivated.\n- The authors perform several numerical experiments on synthetic datasets, which show that their method outperform PINNs in terms of resulting accuracy of the solution."
                },
                "weaknesses": {
                    "value": "- One of the weaknesses of the paper is that the difference between prior GP-based works in the literature is unclear. The authors should clearly state the differences between their work and the existing ones, in particular the papers by Chen et al (JCP, 2021) and Raissi et al (JCP, 2017), cited in this work. I believe that the two differences are: (1) The use of student-t distribution and (2) using a Kronecker product grid to speed-up computations. In the current version, the title and abstract of the paper might be misleading to readers in the sense that this paper is not the first one to consider solving a PDE with GP.\n- I am very surprised by the Spectral method experiment performed by the authors. A quick experiment with Chebfun (https://www.chebfun.org/) allows me to solve the 1D Poisson equation to 10 digits accuracy in a fraction of a second.\n- The authors state at the end of Section 5 that their work is \"the first to [...] use the Kronecker product structure to efficiently solve PDEs\". I believe this sentence is erroneous. It is completely natural when using spectral methods to exploit the Kronecker product structure of the domain (see e.g. Fortunato & Townsend, 2019).\n- The authors offer very little conclusion and the main limitation section from the Appendix should appear in the main text. One of the key limitation of the method is that it is limited to simple geometry, where one can use a Kronecker product structure. However, this severely limits the applicability of the method and questions its advantages over spectral methods."
                },
                "questions": {
                    "value": "- Is there any concrete advantage of using the Student t distribution over the Gaussian distribution? The authors state that the Student t distribution is beneficial for high frequency but the performance seems very similar in the experiments of Table 1.\n- The experiments in Section 6 should provide the source terms (at least in Appendix) to allow for reproducibility.\n- Equation (6) should include the domain on which the integration is performed.\n- Minor comment: 2nd sentence of p.2: \"the performance of this method is unstable\" -> \"this method is unstable\"\n- Section 6: Timings should be reported in main text as it's one of the main advantage of the proposed method."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 2,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission5989/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698678879359,
            "cdate": 1698678879359,
            "tmdate": 1699636641199,
            "mdate": 1699636641199,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "GzQCcEZmyS",
                "forum": "q4AEBLHuA6",
                "replyto": "qvXLdLfe8t",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission5989/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission5989/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Thanks for the many valuable questions and comments"
                    },
                    "comment": {
                        "value": "Thanks for the many valuable questions and comments. Here are our clarification and responses. C: comments; R: responses\n\n> C1: \"One of the weaknesses of the paper is that the difference between prior GP-based works in the literature is unclear. The authors should clearly state the differences between their work and the existing ones, in particular the papers by Chen et al (JCP, 2021) and Raissi et al (JCP, 2017), cited in this work. I believe that the two differences are: (1) The use of student-t distribution and (2) using a Kronecker product grid to speed-up computations. In the current version, the title and abstract of the paper might be misleading to readers in the sense that this paper is not the first one to consider solving a PDE with GP.\"\n\nR1: In fact, we did explicitly emphasize the key difference with Chen et al (JCP, 2021). Please see the bottom of page 4 and top of page 5. In Section Related Work, we have also discussed the challenge of the SE/Matern kernel used by Chen et al (JCP, 2021) in solving the high-frequency/multi-scale PDEs (4th line, 2nd paragraph), which motivates our design of mixture kernel (a 3rd critical difference).  We agree your summary about the differences as well. We believe the key difference of Raissi et al (JCP, 2017) has also been covered by our paper --- see Section Releated Work, the 1st sentence of 2nd paragraph --- it only solves **linear PDEs with noisy measurement of source terms**. Our work (as well as Chen et al (JCP, 2021)) is more general in that it applies to both linear and nonlinear PDEs. We will highlight the difference in a stronger manner.\n\nSecond, we **never** claim/imply that our paper is \"the first one to consider solving a PDE with GP\". In fact, In Introduction Section (2nd paragraph, Page 2), we explicitly claim that **\"we resort to an alternative arising ML solver framework, Gaussian processes (GP)\" with (Chen et al., 2021) cited**. We will emphasize more on this point.\n\n> C2: \"I am very surprised by the Spectral method experiment performed by the authors. A quick experiment with Chebfun (https://www.chebfun.org/) allows me to solve the 1D Poisson equation to 10 digits accuracy in a fraction of a second.\"\n\nR2: Our spectral method was implemented based on Fourier bases to be consistent with kernel construction in our method for a fair comparison. The performance is indeed inferior (as shown in the tables). This is to show that introducing a mixture model in the frequency domain (rather than the temporal domain), with which to construct the GP, is much more effective.\n\nSecond, we do agree there can be more effective traditional solvers, such as Chebfun  (but not all the numerical methods work better for this problem; please see R4 to Reviewer J8Ew below). In many forward problems, machine-learning (ML) based PDE solvers, like GP or PINN, have not been able to perform equally well (in accuracy/efficiency) as traditional solvers. However, as explained in the 1st paragraph of Introduction, ML-based solvers \"are simple to implement, and can solve inverse problems efficiently and conveniently\". In addition, GP models can easily, robustly handle noisy measurements and/or source terms, offering a principled and convenient framework to quantify and reason under uncertainty. We therefore view **developing ML-based solvers as a promising direction, like the concurrent blooming efforts in this direction, even in several aspects the ML-based solvers are now still behind traditional numerical solvers that have been developed for decades**.\n\n> C3: \"The authors state at the end of Section 5 that their work is \"the first to [...] use the Kronecker product structure to efficiently solve PDEs\". I believe this sentence is erroneous. It is completely natural when using spectral methods to exploit the Kronecker product structure of the domain (see e.g. Fortunato & Townsend, 2019).\"\n\nR3: Thanks for the comment. We do agree that our statement is not precise. We mean to say GP plus Kronecker product structure (rather than Kronekcer product structure only). We will revise our statement to be accurate and clear. Please see R2 to Reviewer GK3t above for the detailed clarification."
                    }
                },
                "number": 4,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission5989/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700076681628,
                "cdate": 1700076681628,
                "tmdate": 1700258850892,
                "mdate": 1700258850892,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "fuyFu9i1ie",
                "forum": "q4AEBLHuA6",
                "replyto": "qvXLdLfe8t",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission5989/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission5989/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "> C4: \"The authors offer very little conclusion and the main limitation section from the Appendix should appear in the main text. One of the key limitation of the method is that it is limited to simple geometry, where one can use a Kronecker product structure. However, this severely limits the applicability of the method and questions its advantages over spectral methods.\"\n\nR4: Due to the space limit, we leave the limitation section in Appendix. We will re-organize the paper to merge the limitation and conclusion section, and put it in the main paper. \n\nWe believe our method is **NOT** limited to simple geometry. Even if the domain is not a grid, we can create a grid that covers the domain, and use the GP conditional mean (see Eq4 and Eq13) to predict the boundary values and fit the boundary conditions via the GP likelihood $\\text{log} \\mathcal{N}(\\mathbf{g}|\\mathbf{u}_b, \\tau_1^{-1}\\mathbf{I})$ (see Eq14). We then maximize the log joint probability to solve the problem. Note that the computation efficiency (via Kronecker product plus tensor algebra) remains the same.\n\n> C5: \"Is there any concrete advantage of using the Student t distribution over the Gaussian distribution?...\"\n\nR5: Great question. As explained in Section 3 (see the text under Eq5), the student $t$ distribution has a fat-tailed density, and hence can more robustly capture \"the (potentially many) minor frequencies\". By contrast, the Gaussian distribution density has a very thin tail, and can be much more sensitive to minor frequencies, especially when they are not ignorable.\n\nHowever, we agree that our most test cases comprise only one or just a few principle frequencies, and hence the results do not exhibit a strong contrast of the two choices. But two examples worth attention. One is the 1D Poisson with solution $u_4 = x\\cdot sin(200 x)$, and the other is 1D Poisson with solution $u_5 = sin(500x) - 2(x-0.5)^2$. In both cases, the solution contains many minor frequencies (due to non-trigonometric terms). We can see that our method with student $t$ mixture (GP-HM-StM) achieves much smaller error (one magnitude smaller) than with Gaussian mixture (GP-HM-GM).\n\nWe will add more such test cases to highlight their difference.\n\n> C6: \"The experiments in Section 6 should provide the source terms (at least in Appendix) to allow for reproducibility.\"\n\nR6: Thanks for the suggestion. As explained in Section 6, specifically, the text under Eq17, Eq18 and Eq19, we follow existing literature to first craft the solution, e.g., $u_1 = \\sin(100x)$ and $u_2=\\sin(x) + 0.1\\sin(20x) + 0.05\\cos(100x)$, and then apply the differentiation operator to obtain the source term $f$. We will supplement differential results (e.g., $f$) in the paper. \n\n> C7: \"Section 6: Timings should be reported in main text as it's one of the main advantage of the proposed method.\"\n\nR7: Thanks for the suggestion. We will add the time table to the main paper."
                    }
                },
                "number": 5,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission5989/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700077086954,
                "cdate": 1700077086954,
                "tmdate": 1700077343396,
                "mdate": 1700077343396,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "LrJHr82Dfu",
                "forum": "q4AEBLHuA6",
                "replyto": "fuyFu9i1ie",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission5989/Reviewer_FJgw"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission5989/Reviewer_FJgw"
                ],
                "content": {
                    "comment": {
                        "value": "I read the authors' reply and thank them for their detailed response. However, I am still not fully convinced by the pertinence of the paper's contributions. \n\nThe authors acknowledge that ML-based solvers `` have not been able to perform equally well (in accuracy/efficiency) as traditional solvers'', and mention that ML solvers are simple to implement and handle noisy measurements. I am not suggesting that the authors should necessarily outperform standard numerical solvers but at least show challenging experiments (as they are the main contributions of the paper) that display a promising competitive advantage.\nI do not think that claiming that the present approach outperforms existing techniques on high frequency data is a fair claim given that standard approaches (such as finite element method or spectral methods) come with rigorous error bounds and convergence rates to the solution as the resolution increases, which the authors' approach does not have due to the complex optimization process. Hence, the authors first reported a high error using spectral methods for one experiment but updated it to 10^{-10} error in the response to Reviewer J8Ew.\n\nConcerning the complexity of the geometry, the authors reply that one can always embed the domain into a square with a uniform grid. I agree with this comment but the number of points required to approximate the domain geometry would likely grow extremely fast, which would result in a much less efficient representation than using a meshing algorithm combined with a finite element solver. \n\nGiven the above concerns about the relevance and potential applicability of the paper's contributions, I would like to keep my current score."
                    }
                },
                "number": 11,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission5989/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700496311624,
                "cdate": 1700496311624,
                "tmdate": 1700496311624,
                "mdate": 1700496311624,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "RDCq7h5V6b",
                "forum": "q4AEBLHuA6",
                "replyto": "qvXLdLfe8t",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission5989/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission5989/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "> \"Hence, the authors first reported a high error using spectral methods for one experiment but updated it to 10^{-10} error in the response to Reviewer J8Ew.\"\n\nWe believe this has already been clarified in our paper and response R2. \n\nFirst, spectral method contains a large number of instances. Chebfun is just one instance, which adopts Chebshev polynomials as bases. One shouldn't view Chebfun is the only choice of spectral methods. You can have many other choices. In fact, different bases can end up with different performance. In our paper, we used the Fourier bases (the most straightforward choice), and it does show inferior performance. As explained in R2, we believe putting such a baseline is important to highlight the advantage of designing a mixture model in the frequency space.  As reported in R4 to J8Ew, we have also tried spectral Galerkin methods, which completely failed in our ``simple'' cases.\n\nSecond, we would love to come out more test cases and more challenging cases. But even for the current test cases, finite difference --- which is another commonly used and fundamental numerical approaches --- have already been surpassed by our methods. Though Chebfun works very well in 1D cases, it **cannot solve** 2D stationary problem, like 2D Poisson and 2D Allen-Cahn in our paper; please see the updated draft. Similarly, can you write a Chebfun solver to solve a 2D Darcy-flow? The usage of Chebfun is limited, even in the set of cases tested in our paper. \n\nThird, circling back to the points we have made for ML based solvers. One biggest advantage of ML based solvers we believe is that they are really convenient to implement and use --- **they are much more general in that you don't need to change the modeling and computational framework to handle different PDEs.** After 70+ years' development, traditional methods contain many useful tools/tricks. If you pick up the right tool/trick, it indeed works well; but how to pick up and combine various tools for different PDEs to make them work is always a headache. Of course, ML solvers. which start to get attention for only a few years, are far from mature, in both practice and theory. We therefore view such immaturity as a sign of new promising direction, like many researchers do, rather an excuse to suppress the direction. \n\n> \"Concerning the complexity of the geometry, the authors reply that one can always embed the domain into a square with a uniform grid. I agree with this comment but the number of points required to approximate the domain geometry would likely grow extremely fast, which would result in a much less efficient representation than using a meshing algorithm combined with a finite element solver. \"\n\nWe would like to point out that, even if the statement is true (though rigorous proof is unkown), including a large number of points on the boundary will not be an issue in that various stochastic mini-batch optimization can efficiently handle those points, just like training neural networks (or PINNs) with a huge number of data points. There is not any memory or computational bottleneck. Beside, it is very easy to leverage the modern distributed ML platform, e.g., [1],  to further speed-up, which is much cheaper than HPC/super computers. \n\n[1] Li, M., Andersen, D. G., Park, J. W., Smola, A. J., Ahmed, A., Josifovski, V., ... & Su, B. Y. (2014). Scaling distributed machine learning with the parameter server. In 11th USENIX Symposium on operating systems design and implementation (OSDI 14) (pp. 583-598)."
                    }
                },
                "number": 14,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission5989/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700563647207,
                "cdate": 1700563647207,
                "tmdate": 1700564283196,
                "mdate": 1700564283196,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "IBCqE5simr",
            "forum": "q4AEBLHuA6",
            "replyto": "q4AEBLHuA6",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission5989/Reviewer_SL7y"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission5989/Reviewer_SL7y"
            ],
            "content": {
                "summary": {
                    "value": "The authors propose a solver for partial differential equations (PDE), specifically designed for high-fidelity and multi-scale PDEs, using Gaussian Process. Current PDE solver methods can be highly unstable and sensitive to hyperparameters. The authors bypass this problem by modeling the solution in the frequency domain and estimate target frequencies from the covariance function of the Gaussian process. The authors also propose an efficient algorithm to scale up the learning algorithm."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "The authors described their method in detail, analyzed the runtime complexity, and provided multiple sets of experiments."
                },
                "weaknesses": {
                    "value": "The paper abstract right now is very hard to follow for interested readers, instead of focussing on what the authors did in their methodologies, it should focus mainly on the contributions from a high level. The introduction clarifies the authors\u2019 motivation well, however certain rearrangement of figures can help make it better. When the authors say their method is focussed on high fidelity and multi-scale PDEs, they can exhibit this with a figure (perhaps by moving figure 2,3 up in the first 2 pages).\n\n\u201cWhile effective, the performance of this method is unstable, and is highly sensitive to the number and\nscales of the Gaussian variances, which are difficult to choose beforehand\u201d - this statement should be associated with an example figure/experiment/prior work."
                },
                "questions": {
                    "value": "See weakness section."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "2: You are willing to defend your assessment, but it is quite likely that you did not understand the central parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission5989/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission5989/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission5989/Reviewer_SL7y"
                    ]
                }
            },
            "number": 3,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission5989/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698782740938,
            "cdate": 1698782740938,
            "tmdate": 1699636641084,
            "mdate": 1699636641084,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "v2OOxiRtTW",
                "forum": "q4AEBLHuA6",
                "replyto": "IBCqE5simr",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission5989/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission5989/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Thanks for your valuable and constructive comments"
                    },
                    "comment": {
                        "value": "Thanks for your valuable comments and suggestions. We will polish our paper and improve the presentation to highlight the contributions in a more concise and easy-to-understand way, especially for readers who are not experts in Gaussian process, kernel methods and PDE solving.  We will also follow your suggestions to move figure 2 and 3 up to better articulate the problem we aim to solve, and add additional analysis and examples to illustrate the learning behaviors of random Fourier PINNs."
                    }
                },
                "number": 3,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission5989/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700074761651,
                "cdate": 1700074761651,
                "tmdate": 1700074761651,
                "mdate": 1700074761651,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "V2Nf468K96",
            "forum": "q4AEBLHuA6",
            "replyto": "q4AEBLHuA6",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission5989/Reviewer_GK3t"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission5989/Reviewer_GK3t"
            ],
            "content": {
                "summary": {
                    "value": "This work uses Gaussian processes to solve partial differential equations. The authors propose to use a spectral mixture kernel and learn the mixture weights from data with a sparsity-inducing prior. To achieve scalability, they place collocation points on a grid and assume a product kernel which induces Kronecker structure in the resulting covariance matrices. The approach is then evaluated on three common model PDEs in one and two dimensions."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "Overall, the paper presents a promising idea for how to solve certain classes of PDEs with Gaussian processes. The idea of using a sparsity-inducing prior over the frequencies of a spectral mixture kernel seems very useful and the paper demonstrates the robustness and applicability of the approach."
                },
                "weaknesses": {
                    "value": "There are some weaknesses in the paper regarding the claimed novelty of the approach, the experimental evaluation and the proper attribution of existing approaches.\n\n## Originality\nIn my opinion the following two statements from the paper are incorrect or at least too strong for what is presented in the paper:\n\n1. Quote from the Abstract (also mentioned in contributions): \"The covariance derived from the Gaussian mixture spectrum corresponds to the known spectral mixture kernel. We are the \ufb01rst to discover its rationale and effectiveness for PDE solving.\" In my opinion, this is incorrect. H\u00e4rk\u00f6nen et al. (2023) construct a specific kernel for linear PDEs, which as they write explicitly at the end of Section 4.1 recovers the spectral mixture kernel (Wilson et al. 2013) as a special case.\n2. \"By contrast, for PDE solving, it is natural to estimate the solution values on a grid, which opens the possibility of using Kronecker products for ef\ufb01cient computation. To our knowledge, our work is the \ufb01rst to realize this bene\ufb01t and use the Kronecker product structure to ef\ufb01ciently solve PDEs.\"I disagree with this being the first instance of Kronecker product structure being used to efficiently solved PDEs. First of all, Kronecker product structure (on regular grids) is being used to solve PDEs (either via preconditioners or via the connection of separation of variables and tensor numerical methods (e.g. Gavrilyuk et al. 2019)). Second, as the authors mention themselves in the manuscript, the computational efficiency of product kernels on regular grids is well-known for GPs (Saatci, 2012). Further, PDE solvers based on GPs which use tensor product kernels (specifically Matern) have also been proposed previously (e.g. Wang et al. 2021).\n\n## Quality of Presentation\nThe paper is generally well-written and easy to understand. The ideas were presented in a coherent way and accessible to readers outside the specific subfield. The plots were largely informative, but I would have preferred larger plots to make them more legible. \n\n## Theoretical Results\nThe theoretical results are mostly standard applications of known results and look correct to me, although I did not check every derivation in detail.\n\n## Experimental Evaluation\nThe experimental evaluation is largely well-done. I have some questions about the baselines that are compared against. Specifically, the vanilla GP baseline with a Matern kernel. Is this using a product kernel? The authors write in the paper that \"[...] it is extremely costly or practically infeasible for the existent GP solvers to incorporate massive collocation points, due to the huge covariance matrix.\". Why should one not be able to leverage the Kronecker product + Toeplitz structure (see Sections 3.1 and 3.2 of Wilson et al. 2015) of a product of Matern kernels for the vanilla GP case as well? If this was not done here, the baseline that is presented here seems rather weak. I can imagine that a scale mixture still outperforms a vanilla Matern kernel, but the performance gap in terms of time and memory should be significantly smaller I would expect.\n\n## Related Work\nThe paper discusses related work from the domain of PINNs well, but misses some of the work on Gaussian-process based PDE solvers. For example, the following papers used GPs to solve PDEs:\n\n- J. Cockayne, C. Oates, T. Sullivan, M. Girolami, *Probabilistic numerical methods for PDE-constrained Bayesian inverse problems*, AIP Conf. Proc. 1853 (2017)\n- Wang, Junyang, et al. *Bayesian numerical methods for nonlinear partial differential equations.* Statistics and Computing 31, 2021 URL: https://arxiv.org/abs/2104.12587\n- Pf\u00f6rtner, Marvin, et al. *Physics-informed Gaussian process regression generalizes linear PDE solvers.* arXiv preprint arXiv:2212.12474 (2022).\n- Chen, Yifan, Houman Owhadi, and Florian Sch\u00e4fer. *Sparse Cholesky factorization for solving nonlinear PDEs via Gaussian processes.* arXiv preprint arXiv:2304.01294 (2023).\n\n**References**\nPapers cited in the review for reference:\n\n- H\u00e4rk\u00f6nen, Marc, Markus Lange-Hegermann, and Bogdan Raita. *Gaussian Process Priors for Systems of Linear Partial Differential Equations with Constant Coefficients.* International Conference on Machine Learning (ICML), 2023, URL: https://arxiv.org/abs/2212.14319\n- Wilson, Andrew, and Ryan Adams. *Gaussian process kernels for pattern discovery and extrapolation.* International Conference on Machine Learning (ICML), 2013, URL: https://arxiv.org/abs/1302.4245\n- Wang, Junyang, et al. *Bayesian numerical methods for nonlinear partial differential equations.* Statistics and Computing 31, 2021 URL: https://arxiv.org/abs/2104.12587\n- Gavrilyuk, Ivan and Khoromskij, Boris N.. *Tensor Numerical Methods: Actual Theory and Recent Applications* Computational Methods in Applied Mathematics, vol. 19, no. 1, 2019, pp. 1-4. URL: https://doi.org/10.1515/cmam-2018-0014\n- Wilson, Andrew Gordon, Christoph Dann, and Hannes Nickisch. \u201cThoughts on Massively Scalable Gaussian Processes.\u201d arXiv, November 5, 2015. URL: https://doi.org/10.48550/arXiv.1511.01870."
                },
                "questions": {
                    "value": "- What about the marginal uncertainty output by the Gaussian process? Does it capture the approximation error of the mean or is it miscalibrated? \n- What's the impact of the number of components of the mixture kernel on the approximated solution? An ablation such as a plot of number of components vs error would be informative. Also how does it affect the difficulty of the optimization problem? I could imagine choosing too many components makes the optimization problem significantly harder to solve in practice.\n- Do the kernel matrices you define have Toeplitz structure? Stationary kernels on a 1D grid would have. This could further accelerate the required computations (see Section 3.2. of Wilson et al. 2015)."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission5989/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission5989/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission5989/Reviewer_GK3t"
                    ]
                }
            },
            "number": 4,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission5989/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698783642621,
            "cdate": 1698783642621,
            "tmdate": 1699636640949,
            "mdate": 1699636640949,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "vo7m1CpvyC",
                "forum": "q4AEBLHuA6",
                "replyto": "V2Nf468K96",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission5989/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission5989/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "We thank the reviewer for their careful and constructive comments. \n\n>C1: \"... H\u00e4rk\u00f6nen et al. (2023) construct a specific kernel for linear PDEs, which as they write explicitly at the end of Section 4.1 recovers the spectral mixture kernel as a special case\"\n\nR1: Thanks for the excellent reference. We will modify our claim. Actually, our work is done roughly at the same time; this is not the first submission (and we did not release our work on ArXiv). Anyway, we will remove the statement, cite and discuss this nice work.\n\n>C2: \"...I disagree with this being the first instance of Kronecker product structure being used to efficiently solved PDEs...\"\n\nR2: Thanks for the valuable comments.  Our statement is indeed **not** precise, and we will remove the claim. From the context, we mean to say, we are using GP + Kronecker product structure --- **taking advantage of the corresponding computational advantage** --- to solve PDEs (rather the Kronecker product itself). The computational advantage is fulfilled by combining the properties of Kronecker product of kernel matrices and tensor algebra, which we believe is rarely used in the domain of PDE solving. In fact, we have acknowledged tensor-product structures are widely used in PDE solving; see the text under Eq11.\n\nWe never claimed that our work invents/discovers the computation advantage of GP+Kronecker product. As emphasized in related work, this advantage has been known in the GP community; our contribution is to **enable this computational advantage** in PDE solving.\n\nWe do agree (Wang et al. 2021) have also proposed the product kernel, but the paper is mainly about theoretical analysis (e.g., the sample path property) and does not fulfill efficient computation. Thanks this nice paper --- it provides additional strong justification of using a product kernel; we will cite and discuss about it. Thus we believe, the contributions of our work are still orthogonal to existing work in a large degree. We will make a more detailed, careful discussion and clarification.\n\n>C3: \"...the vanilla GP baseline with a Matern kernel. Is this using a product kernel?...\"\n\nR3: Great question. We did use product kernels for vanilla GP baselines. We use the same computational approach (Kronecker product + tensor algebra) to fulfill efficient training and prediction. We will clarify it in the paper.\n\n>C4: More reference on GP based PDE solvers\n\nR4: We appreciate the reviewer for providing these great references. We will cite and discuss them in our work.\n\n>C5: \"What about the marginal uncertainty output by the Gaussian process?...\"\n\nR5: Great question! We show the result on 1D Poisson (with solution $u_1$ and $u_3$) in [Fig. 1](https://github.com/wctghlbgtat/Solving-High-Frequency-and-Multi-Scale-PDEs-with-Gaussian-Processes/blob/main/u1.png) and [Fig. 2](https://github.com/wctghlbgtat/Solving-High-Frequency-and-Multi-Scale-PDEs-with-Gaussian-Processes/blob/main/u3.png). We compared our method with student-t mixture (GP-HM-StM) and GP with Matern kernel (GP-matern), in terms of log variance (left), log absolute error (middle), and prediction (right). We can see that the marginal uncertainty indeed reflects the error. In both figures, GP-Matern exhibits much larger errors in almost all the locations, and its corresponding variance is much larger than GP-HM-StM as well. In addition, both GP-Matern and GP-HM-StM show smaller variance on the boundary, and meanwhile their boundary errors are very small. It reflects both methods fit the boundary well. We will supplement the result and discussion in our paper.\n\n> C6: \"What's the impact of the number of components of the mixture kernel on the approximated solution? ...\"\n\nR6: Great question! We have followed your suggestion to give the result on 1D Poisson (with solution $u_1$ and $u_3$). We varied the component number from {3, 10, 30, 50, 80}. See [Here](https://github.com/wctghlbgtat/Solving-High-Frequency-and-Multi-Scale-PDEs-with-Gaussian-Processes/blob/main/components.png). As we can see, using two few or too many components can both increase optimization challenges (too few can make it harder to move to the right frequency). The best choice is in between. We will supplement the results and discussion in our paper.\n\n>C7: \"Do the kernel matrices you define have Toeplitz structure? Stationary kernels on a 1D grid would have. This could further accelerate the required computations (see Section 3.2. of Wilson et al. 2015).\"\n\nR7: Great question. Our method does not require the grid must be evenly-space in each dimension.  In fact, we can randomly sample locations in each dimension and then generate the grid (see text above Eq12). Hence the kernel matrices do not have the Toeplitz structure in general. However, if we specify a regular (evenly-spaced) grid, the Toeplitz structure will show up and we can certainly leverage it to further accelerate the computation. Thanks for suggesting this great idea, and we will add it into our discussion."
                    },
                    "title": {
                        "value": "Thanks for your detailed and constructive comments"
                    }
                },
                "number": 1,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission5989/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700074313701,
                "cdate": 1700074313701,
                "tmdate": 1700074469091,
                "mdate": 1700074469091,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "9NSiLhGPVJ",
                "forum": "q4AEBLHuA6",
                "replyto": "Zqawhm7kKk",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission5989/Reviewer_GK3t"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission5989/Reviewer_GK3t"
                ],
                "content": {
                    "comment": {
                        "value": "I appreciate the author's responsiveness to include feedback from the review. I would like to see the changes to the main text included in the revised draft even if it exceeds the 9 page limit (ideally highlighted in color). Otherwise it is challenging to give a revised opinion based on the promised changes alone.\n\n> R5: Great question! We show the result on 1D Poisson (with solution and ) in Fig. 1 and Fig. 2. We compared our method with student-t mixture (GP-HM-StM) and GP with Matern kernel (GP-matern), in terms of log variance (left), log absolute error (middle), and prediction (right). We can see that the marginal uncertainty indeed reflects the error. In both figures, GP-Matern exhibits much larger errors in almost all the locations, and its corresponding variance is much larger than GP-HM-StM as well. In addition, both GP-Matern and GP-HM-StM show smaller variance on the boundary, and meanwhile their boundary errors are very small. It reflects both methods fit the boundary well. We will supplement the result and discussion in our paper.\n\nThank you for providing this plot. The scale of the error seems to be correct. However, I would recommend plotting either squared error and variance or standard deviation and absolute error. Otherwise it's an apples to oranges comparison that makes it unnecessarily difficult for the reader. It is somewhat unfortunate that none of the error structure is captured in the uncertainty quantification (e.g. the oscillatory behavior of the error). For my own curiousity only: Do you have any intuition why that is?"
                    }
                },
                "number": 10,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission5989/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700494329447,
                "cdate": 1700494329447,
                "tmdate": 1700494329447,
                "mdate": 1700494329447,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "dEyU3d42CM",
                "forum": "q4AEBLHuA6",
                "replyto": "TJifbcSQbs",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission5989/Reviewer_GK3t"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission5989/Reviewer_GK3t"
                ],
                "content": {
                    "comment": {
                        "value": "The changes made to the manuscript improve the paper. Nonetheless, I feel my score is still appropriate. The reasons are my comments about the originality of the work (which the authors confirmed). Further, I share some of the concerns about the experimental evaluatiom raised by the other reviewers."
                    }
                },
                "number": 18,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission5989/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700648850585,
                "cdate": 1700648850585,
                "tmdate": 1700648850585,
                "mdate": 1700648850585,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    }
]