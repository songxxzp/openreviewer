[
    {
        "title": "Addressing Signal Delay in Deep Reinforcement Learning"
    },
    {
        "review": {
            "id": "1jvEqBYnU2",
            "forum": "Z8UfDs4J46",
            "replyto": "Z8UfDs4J46",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission3360/Reviewer_6hPB"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission3360/Reviewer_6hPB"
            ],
            "content": {
                "summary": {
                    "value": "This paper focuses on the problem of sequential decision making with signal delay. \n\nThat means observations on the current state do not arrive immediately after an action is taken, but arrive several steps after. \n\nThis delay in signal effectively makes the problem a POMDP, even when the agent always observes the underlying environment state.  \n\nTthe authors propose the formalization for such setting, called delayed osbervation MDP, and show that in fact it is a special case of POMDP. \n\nWhile we can potentially see this kind of problem as a POMDP and use standard DRL algorithms for POMDPs, the authors argue and show that these algorithms struggle in such setting. \n\nAs the main contribution of this paper, several techniques are proposed to improve the performance of DRL algorithms, in particular, actor critic methods, in this setting. \n\nThese techniques mainly rely on using priviledged information, e.g., access to the true current state, during offline training to improve the learning of actor and critic. \n\nSpecifically, for the critic, the authors propose to condition the critic on the true current state instead of the history of observations or the current observation which might be the true state a few steps earlier during training. Because the critic is not used during inference or deployment, this approach is possible as long as we have access to the true states during training. \nFor the actor, the authors propose to add actions taken in the past to the inputs of the actor as this will provide useful information to help the actor to predict the true current state. \n\nExperiments are performed to test the effectiveness of these proposed techniques. To do so, the authors take SAC, a strong model-free baseline, and build upon it with the proposed techniques. Results show that these techniques are indeed generally useful, especially when the delay is longer."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "1 poor"
                },
                "strengths": {
                    "value": "This is an interesting paper. \n\nIt looks at a problem that is somewhat ignored in the literature, indentifies the failure of existing algorithms, and proposes several techniques to improve the baselines, which are shown to be effective. \n\nMany baselines are considered and compared in the experiments."
                },
                "weaknesses": {
                    "value": "My biggest concern on this paper is that many of the proposed techniques, if not all, are not new, and the paper misses a large body of closely relevant works. In Section 4.1, the authors propose to condition the critic on the true current state (without delay) to improve learning. The idea of using priviledged information during training by conditioning the critic on the ground-truth state in actor critic methods has been widely explored by both the POMDP and MARL communities. For example, see [1] and [2] for the former case and [3] for the latter case. Section 4.1 basically describes a trivial application of this idea to DOMDPs, which are special cases of POMDPs. Furthermore, the authors mention that the efficay of such asymmetric architecture has been demonstrated by past previous studies. However, in [2], it has been shown that conditioning the critic (only) on the true state is fundamentally questionable as it leads to biased gradients. \n\nThen in Section 4.2, the authors propose to give the actor past actions to help it infer the state at the current step. I don't understand why is this not done by default. In my understanding, DOMDPs are POMDPs and in POMDPs, past actions and observations should always be given to the policy for optimal control. I don't see how this is an innovation. \n\nThe method that is proposed in Section 4.3 has also been explored for the general POMDP settings. For example, in [4,5,6], people have explored auxiliary losses (to predict the next observation, state, reward) for improving the representation learning of RNNs when learning optimal policies in POMDPs. \n\nIn the beginning of Section 3, baseline DRL methods are tested in delay signal settings and they are demonstrated to struggle in such a setting. Reasons are guessed for why they fail. However, I do not think that the failure of these baselines methods are studied well enough. I would like to see more ablation study on understanding how exactly they fail, which I believe will greatly help readers understand in what way DOMDPs are different to POMDPs and what are their unique challenges. Is it really due to the signal delay? Or like in general POMDPs, the RNNs cannot come up with good representations for decision making? For example, if these methods struggle to learn representations that support effective decision making, then one can test the accuracy of using these learned representations to predict the true current state. There are possible causes mentioned in paper but I find them rather vague and are not enough to motivate the proposed algorithmic changes. \n\nI also find lots of experimental details are missing from the paper, such as the architectures of networks, and the hyperparameters. Also, for the baselines, such as DDPG, TD3, SAC, are they also RNN based? It would be strange to use a non-recurrent baseline in a POMDP environment. And are the past actions passed to the actors in these baseline methods? Regarding hyperparameters, it would also be useful to know how are the hyperparameters tuned for each baseline and the proposed method to ensure fair comparison. \n\n[1] Baisero, Andrea, Brett Daley, and Christopher Amato. \"Asymmetric DQN for partially observable reinforcement learning.\" Uncertainty in Artificial Intelligence. PMLR, 2022.\n\n[2] Baisero, Andrea, and Christopher Amato. \"Unbiased Asymmetric Reinforcement Learning under Partial Observability.\" Proceedings of the 21st International Conference on Autonomous Agents and Multiagent Systems. 2022.\n\n[3] Foerster, Jakob, et al. \"Counterfactual multi-agent policy gradients.\" Proceedings of the AAAI conference on artificial intelligence. Vol. 32. No. 1. 2018.\n\n[4] Igl, Maximilian, et al. \"Deep variational reinforcement learning for POMDPs.\" International Conference on Machine Learning. PMLR, 2018.\n\n[5] Subramanian, Jayakumar, et al. \"Approximate information state for approximate planning and reinforcement learning in partially observed systems.\" The Journal of Machine Learning Research 23.1 (2022): 483-565.\n\n[6] Lambrechts, Gaspard, Adrien Bolland, and Damien Ernst. \"Informed POMDP: Leveraging Additional Information in Model-Based RL.\" arXiv preprint arXiv:2306.11488 (2023)."
                },
                "questions": {
                    "value": "In Figure 3, I find it weird to argue that baseline methods are failing by saying that there is a significant drop in performance from no delay to one-step delay. With different delay steps, we essentially have different POMDPs, which may inherently have different difficulty levels and different optimal performance. As such, the drop in performance I think is not sufficient to say the baseline methods are failing. However, a comparison to the optimal performance or performance from a better method would work. \n\nminor:\n- in Figure 3, colors correspond to delay lengths different in (d) than in other subplots. this can be confusing for readers."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "3: reject, not good enough"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission3360/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission3360/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission3360/Reviewer_6hPB"
                    ]
                }
            },
            "number": 1,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission3360/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698612124734,
            "cdate": 1698612124734,
            "tmdate": 1699636286103,
            "mdate": 1699636286103,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "CgFr8TS6Nc",
                "forum": "Z8UfDs4J46",
                "replyto": "1jvEqBYnU2",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3360/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3360/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Part 1"
                    },
                    "comment": {
                        "value": "Thank you for your insightful comments and for raising the concern regarding our paper. We appreciate the opportunity to clarify our contribution in this regard. \n\n> \u201cMy biggest concern on this paper is that many of the proposed techniques, if not all, are not new, and the paper misses a large body of closely relevant works.\n> \n\nWe apologize if our paper gave the impression that these techniques were newly proposed by us. We recognize the importance of acknowledging previous work and have updated to properly reference earlier studies where these techniques were first introduced and applied (see Sec.4.1 last paragraph, Sec.4.3 first paragraph).\n\nOur main contribution is not in creating brand new RL algorithms, but in systematically investigate effective framework for RL with delays, which can be applied to solve DOMPDs as a plug-in.\n\nFor your concerns about every  technique you mentioned below, we are not simply use it, but either provide theoretical guaranteed effective modifications or comprehensive study of possible variants. We believe our work our work contribute to the research in the field of singal delay in RL, providing valuable insights and practical solutions.\n\nIn the following, we are going to address your detailed concerns about these techniques one by one to explain how we contribute to each one. \n\n> In Section 4.1, the authors propose to condition the critic on the true current state (without delay) to improve learning. The idea of using priviledged information during training by conditioning the critic on the ground-truth state in actor critic methods has been widely explored by both the POMDP and MARL communities. For example, see [1] and [2] for the former case and [3] for the latter case. Section 4.1 basically describes a trivial application of this idea to DOMDPs, which are special cases of POMDPs.\n> \n\nIt is true that using \u201cground-truth state\u201d is a widely explored We address the following facts:\n\n1. **There has been extensive studies about delayed RL while they all miss to use this \u201cground-truth state\u201d technique.** We are the first to deploy it in delayed RL and the show that the performance improvement is significant. The techniques itself may be not novel but investigating it and reveals the robustness is an important step for Delay DRL study. Investigating and reveals this comprehensively is of a small part of our investigation of techniques which is potential to solve delayed RL.\n2. **Existing SOTA POMDP methods can not solve delayed RL well.** We has conduct experiment with \u201cRNN Strong\u201d and VRM, both are SOTA methods in POMDP studies. But their performance improvement are both marginal. So, simply treating DOMDP as a special case of POMDP and using existing methods can not be a solve the problem perfectly.\n\n> Furthermore, the authors mention that the efficay of such asymmetric architecture has been demonstrated by past previous studies. However, in [2], it has been shown that conditioning the critic (only) on the true state is fundamentally questionable as it leads to biased gradients.\u201d\n> \n\nThis is a great point. Conditioning the critic (only) on the true state is asymmetric and could lead to bad performance.\n\nTo address this, in our paper, we not only implemented the \"Oracle Guiding Critic-MLP\" but also conducted an ablation study with the \"Symmetric-MLP\" approach, using observations and historical actions (see Tab.1, final paragraph of Section 4.1). \n\n|  | Input-Critic | Input-Actor |\n| --- | --- | --- |\n| Oracle Guiding Critic-MLP | true-state $s_t$ | delayed state $s_t$ + historical actions $a_{t-\\Delta T:t-1}$ |\n| Symmetric-MLP | delayed state $s_t$ + historical actions $a_{t-\\Delta T:t-1}$ | delayed state $s_t$ + historical actions $a_{t-\\Delta T:t-1}$ |\n\nWe recognize there's a trade-off where the oracle critic can provide valuable information but also introduce bias. In this way, experimental investigation under delayed RL becomes crucial. \n\n|  | 0 | 1 | 2 | 4                                                                                           | 8 | 12 | Avg. |\n| --- | --- | --- | --- | --- | --- | --- | --- |\n| Oracle-Critic -MLP | 100.9\u00b111.2 | 92.8\u00b17.1 | 93.4\u00b18.1 | 78.0\u00b19.2 | 85.0\u00b19.9 | 64.7\u00b18.6 | 75.9\u00b19.2 |\n| Symmetric-MLP | 106.3\u00b19.4 | 75.1\u00b19.1 | 63.7\u00b19.7 | 51.4\u00b111.7 | 37.5\u00b113.2 | 27.0\u00b112.0 | 38.6\u00b112.2 |\n\nOur experimental results, as shown in the table below, indicate that the benefits of the information provided by the oracle critic generally outweigh the potential bias. We can see that \u201cOracle-Critic -MLP\u201d consistently outperform the \u201cSymmetric-MLP\u201d, and the performance gap is not trivial, which is 38.6 v.s. 75.9 on average.\n\nThese findings are consistent and we believe they will be valuable for future applications and research in this area.\n\nWe recognize that our paper's initial presentation is not clear. To address this, we've revised Section 4.1's last paragraph for better accuracy and included relevant paper you mentioned."
                    }
                },
                "number": 6,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3360/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700734660876,
                "cdate": 1700734660876,
                "tmdate": 1700742584030,
                "mdate": 1700742584030,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "Av4O8UdX4k",
                "forum": "Z8UfDs4J46",
                "replyto": "1jvEqBYnU2",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3360/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3360/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Part 2"
                    },
                    "comment": {
                        "value": "> \u201cThen in Section 4.2, the authors propose to give the actor past actions to help it infer the state at the current step. I don't understand why is this not done by default. In my understanding, DOMDPs are POMDPs and in POMDPs, past actions and observations should always be given to the policy for optimal control. I don't see how this is an innovation.\u201d\n> \n\nWe agree that using observation and action history is did a common practice in POMDPs. But we want to address the following facts: \n\n1. **The \u201ccommon practices\u201d can not solve Delayed RL well:** Although using historical observations and actions is a standard approach in POMDPs, our findings suggest that this strategy is less effective in DOMDPs. For instance, as demonstrated in Tab.1, the state-of-the-art POMDP method 'RNN Strong', which adheres to this common practice, using both action and state history, significantly underperforms compared to our proposed method. This discrepancy indicates that the \u201ccommon practices\u201d does not fully address the challenges posed by DOMDPs.\n2. **We show that Historical Actions and only historical actions in the delayed window are useful:** Our research shows that not all historical information is helpful. Instead, only the actions within the delay window is useful. This is a departure from the \u201ccommon practices\u201d of incorporating all historical data. More specifically, We show that theoretically (Theorem 4.1):\n    - Historical states do not improve to performance in DOMDPs.\n    - Only actions within the delay window are helpful.\n    \n    This selective incorporation of historical data not only save time and space cost. More importantly, it leads to a notable improvement in performance. We provide experimental evidence to support this claim, which also addresses your subsequent question about the RNN model so we defer there.\n    \n\n> The method that is proposed in Section 4.3 has also been explored for the general POMDP settings. For example, in [4,5,6], people have explored auxiliary losses (to predict the next observation, state, reward) for improving the representation learning of RNNs when learning optimal policies in POMDPs.\n> \n\nThanks for pointing these related work out.  Here, we do not intend to claim this is an innovation, since, as you said, this is has been explored for the general POMDP settings. We just want to do some investigations here to help future studies, as part of our paper.\n\nWe list it as a special Section because we think auxiliary predictive loss is an intuitive and important part of DOMDPs. It is intuitive solution to predict the delayed observation to solve DOMDPs. And there naturally raised two quesions:\n\n1. **Choice of Representation:** Is it more effective to use encoded features directly or to rely on a predictive head?\n2. **Network Architecture and Supervision:** Is it preferable to have a distinct prediction network, or should we RL loss for more effective supervision?\n\nWe try to figure out when and where we can do it in Tab.1 and Tab.2 in Appendix G.1.1, which holds importance as reference for future studies."
                    }
                },
                "number": 7,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3360/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700734710867,
                "cdate": 1700734710867,
                "tmdate": 1700741262421,
                "mdate": 1700741262421,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "jcKT3PrRzk",
                "forum": "Z8UfDs4J46",
                "replyto": "1jvEqBYnU2",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3360/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3360/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Part 3"
                    },
                    "comment": {
                        "value": "> \u201cIn the beginning of Section 3, baseline DRL methods are tested in delay signal settings and they are demonstrated to struggle in such a setting. Reasons are guessed for why they fail. However, I do not think that the failure of these baselines methods are studied well enough. I would like to see more ablation study on understanding how exactly they fail, which I believe will greatly help readers understand in what way DOMDPs are different to POMDPs and what are their unique challenges. Is it really due to the signal delay? Or like in general POMDPs, the RNNs cannot come up with good representations for decision making? For example, if these methods struggle to learn representations that support effective decision making, then one can test the accuracy of using these learned representations to predict the true current state. There are possible causes mentioned in paper but I find them rather vague and are not enough to motivate the proposed algorithmic changes.\u201c\n> \n\nWe appreciate the reviewers' suggestion to conduct a more thorough investigation into the failure of baseline methods in DOMDP settings. In response, we have performed additional experiments to better understand these failures and their implications for distinguishing DOMDPs from POMDPs. Our findings are summarized below:\n\n1. **RNN can learn good representations.** We show additional experiment results to investigate in Sec. G.2 of the Appendix.  The representation loss in VRM with delay (e.g. even -1.505 with a 12-step delay) close to the -1.91 (when there is no delay), suggesting that representation learning is not the primary bottleneck.\n    \n    \n    | Delay | Walker2d | HalfCheetah | Hopper | Ant | Average |\n    | --- | --- | --- | --- | --- | --- |\n    | 0 | -1.87 \u00b1 0.31 | -1.60 \u00b1 0.15 | -2.50 \u00b1 0.07 | -1.68 \u00b1 0.21 | -1.91 |\n    | 1 | -1.90 \u00b1 0.20 | -1.74 \u00b1 0.10 | -2.54 \u00b1 0.05 | -1.99 \u00b1 0.43 | -2.04 |\n    | 2 | -2.25 \u00b1 0.24 | -1.70 \u00b1 0.20 | -2.62 \u00b1 0.10 | -1.89 \u00b1 0.21 | -2.10 |\n    | 4 | -2.26 \u00b1 0.06 | -1.65 \u00b1 0.22 | -2.49 \u00b1 0.09 | -1.81 \u00b1 0.24 | -2.05 |\n    | 8 | -1.92 \u00b1 0.18 | -1.57 \u00b1 0.08 | -1.81 \u00b1 0.08 | -1.67 \u00b1 0.20 | -1.74 |\n    | 12 | -1.86 \u00b1 0.14 | -1.29 \u00b1 0.20 | -1.56 \u00b1 0.14 | -1.31 \u00b1 0.10 | -1.50 |\n2. **Redundant or insufficient information in input to the policy or critic network.**\n    \n    Our new experimental results shows that the proper amount of historical information is important. Excessive history can negatively impact performance, as shown in the following table:\n    \n    | Column is # of delay $\\Delta t$; Row is Historical num $H$  $\\downarrow$  | $\\Delta t=0$ | $\\Delta t=1$ | $\\Delta t=4$ |\n    | --- | --- | --- | --- |\n    | $H=0$ | **97.7\u00b124.0** | **87.8\u00b122.3** | 47.6\u00b120.3 |\n    | $H=1$ | **104.5\u00b118.4** | **100.2\u00b116.5** | **77.7\u00b115.4** |\n    | $H=2$ | **98.8\u00b123.4** | **93.7\u00b118.9** | **84.3\u00b116.3** |\n    | $H=4$ | **86.8\u00b118.6** | 81.6\u00b123.4 | **80.3\u00b117.8** |\n    | $H=8$ | 68.3\u00b112.5 | 73.0\u00b113.6 | 58.6\u00b115.5 |\n    | $H=12$ | 62.6\u00b114.3 | 60.9\u00b112.8 | 55.0\u00b18.3 |\n    \n    ** We **highlight** the lines in the error range of highest one, to be consistent with Tab.1.*\n    \n    We investigate this by changing, $H$, the number of past actions of input to see how this affects the performance when delay $\\Delta t$ is fixed to $\\{0,1,4\\}$.\n    \n    Here, we present the result using both \u201cDelay reconciled training for critic\u201d and \u201cState Augmentation - MLP\u201d, but with different number of histories $H$. Note that he model is powered with all the effective tricks in our paper, with only the $H$ varies. \n    \n    We can observe that incorporating no past actions ($H=0$) leads to suboptimal performance. For instance, with a delay of $\\Delta t=4$, the absence of historical actions ($H=0$) resulted in a relatively low performance score of 47.6. Introducing a moderate amount of past actions significantly enhances performance, as evidenced by the improved score of 84.3. However, it's important to note that overloading the model with an excessive history (too high $H\\geq 8$) reversely impacts the efficiency. This was clear when an even larger history led to a reduced performance of 55.0 ($H=12)$. Same trend can be found in all columns that the middle performance is higher than these of two sides. \n    \n    This finding also provides a potential explanation for the limited success of RNN structures in our experiments, as RNNs inherently lack control over the extent of historical information utilized. So it brought redundant information such as state history and extra action history outside of $\\Delta t$. The result also embraces our theoretical finding that only historical actions in $\\Delta t$ is enough to keep the Markovian property in Theorem 4.1.\n    \n    We hope this would also support our response to your another question, \u201ccommon practice of POMDP that introducing historical state and actions\u201d can not solve DOMDPs well.\n    \n    This is an important observation, wee add new experimental results and analysis in Sec. G.3 of the Appendix."
                    }
                },
                "number": 8,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3360/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700735425847,
                "cdate": 1700735425847,
                "tmdate": 1700739570407,
                "mdate": 1700739570407,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "Qc3J6iXzcT",
                "forum": "Z8UfDs4J46",
                "replyto": "1jvEqBYnU2",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3360/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3360/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Part 4"
                    },
                    "comment": {
                        "value": "> \u201cI also find lots of experimental details are missing from the paper, such as the architectures of networks, and the hyperparameters. Regarding hyperparameters, it would also be useful to know how are the hyperparameters tuned for each baseline and the proposed method to ensure fair comparison.\u201d\n> \n\nThank you for your feedback. We've addressed these concerns in Appendix Sec. [TODO] and summarize key points here:\n\n- **Network Architectures:** For all proposed algorithm variants, we maintained a consistent structure. We compared different architectures like RNNs, MLPs, and Transformers, ensuring similar parameter counts. For baselines, we strictly followed the architectures from their original source code.\n- **Hyperparameters:** We conducted extensive sweeps to ensure fair comparison. For each (algorithm, delay) pair, we select the best-performing hyperparameters.\n\n> \u201cAlso, for the baselines, such as DDPG, TD3, SAC, are they also RNN based? It would be strange to use a non-recurrent baseline in a POMDP environment. And are the past actions passed to the actors in these baseline methods? \u201c\n> \n\nIn Table 1, the versions of Vanilla DDPG, TD3, and SAC we used are not RNN-based. These vanilla implementations serve primarily to show the performance decline in DOMDP environment if nothing is done for the mainstream RL algorithms, rather than as competitive baselines.\n\nWhile we did provide the RNN based version, which is \u201cRNN Strong Baseline [1]\u201d (line 4th in Table.1). The author proposed to use RNN to beat other SOTA methods in POMDPs. So this implementation of RNN is very well tuned, thus capable to serve as a confident baseline of RNN version of SAC. \n\n[1] Recurrent model-free RL can be a strong baseline for many POMDP.\n\n> \u201cIn Figure 3, I find it weird to argue that baseline methods are failing by saying that there is a significant drop in performance from no delay to one-step delay. With different delay steps, we essentially have different POMDPs, which may inherently have different difficulty levels and different optimal performance. As such, the drop in performance I think is not sufficient to say the baseline methods are failing. However, a comparison to the optimal performance or performance from a better method would work.\u201d\n> \n\nWe acknowledge the points you've raised and have repainted the Fig.3:\n\n1. **Consistent Delay Comparison:** We now display the performance of all methods under the same delay step in a single figure. This approach ensures a more equitable comparison by eliminating the variable of different delay steps, which, as you noted, can introduce varying levels of difficulty.\n2. **New Performance Benchmark:** To provide a clearer evaluation of the baseline methods, we have added a benchmark line (dashed black) indicating the performance of our proposed method (\"Ours\") under the same delay. This serves as a reference for understanding the relative performance levels and the impact of the delay. We also mark the relative performance drop related to Ours.\n\nPlease refer to the updated Figure 3 in the revised manuscript.\n\nWe appreciate again for your comments, which help to improve the manuscript significantly."
                    }
                },
                "number": 9,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3360/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700735514525,
                "cdate": 1700735514525,
                "tmdate": 1700741377175,
                "mdate": 1700741377175,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "xRguUdx8pw",
            "forum": "Z8UfDs4J46",
            "replyto": "Z8UfDs4J46",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission3360/Reviewer_dZmE"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission3360/Reviewer_dZmE"
            ],
            "content": {
                "summary": {
                    "value": "This paper considers the delay in MDP (e.g., inference delay, observation delay, action delay) and formulates Delayed-Observation MDP setting. Effective approach is proposed to deal with Delayed systems."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "1. The studied problem is interesting and meaningful. Delayed systems in widely and well studied in control community, see [1] [2] for example. There are thousands of works addressing classic concerns such as system stability and safety. I would suggest the authors to survey and (briefly) compare more control papers in this field because control theory and reinforcement learning are highly related and share similar concerns.\n\n2. The experimental results are encouraging and promising.\n\n3. I think this paper is well-written and easy to follow and understand.\n\n\n[1] Richard, J.P., 2003. Time-delay systems: an overview of some recent advances and open problems. automatica, 39(10), pp.1667-1694.\n[2] Cacace, F., Germani, A. and Manes, C., 2010. An observer for a class of nonlinear systems with time varying observation delay. Systems & Control Letters, 59(5), pp.305-312."
                },
                "weaknesses": {
                    "value": "My main concern is the real-world application. Delayed systems investigation is motivated from the real systems, so I think the approach/theory developed for delayed systems should be examined through real-world experiments such as robotic, autonomous vehicles rather than just artificial simulations."
                },
                "questions": {
                    "value": "No question."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "5: You are absolutely certain about your assessment. You are very familiar with the related work and checked the math/other details carefully."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 2,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission3360/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698806241176,
            "cdate": 1698806241176,
            "tmdate": 1699636286028,
            "mdate": 1699636286028,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "jp5sCBsDsv",
                "forum": "Z8UfDs4J46",
                "replyto": "xRguUdx8pw",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3360/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3360/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "> My main concern is the real-world application. Delayed systems investigation is motivated from the real systems, so I think the approach/theory developed for delayed systems should be examined through real-world experiments such as robotic, autonomous vehicles rather than just artificial simulations.\n> \n\nWe value your emphasis on real-world applicability and acknowledge the importance of testing our approach in practical scenarios such as robotics and autonomous vehicles. However, due to constraints in time and available equipment, conducting experiments with actual robots and vehicles was not feasible within the rebuttal stage timeframe.\n\nTo address this limitation and align our research closer to real-world condition, recognizing a key difference between MoJoCo's deterministic nature and the inherent randomness of real-world settings, we have introduced elements of randomness into our simulations. This adjustment aims to bridge the gap between our controlled environment and the unpredictability of real-world applications.\u201d\n\n| Noise Scale | Method | 0 | 1 | 2 | 4 | 8 | 12 |\n| --- | --- | --- | --- | --- | --- | --- | --- |\n| $\\sigma=0.05$ | Ours$^*$ | 32.8\u00b17.4 (100%) | 35.0\u00b17.9 (106.71%) | 32.9\u00b15.7 (100.30%) | 31.7\u00b15.8 (96.65%) | 27.1\u00b17.2 (82.62%) | 26.1\u00b16.0 (79.57%) |\n| $\\sigma=0.05$ | Vanilla SAC | 32.8\u00b17.4 (100%) | 12.4\u00b13.9 (37.80%) | 11.0\u00b11.9 (33.54%) | 9.7\u00b11.5 (29.57%) | 8.1\u00b11.1 (24.70%) | 7.8\u00b11.3 (23.78%) |\n| $\\sigma=0.1$ | Ours$^*$ | 25.5\u00b12.9 (100%) | 23.1\u00b14.0 (90.59%) | 24.3\u00b15.3 (95.29%) | 21.2\u00b14.7 (83.14%) | 21.9\u00b16.8 (85.88%) | 21.2\u00b14.2 (83.14%) |\n| $\\sigma=0.1$ | Vanilla SAC | 25.5\u00b12.9 (100%) | 11.0\u00b11.4 (43.14%) | 10.4\u00b11.7 (40.78%) | 9.4\u00b11.3 (36.86%) | 7.4\u00b11.2 (29.02%) | 6.8\u00b13.3 (26.67%) |\n| $\\sigma=0.2$ | Ours$^*$ | 14.2\u00b11.2 (100%) | 13.3\u00b11.9 (93.66%) | 13.3\u00b11.8 (93.66%) | 13.4\u00b12.1 (94.37%) | 11.8\u00b12.3 (83.10%) | 13.1\u00b12.5 (92.25%) |\n| $\\sigma=0.2$ | Vanilla SAC | 14.2\u00b11.2 (100%) | 10.9\u00b11.9 (76.76%) | 10.1\u00b11.1 (71.13%) | 8.6\u00b11.5 (60.56%) | 8.0\u00b11.2 (56.34%) | 4.6\u00b15.0 (32.39%) |\n| $\\sigma=0.4$ | Ours$^*$ | 11.3\u00b11.7 (100%) | 11.0\u00b11.4 (97.35%) | 10.0\u00b12.3 (88.50%) | 10.8\u00b12.1 (95.58%) | 10.7\u00b11.7 (94.69%) | 11.1\u00b11.1 (98.23%) |\n| $\\sigma=0.4$ | Vanilla SAC | 11.3\u00b11.7 (100%) | 10.0\u00b11.2 (88.50%) | 10.1\u00b11.2 (89.38%) | 8.8\u00b12.1 (77.88%) | 8.0\u00b11.8 (70.80%) | 5.0\u00b15.4 (44.25%) |\n\n$^*$ We choose \u201cState Augmentation - MLP\u201d in Tab.1 as an example implementation of \u201cOurs\u201d. \n\n** In our results table, each cell contains **`{Value}({Relative%})`**, where **`{Value}`** is normalized in the same manner as in Tab.1 of our paper. The **`{Relative%}`** indicates the relative reward compared to the highest value of each line.\n\nWe can see that the performance of Vanilla SAC significantly decreases with the introduction of delay, while our method substantially improves performance in delayed scenarios. \n\nWe understand that this is not a real-world environment, while we did make progress to make our experiment can be close to real-world.\n\n1. We study both fixed and unfixed random delay (Tab.1, Tab.2)\n2. We study probabilistic environment. e.g. noisy and sticky actions (G.1.3), and noisy version of Mujoco above (have been add to G.1.2).\n\n\nWe would like to emphasize that all results presented in our paper, as well as those highlighted in the response above, **consistently** demonstrate that our performance is **significantly** superior to other baselines.\n\nWe hope these updates and clarifications will address your concerns to some extent. We remain committed to improve our work by considering your valuable suggestions.\n\n> \u201c I would suggest the authors to survey and (briefly) compare more control papers in this field because control theory and reinforcement learning are highly related and share similar concerns.\u201d\n> \n\nWe agree that the control related work worth investigation in the DOMDP topic, we will take time to do a comprehensive survey and add discussion in the paper. \n\nThanks for your comments!"
                    }
                },
                "number": 12,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3360/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700737059310,
                "cdate": 1700737059310,
                "tmdate": 1700741810202,
                "mdate": 1700741810202,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "iMLRdsURP8",
            "forum": "Z8UfDs4J46",
            "replyto": "Z8UfDs4J46",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission3360/Reviewer_aPPk"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission3360/Reviewer_aPPk"
            ],
            "content": {
                "summary": {
                    "value": "This study tackles a significant yet frequently underestimated issue in the integration of reinforcement learning agents into real-world applications: signal delay. The authors establish a formal framework for this problem by framing it as delayed-observation Markov decision processes. They then introduce a novel algorithm designed to effectively address this challenge. The empirical findings from experiments reveal that the proposed method consistently demonstrates strong performance, even in scenarios with multiple steps of signal delay. This research sheds light on a crucial aspect of reinforcement learning in practical settings, offering a promising solution for mitigating the impact of signal delays on agent performance."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "1. Clarity and Readability: The manuscript is well written, making it easy for readers to comprehend the presented concepts and findings. The clear and coherent writing style enhances the accessibility of the research.\n\n2. Significant Problem Addressed: This paper takes on an important and frequently underestimated issue, which has often been overlooked in prior research. \n\n3. Impressive Performance: The achieved performance, when compared to conventional vanilla algorithms, is notably robust and impressive. This showcases the effectiveness and practicality of the proposed approach, making it a noteworthy contribution to the field."
                },
                "weaknesses": {
                    "value": "One potential weakness of the paper lies in its handling of experiments in a probabilistic state transition setting. While the study explores action space perturbation, such as sticky action and noisy action, it could benefit from a more comprehensive consideration of the stochasticity within the state space. This might involve scenarios with dynamic background images or robots with joint angular positions sampled from a normal distribution with high variance. Incorporating these additional sources of uncertainty would provide a more realistic and robust evaluation of the proposed algorithm's performance under varied conditions."
                },
                "questions": {
                    "value": "1. Could the performance of the method be further enhanced by considering advanced world models, like the one developed for model-based RL in Dreamer[1], as an alternative for the architecture of the state augmentation and prediction module?\n\n[1] Hafner, Danijar, et al. \"Mastering diverse domains through world models.\" arXiv preprint arXiv:2301.04104 (2023)."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission3360/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission3360/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission3360/Reviewer_aPPk"
                    ]
                }
            },
            "number": 3,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission3360/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1699172341852,
            "cdate": 1699172341852,
            "tmdate": 1699636285850,
            "mdate": 1699636285850,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "VmxYsWkoH7",
                "forum": "Z8UfDs4J46",
                "replyto": "iMLRdsURP8",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3360/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3360/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "> One potential weakness of the paper lies in its handling of experiments in a probabilistic state transition setting. While the study explores action space perturbation, such as sticky action and noisy action, it could benefit from a more comprehensive consideration of the stochasticity within the state space. This might involve scenarios with dynamic background images or robots with joint angular positions sampled from a normal distribution with high variance. Incorporating these additional sources of uncertainty would provide a more realistic and robust evaluation of the proposed algorithm's performance under varied conditions.\n> \n\nThank you for your insightful suggestion regarding the importance of investigating probabilistic state transitions to enhance the comprehensiveness and realism of our study.\n\nIn response, we have modified the Mujoco environment to introduce diagonal Gaussian noise, denoted as $\\mathcal{N}(0,\\sigma^2)$, to the state at each step. \n\n| Noise Scale | Method | 0 | 1 | 2 | 4 | 8 | 12 |\n| --- | --- | --- | --- | --- | --- | --- | --- |\n| $\\sigma=0.05$ | Ours$^*$ | 32.8\u00b17.4 (100%) | 35.0\u00b17.9 (106.71%) | 32.9\u00b15.7 (100.30%) | 31.7\u00b15.8 (96.65%) | 27.1\u00b17.2 (82.62%) | 26.1\u00b16.0 (79.57%) |\n| $\\sigma=0.05$ | Vanilla SAC | 32.8\u00b17.4 (100%) | 12.4\u00b13.9 (37.80%) | 11.0\u00b11.9 (33.54%) | 9.7\u00b11.5 (29.57%) | 8.1\u00b11.1 (24.70%) | 7.8\u00b11.3 (23.78%) |\n| $\\sigma=0.1$ | Ours$^*$ | 25.5\u00b12.9 (100%) | 23.1\u00b14.0 (90.59%) | 24.3\u00b15.3 (95.29%) | 21.2\u00b14.7 (83.14%) | 21.9\u00b16.8 (85.88%) | 21.2\u00b14.2 (83.14%) |\n| $\\sigma=0.1$ | Vanilla SAC | 25.5\u00b12.9 (100%) | 11.0\u00b11.4 (43.14%) | 10.4\u00b11.7 (40.78%) | 9.4\u00b11.3 (36.86%) | 7.4\u00b11.2 (29.02%) | 6.8\u00b13.3 (26.67%) |\n| $\\sigma=0.2$ | Ours$^*$ | 14.2\u00b11.2 (100%) | 13.3\u00b11.9 (93.66%) | 13.3\u00b11.8 (93.66%) | 13.4\u00b12.1 (94.37%) | 11.8\u00b12.3 (83.10%) | 13.1\u00b12.5 (92.25%) |\n| $\\sigma=0.2$ | Vanilla SAC | 14.2\u00b11.2 (100%) | 10.9\u00b11.9 (76.76%) | 10.1\u00b11.1 (71.13%) | 8.6\u00b11.5 (60.56%) | 8.0\u00b11.2 (56.34%) | 4.6\u00b15.0 (32.39%) |\n| $\\sigma=0.4$ | Ours$^*$ | 11.3\u00b11.7 (100%) | 11.0\u00b11.4 (97.35%) | 10.0\u00b12.3 (88.50%) | 10.8\u00b12.1 (95.58%) | 10.7\u00b11.7 (94.69%) | 11.1\u00b11.1 (98.23%) |\n| $\\sigma=0.4$ | Vanilla SAC | 11.3\u00b11.7 (100%) | 10.0\u00b11.2 (88.50%) | 10.1\u00b11.2 (89.38%) | 8.8\u00b12.1 (77.88%) | 8.0\u00b11.8 (70.80%) | 5.0\u00b15.4 (44.25%) |\n\n*\u201cOurs\u201d is \u201cState Augmentation - MLP\u201d in Tab.1\n\n** {Value}({Relative%}), where {Value} is normalized in the same manner as in Tab.1 of our paper. The {Relative%} indicates the relative reward compared to the highest value of each line.\n\nThe results comparing Ours$^*$ with the Vanilla SAC are presented below. It is important to note that when delay=0, Vanilla SAC is equivalent to Ours$^*$. Key observations from our experiments are as follows:\n\n1. The performance of Vanilla SAC significantly decreases with the introduction of delay, dropping from 100% to 23.78%, 26.67%, 32.39% and 44.25% when the  $\\sigma$ is 0.05, 0.1, 0.2, 0.4, respectively.\n2. Our method substantially improves performance in delayed scenarios. e.g. when $\\Delta t=12$, the performance increase is 23.78%\u219279.57%, 26.67%\u219283.14%, 32.39%\u219292.25%, 44.25%\u219298.23%, when the $\\sigma$ is 0.05, 0.1, 0.2, 0.4, respectively.\n\nThese observations are consistent with those in the original Mujoco environment, demonstrating that our improvements are both consistent and significant.\n\nWhile we acknowledge that this may not encompass all probabilistic environments, we wish to highlight:\n\n1. The **significant** and **consistent** improvement demonstrated in the above table.\n2. The inclusion of two additional probabilistic environments discussed in Section G.1.2 of our paper.\n\nThese consistent results strongly support the efficacy of our method in probabilistic environments.\n\nFurthermore, it is important to note that our theoretical framework consider general probabilistic scenario as in Theorem 2.1 and Theorem 4.1.\n\nWe hope these experimental and theoretical results adequately address your concerns.\n\nWe appreciate your suggestion and have included the Gaussian probabilistic experiment in Section G.1 of the paper. \n\n> Could the performance of the method be further enhanced by considering advanced world models, like the one developed for model-based RL in Dreamer[1], as an alternative for the architecture of the state augmentation and prediction module?\n> \n\nGood point! Actually, we did preliminary experiments about using advanced world models in this research, in particular the recurrent state space model (RSSM) used in Dreamer [1]. The problem of using RSSM is that since it models single-step state-transition, the prediction error may accumulate (especially due to a stochastic nature of RSSM) in the scenario of multi-steps delay. The empirical results also failed to support the effectiveness of using RSSM. Rather, MLP network is simple and good enough. Nonetheless, we appreciate this comment and will consider more powerful world models in future exploration.\n\n[1] Mastering diverse domains through world models."
                    }
                },
                "number": 13,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3360/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700737367722,
                "cdate": 1700737367722,
                "tmdate": 1700737367722,
                "mdate": 1700737367722,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "dLxjzkSqyk",
            "forum": "Z8UfDs4J46",
            "replyto": "Z8UfDs4J46",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission3360/Reviewer_eRXT"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission3360/Reviewer_eRXT"
            ],
            "content": {
                "summary": {
                    "value": "The authors study the impact of signal delay in reinforcement learning problems. Their results show that even minor delays in receiving states can negatively impact the performance of various existing deep-learning algorithms. The authors formalize delay as the Delayed Observation Markov Decision Process and show theoretically grounded means to modify existing actor-critic algorithms to account for the delay. They propose augmenting the state with previous actions and consider conditioning on reconstructed observations at deployment. Their experiments suggest combining both techniques can mitigate the effects of signal delay."
                },
                "soundness": {
                    "value": "4 excellent"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "4 excellent"
                },
                "strengths": {
                    "value": "Overall, the paper is well written. The authors succinctly characterize the issues of observation delay and motivate it thoroughly across various domains. Each section transitions well to the next and is accessible to readers. We appreciate the author's approach of formalizing the problem and then providing general solutions. Identifying a missing property in RL algorithms and generally applicable techniques is a good approach, and the performed experiments offer compelling evidence of their efficacy. We feel the authors do due diligence with their investigations to validate their solutions, and we appreciate them focusing on accessible solutions and ablating them in the paper."
                },
                "weaknesses": {
                    "value": "One issue with the paper is the proposed use of previous actions in the augmented state representation. Some previous work suggests, particularly for sequence models [1], that this can be problematic, and it seems the results may mean this is the case as the Transformer and RNN results seem to benefit less from the state augmentation approach, especially as the horizons increase. We consider this a future work that the authors might consider discussing. Theorem 4.1 might require a few additional words to emphasize whether the provided proof is from previous work, mainly as the authors cite a paper when talking about this theorem.\n\nAlthough we overall find the paper accessible, some parts could be better written or expand on important details. Specifics below:\n\n1.)  Section 3 could benefit from clarifying the experimental setup or informing the reader where to find such information, for example. Additional comments below:\n\n2.) Including the % error cap for Figure 3 d. Consider including information on the calculations for these are done. \n\n3.) Figure 4 needs to be clarified what the robot is observing. Perhaps some thought bubble or other intermediate object to distinguish where the robot is versus where it THINKS it might help if, for example, if s_t - \\Delta T is supposed to be the information the robot is currently making decisions from, that was unclear. \n\n4.) Consider moving Table 1 to the appendix and use plots to highlight trends the authors observed from the results. It's difficult to process and follow all the observations. \n\n5.) Figure 6 is a bit difficult to dissect the details of the work. I suggest adding additional annotations to plots to make it more transparent what each subplot visualizes.\n\n\nCitation:\n[1] Shaking the foundations: delusions in sequence models for interaction and control. Ortega et al. 2021."
                },
                "questions": {
                    "value": "1.) Aren't delayed rewards already accounted for via the value function? Consider removing this wording in the introduction or clarify that your research looks at delays in states, as we could not find a discussion on addressing delays in received rewards. \n2.) The transition probability in section 2.2 is confusing. The next state only transitions if s\u2019^{-t+ = s^{-t+1} and otherwise would return 0 if any states don't match. Is this correct, or a misunderstanding?\n3.) What were the parameters used in the experiments of Section 3? Including experimental details is reasonable for reproducibility. If they are in the appendix, please mention this in the section\n4.) What about including the time since the last received sample as a state feature?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "8: accept, good paper"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 4,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission3360/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1699322723472,
            "cdate": 1699322723472,
            "tmdate": 1699636285782,
            "mdate": 1699636285782,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "8XIFO7QSJL",
                "forum": "Z8UfDs4J46",
                "replyto": "dLxjzkSqyk",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3360/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3360/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Part 1"
                    },
                    "comment": {
                        "value": "> One issue with the paper is the proposed use of previous actions in the augmented state representation. Some previous work suggests, particularly for sequence models [1], that this can be problematic, and it seems the results may mean this is the case as the Transformer and RNN results seem to benefit less from the state augmentation approach, especially as the horizons increase. We consider this a future work that the authors might consider discussing. Theorem 4.1 might require a few additional words to emphasize whether the provided proof is from previous work, mainly as the authors cite a paper when talking about this theorem.\n> \n\nThank you for your valuable feedback. We appreciate the opportunity to look into the concerns you've raised.\n\nYou mentioned the issue of using past actions in our model. We understand that this can be a double-edged sword:\n\n1. **Good Point**: Including past actions helps make our model's environment more predictable and easier to understand.\n2. **Downside**: As pointed out in [1], this approach can sometimes cause problems.\n\nTo explore this further, we experimented with changing, $H$, the number of past actions our model considers. We wanted to see how this affects the performance when delay $\\Delta t$ is fixed to $\\{0,4\\}$ . Here's a summary of what we found:\n\n| Column is # of delay $\\Delta t$; Row is Historical num $H$  $\\downarrow$  | $\\Delta t=0$ | $\\Delta t=1$ | $\\Delta t=4$ |\n| --- | --- | --- | --- |\n| $H=0$ | **97.7\u00b124.0** | **87.8\u00b122.3** | 47.6\u00b120.3 |\n| $H=1$ | **104.5\u00b118.4** | **100.2\u00b116.5** | **77.7\u00b115.4** |\n| $H=2$ | **98.8\u00b123.4** | **93.7\u00b118.9** | **84.3\u00b116.3** |\n| $H=4$ | **86.8\u00b118.6** | 81.6\u00b123.4 | **80.3\u00b117.8** |\n| $H=8$ | 68.3\u00b112.5 | 73.0\u00b113.6 | 58.6\u00b115.5 |\n| $H=12$ | 62.6\u00b114.3 | 60.9\u00b112.8 | 55.0\u00b18.3 |\n\nps. We **highlight** the lines in the error range of highest one, to be consistent with Tab.1.\n\nps. We use State Augmentation - MLP in Tab.1 as method for above table.\n\n- When we don't consider any past actions ($H=0$), and there's no delay in the data ($\u0394t=0$), the model performs quite well. But if we start adding too many past actions (like $H=4,8,12$), the performance drops significantly, result in 62.6% performance when $H=12$.\n- In scenarios where there's a delay in the data ($\u0394t>0$), we observed that not incorporating any past actions ($H=0$) leads to suboptimal performance. For instance, with a delay of $\\Delta t=4$, the absence of historical actions ($H=0$) resulted in a relatively low performance score of 47.6. Introducing a moderate amount of past actions significantly enhances performance, as evidenced by the improved score of 84.3. However, it's important to note that overloading the model with an excessive history ($H$ too high) reversely impacts the efficiency. This was clear when an even larger history led to a reduced performance of 55.0. This pattern underscores the necessity of a balanced approach in incorporating historical actions, especially in the context of delayed data.\n\nIn summary, our findings indicate that optimal performance is generally achieved when the number of past actions considered, $H$, closely aligns with the delay in the data, $\\Delta t$. RNN \n\nThis finding also provides a potential explanation for the limited success of RNN structures in our experiments, as RNNs inherently lack control over the extent of historical information utilized, it just takes all historical states and actions into account. So it brought redundant information such as state history and extra action history outside of $\\Delta t$, distract the model from values information. \n\nWe have added the results and discussion to Sec.G.3. Thanks for your comments. \n\n[1] Shaking the foundations: delusions in sequence models for interaction and control. Ortega et al. 2021."
                    }
                },
                "number": 10,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3360/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700736049085,
                "cdate": 1700736049085,
                "tmdate": 1700739335059,
                "mdate": 1700739335059,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "deyUnL9u97",
                "forum": "Z8UfDs4J46",
                "replyto": "dLxjzkSqyk",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3360/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3360/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Part 2"
                    },
                    "comment": {
                        "value": "> 1.) Aren't delayed rewards already accounted for via the value function? Consider removing this wording in the introduction or clarify that your research looks at delays in states, as we could not find a discussion on addressing delays in received rewards.\n> \n\nThanks for your kind advise. We removed \u201creward\u201d part in the introduction. \n\n> 2.) The transition probability in section 2.2 is confusing. The next state only transitions if $s\u2019^{-t+ = s^{-t+1}}$ and otherwise would return 0 if any states don't match. Is this correct, or a misunderstanding?\n> \n\nThanks for pointing this out this potential confusing point. The superscript $(-t)$ on the state $s$ is the relative timestep to the current one. And the transition probability function discribes \u201cone step shift\u201d of all the $s$ in $\\sigma$ for each step transition. This is why $\\mathbb{I}({s'^{(-t)} = s^{(-t+1)}}) = 1$ only if $s'$ is the next state of $s$ and $=0$ otherwise. This means exact one-step shift of for every $s^\\{(-t)\\}$ in $\\sigma$. \n\n> 3.) What were the parameters used in the experiments of Section 3? Including experimental details is reasonable for reproducibility. If they are in the appendix, please mention this in the section\n> \n\nWe add it to Sec.E in the appendix and reference them in the Sec.5.1, the start of the experiment results.\n\n> 4.) What about including the time since the last received sample as a state feature?\n> \n\nThanks for your suggestion. \n\nWe think that this will take effect under case that the delay is unfixed, append time with the sample is promise to improve the performance.\n\n1. According to our reply to your first question, we know that the when historical number $H$ is equal to delay $\\Delta t$, the performance is the best. So it is promising that timestamp can help to focus on the historical in $\\Delta t$ range, even when the delay is unfixed.\n2. Especially, when the state is from multiple source, e.g. robot with multiple sensors, financial agent with multiple network information source, losing the time stamping information can make it hard to make decisions. \n\nHowever, it's important to note that the effectiveness of this method may vary depending on the specific environment. For instance, certain sensors might not support time stamping, or network messages may lack time-related data. This make the trick is not a general solution for all cases\n\nWe create a new section Sec.D in the appendix to discuss this in detail."
                    }
                },
                "number": 11,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3360/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700736063266,
                "cdate": 1700736063266,
                "tmdate": 1700736063266,
                "mdate": 1700736063266,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    }
]