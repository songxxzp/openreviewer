[
    {
        "title": "When Does Bias Transfer in Transfer Learning?"
    },
    {
        "review": {
            "id": "wMaJHQDBls",
            "forum": "qhAx0fU9YE",
            "replyto": "qhAx0fU9YE",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission6947/Reviewer_Fi12"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission6947/Reviewer_Fi12"
            ],
            "content": {
                "summary": {
                    "value": "The authors empirically investigate whether biases contained in a pre-trained DNN is transferred to a fine-tuned DNN, in different experimental settings. They confirmed that such biases are actually transferred in (1) synthetic settings using backdoor attacks, (2) synthetic settings with naturally introduced biases of class information (even with de-biased target datasets in fixed-feature setting), and (3) standard transfer learning scenarios on ImageNet."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "1 poor"
                },
                "strengths": {
                    "value": "- Their motivation is clear and writing is easy to follow.\n- Their experimental scenarios are well-designed. In particular, the phenomenon of transferrability of backdoor attacks is new to me and seems intriguing, but less confident on its novelty since I'm not an expert of ML security.\n- Their experiments are thoroughly conducted on vision datasets, and the results are convincing."
                },
                "weaknesses": {
                    "value": "- The novelty and contribution of their findings is limited. Previous works [1][2] already investigated such aspects of transfer learning, and some findings in this submission (particularly the bias transfer phenomenon in the scenario (2) and (3)) can be implied from their results.\n- The definition of \"bias\" in this submission is unclear. It should be specified to discuss \"bias\" transfer in a possibly rigorous way. Also, I'm less confident whether backdoor attacks should be considerred as \"bias\", but the research direction of transferrability of such attacks itself should be new and encouraged.\n- Discussions on previous works is not enough. The most related works [1][2] are not cited and not discussed. In relation to transferrability of backdoor attacks, I think [3] is one of very related works, but is not discussed. I recommend the authors to survey their previous works and make clear the novelty and contribution of this paper.\n\n[1] B. Neyshabur et al.,  \"What is being transferred in transfer learning?\" (NeurIPS'20)\n\n[2] E. Lubana et al., \"Mechanistic Mode Connectivity\" (ICML'23)\n\n[3] A. Shafahi et al., \"Adversarially robust transfer learning\" (ICLR'20)"
                },
                "questions": {
                    "value": "1. What is the definition of biases in this paper? It should be specified first of all to discuss \"bias\" transfer."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission6947/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission6947/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission6947/Reviewer_Fi12"
                    ]
                }
            },
            "number": 1,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission6947/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698635417625,
            "cdate": 1698635417625,
            "tmdate": 1699636810642,
            "mdate": 1699636810642,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "iMqnYJ3luy",
                "forum": "qhAx0fU9YE",
                "replyto": "wMaJHQDBls",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission6947/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission6947/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "We thank the reviewer for their response! We discuss their points below.\n\n**W2. Defining Bias:** We define bias as a feature that the model relies on but is not causally linked with the target class. In particular, we focus on biases that the transfer learning model would not have relied on if it had been trained from scratch. We have added this definition to Section 2 in our revision. \n\n**W1, W3. Novelty and Related Work:** Neyshabur et. al focuses on understanding whether low-level statistics or feature reuse is transferred during transfer learning. However, they do not investigate the problem of bias transfer: where features from the pre-training data (that are not used during downstream training) can persist during downstream deployment. Shafahi et al focus on adversarial robustness: in our paper, we focus on biases as features (and in particular, emphasize natural biases which might appear in standard. \n\nLubana et. al is a recent work (ICML 2023) which performs mechanistic analysis. As part of their analysis, they perform fine-tuning from a backdoored CIFAR-10 to a clean CIFAR-10, and find that fine-tuning may not eliminate spurious cues. In our work, we perform a larger study that fully investigates the landscape of bias transfer across a wide range of tasks for different fine-tuning regimes. We further discuss potential mitigation strategies, such as target dataset debiasing and weight decay. Finally, we investigate bias transfer beyond synthetic biases, and find evidence of such transfer in natural datasets such as ImageNet.\n\nWe thank the reviewer for bringing these to our attention and have added them to the related work of the final version."
                    }
                },
                "number": 7,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission6947/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700281020896,
                "cdate": 1700281020896,
                "tmdate": 1700281020896,
                "mdate": 1700281020896,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "KCyZpdwOpC",
                "forum": "qhAx0fU9YE",
                "replyto": "iMqnYJ3luy",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission6947/Reviewer_Fi12"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission6947/Reviewer_Fi12"
                ],
                "content": {
                    "comment": {
                        "value": "Thank you for the clarification, but some of my concerns still remain.\n\n> We have added this definition to Section 2 in our revision.\n\nThe definition is still highly ambiguous. What does \"feature\" refer to? What does \"a model relies on\" mean? How is \"not causally linked to the target task\" defined? If these are not properly defined, the novelty of this work is also unclear.\n\n> Neyshabur et. al focuses on understanding whether low-level statistics or feature reuse is transferred during transfer learning. However, they do not investigate the problem of bias transfer: where features from the pre-training data (that are not used during downstream training) can persist during downstream deployment.\n\nI still wonder if \"bias transfer\" is just a special case of the feture reuse phenomena studied in Neyshabur et al, and thus the novelty of this submission seems to be limited. Nevertheless I'm also less confident in this point because the definition of \"feature\" in this submission is still ambiguous."
                    }
                },
                "number": 12,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission6947/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700588485828,
                "cdate": 1700588485828,
                "tmdate": 1700588485828,
                "mdate": 1700588485828,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "hkNlqPvIop",
                "forum": "qhAx0fU9YE",
                "replyto": "wMaJHQDBls",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission6947/Reviewer_Fi12"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission6947/Reviewer_Fi12"
                ],
                "content": {
                    "comment": {
                        "value": "Sorry for my late response.\n\nThank you for clarifying your definition of features and bias transfer. Now I understand that a feature is defined as a transformation in the input domain, which seems a non-standard definition of \"feature\" though, and the bias transfer is defined counterfactually with such transformation. With these definitions, I also understand that backdoor attacks can be considered as a bias. But I still find it difficult to understand without these definitions which is also only discussed very roughly in Appendix.\n\n> In our paper, we explore a specific vulnerability: we show that if the pre-training model learns a feature which is not used during downstream training, the fine-tuned model will still be sensitive to that feature (see the definition of bias transfer above). We find that this sensitivity can cause unexpected downstream deployment failures.\n\nAfter reading this explanation, I still consider that it is indeed a special case of feature reuse and thus the findings are naturally implied from the previous results, which itself is ok but leads to the limited novelty and impact of the paper. Also the authors should discuss in more detail about the relationship to the feature reuse, including how it can be suggested from the previous work, rather than just citing the papers in Related Work."
                    }
                },
                "number": 17,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission6947/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700728152237,
                "cdate": 1700728152237,
                "tmdate": 1700728192259,
                "mdate": 1700728192259,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "YqEv9BXqYl",
            "forum": "qhAx0fU9YE",
            "replyto": "qhAx0fU9YE",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission6947/Reviewer_HsVn"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission6947/Reviewer_HsVn"
            ],
            "content": {
                "summary": {
                    "value": "This paper explores the transfer of biases as a result of transfer learning from the source dataset to the transferred models. For both natural and synthetically generated biases, it is shown with experiments that biases pre-existing in the pretraining data get transferred to the downstream tasks, even when the downstream dataset is balanced. The extent of the biases is lesser when finetuning is allowed into the entire network as compared to the case where only retraining the final layer is allowed."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "1. The study is important, as using pretrained models to finetune on a downstream task is highly beneficial and a popular norm in the current times, hence understanding how the biases in the pretraining datasets creep into the downstream task is necessary to get unbiased predictions.\n2. The paper explores multiple settings. They show what happens when the pretraining dataset is biased, where the biases can be both synthetic and natural.\n3. The fact that biases are transferred even when the target dataset is debiased is very interesting.\n4. Three simple methods have been discussed to reduce the effect of the biases - full network transfer learning, reducing weight decay, mitigate biases in the target dataset."
                },
                "weaknesses": {
                    "value": "1. Novelty is a concern for this paper: all the observations in the paper are expected and not surprising. For example, isnt it obvious that the full network transfer learning setting will be less affected by the source biases than the fixed one?\n2. I agree that identification of the problem is certainly important, and this paper does that - the authors demonstrate effectively how dangerous the pretraining data can be in terms of fairness. However, some mitigation strategies or atleast thoughts are expected. One of the solutions proposed is to use full network transfer learning. But if enough resources are not there for a model-user to finetune the entire network, the user has to rely on the fixed feature transfer learning - or settle for something in the model. How to solve the problem in that case?\n3. Wang et al [1] suggest manipulating the finetuning data to reduce the biases. No suggestion is proposed by the authors.\n4. For the synthetic bias case, what is termed as backdoor attack is simply adding a spurious correlation synthetcially to the dataset to increase/induce bias into it.\n\n[1] Wang et al. 'Overwriting Pretrained Bias with Finetuning Data', ICCV 2023."
                },
                "questions": {
                    "value": "We use pretrained models for a multitude of tasks. \n1. What if the pretraining and finetuning data are not entirely similar, and the latter has its own biases? Any suggestions or experiments for such a situation?\n2. What happens when the latter is balanced?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "3: reject, not good enough"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission6947/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission6947/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission6947/Reviewer_HsVn"
                    ]
                }
            },
            "number": 2,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission6947/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698757422293,
            "cdate": 1698757422293,
            "tmdate": 1699636810491,
            "mdate": 1699636810491,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "6BWvn5OOC5",
                "forum": "qhAx0fU9YE",
                "replyto": "YqEv9BXqYl",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission6947/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission6947/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "We thank the reviewer for their response, and address their concerns below.\n\n**W1. Novelty:** We want to point out that the main message of our paper is that *spurious features which are present in the pre-training data and completely absent in the downstream task can unexpectedly pop up during downstream deployment*. The rest of our paper (comparing fixed-feature to full-network fine tuning, varying weight decay, looking at different downstream tasks) is all in an effort to fully characterize this phenomenon, but they are not meant to be \u201csurprising\u201d in and of themselves.\n\n**W2. Mitigation Strategies:** In our paper, we discuss several mitigation strategies. In addition to full-network fine-tuning, we find that weight decay and de-biasing can partially mitigate bias transfer (see Section 3.2). Indeed, a major take-away from our paper is that, while mitigation strategies such as weight decay and dataset debiasing can help, such post-hoc strategies typically do not fully remove bias transfer and often are not feasible in many settings (see Reviewer RsQk\u2019s comment). As a result, we believe it is critical to prevent such biases at their source by more carefully choosing our pre-trained models in the first place. \n\n**W3. Manipulating the target dataset:** In our overall framing, we consider the case where the target dataset is balanced (e.g., does not have the bias) but the source dataset is skewed. In this case, bias transfer occurs, even though the bias is not present in the downstream dataset. Furthermore, in Section 3.2 and 4.2, we consider actively debiasing the dataset to counter the bias. However, we find that debiasing the dataset only partially mitigates bias transfer (especially in the fixed transfer case).\n\n**W4. Backdoor attack is just inserting a feature.** We agree that backdoors are just features, which is why we believe it is a useful starting point for studying bias transfer (since biases are also features). We use the standard conception of backdoor attacks found in the data poisoning literature, see e.g., [1, 2].\n\n**Q1. Biases in the downstream dataset:** The scenario where the downstream dataset is biased falls within the standard supervised setting (where the training dataset has biases and struggles on minority groups). Since there is already a vast amount of literature on debiasing in this regime (see for example, Group DRO, Deep Feature Reweighting, Just Train Twice), we do not focus on that regime here.\n\n**Q2. What happens when the latter is balanced?** As we show in Sections 3.2 and 4.2 of our paper, even if the downstream dataset is balanced or unbiased, bias can still transfer! This means that ML developers must pay attention to the pre-training models/data, and cannot rely on solely downstream balancing. \n\n[1] https://arxiv.org/abs/1708.06733\n\n[2] https://arxiv.org/abs/1912.02771"
                    }
                },
                "number": 6,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission6947/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700280944603,
                "cdate": 1700280944603,
                "tmdate": 1700280944603,
                "mdate": 1700280944603,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "zP7gIkf8jI",
                "forum": "qhAx0fU9YE",
                "replyto": "6BWvn5OOC5",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission6947/Reviewer_HsVn"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission6947/Reviewer_HsVn"
                ],
                "content": {
                    "comment": {
                        "value": "Thank you for your explanations.\n\nW2. Mitigation Strategies: \"As a result, we believe it is critical to prevent such biases at their source by more carefully choosing our pre-trained models in the first place.\"\nI agree that weight decay etc have been proposed, but following the final suggestion provided by the authors of carefully choosing a pretrained model that does not contain any biases is not trivial. These models are trained on enormous amounts of data (most of the time we may not even know about the pretraining data), and having a model that is completely unbiased is almost impossible; i.e. we have to live with these models and utilize their vast knowledge as well. We have to look for solutions that can debias the downstream predictions even after choosing a biased model.\n\nQ1. Biases in the downstream dataset. To clarify, my question was based on what will happen if biases are present in the downstream dataset alongside the pretrained model. What happens when the biases in the pretrained model are similar to that of the downstream data - would there be any amplification? What happens when the biases in the pretrained model and the downstream data are different - can the pretrained model lead to unbiased generations, as it doesnt encode the downstream biases?"
                    }
                },
                "number": 14,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission6947/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700648658225,
                "cdate": 1700648658225,
                "tmdate": 1700648658225,
                "mdate": 1700648658225,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "2J8fbn45w3",
                "forum": "qhAx0fU9YE",
                "replyto": "YqEv9BXqYl",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission6947/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission6947/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "Thank you for your response!\n\n**[W2]**\n\nWe agree with the reviewer that no mitigation strategy is fully effective, and that indeed the only foolproof way to avoid bias transfer is to ensure that the pre-training data and model are unbiased. However, we believe that this message (along with the partial mitigation strategies we discuss in our work) only strengthen the message of our paper: **bias transfer is a troubling phenomenon, and has important implications for both deployment and regulation of these models**.\n\n Our paper thus advocates for further transparency for pre-training models: for example, publishers of such models might list potential biases (similar to Datasheets [1]) when releasing checkpoints. Constructing solutions for detecting and fully countering bias transfer is an exciting avenue for future work (however, our goal in this paper is to show the existence of and characterize bias transfer).\n\n**[Q1]** \n\nWe apologize for misunderstanding the reviewer's question here! Since time is rather limited, we ran the following experiment, which we are happy to fully flesh out and include in the final version of the paper. We consider the backdoor experiment from Section 3: where a square is placed on the dog classes of ImageNet, and then either the biased or unbiased ImageNet is fine-tuned on CIFAR-10. This time, however, we consider the case where the downstream dataset *also* has the same spurious feature, by placing a square on the dog class in CIFAR-10 with varying percentages. Our results can be found in Appendix A.9 of the revision: however we summarize them in a table below.  The first row is our standard bias-transfer setup (no bias in the downstream dataset).\n\n*Fixed-feature:*\n|Degree of Fine-Tuning bias| ASR (unbiased source model) | ASR (biased source model)|\n| :--------: | :-------: | :-------: |\n|0% (no bias)  | 6.54| 62.67 | \n|30%   | 13.21| 83.43 | \n|50%  | 18.50| 84.17 | \n|70%  | 21.82| 86.06 | \n\n*Full-network:*\n|Degree of Fine-Tuning bias| ASR (unbiased source model) | ASR (biased source model)|\n| :--------: | :-------: | :-------: |\n|0% (no bias)  | 2.08|  16.49|\n|30% | 23.89 | 40.91|\n|50%  | 35.98| 49.10 | \n|70%  | 44.29| 61.93 | \n\nWe find that when the downstream dataset is already biased, pre-training with the biased ImageNet significantly amplifies the downstream bias in both the fixed-feature and full-network settings.\n\n[1] Gebru, T., Morgenstern, J., Vecchione, B., Vaughan, J. W., Wallach, H., Iii, H. D., & Crawford, K. (2021). Datasheets for datasets. Communications of the ACM, 64(12), 86-92.  https://arxiv.org/abs/1803.09010"
                    }
                },
                "number": 15,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission6947/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700676548305,
                "cdate": 1700676548305,
                "tmdate": 1700676570533,
                "mdate": 1700676570533,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "ierrijYUYX",
            "forum": "qhAx0fU9YE",
            "replyto": "qhAx0fU9YE",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission6947/Reviewer_RsQk"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission6947/Reviewer_RsQk"
            ],
            "content": {
                "summary": {
                    "value": "The authors demonstrate how dataset-induced biases persist after fine-tuning a model, even if the target set does not contain those biases.\nFor this purpose, the authors designed experiments to introduce or amplify a specific bias and to gauge its presence on the target domain.\nThe authors explore three mitigation strategies of this bias, including full-network fine-tuning, weight decay, and de-biasing the target domain.\n\n======\nUpdate after rebuttal: I appreciate the additional analysis the authors provided to explain the role of weight decay in mitigating the bias. In its current form the explanation only applies to simple linear regression, and does not extend to a non-linear deep neural network.\nOverall, I feel the authors made several points in their analysis which leave the reader with more questions than answers and wishing for more in-depth analysis.\nHowever, given the importance of those points, I am raising my overall score."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "- Studying bias transfer is important due to the heavy reliance on foundational models.\n- The results are insightful and their implications are nontrivial."
                },
                "weaknesses": {
                    "value": "- The work is rather incremental to recent work in the literature, especially the work by Wang and Russakovsky [1]. I missed a reference to that work. The novelty would be more obvious e.g. had the authors demonstrated their results beyond the vision modality. See this recent survey for an overview of closely-related pieces of work, where a proper comparison would help highlight the novelty of the presented work https://arxiv.org/abs/2310.17626\n- The mitigations explored seem preliminary or non-straightforward to replicate:\n  - Full-network fine-tuning obviously has a better chance of reducing the bias in the pre-trained backbone, compared with a frozen backbone (where the bias mainly exists) + a linear head. \n  - The experiments about weight decay do not explain why it is helpful. Is it generally the case that regularization helps mitigate the bias? Is there something specific to weight decay that helps reduce the bias? What about other regularization strategies?\n  - Modifying the target dataset to counter the bias seems helpful but it is not obvious how it can be done in the general case (e.g. beyond balancing the sample in different subgroups or reintroducing the backdoor attacks in the target dataset at random).\n\n[1] Wang and Russakovsky: Overwriting Pretrained Bias with Finetuning Data (CVPR '23)\n\n\n\n\nA few typos:\ndatapoints => data points\ncan substantially reduces \nadjusting [..] entirely eliminate => eliminates\nwith of people => with people"
                },
                "questions": {
                    "value": "- Would adversarial pre-training offer a good mitigation strategy as well?\n\n- The authors mention that they \"find that weight decay does not reduce bias transfer in the fixed feature transfer learning\nregime, where the weights of the pretrained model are frozen.\". How is weight decay applied to frozen weights?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission6947/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission6947/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission6947/Reviewer_RsQk"
                    ]
                }
            },
            "number": 3,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission6947/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698788705811,
            "cdate": 1698788705811,
            "tmdate": 1700675675772,
            "mdate": 1700675675772,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "Y9tZD0sT6X",
                "forum": "qhAx0fU9YE",
                "replyto": "ierrijYUYX",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission6947/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission6947/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "We thank the reviewer for their response! We address the raised points below.\n\n**W1. Wang et. al:** We thank the reviewers for bringing this to our attention. Wang et. al investigates gender biases in the case where the spurious feature is present in both the pre-training dataset and the fine-tuning dataset. They then consider actively changing the fine-tuning dataset to counter the correlation in the pre-training data (this is equivalent to the \u201cdebiasing\u201d scheme in our paper). In our work, we find that (especially in the fixed feature case) a large portion of the dataset would need to be debiased in order to mitigate bias transfer. As you mention, this level of downstream debiasing may not be feasible.\n\nOur work further highlights a different risk: spurious features which are present in the pre-training data and completely absent in the downstream task can unexpectedly pop up during downstream deployment. These types of \u201cbackdoor\u201d features are especially pernicious, since a practitioner might not be aware that their pre-training model has such features. We fully investigate the landscape of this phenomenon, across different types of biases (synthetic and natural), architectures, and fine-tuning regimes (fixed-feature vs. full-network). While we discuss potential mitigation strategies (e.g., weight decay), we arrive at a very different conclusion than Wang et. al: practitioners cannot solely depend on post-hoc strategies to deal with bias transfer. As a result, we believe it is critical to prevent such biases at their source by more carefully choosing our pre-trained data in the first place.\n \n\n**W2a. Full-network vs fixed-feature effectiveness is obvious.** We agree with the reviewer that fixed-feature fine-tuning being more prone to bias transfer than full-network fine-tuning is not surprising. Our goal here is to fully investigate the discrepancy between these two fine-tuning strategies, particularly in light of the fact that fixed-feature fine-tuning is becoming increasingly popular in the age of large pre-trained (foundation) models. We thus view quantifying and ablating the gap between the two as a valuable contribution.\n\nMore generally, the main finding of our paper is that *spurious features which are present in the pre-training data and completely absent in the downstream task can unexpectedly pop up during downstream deployment*. The remainder of our paper (including the comparison of  fixed-feature to full-network fine tuning) is all in an effort to fully characterize this phenomenon, but is not meant to be \u201csurprising\u201d in and of itself.\n\n**W2b. Weight Decay:** In appendix A.5, we discuss a theoretical justification for why weight decay can help mitigate the bias. Specifically, we consider the logistic regression example from Section 2. The gradient of the logistic loss with L2 regularization becomes\n\n\n$$\\nabla \\ell_{\\mathbf{w}} (\\mathbf{x}_i, y_i) = (\\sigma(\\mathbf{w}^\\top \\mathbf{x}_i) - y_i)\\cdot \\mathbf{x}_i + \\lambda\\mathbf{w}=(\\sigma (\\mathbf{w}_S^\\top \\mathbf{x}_i) - y_i)\\cdot \\mathbf{x}_i + \\lambda(\\mathbf{w}_S +\\mathbf{w}\\_{S'})$$\n\nWhere $\\mathbf{w}\\_S$ and $\\mathbf{w}\\_{S\u2019}$ are the projections of $\\mathbf{w}$ onto the span of the target datapoints ($S$) and its complementary subspace ($S\u2019$). The gradient (as in Section 2) restricts the space of updates to those in $S$. However, due to regularization, $\\mathbf{w}_{S\u2019}$ is driven to 0, so any planted bias in $S\u2019$ collapses with regularization.\n\n**W2c. Debiasing the target dataset**: We fully agree with the reviewer here\u2014in fact, we believe that (a) according to our paper, debiasing the target dataset does not completely eliminate bias transfer, and (b) \u201cfully\u201d debiasing a dataset is often intractable, as the reviewer notes. This trend holds more generally: while several mitigation strategies can help reduce bias transfer, post-hoc approaches typically do not fully remove it (and often are not infeasible without sacrificing something performance). We thus believe it is critical to prevent such biases at their source by more carefully choosing our pre-trained data in the first place.\n\n**Q1. Adversarial Pre-training**: Adversarial pre-training might be an interesting strategy: indeed, previous work has found that adversarially robust pre-training models do seem to transfer better (see [1]). However, these biases are spurious correlations which (at their core) are just features. It\u2019s not clear that adversarial pre-training will be able to reduce reliance on such features. \n\n**Q2. Weight Decay in the Fixed Feature Regime:**\nIn this setting, we apply regularization to the linear layer only.\n\n[1] https://arxiv.org/abs/2007.08489"
                    }
                },
                "number": 5,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission6947/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700280828796,
                "cdate": 1700280828796,
                "tmdate": 1700280828796,
                "mdate": 1700280828796,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "wauDam1J4k",
                "forum": "qhAx0fU9YE",
                "replyto": "Y9tZD0sT6X",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission6947/Reviewer_RsQk"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission6947/Reviewer_RsQk"
                ],
                "content": {
                    "title": {
                        "value": "On Weight Decay"
                    },
                    "comment": {
                        "value": "Thank you for pointing to your explanation of the effectiveness of weight decay. I appreciate the thought you put into this explanation. I have a few questions:\n\n- How did $W$ become $W_S$ in your equation?\n- Why do you assume that the regularization will drive $W_S'$ to 0? Couldn't it stay constant at any arbitrary (possibly small) value? I do not immediately see a mechanism in which SGD consistently drives $W_S'$ to 0.\n- Have you been able to quantify $|W_S|$ and   $|W_S'|$ over the course of training?"
                    }
                },
                "number": 9,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission6947/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700530382219,
                "cdate": 1700530382219,
                "tmdate": 1700530382219,
                "mdate": 1700530382219,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "Iekmk1ieJU",
                "forum": "qhAx0fU9YE",
                "replyto": "ierrijYUYX",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission6947/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission6947/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "Hi, thank you for your response!\n\n- Any $\\mathbf{w}$ can be written as $\\mathbf{w}\\_S + \\mathbf{w\\}_S'$ where $\\mathbf{w}\\_S $ is $\\mathbf{w}$ projected into the span of the training examples $S$ and $\\mathbf{w\\}_S'$ is $\\mathbf{w}$ projected onto the associated null space $S'$. Then  $$\\mathbf{w}^\\top x_i = (\\mathbf{w}\\_S + \\mathbf{w}\\_{S'})^\\top x_i = \\mathbf{w}_S^\\top x_i$$\nbecause $\\mathbf{w}\\_{S'}^\\top x_i  = 0$ (since $S'$ is the null space of the span of the training examples).\n- Note that \n$$||\\mathbf{w}\\_S + \\mathbf{w}\\_{S'}||_2^2 = \\mathbf{w}\\_S^\\top \\mathbf{w}\\_S + 2\\mathbf{w}\\_S^\\top \\mathbf{w}\\_{S'} + \\mathbf{w}\\_{S'}^\\top\\mathbf{w}\\_{S'} = ||\\mathbf{w}\\_S||_2^2 + || \\mathbf{w}\\_{S'}||_2^2$$\nsince $\\mathbf{w}\\_S^\\top \\mathbf{w}\\_{S'}  = 0$. Since $ \\mathbf{w}\\_{S'}$ does not appear in the logistic loss, any solution $\\mathbf{w}$ where the component $||\\mathbf{w}\\_{S'}||_2^2 > 0$ will be suboptimal. The problem is convex, so SGD will lead to an optimal solution which means $||\\mathbf{w}\\_{S'}||_2^2 = 0$.\n- We have just added an experiment in the uploaded revision of Appendix A.5 which considers a toy logistic regression example. We show that the component of the initial weight vector projected onto the null space of the training examples (i.e., $||\\mathbf{w}\\_{S''}||$) degrades to 0 with weight decay (but is unchanged without weight decay). Measuring $||\\mathbf{w}\\_S||$ and $||\\mathbf{w}_{S'}||$ for our neural networks in the main experiments is much more involved (one initial strategy might be to study the SVD of the weights with weight decay). We would be happy to pursue this for the final version.\n\nPlease let us know if you have any further questions."
                    }
                },
                "number": 10,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission6947/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700581982501,
                "cdate": 1700581982501,
                "tmdate": 1700583305954,
                "mdate": 1700583305954,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "AfS5ZJwPoa",
            "forum": "qhAx0fU9YE",
            "replyto": "qhAx0fU9YE",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission6947/Reviewer_2a9y"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission6947/Reviewer_2a9y"
            ],
            "content": {
                "summary": {
                    "value": "The paper shows empirically that bias in the source distribution can transfer to downstream tasks. The work conducts experiments for backdoor attacks, synthetically controlled biases, and naturally occurring biases. The paper analyzes the effect of various experimental parameters such as weight decay and full network fine-tuning versus frozen features."
                },
                "soundness": {
                    "value": "4 excellent"
                },
                "presentation": {
                    "value": "4 excellent"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "- The motivation and contributions are clear. Understanding how source datasets affect downstream performance, especially in the context of biases and backdoor attacks is highly relevant given how often pretrained models are used. \n\n- The experiments are extremely thorough, looking at various experimental parameters such as full network fine-tuning versus frozen encoder and the effect of weight decay. Various types of biases are analyzed such as backdoor attacks, natural biases, and synthetically induced biases. The experiments are performed with ImageNet as the source which is a reasonable scale and a common pretraining dataset. \n\n- The figures are illustrative and convey the main takeaways of the experiments.\n\n- The theoretical toy problem is interesting and gives potential intuition for why bias may persist through fine-tuning. It would be nice to see experiments looking at whether over-parametrization affects the amount of bias transfer."
                },
                "weaknesses": {
                    "value": "- It would be useful to know how sensitive these conclusions are to fine-tuning hyper-parameters such as learning rate, momentum, and epochs."
                },
                "questions": {
                    "value": "- Did you do experiments looking at the initial learning rate for fine-tuning and how that affects the amount of bias transfer? I would expect higher learning rates would lead to lower bias transfer. \n\n- Do you think these conclusions would hold for other pretrained models like SimCLR and CLIP?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "8: accept, good paper"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 4,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission6947/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698829417211,
            "cdate": 1698829417211,
            "tmdate": 1699636810228,
            "mdate": 1699636810228,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "x8gRG3faBc",
                "forum": "qhAx0fU9YE",
                "replyto": "AfS5ZJwPoa",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission6947/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission6947/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Response to Reviewer 2a9y"
                    },
                    "comment": {
                        "value": "We thank the reviewer for their detailed review! We address the comments below.\n\n**Impact of learning rate:** We replicated our backdoor experiments in Section 3 with varying learning rates (Appendix A.8 in the revision). Similar to weight decay, we find that increasing the learning rate does not mitigate bias transfer in the fixed-feature setting (ASR actually goes up) but does help in the full-network setting. However, increasing learning rate is a fairly invasive intervention, and often has adverse effects on model performance.\n\n**SimCLR and CLIP:** While we focused on supervised pre-training models in our paper, we would expect biases from SimCLR and CLIP to similarly transfer. Indeed, there has been a large body of work indicating that CLIP contains several concerning biases, especially concerning race and gender [1, 2]. Understanding how these types of biases manifest in fine-tuned models is an interesting avenue for future work.\n\n[1] https://arxiv.org/abs/2108.02818\n\n[2] https://arxiv.org/abs/2210.14562"
                    }
                },
                "number": 4,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission6947/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700279310239,
                "cdate": 1700279310239,
                "tmdate": 1700279310239,
                "mdate": 1700279310239,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "OFs4WdcwFF",
                "forum": "qhAx0fU9YE",
                "replyto": "AfS5ZJwPoa",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission6947/Reviewer_2a9y"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission6947/Reviewer_2a9y"
                ],
                "content": {
                    "title": {
                        "value": "Response to Authors"
                    },
                    "comment": {
                        "value": "I thank the authors for their response. After reading other reviewer discussions, and more thoroughly reading [1], I have decided to maintain my score. The main concern of other reviewers seems to be lack of recommendations for mitigating biased transfer, and the similarity to Wang et al [1].\n\nWhile [1] tackles a similar question, I think that this paper provides significant additional insights. This paper conducts experiments across multiple architectures, fine-tuning scenarios, and types of biases whereas [1] is relatively limited along these axes. Two empirical findings I think are significant and differentiate the work from those previous are the following: \n\n- Spurious correlations from the pretraining set can imperceptibly persist in the downstream model even after fine-tuning. \n- Showing that the type of biases that previous works induce artificially, are naturally occurring at scale in ImageNet.\n\nAdditionally this work provides some theoretically plausible explanation for how over-parametrization enables biases to persist. I think this could be of interest to others and point to future directions of research. Finally, I don't think the paper should be penalized for not solving the problem of bias. The authors explore a few straight-forward mitigation strategies and show that the problem is not easily solved so researchers pretraining models should be careful. \n\n\n[1] Wang and Russakovsky: Overwriting Pretrained Bias with Finetuning Data."
                    }
                },
                "number": 16,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission6947/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700698680721,
                "cdate": 1700698680721,
                "tmdate": 1700698760115,
                "mdate": 1700698760115,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    }
]