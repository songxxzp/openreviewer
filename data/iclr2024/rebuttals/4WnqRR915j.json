[
    {
        "title": "Llemma: An Open Language Model for Mathematics"
    },
    {
        "review": {
            "id": "1VP9171N7g",
            "forum": "4WnqRR915j",
            "replyto": "4WnqRR915j",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission8243/Reviewer_Ch2c"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission8243/Reviewer_Ch2c"
            ],
            "content": {
                "summary": {
                    "value": "The paper proposed continual training with math/code data and achieved very competitive results on the related tasks. The evaluation is comprehensive and ablation studies are sound."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "1. This paper showcases that if we continue pretraining an LLM on a specific domain, we are able to get good performance. The authors established a good way to do domain adaptation.\n2. Data and training code are open-sourced, expect to have high reproducibility \n3. Ablation study is comprehensive.\n4. Writing is well-organized"
                },
                "weaknesses": {
                    "value": "- The authors are comparing their results with `Minerva`, however since the datasets and its mixture, model architecture, training methods are different, we don't know which part contributes to the good performance. \n- We don't know if there training from scratch or starting from other LLM (like llama2 base) could be as impactful as well"
                },
                "questions": {
                    "value": "- One thing would be interesting to know is that if pretrained from scratch, will it be better or not? \n- Do we still need fine-tuning in this case"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "8: accept, good paper"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission8243/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission8243/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission8243/Reviewer_Ch2c"
                    ]
                }
            },
            "number": 1,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission8243/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1697666126079,
            "cdate": 1697666126079,
            "tmdate": 1699637024819,
            "mdate": 1699637024819,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "CskNIoKpMR",
                "forum": "4WnqRR915j",
                "replyto": "1VP9171N7g",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8243/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8243/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "We thank the reviewer for indicating that we have \u201cestablished a good way to do domain adaptation\u201d, that our \u201cablation study is comprehensive\u201d, and that the paper is well-organized. We hope to address their questions and criticisms below. \n\n**The authors are comparing their results with Minerva, however since the datasets and its mixture, model architecture, training methods are different, we don't know which part contributes to the good performance.**\n\nWe use Minerva as a baseline because it is a state-of-the-art methodology for adapting language models to mathematics. We would have happily performed a detailed ablation study comparing each component of Minerva\u2019s data and training pipeline with Llemma\u2019s. However, because Minerva is entirely closed source, such a study is impossible.\n\nWe would like to note that, wherever possible, in our comparisons between the two models we evaluate Llemma and Minerva on precisely the same evaluation setup, such as the use of the exact few-shot prompt and answer extraction used by Minerva, and as such our downstream comparisons are as detailed as Minerva\u2019s closed-source nature allows.\n\n**We don't know if training from scratch or starting from another LLM (like llama2 base) could be as impactful as well. One thing would be interesting to know is that if pretrained from scratch, will it be better or not?**\n\nWe certainly would have been interested in a head-to-head comparison of a random initialization, a Llama-2 initialization, and a Code Llama initialization for training Llemma. However, the compute cost of such experiments is prohibitive. At current prices of an AWS 8xA100 instance, training Llemma 7B costs around 95,000 USD and training Llemma 34B costs around 195,000 USD. \n\nWe chose to initialize Llemma with Code Llama weights instead of Llama 2 weights for several reasons. One is that coding and theorem proving are important use cases for Llemma, and Llama 2 has weak coding capabilities. Furthermore, code pretraining appears to boost more general reasoning capabilities, as evidenced by Code Llama\u2019s superior MATH score compared to Llama 2.\n\n**Do we still need fine-tuning?**\n\nYes, finetuning Llemma on downstream applications is beneficial. For example, in appendix G, we demonstrate that finetuning Llemma on supervised datasets targeted at mathematical problem solving boosts its accuracy on MATH and GSM8k. Furthermore, finetuning can align Llemma\u2019s outputs to the desired style or application, such as boosting the chat dialog capabilities of the model."
                    }
                },
                "number": 3,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8243/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700173757647,
                "cdate": 1700173757647,
                "tmdate": 1700173757647,
                "mdate": 1700173757647,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "teLi1vqfuh",
            "forum": "4WnqRR915j",
            "replyto": "4WnqRR915j",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission8243/Reviewer_JQiP"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission8243/Reviewer_JQiP"
            ],
            "content": {
                "summary": {
                    "value": "In this submission, the authors released a new large-scale dataset for training mathematically-specified\nlarge language models. Additionally, based on the dataset, a new base model called LLemma is trained and released, which outperforms existing models like Code LLaMA and Minerva. Moreover, the dataset and the baseline are openly released, which helps to boost the research in AI4Math."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "1. The paper is well-written and easy to follow. The details of data collection and training instructions are provided. Moreover, both data and model are released. \n\n2. The experimental part is solid. I especially like the ablation study of data mixture components given in Table 4, which helps to reveal the contribution of different data sources."
                },
                "weaknesses": {
                    "value": "1. Technically, this submission is not so interesting, and I cannot learn anything new in the aspect of methodology. The claims and experimental results are natural \u2014 fine-tuning Code Llama on a larger mathematically specific dataset helps to improve its performance. Note that this is a very personal opinion:) It is OK if this work targets the topic of datasets and benchmarks.\n2. I hope that the authors can discuss more about their future plans in the section of Conclusion. In the field of AI4Math, the performance of the current LLM is still limited. What will the authors do in the next step? Will they continuously enlarge the dataset and/or model? Is this the final solution to AI4Math?\n3. The comparison between Code Llama and the proposed Llemma is not fair. It demonstrates the usefulness of the Proof-Pile-2 dataset. It would be nice if the authors could finetune Llama2 directly based on the Proof-Pile-2 dataset and show the model performance."
                },
                "questions": {
                    "value": "Why did the authors train the 7B model for 200B tokens and the 34B (the larger) model for 50B (the fewer) tokens?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "2: You are willing to defend your assessment, but it is quite likely that you did not understand the central parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 2,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission8243/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698768414880,
            "cdate": 1698768414880,
            "tmdate": 1699637024708,
            "mdate": 1699637024708,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "zqv0yEj07y",
                "forum": "4WnqRR915j",
                "replyto": "teLi1vqfuh",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8243/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8243/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "We thank the reviewer for their thoughtful comments. Below, we address each of the concerns raised point-by-point.\n\n**I cannot learn anything new in the aspect of methodology**\n\nLlemma provides a full recipe for adapting a language model to mathematics through continued pretraining. By full recipe, we mean that a lab could use our paper, code, data, and models to understand how we processed the data, picked a data mixture (section 3.4), trained the model, and evaluated it (including new methodologies for studying data overlap, and for evaluating language models few-shot for formal theorem proving).\n\nAt the scale we considered, a full recipe of this form is increasingly rare. As a result, we hope that our work gives insight into the methodology of training language models for a specialized domain. In the words of Reviewer Ch2c, Llemma \u201cestablished a good way to do domain adaptation\u201d. \n\n**I hope that the authors can discuss more about their future plans**\n\nWe believe a strong mathematics base model is a useful (if not necessary) component of several outgoing research directions. We mentioned these in the introduction and conclusion, such as reinforcement learning and reward modeling for reasoning, investigating the limits of domain-specific models, and gaining a better understanding of algorithmic generalization. Llemma is also unique in its coverage of formal mathematics, which we see as a fruitful area for the future.\n\n**The comparison between Code Llama and the proposed Llemma is not fair. It demonstrates the usefulness of the Proof-Pile-2 dataset. It would be nice if the authors could finetune Llama2 directly based on the Proof-Pile-2 dataset and show the model performance.**\n\nWe would like to clarify that the purpose of finetuning Code Llama on the Proof-Pile-2 to yield Llemma is to demonstrate the usefulness of the Proof-Pile-2. That is, the core claim of our paper is that training on unstructured mathematical text can greatly increase the quantitative reasoning performance of a pre-trained language model. \n\nThat said, it still would have been interesting to train a version of Llemma initialized from Llama 2 to understand how much better Llemma is than Code Llama at mathematics when controlled for training compute. However, the computational cost of such an experiment is prohibitive. At the current AWS rate of 32.70 USD/hour for an 8xA100 instance, it would cost 95,000 USD to retrain Llemma 7B and 195,000 USD to retrain Llemma 34B. \n\n**Why did the authors train the 7B model for 200B tokens and the 34B (the larger) model for 50B (the fewer) tokens?**\n\nThe decision to train the 34B model for fewer tokens was forced on us by our compute budget. We simply did not have more resources than the total 70,000 GPU hours we used to train Llemma 7B for 200B tokens and Llemma 34B for 50B tokens.\n\nWe hope the above clarifications address the  reviewers' concerns around our experimental design, and if so, wonder whether they may be willing to raise our submission\u2019s score."
                    }
                },
                "number": 2,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8243/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700173704783,
                "cdate": 1700173704783,
                "tmdate": 1700173704783,
                "mdate": 1700173704783,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "aAZ6crTFct",
            "forum": "4WnqRR915j",
            "replyto": "4WnqRR915j",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission8243/Reviewer_HYfd"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission8243/Reviewer_HYfd"
            ],
            "content": {
                "summary": {
                    "value": "This paper present a new model, namely LLEMMA, an open language model for mathematics. The model is used to solve math-related problems such as proving or calculators. The major contribution of the paper is opensourcing the model, as well as the training data and codes. The evaluation results show that the performance is encouraging."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "1. The model and code are opensourcing.\n2. It has proposed the Proof-Pile-2 data and will be released as well.\n3. It has shown a training method that works well by fine-tuning a llama2 based pretrained model."
                },
                "weaknesses": {
                    "value": "1. It doesn't have much ablation study or analysis about the data configuration. For example, why we should use which part of data.\n2. It doesn't have much novelties, other than a model that experimentally looks ok."
                },
                "questions": {
                    "value": "1. Have you experimented with different combination of training data?\n2. How did you perform instruction fine-tuning?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission8243/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission8243/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission8243/Reviewer_HYfd"
                    ]
                }
            },
            "number": 3,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission8243/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1699346697986,
            "cdate": 1699346697986,
            "tmdate": 1699637024603,
            "mdate": 1699637024603,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "uJphmLcBvY",
                "forum": "4WnqRR915j",
                "replyto": "aAZ6crTFct",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8243/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8243/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "We thank the reviewer for their thoughtful remarks. Below, we address each of their concerns about our submission point-by-point. \n\n**It doesn't have much ablation study or analysis about the data configuration. For example, why we should use which part of data. Have you experimented with different combinations of training data?**\n\nIn section 3.4 and Table 4 of our paper, we report an ablation study we carried out to determine the optimal mixture of data sources. Note that many prior works on language modeling [5, 6] provide little justification for their data mixture. We provide important confirmation that large-scale language modeling performance is sensitive to the precise choice of data mixture.\n\n**It doesn't have much novelties, other than a model that experimentally looks ok.**\n\nWe would like to point out a number of aspects of our work that are novel:\n1. Few-shot formal theorem proving: Prior work using language models for formal theorem proving has either relied on models finetuned for a specific theorem proving system [1, 2], or proprietary models finetuned on private datasets [2]. We demonstrate the first instance of an open base model achieving strong theorem proving capabilities without fine-tuning. One reason this is a useful capability is that supervised finetuning data for formal theorem proving and autoformalization are scarce, which means being able to finetune from a strong base model is critical. \n2. Memorization study: in our memorization study (section 3.5), we find that our model does not attain a higher accuracy on problems that appear in the training set compared to those that do not. This is a counterintuitive finding that warrants awareness among the research community and further investigation. \n\nFurthermore, we view Llemma not just as the outcome of research, but also as research infrastructure that can support future work. For example, many works on machine learning theorem proving [1, 2, 3] may benefit greatly from a stronger mathematics language model. \n \n**How did you perform instruction fine-tuning?**\n\nAll results in the main body of the paper show Llemma\u2019s performance via few-shot prompting, without applying any finetuning. \n\nIn Appendix G and Table 11 of our paper, we also demonstrate that Llemma is able to substantially improve its performance on MATH and GSM8k when fine-tuned on MetaMathQA, a supervised finetuning dataset targeted at mathematical problem solving. For these experiments, we use exactly the same methodology as [4]. Finetuning code will be released in our open-source repository upon acceptance.\n\nWe hope that after reading our clarifications, the reviewer is willing to raise their score.\n\n**References**\n\n[1] Kaiyu Yang, Aidan M. Swope, Alex Gu, Rahul Chalamala, Peiyang Song, Shixing Yu, Saad Godil, Ryan Prenger, & Anima Anandkumar. (2023). LeanDojo: Theorem Proving with Retrieval-Augmented Language Models.\n\n[2] Emily First, Markus N. Rabe, Talia Ringer, & Yuriy Brun. (2023). Baldur: Whole-Proof Generation and Repair with Large Language Models.\n\n[3] Amitayush Thakur, Yeming Wen, & Swarat Chaudhuri. (2023). A Language-Agent Approach to Formal Theorem-Proving.\n\n[4] Longhui Yu, Weisen Jiang, Han Shi, Jincheng Yu, Zhengying Liu, Yu Zhang, James T. Kwok, Zhenguo Li, Adrian Weller, & Weiyang Liu. (2023). MetaMath: Bootstrap Your Own Mathematical Questions for Large Language Models.\n\n[5] Leo Gao, Stella Biderman, Sid Black, Laurence Golding, Travis Hoppe, Charles Foster, Jason Phang, Horace He, Anish Thite, Noa Nabeshima, Shawn Presser, & Connor Leahy. (2020). The Pile: An 800GB Dataset of Diverse Text for Language Modeling.\n\n[6] Hugo Touvron, Thibaut Lavril, Gautier Izacard, Xavier Martinet, Marie-Anne Lachaux, Timoth\u00e9e Lacroix, Baptiste Rozi\u00e8re, Naman Goyal, Eric Hambro, Faisal Azhar, Aurelien Rodriguez, Armand Joulin, Edouard Grave, & Guillaume Lample. (2023). LLaMA: Open and Efficient Foundation Language Models."
                    }
                },
                "number": 1,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8243/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700173630986,
                "cdate": 1700173630986,
                "tmdate": 1700173630986,
                "mdate": 1700173630986,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    }
]