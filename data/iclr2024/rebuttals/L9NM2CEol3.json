[
    {
        "title": "Speed Up Federated Learning in Heterogeneous Environment: A Dynamic Tiering Approach"
    },
    {
        "review": {
            "id": "Vkhhu96u5i",
            "forum": "L9NM2CEol3",
            "replyto": "L9NM2CEol3",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission4150/Reviewer_Yytj"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission4150/Reviewer_Yytj"
            ],
            "content": {
                "summary": {
                    "value": "The paper proposes Dynamic Tiering-based Federated Learning (DTFL), which aims to speed up FL via dynamically allocating training load to heterogeneous resource FL in different tiers. DTFL introduced a dynamic tier scheduler to cluster FL local clients into tiers and then leverage split learning to split different portions of the global model and deploy on local clients based on their tier. Additionally, the paper provides theoretical proof of the convergence properties of DTFL."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "1 poor"
                },
                "strengths": {
                    "value": "1. DTFL leverages local-loss-based training and split learning, which enables dynamic offloading training workload for local clients with different resource capacities.\n\n2. DTFL introduced dynamic tier scheduling components to adaptively cluster local clients to different resource tiers and hence speed up training. \n\n3. The paper provides theoretical convergence analysis."
                },
                "weaknesses": {
                    "value": "**1.** The experiment looks weak and can not support the arguments proposed in the paper.\n\n**2.** The tier scheduling metrics are unreliable. DTFL uses training time, communication time, and training time of the server-side model to profile the tier. However, using `actually time`  is unreliable, in computational devices (especially edge devices), many factors can affect the execution time for the same program, such as temperature, IO thread, etc. More standard metrics might be considered.\n\nAdditionally, in the experiments, the evaluation metric for training speed is unfair. The authors use total training **time in second** to evaluate the training speed of federated learning. However, simply tracking the training time is hard to avoid hardware and network traffic effects. Instead, more standard evaluation metrics should be used, such as **FLOPs, MACs, GPU Hours, electricity usage, total #trainable parameter**s, etc.\n\n**3.** The experiments is simulated on CPU and GPUs raising further concern on point 2 above.\n\n**4.** Delay on dynamic Tier Scheduling. DTFL uses total training time in previous communication rounds to tiering clients, it may not accurately reflect computational status in the current round.\n\n**5.** No experiments reflect the communication cost of the proposed method."
                },
                "questions": {
                    "value": "Please kindly address the concerns I list in the weakness section.\n\nOverall, the experiments are incomprehensive and lack the evidence to support the argument of the paper. I'll change my mind if the authors add further fairness evaluation results.\nFor instance, use more fairness metrics to evaluate the speed, consider more system heterogeneity settings with more diverse resource profiles, etc."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "3: reject, not good enough"
                },
                "confidence": {
                    "value": "5: You are absolutely certain about your assessment. You are very familiar with the related work and checked the math/other details carefully."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 1,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission4150/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698185623403,
            "cdate": 1698185623403,
            "tmdate": 1699636380501,
            "mdate": 1699636380501,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "Yhp5vCunyz",
                "forum": "L9NM2CEol3",
                "replyto": "Vkhhu96u5i",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission4150/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission4150/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "We appreciate the committee and reviewer's valuable comments and suggestions. In the following, we address the reviewer's concerns.\n\n**Response 1.** The experiments presented in our paper aim to support and validate the effectiveness of the proposed federated learning method in addressing the challenges posed by heterogeneous resource-constrained devices in distributed environments.\n\nOur experimental design is motivated by the observed shortcomings in existing FL methodologies, especially in the context of training large models on devices with varying computation and communication capacities. We deliberately highlight the limitations of previous approaches, such as split learning, split federated learning, and tier-based FL, pointing out their inefficiencies in mitigating the straggler problem and reducing overall training time. To address these challenges, we introduce DTFL, a novel system that dynamically divides clients into tiers, offloading different portions of the global model to each client based on their capacities and training speeds. The dynamic tier scheduler utilizes tier profiling to estimate client-side training time, effectively minimizing overall training time. The proposed system incorporates benefits from both SFL and tier-based FL while addressing the straggler problem.\n\nWe not only theoretically prove the convergence of DTFL but also conduct extensive experiments, training large models on various datasets under both IID and non-IID settings. Our experimental results demonstrate that DTFL outperforms state-of-the-art FL methods, FedAvg, SplitFed, FedYogi, and FedGKT, in terms of reducing training time while maintaining model accuracy. By emphasizing the challenges in existing methodologies and showcasing the improvements brought by DTFL, we believe our experiments robustly support the arguments and contributions put forth in the paper.\n\n**Response 2.** We acknowledge the reviewer's concerns about the potential unreliability of relying solely on communication and training time for profiling clients in tier scheduling. Training time can indeed be influenced by various factors such as device capabilities, network congestion, and background processes. While these factors can introduce variability in training time, we believe that using a combination of communication time and training time of client-side devices provides a practical and easy-to-implement approach for estimating a client's capabilities under typical operating conditions. Moreover, our approach does not require the server to collect additional information from clients, such as temperature, IO threads, or other potentially sensitive information. Our model-free approach allows the server to easily observe training time without requiring any further input from clients.\n\nRegarding the evaluation metrics, we recognize the use of target accuracy as a performance metric in previous studies, such as [1] and [2]. This metric offers a standardized approach to compare the training efficiency of various federated learning methods where the objective is to evaluate the training time performance of different methods. While total training time may not fully account for hardware and network variations, we believe it provides a straightforward and practical way to compare the overall training efficiency of different federated learning methods.\n\n[1] Chai, Zheng, et al. \"FedAT: A high-performance and communication-efficient federated learning system with asynchronous tiers.\" Proceedings of the International Conference for High Performance Computing, Networking, Storage and Analysis. 2021.\n\n[2] Karimireddy, Sai Praneeth, et al. \"Scaffold: Stochastic controlled averaging for federated learning.\" International conference on machine learning. PMLR, 2020."
                    }
                },
                "number": 4,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission4150/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700179992264,
                "cdate": 1700179992264,
                "tmdate": 1700179992264,
                "mdate": 1700179992264,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "4PnBCF5GBu",
                "forum": "L9NM2CEol3",
                "replyto": "Vkhhu96u5i",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission4150/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission4150/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "**Response 3.** Regarding the reviewer's focus on the simulation environment used in our experiments, we acknowledge that the decision to simulate the experiments on both CPU/GPU was made deliberately. This decision aligns with the practical considerations of real-world federated learning scenarios, as demonstrated in previous studies such as [1] and [2].\n\nIn our simulation, we measured the training time of clients on CPU/GPU in each round, considering the inherent heterogeneity in devices commonly found in federated learning environments. The dynamic tier scheduler is designed to adapt to varying computation capabilities, making it essential to evaluate the system's performance across different hardware configurations.\n\nFurthermore, to account for the communication aspect in federated learning, we simulate the network speed of clients based on their resource profiles. This ensures a comprehensive evaluation of the entire training process, incorporating both computation and communication aspects, which are critical factors in the effectiveness of the proposed DTFL. We believe that this approach enhances the realism of our simulation, providing valuable insights into the performance of DTFL in diverse and heterogeneous environments.\n\n**Response 4.** We acknowledge the potential for delays in dynamic tier scheduling when relying on the total training time from previous communication rounds to estimate clients' computational status. The selection of the Exponential Moving Average (EMA) in our tier profiling algorithm was primarily driven by its simplicity and efficiency. EMA offers a straightforward and computationally efficient model-free method to smooth out fluctuations in client performance, providing a practical estimate of their current state and preventing any additional load or complexity in the system. EMA relies on past behavior to infer the current state, resembling a Markovian process. As we do not consider any further information about clients or the system or network, this model-free approach works well. \n\nWhile more complex methods, such as the Kalman filter, particle filter, and RNN-based estimation methods, might offer marginal improvements in the accuracy of computational status, their increased computational overhead and complexity might not be justifiable in the context of real-time tier profiling. Additionally, using these methods would require more information, which is challenging in the federated learning setting. We have no assumptions about the network or clients' computational resources. This method can work well in practical applications where we do not have too many fluctuations. Furthermore, in our experiments, we considered other state estimation methods, and we found that EMA is a simple approach that can achieve good results in estimating clients' computational states. To further evaluate the impact of clients' state estimation method and its delays in accurately estimating clients' computational states, we conducted experiments where we deliberately introduced inaccuracies in clients' computational time estimation in 20% of training rounds for the CIFAR-10 IID case. We employed the same experimental settings as those described in the paper. In these cases, we observed an increase in training time from 2750 to 3190. We further extended the experiments to 40% of training rounds, resulting in a training time increase to 5063, which is still much less than the training time of other FL methods\n\n**Response 5.** As the primary goal of the proposed method is to minimize training time, we focused on communication time as a proxy for communication cost. The communication cost, encompassing both intermediate data size and network speed of each client, is expressed in seconds, acknowledging the influence of these factors.\n\nIn Table 1, we present the communication time (cost) of the training process for different tiers. This table compares the cost of transmitting intermediate data from clients to the server in seconds, reflecting the impact of slower network speeds and larger intermediate data sizes on training time. Also, as discussed in Sec. 3.3, we investigated the influence of communication factors, including communication link speed and local dataset size, on training time.\n\n\n[1] Chai, Zheng, et al. \"Tifl: A tier-based federated learning system.\" Proceedings of the 29th international symposium on high-performance parallel and distributed computing. 2020.\n\n[2] Tan, Alysa Ziying, et al. \"Towards personalized federated learning.\" IEEE Transactions on Neural Networks and Learning Systems (2022)."
                    }
                },
                "number": 5,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission4150/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700180225791,
                "cdate": 1700180225791,
                "tmdate": 1700180225791,
                "mdate": 1700180225791,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "U8A4IVJVOa",
                "forum": "L9NM2CEol3",
                "replyto": "4PnBCF5GBu",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission4150/Reviewer_Yytj"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission4150/Reviewer_Yytj"
                ],
                "content": {
                    "comment": {
                        "value": "Thank you for your detailed response; it resolved some of my initial confusion. However, there are still some points unclear to me, and after reading other reviewer's comments, I have some new questions.\n\n- The experiments rely on simulated client profiles to create a heterogeneous environment. How closely do these simulated profiles reflect the variability and dynamic changes in resource availability seen in real-world federated learning scenarios? Would the DTFL system's performance be consistent in actual deployments where client resource variability might be more unpredictable and diverse?\n- Although the paper states that DTFL shows faster convergence, could you provide more clarity on its convergence performance and accuracy, especially in I.I.D. scenarios? Since in your experiments, the figures looks cut off, it doesn't show the final convergence. Is there additional data or analysis that could elucidate the convergence behavior of DTFL in these scenarios?\n- Again, even evaluating the speed via actual training time might make sense in some cases. However, training time may not the only factor that affects the FL training, number of communication rounds also matters.  How does the DTFL system handle scenarios where clients frequently lose connection or have unstable network conditions? If the system requires more frequent communication rounds, what mechanisms are in place to ensure the robustness and continuity of the learning process in such environments? Since the experiments lacking information on communication rounds vs. performance.\n\nIn summary, based on the discussion and the points raised, it appears that while the experiments conducted in the paper only demonstrate certain strengths of the DTFL system, particularly in terms of local training time efficiency, there are aspects that might require further clarification or additional information for a comprehensive validation of the authors' arguments."
                    }
                },
                "number": 8,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission4150/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700537183764,
                "cdate": 1700537183764,
                "tmdate": 1700537183764,
                "mdate": 1700537183764,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "eDjYZR9f7K",
            "forum": "L9NM2CEol3",
            "replyto": "L9NM2CEol3",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission4150/Reviewer_f1S3"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission4150/Reviewer_f1S3"
            ],
            "content": {
                "summary": {
                    "value": "This paper presents a new tiered-based split federated learning to handle heterogeneous environments where the resources of clients change over time. Specifically, the authors propose dynamic tier scheduling which operates through tier profiling and tier scheduling. Tier profiling tracks the training times of clients, which change over time, and based on this, the server estimates the current training times for each client in all tiers using EMA. Tier scheduling assigns clients to a tier according to their estimated time for efficient training. The authors provide theoretical convergence bound for both convex and non-convex loss functions. The empirical results show that the proposed method has fast convergence speeds over various baselines."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "- The authors propose a new tiered-based split learning which can efficiently train large models depending on clients\u2019 resources in heterogeneous environments.\n- The convergence behavior of the proposed method is theoretically established\n- The proposed method significantly reduces the training time compared to existing works."
                },
                "weaknesses": {
                    "value": "- It seems that this work only considers a scenario where computational and communication resources of all clients change over time. However, it\u2019s not clear that this is a reasonable scenario in practice. I think there might be more cases where the resources of only a portion of all clients change in real-world scenarios. To demonstrate the effectiveness of the proposed algorithm in various practical scenarios, it would be beneficial for the authors to conduct additional experiments where they vary the proportion of the devices whose training times change over time.\n- What are some practical applications in which the resources of each client changes over time? It would be helpful to describe some examples of such applications to emphasize the importance of addressing the targeted problem. \n- Ablation studies should be performed to confirm the effect of each component. First, a comparison with local-loss based SFL [1] (not tiered-based) should be considered. Secondly, using local-loss based SFL, a comparison between static tiered methods and the proposed dynamic tiered method seems necessary. Finally, to see the effect of EMA in tier profiling, the author should compare the results of tier profiling with and without EMA. \n- Overall, the technical novelty of the proposed method seems limited. I feel that tier profiling and scheduling are straightforward approaches based on the previous works. \n\n[1] Han et al., \"Accelerating federated learning with split learning on locally generated losses.\" In ICML 2021 Workshop on Federated Learning for User Privacy and Data Confidentiality. ICML Board, 2021."
                },
                "questions": {
                    "value": "See Weaknesses and,\n\n- The main results only provide the training time required to achieve the target accuracy. What is the maximum accuracy that each method can achieve? \n- There is a type: cross-solo -> cross-silo"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission4150/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission4150/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission4150/Reviewer_f1S3"
                    ]
                }
            },
            "number": 2,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission4150/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698383151760,
            "cdate": 1698383151760,
            "tmdate": 1699636380238,
            "mdate": 1699636380238,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "zFczKmXZRA",
                "forum": "L9NM2CEol3",
                "replyto": "eDjYZR9f7K",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission4150/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission4150/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "We appreciate the committee and reviewer's valuable comments and suggestions. In the following, we address the reviewer's concerns.\n\n**Response 1.** In response to the reviewer's point regarding the dynamic nature of clients' resources would like to clarify that our experiments do consider the cases described in your comments, where the computational and communication resources of a portion of clients (30% in our experiments) change over time. Please refer to the first paragraph in Sec. 4.2.\n\nAlthough our experiments, such as Table 1, demonstrate a scenario where 30% of clients' resources change every 50 rounds to simulate fluctuations in computation and communication resources, our method is designed to handle a broad spectrum of resource heterogeneity and dynamic changes. The tier profiler effectively captures both steady-state and dynamic resource changes, ensuring that clients are consistently assigned to appropriate tiers regardless of the proportion of clients experiencing resource variations.\n\nThe TierProfiler component of our method continuously monitors and captures the dynamics of clients' resources, including communication and computation capabilities. This allows the method to adapt to any changes of clients without compromising its effectiveness. In the case with only a subset of clients' resources change, TierProfiler will identify those clients and assign them to appropriate tiers accordingly, in order to minimize the overall training time.\n\n**Response 2.** Regarding the reviewer's request for more concrete examples of practical applications where client resources change over time, here are a few examples:\n- Edge Computing: Edge computing involves performing computations and data processing at the edge of the network, closer to the end devices. In edge computing scenarios, the resources of edge devices can vary due to factors such as workload fluctuations, hardware limitations, and power constraints. Our proposed methods can dynamically adapt to these resource changes, ensuring optimal performance and resource utilization in edge computing environments.\n- Mobile Crowdsourcing: In mobile crowdsourcing applications, participants use their smartphones to contribute data or perform tasks. The resources of these devices can vary significantly depending on factors such as battery level, network connectivity, and CPU availability. DTFL can effectively handle these resource fluctuations, ensuring efficient and reliable crowdsourcing processes.\n- Internet of Things (IoT): The IoT encompasses a vast network of interconnected devices, ranging from smart home appliances to industrial sensors. The resources of these devices can vary widely due to factors such as sensor data processing demands, network bandwidth limitations, and power availability. Our proposed methods can effectively manage heterogeneous resources and dynamic changes in IoT environments, enabling efficient and scalable IoT applications.\n\nThese examples illustrate the growing importance of addressing the problem of resource fluctuations in distributed machine-learning applications. Our method provides a robust and adaptable solution for handling these resource dynamics, enabling efficient, scalable, and reliable distributed machine learning in real-world scenarios.\n\n**Response 3.** Regarding the reviewer's request for ablation studies, it is essential to note that local-loss-based training without tiers is equivalent to static tiered methods, where the tier is fixed throughout the entire training process. Thus comparing the proposed dynamic tiered method with static tiered methods is the same as comparing it with local-loss-based SFL. In Table 1, we do provide these fixed-tier experimental results, which show that the overall training times under different tiers (fixed throughout the entire training process) are different, and finding the optimal tier is a nontrivial problem. This motivates us to develop dynamic tier scheduling. \n \nIn response to the reviewer's suggestion to evaluate the effectiveness of EMA by comparing the results of tier profiling with and without EMA, we conducted this comparison using ResNet-56 and the same configuration as described in the paper. The results consistently show that employing EMA in tier profiling reduces training time across all datasets. The average reduction in training time across all tiers is 7.6%. For instance, for CIFAR-10 IID, removing EMA increases training time from 2750 to 3018. This demonstrates the effectiveness of EMA in smoothing out temporary fluctuations in client performance and providing more accurate tier assignments, ultimately leading to reduced training time. Due to the space limitation, we did not include these results in the paper."
                    }
                },
                "number": 2,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission4150/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700178985578,
                "cdate": 1700178985578,
                "tmdate": 1700179375698,
                "mdate": 1700179375698,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "0gAAjstDKL",
                "forum": "L9NM2CEol3",
                "replyto": "eDjYZR9f7K",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission4150/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission4150/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "**Response 4.** The technical novelty of the proposed method lies in the introduction of tiering local-loss-based training and the development of dynamic tier scheduling, which significantly reduces the overall training time in heterogeneous environments. We would like to emphasize the challenge of the tier profiler design that involves considering multiple factors, such as communication link speed, client computation power, and local dataset size, and the challenge of solving dynamic tier scheduling, which is an integer programming problem with many unknown parameters.\n\nSpecifically, unlike traditional FL methods where client-side models remain static, DTFL introduces flexibility by adapting to the dynamic nature of client resources. It effectively combines the advantages of split learning and tier-based federated learning, overcoming the limitations of existing approaches. DTFL dynamically partitions clients into distinct tiers and optimally offloads portions of the global model based on their capacities, task sizes, and training speeds. The tier scheduler, incorporating tier profiling, offers a low-overhead solution for practical system implementation. Our theoretical analyses demonstrate the convergence of DTFL on both convex and nonconvex loss functions under standard federated learning assumptions. By employing DTFL, the training process accelerates by leveraging all the available resources in a heterogeneous environment while effectively adapting to dynamic changes.\n\n**Response 5.** We recognize the use of target accuracy as a performance metric in previous studies, such as [2] and [3]. This metric offers a standardized approach to compare the training efficiency of various federated learning methods where the objective is to evaluate the training time performance of different methods. Figure 2 shows the convergence to the target accuracy, and we stopped the training process when we reached the target accuracy.  In the experiments, we choose the target accuracy based on previous studies, which is higher than or equal to the accuracy used in previous studies such as [4]. In terms of the maximum accuracy, these methods can achieve similar accuracy in the end.\n\n[1] Han et al., \"Accelerating federated learning with split learning on locally generated losses.\" In ICML 2021 Workshop on Federated Learning for User Privacy and Data Confidentiality. ICML Board, 2021.\n\n[2] Chai, Zheng, et al. \"FedAT: A high-performance and communication-efficient federated learning system with asynchronous tiers.\" Proceedings of the International Conference for High Performance Computing, Networking, Storage and Analysis. 2021.\n\n[3] Karimireddy, Sai Praneeth, et al. \"Scaffold: Stochastic controlled averaging for federated learning.\" International conference on machine learning. PMLR, 2020.\n\n[4] He, Chaoyang, Murali Annavaram, and Salman Avestimehr. \"Group knowledge transfer: Federated learning of large cnns at the edge.\" Advances in Neural Information Processing Systems 33 (2020): 14068-14080."
                    }
                },
                "number": 3,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission4150/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700179243838,
                "cdate": 1700179243838,
                "tmdate": 1700179243838,
                "mdate": 1700179243838,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "flU8FwOVSn",
                "forum": "L9NM2CEol3",
                "replyto": "0gAAjstDKL",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission4150/Reviewer_f1S3"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission4150/Reviewer_f1S3"
                ],
                "content": {
                    "comment": {
                        "value": "I really appreciate the authors for their efforts to address my concerns especially on  practical applications where the resources of each client changes over time. However, I have the remaining concerns as follows:\n\n1) Additional experiments: What I wondered was the experimental results with varying ratios. In the current experiments, the ratio of clients whose resources change is fixed to 30%. However, in practice, this ratio will vary, therefore, it would be good to show results according to various ratios.\n\n2) Ablation studies: Regarding the comparison with local-loss-based SFL, which is a important baseline, I think it should be included in the main results (Table 3) so that it can be compared with the proposed method. As for the ablation study on EMA, I can not find the overall results. Although the authors have mentioned the space limitation, it can be added to Appendix or Official Comment in openreview, which has no space limitation.\n\n3) Maximum accuracy: I think  the maximum accuracy that each method can achieve may vary due to their algorithmic differences. It would be good to check whether the difference is significant or not. \n\nOverall, I still feel this paper needs further improvement. Therefore, I'll keep my original rating."
                    }
                },
                "number": 7,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission4150/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700378592259,
                "cdate": 1700378592259,
                "tmdate": 1700378592259,
                "mdate": 1700378592259,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "WXfkbBWm3c",
            "forum": "L9NM2CEol3",
            "replyto": "L9NM2CEol3",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission4150/Reviewer_ncgY"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission4150/Reviewer_ncgY"
            ],
            "content": {
                "summary": {
                    "value": "This paper presents an approach to address the challenges posed by heterogeneity in Federated Learning (FL) systems. The proposed Dynamic Tiering-based Federated Learning (DTFL) system leverages the concept of Split Learning to dynamically offload portions of the global model to different tiers of clients, thereby mitigating the straggler problem and reducing the computation and communication demand on resource-constrained devices."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "1. The paper is well-written and easy to follow.\n\n2. The extensive experiments validate the proposed method."
                },
                "weaknesses": {
                    "value": "1. The primary question I have regarding this paper pertains to its motivation. While there is a wealth of prior work on heterogeneous computation and communication capacities in the Federated Learning (FL) setting\u2014such as clients training heterogeneous models, clients performing partial training based on their individual abilities, asynchronous updates, and lightweight training with pre-trained models\u2014the proposed method introduces a requirement for the server to update its model with labels, which raises privacy concerns. Therefore, it is crucial to understand the advantages of the proposed method.\n\n2. It is good that the authors have included a convergence analysis. However, the convergence rate presented in Theorem 1 appears to be suboptimal compared to classical FL settings that have been studied previously.\n\n3. The authors are encouraged to provide more results in non-IID settings, similar to the approach demonstrated in Figure 2. Additionally, it would be beneficial if Figure 2 could display the entire coverage process, as it is currently truncated."
                },
                "questions": {
                    "value": "Please see the weakness section above."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "3: reject, not good enough"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 3,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission4150/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698679435686,
            "cdate": 1698679435686,
            "tmdate": 1699636380146,
            "mdate": 1699636380146,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "gQCec7aErH",
                "forum": "L9NM2CEol3",
                "replyto": "WXfkbBWm3c",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission4150/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission4150/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "We appreciate the committee and reviewer's valuable comments and suggestions. In the following, we address the reviewer's concerns.\n\n\n**Response 1.** In response to the reviewer's inquiry about the proposed method's motivation and advantages in the context of existing federated learning (FL) approaches the DTFL method aims to speed up FL training for resource-constrained devices with heterogeneous computation and communication capabilities, which are prevalent in real-world FL settings. Existing FL methods often struggle to adapt to fluctuating resource availability and varying computational capabilities of clients, leading to inefficient training and suboptimal performance, which can be observed from our experiments in Table 3.\n\nDTFL offers several compelling advantages over existing FL methods:\n- Reduced Training Time: By offloading portions of the global model to the server and employing local-loss-based training, DTFL significantly reduces training time compared to traditional FL methods. This is particularly beneficial for training large models in heterogeneous environments. \n- Dynamic Resource Adaptation: DTFL effectively adapts to dynamic resource changes among clients through its dynamic tier scheduler. This scheduler continuously monitors client performance and assigns clients to appropriate tiers based on their current resource availability, ensuring efficient utilization of resources.\n\nFor the privacy concerns due to the model update at the server side, we evaluate the model accuracy and privacy trade-offs of DTFL when integrating distance correlation and patch shuffling techniques in Table 5:\n\n- Distance Correlation Minimization: We employ distance correlation techniques to reduce the mutual information between hidden feature maps and raw data, making it more difficult for attackers to reconstruct raw data from intermediate representations.\n- Patch Shuffling: We implement patch shuffling to further protect privacy by scrambling data patches and preventing attackers from directly accessing raw data.\n- Compatibility with Privacy-Preserving FL Methods: DTFL is compatible with existing privacy-preserving FL methods, allowing for easy integration of additional privacy measures.\n\n**Response 2.** Regarding the feedback about the convergence rate of DTFL, it is important to note that while the convergence rate of DTFL may appear suboptimal compared to certain classical FL settings in terms of training rounds, it is important to note that the training time of DTFL in each round is much less than existing FL methods, which would lead to much less overall training time using DTFL. As demonstrated in Table 3, DTFL significantly reduces the overall training time compared to other FL methods.\nThe convergence analysis provided in Theorem 1 demonstrates that DTFL converges effectively after a certain number of rounds. The deliberate design choice to prioritize training time efficiency over convergence round reflects the method's suitability for real-world applications that demand faster training.\n\n**Response 3.** In Table 3, we do provide the results in non-IID settings. The non-IID convergence curve shows a similar pattern in terms of training time, and due to the space limit of the paper we only show the IID case. In Figure 2, we follow related studies, such as [1] and [2], by using the training time to achieve the target accuracy as a performance metric. This metric offers a standardized approach to compare the training efficiency of various FL methods. Figure 2 shows the convergence to the target accuracy, and we stopped the training process when we reached the target accuracy.  In the experiments, the chosen target accuracy is higher than or equal to the accuracy used in previous studies such as [3].\n\n[1] Chai, Zheng, et al. \"FedAT: A high-performance and communication-efficient federated learning system with asynchronous tiers.\" Proceedings of the International Conference for High Performance Computing, Networking, Storage and Analysis. 2021.\n\n[2] Karimireddy, Sai Praneeth, et al. \"Scaffold: Stochastic controlled averaging for federated learning.\" International conference on machine learning. PMLR, 2020. \n\n[3] He, Chaoyang, Murali Annavaram, and Salman Avestimehr. \"Group knowledge transfer: Federated learning of large cnns at the edge.\" Advances in Neural Information Processing Systems 33 (2020): 14068-14080."
                    }
                },
                "number": 1,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission4150/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700177921776,
                "cdate": 1700177921776,
                "tmdate": 1700177921776,
                "mdate": 1700177921776,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    }
]