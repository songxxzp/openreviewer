[
    {
        "title": "Adding 32 Parameters to a LLM can improve fine-tuned classification performance by up to 1.5-6 percentage points"
    },
    {
        "review": {
            "id": "bbnyFiKjij",
            "forum": "NxxbLJaDJQ",
            "replyto": "NxxbLJaDJQ",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission3557/Reviewer_K9mr"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission3557/Reviewer_K9mr"
            ],
            "content": {
                "summary": {
                    "value": "The paper presents a simple approach to improve fine-tuned classification performance using Large Language Models (LLMs). The proposed method, P-32, adds one learnable scalar value to each layer in an LLM serving as the weight for depth-wise pooling. The resulting method enhances the classification accuracy across the GLUE classification tasks compared to the baseline method."
                },
                "soundness": {
                    "value": "1 poor"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "1 poor"
                },
                "strengths": {
                    "value": "* The proposed method is very simple to use in practice.\n* The proposed method demonstrates some improvements over the baseline method (however, the evaluation is largely problematic, see weaknesses below)."
                },
                "weaknesses": {
                    "value": "* Unclear and insufficient baseline comparisons: The paper only compares the proposed method to one baseline setting, and the baseline method setup is very unclear -- does it refer to full-parameter fine-tuning of the entire LLM? Also, the baselines should include parameter-efficient fine-tuning methods like LoRA, prefix-tuning, adapters, etc.\n* Inappropriate choice of evaluation tasks/settings: The current (autoregressive) LLMs, when used for classification tasks, are either via in-context learning or fine-tuned to generate the label tokens. However, this paper adds another classification head and fine-tunes it upon the hidden representations -- this is the standard practice for BERT-style models (which are not strictly \"LLMs\") but is no longer the common approach for fine-tuning autoregressive LLMs. In addition, the current LLMs are more suitable to be used in generation tasks than classification tasks (because BERT-style models are more parameter-efficient than LLMs for these tasks), and I expect the authors to evaluate the LLMs' performance more on generation tasks in order to substantiate the claim that their proposed approach is applicable to LLMs. Overall, the majority of the evaluation results (for non-BERT models) are not practically meaningful for LLM research."
                },
                "questions": {
                    "value": "Could you clarify the baseline method setup?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "3: reject, not good enough"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 1,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission3557/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698431446564,
            "cdate": 1698431446564,
            "tmdate": 1699636310303,
            "mdate": 1699636310303,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": []
    },
    {
        "review": {
            "id": "08piHUAjeu",
            "forum": "NxxbLJaDJQ",
            "replyto": "NxxbLJaDJQ",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission3557/Reviewer_NqDp"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission3557/Reviewer_NqDp"
            ],
            "content": {
                "summary": {
                    "value": "This paper presents an interesting way to improve the fine-tuning performance by only adding a weighting parameter for each transformer layer in PLMs. The basic idea is that different layers in PLMs encode different knowledge and different downstream tasks would require different levels of knowledge. Therefore, especially for deep PLMs, it is very likely to have the so-called \u201coverthinking\u201d problem. With the proposed P-32 approach, the authors show an improvement in the fine-tuning performance of GLUE for BERT, StableCode, and LLAMDA. The authors also performed comprehensive comparative studies to understand the learned weights for different layers and the sensitivity in terms of dataset size and dataset type. The comparison with average depth pooling also justifies the benefit of using learnable weights."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "1. Overall the paper is written clearly and easy to follow\n2. There are abundant ablation studies trying to understand and interpret the learned weights of P-32."
                },
                "weaknesses": {
                    "value": "1. The experimental setup does not seem to be very reasonable. For example, StableCode is trained on programming languages but the paper is using it on NLU tasks. \n2. The evaluation is only based on GLUE tasks, while the community typically would not use GLUE to evaluate models PLMs like LLAMA and StableCode. However, the improvement is only observed when finetuning these two models.\n3. The novelty is a bit limited. P-32 is a simple extension to depth-wise average pooling, which is already widely known in the community.\n4. While only 32 parameters are added, there is actually no computation and storage saved since we will still need to pay the full cost to compute the gradients of the whole model and save all the weights if we have multiple downstream tasks. This may limit the impact of this work."
                },
                "questions": {
                    "value": "1. By comparing Table 2 and Table 4, we can see that P-32 cannot achieve similar performance compared with just using the first several layers of LLAMA on some datasets, e.g. for RTE. However, since P-32 learns weights for each layer, it should easily learn a weight vector that assigns all layers after 20 to be zero. But P-32 underperforms the first 20 layers in a few cases. This seems to cast some doubts on the effectiveness of P-32.\n2. Is there any specific reason or justification for selecting these LLMs? If it is claimed that the network depth is a key factor regarding whether P-32 would be effective, I would at least expect BERT-large to be included in experiments, which contains 24 layers and is more reasonable to compare with BERT-base. Comparing BERT-base and LLAMA is not very convincing because there are a lot more differences between the two PLMs."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "3: reject, not good enough"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission3557/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission3557/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission3557/Reviewer_NqDp"
                    ]
                }
            },
            "number": 2,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission3557/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698620323948,
            "cdate": 1698620323948,
            "tmdate": 1699636310230,
            "mdate": 1699636310230,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": []
    },
    {
        "review": {
            "id": "AnXGdLwmje",
            "forum": "NxxbLJaDJQ",
            "replyto": "NxxbLJaDJQ",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission3557/Reviewer_XMXP"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission3557/Reviewer_XMXP"
            ],
            "content": {
                "summary": {
                    "value": "This paper proposes a method to fuse the representations of each transformer block via weighted pooling to obtain the sentence representation, which alleviates the overthinking problem of deep language models. For the Llama2-7b model, adding only 32 parameters can significantly improve its performance on various natural language classification tasks. Moreover, the experimental results demonstrate the efficacy of the proposed method, and an ablation study confirms the superiority of the weighted pooling over the simple average pooling."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "1. Adapting public large language models such as Llama2 to domain-specific tasks is important for enhancing their performance. Fine-tuning is often essential to achieve good results. This paper proposes a simple method to mitigate the overthinking problem during fine-tuning. The empirical results show that the proposed weighted pooling method can alleviate this phenomenon, thus improving the performance.\n\n2. Extensive analysis and ablation experiments confirm the existence of the overthinking issue and validate the efficacy of the proposed method. The correlation analysis of multiple dimensions also offers useful insights into the proposed method.\n\n3. The method is straightforward and technically sound."
                },
                "weaknesses": {
                    "value": "There are some concerns are not addressed in the paper.\n\n1. From the results in Table 2, the Llama-2-13B model does not benefit more from the weighted pooling than the Llama-2-7B model. The paper does not explain this reason well. Intuitively, the 13B model is deeper than the 7B model, and it should have a larger performance improvement.\n\n2. It seems the proposed method can also enhance the performance of LLMs on generation tasks, which may also suffer from the overthinking issue. However, the paper lacks such analysis.\n\n3. Although the average pooling strategy can improve the performance, the results in Table 4 show that it cannot learn the optimal layers. For example, the best performance for RTE is 62.82 when tuning the first 20 layers, but it drops to 57.04 when using weighted pooling. This indicates that there is still room for improvement for the weighted pooling method."
                },
                "questions": {
                    "value": "1. How does the proposed method affect the performance of generation tasks?\n\n2. When fine-tuning the LLMs with a parameter-efficient method like LoRA, does the proposed method still provide benefits?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission3557/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission3557/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission3557/Reviewer_XMXP"
                    ]
                }
            },
            "number": 3,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission3557/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698832973669,
            "cdate": 1698832973669,
            "tmdate": 1699636310038,
            "mdate": 1699636310038,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": []
    },
    {
        "review": {
            "id": "estGVhZlGW",
            "forum": "NxxbLJaDJQ",
            "replyto": "NxxbLJaDJQ",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission3557/Reviewer_Th33"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission3557/Reviewer_Th33"
            ],
            "content": {
                "summary": {
                    "value": "This paper proposes P-32, an architectural augmentation to improve classification performance by fully utilizing the hierarchical information captured by the pre-trained Large Language Model (LLM) that is - (i) able to select and retain task-relevant information\ncaptured at different depths in the LLM, (ii) improves performance across a plethora of different model sizes and in tandem with popular fine-tuning techniques, and (iii) specifically and successfully addresses the problem of overthinking. Towards this, authors have leveraged weighted pooling over the average pooling and fused the pooled representation, encapsulating features from various depths \nto the model through the standard classification head. The proposed approach shows an improvement over GLUE for BERT, StableCode, and LLAMA. Authors have also done an ablation study that validates the effectiveness of weighted pooling."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "1 poor"
                },
                "strengths": {
                    "value": "1. The paper is easy to follow.\n2. Improvement in performance with up to 6 percentage points elevation observed in one of the tested LLMs.\n3. The proposed method is effective under conditions of data scarcity again, which seems a real-life practical scenario in many cases.\n4. The correlation analysis study offers valuable insights."
                },
                "weaknesses": {
                    "value": "1. Table 2 shows that LLAMA-2-13B (deeper model) performs poorer than LLAMA-2-7B. A proper reasoning is missing behind this \n2. The LLM trained over programming languages (StableCode) is being used for NLU tasks.\n3. The study must have considered some PaLM: Scaling Language Modeling with Pathways (Chowdhery et al.), which is trained on corpus with a wide range of natural language use cases.\n4. The study should validate the performance of P-32 on generation tasks."
                },
                "questions": {
                    "value": "1. Can we consider BERT as LLM today?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "3: reject, not good enough"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission3557/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission3557/Reviewer_Th33",
                        "ICLR.cc/2024/Conference/Submission3557/Senior_Area_Chairs"
                    ]
                }
            },
            "number": 4,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission3557/-/Official_Review"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1699640703606,
            "cdate": 1699640703606,
            "tmdate": 1699640763812,
            "mdate": 1699640763812,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": []
    }
]