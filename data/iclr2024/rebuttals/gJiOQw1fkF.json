[
    {
        "title": "Enhanced Model-agnostic Training of Deep Tabular Generation Models"
    },
    {
        "review": {
            "id": "iofVV2iUs6",
            "forum": "gJiOQw1fkF",
            "replyto": "gJiOQw1fkF",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission4767/Reviewer_wKre"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission4767/Reviewer_wKre"
            ],
            "content": {
                "summary": {
                    "value": "This paper presents a novel method  \u2014 GADGET \u2014 to improve the quality of tabular data synthesizers. The key idea is to learn a GMM over the records so as to produce K datasets whose distributions are easier to learn. One can then train any tabular synthesizer on the simpler datasets, generate data from the K trained synthesizers, and pick the generated data based on the assignment from the GMM. The paper shows GADGET improves synthetic data quality and synthesizer runtime."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "- The idea of dividing the learning problem into simpler learning problems for tabular synthesis via a GMM is simple, effective, and a generalization that can be applied to existing methods.\n- The proposed methods improve data quality and make the training simpler and faster.\n- The paper is easy to read, and the Appendices contain information and data that answer almost all my questions."
                },
                "weaknesses": {
                    "value": "- An important component of the GMM is the number of mixtures K: after reading the paper, I am not super clear on the effect of different K."
                },
                "questions": {
                    "value": "Section 2:\n- Figure 1: t=0 is not shown, would be good to show the original (the target distribution).\n- Figure 2 caption: \u201ceach axis means time t.\u201d I don\u2019t quite understand why there are two time axes. Isn\u2019t a comparison between the original distribution (t=0) and the learning-in-progress distributions (t > 0) enough? Also, does top middle panel show that learning made things worse?\n- I would expect the Concrete example to be divided into K=5 instead of K=2. \n\nSection 4:\n- Is discrete/categorical variables simply treated as numerical variables in the computation of the covariance matrix of the GMM?\n- I don\u2019t quite understand the rationale and use of Proposition 1. Of what quantity is N(0,I) the prior? According to the SPL schedule, the weighting based on p_k becomes non-normal pretty quickly, so I am not sure what distance from the prior to the k-the Normal captures. Lastly, is the Wasserstein distance used anywhere?\n\nSection 5:\n- Why not use GADGET for all the baseline methods? Would be good to know how GADGET improves existing methods in general.\n- Is FFJORD-GADGET the same as RNODE-GADGET?\n- The R2 for Absenteeism seems very low despite the nearly 10x improvement from GADGET. Does this have to do with the small data size and the larger number of discrete columns?\n- Instead of showing particular examples of distribution match in Figure 5, it might be worth it to just compute resemblance metrics for all the columns (across all the datasets) to quantify the similarity between the real and fake column distributions.\n\nSection 6:\n- It is quite surprising that K-means would be better than GMM at all. I am not sure if the distance- vs distribution-based dividing is a satisfying reason. It feels like the GMM should be better because every record has a partial membership in each Gaussian component, whereas this is not the case for K-means. In other words, the GMM is like a probabilistic generalization of k-means. Do the authors have any comments on that?\n- There seems to be an optimal K. Table 1 shows that K=1 is not as good as K>1 for sample diversity and other measures. Then the paper states that large K hurts sample diversity because of overfitting. Since K is crucial to the whole idea of the decomposition, I feel the authors could do a more thorough investigation on K. Currently, it\u2019s just a search within the set K={2,3,5}. It might be good to search through a larger range of K, including K=1. I am curious about questions such as: (1) does the optimal K correlate with dataset size? (2) does larger K always improve sampling quality and decrease diversity?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission4767/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission4767/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission4767/Reviewer_wKre"
                    ]
                }
            },
            "number": 1,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission4767/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698689099467,
            "cdate": 1698689099467,
            "tmdate": 1699636459155,
            "mdate": 1699636459155,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": []
    },
    {
        "review": {
            "id": "HDlRQ11xrt",
            "forum": "gJiOQw1fkF",
            "replyto": "gJiOQw1fkF",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission4767/Reviewer_gU1v"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission4767/Reviewer_gU1v"
            ],
            "content": {
                "summary": {
                    "value": "The authors consider the problem of generative modeling of tabular data, presenting their method GADGET. This method first decomposes the distribution using a Gaussian Mixture Model to then train a generative model per mixture component."
                },
                "soundness": {
                    "value": "1 poor"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "1 poor"
                },
                "strengths": {
                    "value": "The reviewer does not appreciate any relevant point."
                },
                "weaknesses": {
                    "value": "The idea of structuring tabular data into different Gaussian components follows the right direction, but it is certainly not novel. As a reference, see the paper by Ma et al. 2020: \"VAEM: a Deep Generative Model for Heterogeneous Mixed Type Data,\" which should be included in the experimental settings.\n\nThe paper does not read well and lacks soundness in referring to and evaluating the different features of the proposed method. For instance, in section 2, the authors merely use a single example to argue that decomposing into K Gaussians is better. In Section 4 I do not see where exactly the method is explained (just in Figure 3?), and it contains definitions that do not define anything! Check for instance Definition 1.\n\nEmpirical results are not conclusive, only one database is included in Table 2. Also, how do you extend this to tabular data containing different data types? how do you tackle missing data?"
                },
                "questions": {
                    "value": "Already included in the previous subsection."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "1: strong reject"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 2,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission4767/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698706953425,
            "cdate": 1698706953425,
            "tmdate": 1699636459061,
            "mdate": 1699636459061,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": []
    },
    {
        "review": {
            "id": "3PavGZ63bJ",
            "forum": "gJiOQw1fkF",
            "replyto": "gJiOQw1fkF",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission4767/Reviewer_hPk2"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission4767/Reviewer_hPk2"
            ],
            "content": {
                "summary": {
                    "value": "This paper proposes a new approach to generative modelling of tabular data entitled `GADGET`. This method is based on Gaussianization: first the data is decomposed into a mixture of Gaussians, and then each component of the mixture receives its own generative model. For training each component generative model, the authors propose to use \"self-paced learning\" that weighs the loss associated to each datapoint by its likelihood of being in that particular mixture component. `GADGET` can be used to augment any generative technique for tabular data, turning the overall modelling problem in $K$ sub-problems which are each ostensibly much easier than the original modelling problem. Various experiments testing the effectiveness of `GADGET` on downstream tasks are performed, including some interesting ablations."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "1 poor"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "I'll list some strengths below in a list so that they can be referenced later as needed. The list is not ordered by importance.\n\n1. Tabular data has generally been underserved by the generative modelling community, despite being the most common type of data observed \"in the wild\". I appreciate research in this topic overall as I believe it to be an important problem. \n2. The use of self-paced learning is quite interesting. I am not very familiar with the topic but it appears that this could perhaps be useful in other domains.\n3. The motivation that we want things to be easier Gaussian sub-problems is quite clear to me. The targeted experiments in Section 2 supporting these claims are reasonably convincing.\n4. Figure 3 is quite helpful.\n5. I found the variety of experiments to be quite cool, especially the ablation in Section 5.3.1 that compared your approach to a related decomposition using K-means clustering."
                },
                "weaknesses": {
                    "value": "Next I'll list some weaknesses. Altogether, I have found that the weaknesses outweighed the strengths. I'll elaborate below (again not necessarily ordered by importance):\n\n1. There is a reason that tabular data has been underserved by the generative modelling community: it is typically hard to do. Several have argued that this is because you cannot easily anticipate the inductive biases of tabular data, unlike say images or natural language, and that successful approaches to -- and architectures for -- discriminative tabular data tasks are not easily ported into the generative domain. A lack of discussion on these points is a major weakness of the paper: it makes it hard to believe that the techniques used in `GADGET` will generalize to a wider range of tabular datasets or work particularly well in the wild, including on higher-dimensional data.\n    - Further to this point, it may be worth discussing why this technique has not been used for image-based or language-based modelling, as there seems to be no reason why it wouldn't also apply there.\n2. On this same line, I think other important discussions / references are missing:\n    - It was recently noted that several advances in tabular data generation are often outperformed by SMOTE (Synthetic Minority Over-sampling Technique), which is a simple interpolation-based sampler for tabular data generation. As such I believe that all generative models for tabular data should compare against SMOTE. \n    - If Score-Based Generative models are being used, it would make sense to compare against TabDDPM, as it is the most recent and performant SGM-based generative method for tabular data.\n    - It also took me a while to realize the deep link between the Gaussianization piece and score-based modelling, which itself uses Gaussian distributions throughout the modelling process and conceivably works better on Gaussianized data. It is perhaps possible to reframe the paper through this lens, as it may be able to answer some questions about why we would expect the method to perform well.\n    - Previously, there have been attempts at incorporating Gaussian mixtures into generative modelling. For example, masked autoregressive flows considered using a Gaussian mixture for the latent space distribution to achieve improved expressiveness. However, discussions related to approaches using Gaussian mixtures in generative modelling are sorely missing from this work.\n    - The recently-proposed \"union of manifolds hypothesis\" also appears relevant here.\n3. Another weakness of the related work is that the related work is simply presented, but not at all analyzed. I understand there are space constraints but there are other parts of the paper that can be arguably trimmed down or streamlined to accommodate some improved analysis here.\n4. I have several thoughts on the clarity and presentation of the paper, which overall make the paper lack polish. The impression I get from reading the paper is that the work was hastily put-together, and that not enough time was taken to produce quality writing. I'll list my thoughts along these lines below:\n    - There are a decently high number of typos throughout the manuscript.\n    - The exposition at the end of page 3 feels not only unnecessary, but is also quite confusing. The first paragraph of 3.1 should have been sufficient if you were short on space. The discussion may also have been streamlined by presenting through the lens of conjugate priors.\n    -  Starting on Page 6, the discussion in Section 4.2 becomes incredibly confusing. I don't believe $v_{k, scaled}$ was actually introduced anywhere yet was presented in (7). Then, the paragraph immediately following is almost entirely sentences which are unclear. Figure 4 is also not very helpful. This section needs to be overhauled.\n    - In Section 5.2, the \"Generative Learning Trilemma\" is apparently a focal point of the experimental section, but is not actually introduced. It is awkward to have such a fundamental part of the exposition be completely deferred to the cited reference.\n    - RNODE and FFJORD appear to be used interchangeably, between 5.2 and 5.3.\n5. **There is no limitations section**. This suggests a lack of perspective on how this work sits within the overall literature.\n6. It would have been nice to see more _quantitative_ discussions about training time and memory usage in the experimental section, considering you are training and storing $K$ times as many models. It is briefly mentioned that you have fewer learnable parameters, but it would be nice to quantify that.\n7. Figure 5 appears to be cherry-picked.\n8. This paper is all about making Gaussianized sub-problems for easier generative modelling of tabular data. However, the quality of the Gaussianization was never assessed. It would be nice to see some metric for how well the mixture itself models the data, and relate that to the overall quality of generative model based on downstream metrics.\n9. An ablation on self-paced learning would be interesting here."
                },
                "questions": {
                    "value": "1. In Section 2 it is stated that the lower row has a \"vector field becomes significantly more intricate than the upper row as $t$ approaches $0$\", which is then used to motivate that Gaussianization is a good thing to do. However, as per weakness #8 above, how good is the Gaussianization practically? \n2. In Figure 2, why doesn't the diagonal -- especially the $t = 0, 0$ element -- always at maximum covariance?\n3. Again with Figure 2, how do we surmise that high similarity of the vector field over time corresponds to higher representation power or better modelling performance?\n4. Does Proposition 1 only apply when the data is _actually_ Gaussian? Not just approximately Gaussian? And what is the actual utility of Proposition 1?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "3: reject, not good enough"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 3,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission4767/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698713125914,
            "cdate": 1698713125914,
            "tmdate": 1699636458979,
            "mdate": 1699636458979,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": []
    },
    {
        "review": {
            "id": "ndarOIhRsC",
            "forum": "gJiOQw1fkF",
            "replyto": "gJiOQw1fkF",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission4767/Reviewer_PxXe"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission4767/Reviewer_PxXe"
            ],
            "content": {
                "summary": {
                    "value": "The paper proposes a new training method called GADGET (Gaussian Decomposition-based Generation of Tabular Data) which can be applied to any generative model for tabular data. The method decomposes the complex distribution of tabular data into a mixture of $K$ Gaussian distributions and then trains one model for each decomposed distribution.  In addition to this, the authors propose a self-paced learning algorithm, whose goal is to focus the training on those data records that have high surrogate probability density."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "The idea seems nice and the presented experimental results are positive."
                },
                "weaknesses": {
                    "value": "My main worry about the paper is that it seems to have been heavily inspired by the works that presented CTGAN and Stasy, however, it never mentions (nor compares itself to) the shared features of GADGET and the above models. For example, for CTGAN the authors wrote: \"CTGAN approximates the discrete variables to the continuous spaces by using Gumbel-softmax\". While this is true, one could argue that one of the major contributions of CTGAN is the proposal of modeling the distribution of each continuous feature with a variational Gaussian mixture model. This intuition seems to have heavily influenced this work, however, this is never mentioned. In the same way, the authors of StaSy also propose a self-paced learning algorithm. However, the one presented in this paper is never directly compared to the StaSy one. \nCould you please provide some insights on the differences?\n\nAlso, could the authors explain why they used 10,000 in the denominator to define $\\mathbf{v}_k$? Does the number of epochs need to be exactly 10,000? Why?\n\nHow many modes were set for CTGAN? If I remember correctly the default number is 10. Would it make sense to train it why more than 1?\n\nI think an ablation study to check what is the impact of the self-paced learning would be really useful to evaluate the impact of each of the two contributions.\n\nSince GADGET can be applied to any model, it is more interesting to check what is its impact on each model rather than comparing SGM-GADGET with all the standard models (e.g. MedGAN). As SGM on its own does already better than MedGAN, what sense does it make to compare SGM-GADGET with it? It would be much more interesting to compare MedGAN vs MedGAN-GADGET.\n\nMinor comments: \n- introduce the abbreviation SGM before using it\n- page 4: \"It\u00f4\"?\n- page 5: $\\mathcal{T} k$ should be $\\mathcal{T}_k$\n- page 7: why does SGM-GADGET have the best performance among CTGAN-GADGET, FFJORD-GADGET and SGM-GADGET? What is FFJORD-GADGET?"
                },
                "questions": {
                    "value": "See above"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 4,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission4767/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698757949304,
            "cdate": 1698757949304,
            "tmdate": 1699636458903,
            "mdate": 1699636458903,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": []
    }
]