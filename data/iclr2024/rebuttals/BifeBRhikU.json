[
    {
        "title": "PB-LLM: Partially Binarized Large Language Models"
    },
    {
        "review": {
            "id": "NqTeCSfDES",
            "forum": "BifeBRhikU",
            "replyto": "BifeBRhikU",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission3635/Reviewer_JdJY"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission3635/Reviewer_JdJY"
            ],
            "content": {
                "summary": {
                    "value": "This paper introduces PB-LLM, an extreme quantization method that partially binarizes model parameters based on their relevance to linguistic reasoning tasks. PB-LLM selectively identifies and designates a small fraction of salient weights for binarization, assigning them to higher-bit storage, and essentially implementing partial binarization. PB-LLM is extended to recover quantized LMMs' capabilities through post-training quantization (PTQ) and quantization-aware training (QAT). In PTQ, the Hessian matrix guides the reconstruction of binarized weights to restore reasoning capacity at low bits. In QAT, we freeze salient weights during training, derive optimal scaling factors to minimize quantization errors and propose a scaling mechanism for enhanced residual binarized weights. The result shows that PB-LLM achieves competitive results without losing performance gain."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "+ Presents a practical approach that analytically identifies non-salient weights and applies binarization selectively for large models.\n+ Achieves LLM binarization without sacrificing performance gains."
                },
                "weaknesses": {
                    "value": "- The proposed approach section is comprehensive, but its complexity makes it challenging to navigate and comprehend throughout the entire section.\n- The analysis of evaluation is limited to a single task. It would be valuable to explore the potential limitations of PB-LLM in achieving comparable performance across various tasks."
                },
                "questions": {
                    "value": "1. The readability of the paper can be improved by including a flowchart or block diagram of the proposed method by illustrating different stages of transforming a PB-LLM model. \n2. The paper reports primarily the accuracy to evaluate the proposed approach. The addition of the final model size after partial binarization can further solidify the claim."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "details_of_ethics_concerns": {
                    "value": "n/a"
                },
                "rating": {
                    "value": "8: accept, good paper"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission3635/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission3635/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission3635/Reviewer_JdJY"
                    ]
                }
            },
            "number": 1,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission3635/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698796285995,
            "cdate": 1698796285995,
            "tmdate": 1700676434962,
            "mdate": 1700676434962,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "FmuXYyvwWX",
                "forum": "BifeBRhikU",
                "replyto": "NqTeCSfDES",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3635/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3635/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Response to Reviewer JdJY"
                    },
                    "comment": {
                        "value": "## To Weakness 1 & Question 1: Enhancing the Clarity\n\n> Weakness 1: The proposed approach section is comprehensive, but its complexity makes it challenging to navigate and comprehend throughout the entire section. Question 1: The readability of the paper can be improved by including a flowchart or block diagram of the proposed method by illustrating different stages of transforming a PB-LLM model.\n\nThank you for your valuable feedback.\n\nTo enhance clarity, we have succinctly summarized our PB-LLM approach and included a conceptual illustration in Fig. 1 (a). PB-LLM begins with a pre-trained, full-precision LLM and partially binarizes the weight matrix while preserving salient weights in higher bits. The process is designed to recuperate the quantized LLM's reasoning capacity, employing both post-training quantization (PTQ) and quantization-aware training (QAT) frameworks. For PTQ recovery (GPTQ-PB), we reconstruct the partially-binarized matrix, guided by Hessian metrics. For QAT recovery (PB-LLM), salient weights are frozen during binarization to streamline the training process.\n\nAdditionally, we have incorporated your suggestion by adding a detailed flowchart in the Appendix. This flowchart delineates the stages of transforming a PB-LLM model under the frameworks of PTQ and QAT, intending to improve readability and comprehension.   The revisions are highlighted in red for easy identification and reference. We integrate this diagram into the main body of the paper for the camera-ready version.\n\n## To Weakness 2: More Evaluation on MMLU 57  Tasks\n\n> Weakness 2: The analysis of evaluation is limited to a single task. It would be valuable to explore the potential limitations of PB-LLM in achieving comparable performance across various tasks.\n\nThank you for your insightful suggestion. To address your concern regarding the evaluation's scope, we extended our analysis to include the few-shot MMLU benchmarks. Specifically, we applied PB-LLM to the LLaMA-7B model, preserving 30% of salient weights, which is analogous to a 4-bit quantization as per LLM-AQT. We then evaluated this quantized LLaMA-7B across 57 MMLU tasks.\n\nBelow are the comparative results of our method against established post-training quantization (PTQ) and quantization-aware training (QAT) methods, such as SmoothQuant and LLM-QAT:\n\n| Method    | Humanities | STEM | Social Sciences | Other | Average |    \n|-----------|----------|-----------|----------------|---------|---------|\n| Full-precision LLaMA-7B   | 33.5 | 30.6 |  38.4 | 39.1 | 35.2 |\n| SmoothQuant (PTQ)  | 26.9 | 28.6 | 29.6 | 32.0 | 29.0 |\n| LLM-QAT (QAT)  | 30.3 | 28.1 | 30.3 | 34.5 | 30.8 |\n| PB-LLM (30%)  | 30.5 | 29.0 | 30.2 | 34.6 | 31.2 |\n\n\nIt is important to note that we have not conducted exhaustive hyper-parameter tuning in this new setting. Nonetheless, these results are indicative of our method\u2019s generalization ability across various tasks, even without fine-tuned hyper-parameters. Meanwhile, PB-LLM is training efficient (refer to Response to Reviewer 92rD)\n\n## To Question 2: Model Storage Saving\n\n> Question 2: The addition of the final model size after partial binarization can further solidify the claim.\n\nWe appreciate your suggestion to detail the model size savings achieved through our method. Our PB-LLM approach, which involves selective binarization of the LLMs' weight matrix, indeed leads to significant storage savings. This is achieved by retaining a portion of the weights in high bits to bolster linguistic capacity, without substantially increasing the overall model size.\n\nThe overall bit number, $N_{bit}$, of our model is calculated using the formula: $N_{bit} \\leq 1 \\times r_{binary} + N_{salient-bit} \\times (1 - r_{binary}) + 1$. In this formula, $r_{binary}$ represents the ratio of weights that are binarized, and $N_{salient-bit}$ signifies the bit count allocated for salient weights (e.g., 8 bits), with an additional bit dedicated to a bitmap index mechanism. As an illustrative example, if 10% of the weights are designated as salient and stored in 8 bits, the overall bit requirement would be at most 1$\\times$ 90% + 8$\\times$ 10% + 1= 2.7 bits. This implies that the storage requirement for our quantized model is just 16.8% of what would be needed for a full 16-bit model (2.7/16 = 16.8%)."
                    }
                },
                "number": 1,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3635/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700371535727,
                "cdate": 1700371535727,
                "tmdate": 1700453488069,
                "mdate": 1700453488069,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "Wt8KHKgKSa",
                "forum": "BifeBRhikU",
                "replyto": "u3njoAfRet",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3635/Reviewer_JdJY"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3635/Reviewer_JdJY"
                ],
                "content": {
                    "comment": {
                        "value": "The authors have addressed all the issues that I raised, and I'd be happy to increase my rating."
                    }
                },
                "number": 24,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3635/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700676409707,
                "cdate": 1700676409707,
                "tmdate": 1700676409707,
                "mdate": 1700676409707,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "djmyVVuIaL",
            "forum": "BifeBRhikU",
            "replyto": "BifeBRhikU",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission3635/Reviewer_9nFP"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission3635/Reviewer_9nFP"
            ],
            "content": {
                "summary": {
                    "value": "This paper proposes a Partially-Binarized LLM (PB-LLM), which leverages a PB mechanism to binarize LLMs for more efficient GPU memory usage. The main motivation behind PB is the recognition that a fraction of 'salient weights' exists within the LLM weights, which are essential and restrict full binarization. PB-LLM preserves the precision of these salient weights while focusing on binarizing the non-salient weights. The paper also investigates the integration of PB-LLM with post-training quantization and quantization-aware training schemes and establishes a connection between PB-LLM and GPTQ. Experimental results are presented to demonstrate the effectiveness of PB-LLM."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "- The paper is well-written and well-motivated.\n- The proposed PB-LLM scheme is easy to follow and straightforward to understand.\n- Exploring to improve the memory and/or storage efficiency using quantization (and algorithmic approximation in general) of LLMs is a promising research direction."
                },
                "weaknesses": {
                    "value": "- Only Llama 7B is studied as the LLM for PB-LLM and all other baselines. Thus, it's not clear how the PB-LLM method performs on larger-scale models.\n- Only pre-trained base models are experimented with those models, however, are usually not deployed directly as applications. \n- The LLM quantization scheme is motivated using an angle of GPU memory efficiency. However, the actual GPU memory usage before and after binarization/quantization is not studied in this paper."
                },
                "questions": {
                    "value": "- How does PB-LLM's performance vary among various sizes of Llama models, e.g., 7B-65B?\n- How does PB-LLM perform for aligned/instruction fine-tuned models, e.g., Alpaca and/or Vicuna? To what extent will the binarization scheme affect the model's performance say on the Hugging Face leaderboard [1]?\n- What is the actual GPU memory saving look like for PB-LLM and all considered baselines?\n\n[1] https://huggingface.co/spaces/HuggingFaceH4/open_llm_leaderboard"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission3635/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission3635/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission3635/Reviewer_9nFP"
                    ]
                }
            },
            "number": 2,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission3635/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698983085677,
            "cdate": 1698983085677,
            "tmdate": 1700629212441,
            "mdate": 1700629212441,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "nk4BV0YUcR",
                "forum": "BifeBRhikU",
                "replyto": "djmyVVuIaL",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3635/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3635/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Responses to Reviewer 9nFP"
                    },
                    "comment": {
                        "value": "## To Weakness 1 & Question 1: Extensive Experiments on LLaMA-13B and LLaMA-30B.\n\n> Weakness 1: Only Llama 7B is studied as the LLM for PB-LLM and all other baselines. Thus, it's not clear how the PB-LLM method performs on larger-scale models. Question 1: How does PB-LLM's performance vary among various sizes of Llama models, e.g., 7B-65B?\n\nThank you for acknowledging the various aspects of our work and for your valuable recommendation. In response, we have extended our experimentation to include larger LLaMA models, specifically LLaMA-13B and LLaMA-30B, to gauge the scalability of our PB-LLM method. Unfortunately, due to computational resource constraints, we were unable to conduct experiments on the LLaMA-65B model, as our available resources \u2013 an 8 A6000s server \u2013 represent the upper limit for our academic lab's resources.\n\nBelow are the results showcasing PB-LLM's performance across these additional LLaMA model sizes:\n| Method    | BoolQ | PIQA |  HellaSwag | WinoGrande | ARC-E | ARC-C | OBQA | Avg |\n|-----|------|----------|-----|------|--------|--------|---------|---------|\n| LLaMA-13B Full-precision | 78.1 | 80.0 | 79.2 | 73.6 | 74.5 | 52.6 | 55.0 | 70.5| \n| RTN     | 76.8 | 79.1 | 76.3 | 70.5 | 72.6 | 49.8 | 56.6 | 68.8|\n| LLM-QAT | 77.7 | 79.4 | 77.7 | 71.5 | 72.8 | 52.0 | 53.8 | 69.2|\n| 30% PB-LLM | 78.9 | 79.9 | 78.5 | 72.0 | 72.9 | 51.3 | 54.1| 69.7|\n\n| Method    | BoolQ | PIQA |  HellaSwag | WinoGrande | ARC-E | ARC-C | OBQA | Avg |\n|-----|------|----------|-----|------|--------|--------|---------|---------|\n| LLaMA-30B Full-precision | 83.2 | 82.1 |82.9 | 75.6 | 80 | 58 | 59.3 | 74.4| \n| RTN     | 80.8 | 80.1 | 81.6 | 75.8 | 79.3 | 55.8 | 57.2 | 72.9|\n| LLM-QAT | 81.8 | 81.0 |81.8 | 75.1 | 79.4 | 56.8 | 54.9 | 72.9|\n| 30% PB-LLM | 82.3 | 79.9 | 81.8 | 76.5 | 79.8 | 56.4 | 56.0 | 73.3|\n\nIt is important to note that exhaustive hyper-parameter tuning has not been conducted in this expanded setting. However, these results, even without finely tuned hyper-parameters, indicate the generalization capability of our method across various model scales. In the meantime, our method is more training efficient (refer to Responses to Reviewer 92rD).\n\n## To Weakness 2 & Question 2: Extensive Experiments on Vicuna-7B.\n\n> Weakness 1: Only pre-trained base models are experimented with those models, however, are usually not deployed directly as applications. Question 1: Only pre-trained base models are experimented with those models, however, are usually not deployed directly as applications.\n\nThanks for your suggestion. We are testing the performance of PB-LLM on Vicuna-7B (we use this checkpoint from huggingface: https://huggingface.co/AlekseyKorshuk/vicuna-7b). The results will come out in 8 hours.\n***\n**Nov/19/2023 Results Update:**\n\nWe acknowledge the importance of validating our method on models that extend beyond pre-trained base models, as these are more representative of real-world applications. To address this, we have conducted additional experiments using Vicuna-7B. The results of these experiments are as follows:\n\n| Method    | Humanities | STEM | Social Sciences | Other | Average |\n|-----------|----------|-----------|----------------|---------|---------|\n| Full-precision Vicuna-7B   | 47.6 | 40.4 | 55.9 | 54.5 | 49.6 |\n| LLM-QAT (QAT)  | 40.1 | 31.2 | 46.2 | 47.8 | 41.4|\n| PB-LLM 30% Salient Weight  | 41.5 | 34.1 | 50.7 | 51.1 | 45.6|\n\nBased on our **codebase provided in the supplementary materials**, we applied PB-LLM to quantize Vicuna-7B. The results, showcased above, are from the MMLU benchmarks. For comparison, we also quantized Vicuna-7B using LLM-QAT, limiting the training to 10K iterations, identical to the training duration for our PB-LLM method, due to resource constraints.\n\nThese results demonstrate that even when applied to fine-tuned models like Vicuna, our PB-LLM method maintains its efficacy, showcasing superior performance compared to LLM-QAT under similar training conditions. This illustrates the versatility and robustness of our approach, extending its applicability to a broader range of LLM deployment scenarios."
                    }
                },
                "number": 3,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3635/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700377755559,
                "cdate": 1700377755559,
                "tmdate": 1700450915629,
                "mdate": 1700450915629,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "R2SRbJkvvp",
                "forum": "BifeBRhikU",
                "replyto": "djmyVVuIaL",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3635/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3635/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Responses to Reviewer 9nFP (II)"
                    },
                    "comment": {
                        "value": "## To Weakness 3 & Question 3: actual GPU memory saving.\n\n>  To Weakness 3: The LLM quantization scheme is motivated using an angle of GPU memory efficiency. However, the actual GPU memory usage before and after binarization/quantization is not studied in this paper.  Question 3: What is the actual GPU memory saving look like for PB-LLM and all considered baselines?\n\nWe acknowledge the importance of understanding the actual GPU memory usage before and after binarization/quantization. Unfortunately, our team lacks dedicated GPU implementation experts, which hindered us from providing a comprehensive analysis in the main body of the paper. Realizing real GPU implementation for algorithms often involves a large team. \nTo address your concern, we conducted additional experiments focusing on GPU memory savings for PB-LLM. We utilized the CSR (Compressed Sparse Row) sparse format for 8-bit quantized salient weights.The results are summarized below, comparing the memory occupancy of salient weights after various levels of quantization:\n\n| Configuration | PB-LLM 10% | PB-LLM 20%| PB-LLM 30% | 2bit Quant| 4bit Quant|    \n|-----------|----------|-----------|----------------|---------|---------|\n| Memory Occupancy Comparing with FP16   | 16.25% | 26.25% |  36.25% | 12.50% | 25.00% |\n\n\nNotably, PB-LLM with 10% salient weights exhibits memory overhead similar to 2-bit quantization, while PB-LLM with 20% salient weights shows memory overhead comparable to 4-bit quantization. Note that some advanced salient location-saving techniques, such as lead zero, can further decrease the ratio. We plan to incorporate these results into the camera-ready version of the paper. Additionally, we recognize the potential for further optimization in sparse storage. Future work may explore enhancements such as leveraging col index and row index stored in the CSR format of salient weights for binarized quantization or employing semi-structured sparse optimization techniques."
                    }
                },
                "number": 9,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3635/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700484328111,
                "cdate": 1700484328111,
                "tmdate": 1700608527693,
                "mdate": 1700608527693,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "KmlDp49Uea",
                "forum": "BifeBRhikU",
                "replyto": "9hh1jWU9OX",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3635/Reviewer_9nFP"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3635/Reviewer_9nFP"
                ],
                "content": {
                    "title": {
                        "value": "Thanks for the rebuttal"
                    },
                    "comment": {
                        "value": "I thank the authors for carefully addressing all my concerns and for their hard work in adding such thorough experimental results.\n\nMy major concerns have been addressed, and I would like to increase my evaluation score from 5 to 6."
                    }
                },
                "number": 19,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3635/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700629198651,
                "cdate": 1700629198651,
                "tmdate": 1700629198651,
                "mdate": 1700629198651,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "0oBMzfPunQ",
            "forum": "BifeBRhikU",
            "replyto": "BifeBRhikU",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission3635/Reviewer_tXaS"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission3635/Reviewer_tXaS"
            ],
            "content": {
                "summary": {
                    "value": "This paper presents a methodology termed PB-LLM for the partially weight-only binary quantization for Large Language Models (LLMs). Particularly, it outlines the limitations encountered when applying previous BNN works to LLMs, while proposing new methods from Post Training Quantization (PTQ) and Quantization Aware Training (QAT) for LLM low-bit weight quantization. Within PTQ, the paper utilizes Hessian information to identify element-wise salient weights, upon which 8-bit quantization is applied to preserve reasoning capacity in a pre-trained LLM, while binary (1-bit) quantization is applied to the un-salient weights. After applying mixed-quantization, it employs GPTQ to un-salient weights for further optimization (termed as GPTQ-PB). In QAT, the paper applies QAT during the LLM fine-tuning stage, utilizing 1) optimal scaling factor and 2) salient weight freezing methodology to bring about an efficient yet higher-performing QAT methodology (termed as PB-LLM). The methodologies studied and proposed in this work provide insightful contributions to the field of LLM binarization, showcasing the potential for further advancements in LLM binarization."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "- The paper provides a well-structured presentation of the preliminaries of binary quantization to the introduction of the proposed method, which made it easy to follow.\n\n- Building on previous research such as AWQ and SparseGPT, this paper proposes a partial binarization technique through salient weight protection based on the hessian information and effectively demonstrates its efficacy in PTQ with ablation study (as shown in Table 1).\n\n- The paper showcases empirical improvements in QAT optimization (higher accuracy with fewer training steps than LLM-QAT) across the CSQA tasks."
                },
                "weaknesses": {
                    "value": "Major Concerns\n- Lack of novelty: The authors propose the optimal scaling factor as their primary contribution, but the core idea itself seems to have already been proposed in the previous work. For example, [R1] proposed an optimal ternary function (eq. (3) of [R1]), but it can be trivially reduced to the binary function when the threshold is zero; then the equation seems to be identical to the equation (8) and (9) proposed in this paper.\n\n[R1] Li te tal., Ternary Weight Networks\n\n\n- Lack of Evaluation Task: This paper evaluates the reasoning capability of LLM only through the accuracy of the CSQA task. In the CSQA task, tasks such as OBQA and ARC challenge were used for OPT-1.3B, where the FP performance did not reach even the random baseline (25%). It raises questions about the suitability of these tasks for demonstrating the effectiveness of fine-tuning, and, hence, the superiority of PB-LLM. To show the effects of fine-tuning more clearly, it would be advisable to carefully select reasoning tasks that are appropriate for the model capacity. Reporting performance not just on CSQA, but also on multi-task accuracy like MMLU would be also beneficial for highlighting PB-LLM's efficacy.\n\n- Inconsistent Salient Weight Methodology between PTQ and QAT: The absence of a consistent methodology for salient weight protection between PTQ and QAT is concerning. While the effectiveness of using Hessian criteria for identifying salient weights in PTQ is demonstrated through performance comparisons, the rationale for using magnitude criteria to identify salient weights in QAT seems to be missing. Understanding the disparity in the approach to salient weight protection across PTQ and QAT is crucial for a holistic appreciation of the proposed method.\n\n- Insufficient evidence on PB-LLM efficiency: To claim that PB-LLM is more efficient in terms of training iteration number compared to LLM-QAT, a more thorough comparison seems necessary. Specifically, it needs to be clear whether the LLM-QAT, being compared with PB-LLM, has been fine-tuned on the same dataset as PB-LLM. Detailed experimental setup information regarding the LLM-QAT is required. Moreover, verification is needed on whether the results through PB-LLM QAT have fully enhanced the reasoning capacity of the pre-trained model. Essentially, it appears that the reasoning accuracy of the target model (OPT-1.3B) obtained through FP fine-tuning should be presented as the upper bound in Figure 7. Additionally, there seems to be a lack of information in Table 2 regarding whether FP LLaMA-7B performance is pre-trained or fine-tuned.\n\n\nMinor Concerns\n- Typo: Sec 3.3 bianrize -> binarize\n- Consistent notation should be used in Sec 4.1 -> LLaMA, LLaMa -> LLaMA\n- There may be an incorrect reference link in Sec 4.1, \"showing its fast convergence property (refer to 3.2)\" Should it possibly be corrected to \"refer to 3.4?\"\n- There are spacing issues in the Figure 7 caption, \"LLMin\" should be \"LLM in\" and \"PM-LLMtriumphs\" should be \"PB-LLM triumphs\"."
                },
                "questions": {
                    "value": "1. What is the rationale behind utilizing a Hessian-based approach to identify salient weights in PTQ, while employing a magnitude-based approach to identify salient weights in QAT?\n\n2. Is there a specific reason why only the PB methodology and GPTQ were applied in PTQ? I am curious about the performance of AWQ-PB in comparison.\n\n3. Is there a plan to compare the task-specific fine-tuning in QAT with the 2-bit QAT-KD methodology (QuantGPT [R2], TSLD [R3])?\n\n4. The optimal scaling factor and salient weight freezing seem to primarily aim at reducing harsh quantization errors before QAT. Is there insight into how these methods improve the QAT training process as depicted in Figure 5?\n\n[R2] Tao et al, \" Compression of Generative Pre-trained Language Models via Quantization\" ACL 2022.  \n[R3] Kim et al, \"Token-scaled logit distillation for ternary weight generative language models\" NeurIPS 2023"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "5: You are absolutely certain about your assessment. You are very familiar with the related work and checked the math/other details carefully."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 3,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission3635/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1699214145307,
            "cdate": 1699214145307,
            "tmdate": 1699636319179,
            "mdate": 1699636319179,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "UcyQnjS7YV",
                "forum": "BifeBRhikU",
                "replyto": "0oBMzfPunQ",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3635/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3635/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Responses to Reviewer tXaS (I)"
                    },
                    "comment": {
                        "value": "## To Weakness 1: Novelty Clarification\n\n> Lack of novelty: The authors propose the optimal scaling factor as their primary contribution, but the core idea itself seems to have already been proposed in the previous work. For example, [R1] proposed an optimal ternary function (eq. (3) of [R1]), but it can be trivially reduced to the binary function when the threshold is zero; then the equation seems to be identical to the equation (8) and (9) proposed in this paper.\n[R1] Li te tal., Ternary Weight Networks\n\nWe appreciate the reviewer\u2019s insight and the opportunity to clarify the novelty and significance of our approach within the context of LLM compression.\nFirstly, we wish to emphasize that our paper does not claim undue novelty in the concept of optimal scaling factors, a concept initially popularized by XNOR-Net, which itself has a substantial citation record (a paper in 2016, over 5000 citation). Indeed, as indicated in Section 3.4.2 of our paper, we acknowledge this foundational work. Even Ternary Weight Networks, which you referenced, credits XNOR-Net for its parameter optimization strategy. Our citation of XNOR-Net is, therefore, appropriate and recognizes the original contribution of this seminal work. We believe that the application of the optimal scaling concept in the context of LLMs, as we have done, represents a novel and significant contribution, similar to how Ternary Weight Networks adapted these ideas to their framework.\n\nSecondly, to clarify, our novel contributions are as follows:\n\n-  Pioneering Network Binarization in LLM Quantization: We are the first to introduce and conduct a comprehensive exploration of network binarization specifically for LLM quantization, demonstrating its capability to achieve lower-bit compression.\n- Development of PB-LLM: We propose the Partially-Binarized LLM (PB-LLM), which incorporates a unique salient weights freezing mechanism and applies optimal scaling strategies to preserve the functionality of quantized models.\n- Exploring PTQ and QAT for Performance Recovery: Our work is the first application of post-training binarization in the context of PTQ and leverages QAT to efficiently train PB-LLM, showcasing both as practical and effective strategies for LLM compression.\n\nWe trust these points clarify the originality and value of our research, affirming its unique contribution to the field of LLM compression."
                    }
                },
                "number": 4,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3635/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700407654464,
                "cdate": 1700407654464,
                "tmdate": 1700407654464,
                "mdate": 1700407654464,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "BSR2llQVQy",
                "forum": "BifeBRhikU",
                "replyto": "0oBMzfPunQ",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3635/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3635/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Responses to Reviewer tXaS (II)"
                    },
                    "comment": {
                        "value": "## To Weakness 2: Extensive Evaluation on MMLU\n\n> Lack of Evaluation Task: This paper evaluates the reasoning capability of LLM only through the accuracy of the CSQA task. In the CSQA task, tasks such as OBQA and ARC challenge were used for OPT-1.3B, where the FP performance did not reach even the random baseline (25%). It raises questions about the suitability of these tasks for demonstrating the effectiveness of fine-tuning, and, hence, the superiority of PB-LLM. To show the effects of fine-tuning more clearly, it would be advisable to carefully select reasoning tasks that are appropriate for the model capacity. Reporting performance not just on CSQA, but also on multi-task accuracy like MMLU would be also beneficial for highlighting PB-LLM's efficacy.\n\nThank you for your valuable feedback. To clarify and address your concerns:\n\n**Choice of Model for Exploration Experiments:**\n\nThe primary reason for utilizing OPT-1.3B in our initial experiments was its accessibility and compatibility with our available GPU resources. Using a single A6000, we could efficiently test most modules in the method exploration phase. However, acknowledging the limitations of smaller models like OPT-1.3B, we have expanded our methodology to larger models such as LLaMA-7B post-exploration. During the rebuttal we have extended it to larger models, such as LLaMA-13B, LLaMA-30B and Vicuna-7B (refer to Response to 9nFP).\n\n**Extended Analysis with MMLU Benchmarks:**\n\nDuring the rebuttal phase, we broadened our analysis to include the few-shot MMLU benchmarks, applying PB-LLM to the LLaMA-7B model. This model, with 30% of its salient weights preserved (akin to 4-bit quantization as per LLM-AQT), was evaluated across 57 diverse MMLU tasks. This extensive evaluation provides a more robust understanding of PB-LLM's performance across a range of tasks:\n| Method    | Humanities | STEM | Social Sciences | Other | Average |\n|-----------|----------|-----------|----------------|---------|---------|\n| Full-precision LLaMA-7B   | 33.5 | 30.6 |  38.4 | 39.1 | 35.2 |\n| SmoothQuant (PTQ)  | 26.9 | 28.6 | 29.6 | 32.0 | 29.0 |\n| LLM-QAT (QAT)  | 30.3 | 28.1 | 30.3 | 34.5 | 30.8 |\n| PB-LLM   | 30.5 | 29.0 | 30.2 | 34.6 | 31.2 |\n\nIt's important to note that we have not conducted exhaustive hyper-parameter tuning in this new setting. Nevertheless, these results demonstrate our method\u2019s potential across various scales and tasks, even without fine-tuned hyper-parameters.\nAdditionally, as discussed in Sections 3.4 and 4.1 of our paper, our approach with PB-LLMs is more training efficient. We achieve performance recovery in PB-LLMs with only 10K iterations of fine-tuning, outperforming LLM-QAT, which requires a longer training period of 100K iterations. This efficiency is achieved with just 2 NV-link connected A6000s over approximately 2 days, compared to LLM-QAT's requirement of around 7-10 days with 8 A6000s. (refer to Response to 92rD).\n\nWe believe these points effectively illustrate the versatility and efficiency of PB-LLM, addressing your concerns regarding the suitability of evaluation tasks and demonstrating the superiority of our method."
                    }
                },
                "number": 5,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3635/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700407693608,
                "cdate": 1700407693608,
                "tmdate": 1700407825017,
                "mdate": 1700407825017,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "UhjwIjYycn",
                "forum": "BifeBRhikU",
                "replyto": "0oBMzfPunQ",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3635/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3635/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Responses to Reviewer tXaS (III)"
                    },
                    "comment": {
                        "value": "## To Weakness 3 and Question 1: More Experiments on Salient Weight Selection\n\n> Inconsistent Salient Weight Methodology between PTQ and QAT: The absence of a consistent methodology for salient weight protection between PTQ and QAT is concerning. While the effectiveness of using Hessian criteria for identifying salient weights in PTQ is demonstrated through performance comparisons, the rationale for using magnitude criteria to identify salient weights in QAT seems to be missing. Understanding the disparity in the approach to salient weight protection across PTQ and QAT is crucial for a holistic appreciation of the proposed method.\n\nWe appreciate the opportunity to address the concerns raised regarding the inconsistent methodology for salient weight protection between PTQ and QAT.\nIn our experimental analysis, we employed the OPT-1.3b network and conducted PB-LLM (QAT) quantization under both Hessian and Magnitude criteria, targeting a 10% salient weight. The performance results, measured in perplexity (PPL), were as follows:\n\nHessian Criteria:\nwikitext2: 37.07\nptb: 47.07\nc4: 38.76\n\nMagnitude Criteria:\nwikitext2: 37.50\nptb: 44.42\nc4: 38.64\n\n\nWe observed that the PPL values were comparable between the two criteria. However, it's worth noting that the Hessian criteria involve an additional calibration step (collecting calibration data to compute the Hessian), adding complexity to the process. In contrast, the Magnitude criteria offer a simpler approach, eliminating the need for this extra calibration step.\nGiven the similar PPL results and the desire to streamline the quantization process in QAT, we opted for the Magnitude Metric to identify salient weights during QAT. This decision was motivated by the goal of simplifying the process while maintaining comparable performance."
                    }
                },
                "number": 6,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3635/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700408116314,
                "cdate": 1700408116314,
                "tmdate": 1700452862355,
                "mdate": 1700452862355,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "PmkQXfdmZO",
                "forum": "BifeBRhikU",
                "replyto": "0oBMzfPunQ",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3635/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3635/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Responses to Reviewer tXaS (IV)"
                    },
                    "comment": {
                        "value": "## To Weakness 4.1: Traininig Set Comparision \n\n> Insufficient evidence on PB-LLM efficiency: To claim that PB-LLM is more efficient in terms of training iteration number compared to LLM-QAT, a more thorough comparison seems necessary. Specifically, it needs to be clear whether the LLM-QAT, being compared with PB-LLM, has been fine-tuned on the same dataset as PB-LLM. Detailed experimental setup information regarding the LLM-QAT is required. \n\nActually, our used training dataset is much smaller than the data in LLM-QAT. It even is a subset of the datasets in LLM-QAT  \nThe full title of LLM-QAT is:  LLM-QAT: Data-Free Quantization Aware Training for Large Language Models, in which the concept of Data-Free is one of their selling points. Specifically, they use a full-precision LLaMA to generate 100K sentence to train the quantized LLaMA. In the Sec.3.3.1 in LLM-QAT, they discussed their data choice. They observe that WikiText (Merity et al., 2016), which is constructed using text extracted from Wikipedia, does not encompass all the information utilized during pre-training. Consequently, a model fine-tuned solely on WikiText tends to overfit on this specific dataset and struggles to generalize well to other datasets. On the other hand, the Crawled Corpus (C4) dataset (Raffel et al., 2020) comprises hundreds of gigabytes of clean English text collected from the web. Using those large datasets performs worse than using their generated dataset.\n\nOn the contrary, we use the RedPajama-simple-1B dataset, as the dataset for LLaMA training is not openly accessible. This dataset, RedPajama-1T, is structured to closely resemble the LLaMa paper and serves as a transparent, open-source alternative to LLM training dataset. \nIt amalgamates data from diverse sources including Commoncrawl, C4. RedPajama-simple-1B, representing a 0.1\\% subset of RedPajama-1T, is substantially smaller than the typical datasets used for training other LLMs, making it a convenient choice for our experiments. As RedPajama-simple-1B is a tiny subset of Commoncrawl and C4, our training dataset can been seen as a subset of training datasets of LLM-QAT. \n\n## To Weakness 4.2: Clarification on Fine-tuning or Training\n\n> Moreover, verification is needed on whether the results through PB-LLM QAT have fully enhanced the reasoning capacity of the pre-trained model. Essentially, it appears that the reasoning accuracy of the target model (OPT-1.3B) obtained through FP fine-tuning should be presented as the upper bound in Figure 7. Additionally, there seems to be a lack of information in Table 2 regarding whether FP LLaMA-7B performance is pre-trained or fine-tuned.\n\nWe appreciate the opportunity to clarify the nature of our methodology and its positioning within the Large Language Model (LLM) training paradigm.\n\nOur used model optimization paradigm is fundamentally distinct from fine-tuning methods typically employed in LLMs. Generally, LLM development involves two primary phases: (1) training the pre-trained models (such as LLaMA and OPT) and (2) fine-tuning these pre-trained models for specific applications (as seen in models like Alpaca and Vicuna). The data used and the training paradigms for these two phases are markedly different.\nOur work specifically targets the pre-trained models. All our experiments and methodologies are therefore aligned with the LLM pre-training framework, rather than the fine-tuning process. This distinction is crucial as it aligns our approach with the initial training phase of LLMs, which is focused on establishing an efficient foundational model.\n\nTo provide practical evidence of our approach, we have made our code available in the supplementary materials. In this code, we utilize the HuggingFace Trainer designed for pre-training LLMs, not the SFTTrainer which is typically used for fine-tuning LLMs. This further reinforces that our method is focused on enhancing the pre-trained models' reasoning capacities within their original training framework.\n\n## Minor Concerns:\n\nThanks for pointing out the typos, we have corrected them and revised the manuscript. The revised version has been uploaded, and all the revised content is highlighted in red."
                    }
                },
                "number": 7,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3635/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700409427229,
                "cdate": 1700409427229,
                "tmdate": 1700409852292,
                "mdate": 1700409852292,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "SRKWS721BI",
                "forum": "BifeBRhikU",
                "replyto": "64kBcEMbZI",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3635/Reviewer_tXaS"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3635/Reviewer_tXaS"
                ],
                "content": {
                    "comment": {
                        "value": "Thank you for your detailed response. I appreciate the clarification on several concerns, but there are still some unresolved questions. Here are my thoughts on your answers:\n\n1. Regarding Weaknesses 1/3/4.1/4.2 and Question 2/3/4: Thank you for the clarification. It seems my concerns have been addressed.\n\n2. About Weakness 3 and Question 1: Thank you for the detailed explanation and experimental results. To fully understand the rationale behind using the Magnitude Criterion method in QAT, it would be beneficial to include this in the final version of the paper.\n\n3. Regarding Weakness 2 and Comment 4.2: I appreciate your perspective on the training paradigm. Considering that the paper focuses on efficient training of pre-trained Models, the performance presented is somewhat perplexing. The accuracy in MMLU for LLaMA-7B drops by nearly 4%, and considering the responses from Reviewer 9nFP, there's also a 1% drop in LLaMA-13B/30B CSQA and a 4% drop in Vicuna-7B MMLU. In summary, even if the proposed QAT methodology in low-bit shows superior performance compared to RTN and LLM-QAT, a noticeable performance drop from pre-training levels (even if not all Hyper-Parameters are swept) suggests that **maintaining the reasoning capacity of foundational models should be a priority** in establishing an efficient foundational model.\n\nConsidering these points, while the proposed methodology shows some novelty and efficiency, the lack of clarity in the paper, unexplained aspects (e.g., why AWQ does not work in PB), and the significantly lower performance compared to the Pre-Trained models after training seem to be shortcomings. Therefore, I will maintain my initial score 5. (If there are any parts I've missed or misunderstood, I would appreciate it if you could let me know)"
                    }
                },
                "number": 21,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3635/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700631153711,
                "cdate": 1700631153711,
                "tmdate": 1700631153711,
                "mdate": 1700631153711,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "QFu27YLKUj",
                "forum": "BifeBRhikU",
                "replyto": "0oBMzfPunQ",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3635/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3635/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Second Round Responses to Reviewer tXaS"
                    },
                    "comment": {
                        "value": "Dear Reviewer tXaS,\n\nThank you for your continued engagement and feedback. We appreciate your acknowledgment of our efforts in addressing the previously mentioned weaknesses and questions (Weaknesses 1/3/4.1/4.2 and Question 2/3/4). Following your suggestion, we have incorporated the detailed explanation regarding the Magnitude Criterion method in Quantization-Aware Training (QAT) into our manuscript. These revisions are highlighted in red for ease of reference.\n\nRegarding your concerns about performance of quantized LLMs and baseline comparisons:\n\n- **Clarification on Study Focus**: Our study primarily aims at **achieving low-bit quantization through binarization techniques** for large language models (LLMs), **NOT** specifically focusing on the efficient training of pre-trained models. This distinction is critical. \nOf course, our approach to quantization-aware training for LLMs differs from other methods like LLM-QAT, which require enormous computational resources. Our method PB-LLM represents a more resource-efficient alternative in achieving QAT for LLMs, which can be seen as an advantage of our method, not the study focus. \n\n\n- **Performance Metrics of Quantized LLM**: We acknowledge the observed performance drops in certain full-precision benchmarks.  Even the 4-bit quantized LLMs by AWQ or SQUEEZELLM still have gaps with full-precision LLMs, while our method can realize approximate 2-bit quantization for LLMs. It's important to highlight that our methodology **achieves state-of-the-art performance within the same model compression level**, especially in the low-bit settings. The inherent trade-off between model compression and performance retention is a challenging aspect of LLM low-bit quantization. While our current results do not entirely bridge this gap, they represent a significant stride toward the goal of LLM low-bit quantization. We and other researchers in the community continuously strive to improve our and their methods to better balance compression and performance. \n\n- **Practical Demonstrations**: To complement the quantitative metrics, we have applied our PB-LLM quantized LLaMA-7B in practical scenarios to generate responses. These demonstrations serve to showcase the model's capabilities beyond standard benchmarks:\n> \\#\\#\\# Human: I am depressed, what should I do?  ChatBot: \nI'm really sorry to hear that you're feeling this way, but I can't provide the help that you need. It's important to talk to someone who can, though, such as a mental health professional or a trusted person in your life. They can offer support, guidance, and resources to help you manage and overcome depression. Don't hesitate to reach out to someone you trust, and consider seeking professional help if you haven't already. Depression is a treatable condition, and there are many effective therapies and treatments available. You don't have to go through it alone, and there is hope for improvement.\n\nBest,\n\nAuthors of Submission 3635"
                    }
                },
                "number": 22,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3635/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700635201962,
                "cdate": 1700635201962,
                "tmdate": 1700668745965,
                "mdate": 1700668745965,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "FQ21gEmefq",
                "forum": "BifeBRhikU",
                "replyto": "0oBMzfPunQ",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3635/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3635/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Summary of Response"
                    },
                    "comment": {
                        "value": "Dear Reviewer tXaS,\n\nConsidering the limited time available, and in order to save the reviewer's time, we summarize our responses here.\n\nIn your initial review, you identified **9 concerns (5 weaknesses and 4 specific questions)**. We have addressed each of these concerns, and it appears that our responses to **8 of them have met with your satisfaction**. These are summarized as follows:\n\n- **Weakness 1 (Lack of Novelty)**: Our initial response highlighted the novelty of our work in LLM compression, satisfying your concerns.\n\n- **Weakness 3 & Question 1 (Salient Weight Methodology)**: We've added detailed experimental results on salient weight criteria in QAT to our revised paper, following your suggestion.\n\n- **Weakness 4.1 (Inconsistent Training Set)**: Clarified that our training set is a subset of LLM-QAT's, alleviating this concern.\n\n- **Weakness 4.2 (whether FP LLaMA-7B performance is pre-trained or fine-tuned. )**: We confirmed that our focus is on the pre-training phase of LLMs, not fine-tuning.\n\n- **Question 2 (AWQ Implementation)**: Discussed the feasibility of implementing AWQ in PB-LLM.\n\n- **Question 3 (Task-specific Fine-tuning in QAT)**: Discussed the extensibility of PB-LLM and its reproducibility, backed by our supplementary codebase.\n\n- **Question 4 (Training Efficiency Insight)**: We gave a more high-level explanation of the training efficiency property of PB-LLM.\n\nAfter our first-round responses, the sole unresolved issue pertains to Weakness 2, which concerns the performance metrics of quantized LLMs. We recognize there may be some misunderstandings regarding the focus of our study and the performance of quantized LLMs. In our **_Second-round Response to Reviewer tXaS_** [(Link)](https://openreview.net/forum?id=BifeBRhikU&noteId=QFu27YLKUj), we clarified that our research aims **not at the efficient training of pre-trained models, but rather at achieving low-bit quantization using binarization techniques**. Furthermore, we provided a detailed discussion on the trade-offs between performance and compression ratio in compressed LLMs, highlighting key areas of focus within the LLM compression community. To illustrate our approach's practical effectiveness, we also presented a real-world example generated by our PB-LLM.\n\nThe author-reviewer discussion period will be closed in several hours, may I know if there are any other concerns? We truly value your insightful comment!\n\nBest,\n\nAuthors of Submission 3635"
                    }
                },
                "number": 25,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3635/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700676497618,
                "cdate": 1700676497618,
                "tmdate": 1700712527112,
                "mdate": 1700712527112,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "KZh0rXjOSx",
                "forum": "BifeBRhikU",
                "replyto": "0oBMzfPunQ",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3635/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3635/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Biref Summary of Response"
                    },
                    "comment": {
                        "value": "Dear Reviewer tXaS,\n\nWith the author-reviewer interaction period drawing to a close, we have briefly summarized our responses to your concerns for the sake of brevity and to respect your time.\n\nIn your **_initial review_**, you raised **9 concerns, consisting of 5 weaknesses and 4 specific questions**. We have diligently addressed each of these, and it appears that **our responses have satisfactorily resolved 8 of these issues**.\n\n**The only remaining point of discussion is Weakness 2, related to the performance metrics of our quantized LLMs**. We believe there might be some misconceptions about the primary focus of our study and the performance expectations of quantized LLMs. In our **_second-round response for reviewer tXaS_**  [(Link)](https://openreview.net/forum?id=BifeBRhikU&noteId=QFu27YLKUj), we emphasized that our **research predominantly targets achieving low-bit quantization through binarization techniques, rather than the efficient training of pre-trained models**. We also engaged in a thorough discussion about the **inherent trade-offs between performance and compression ratio in LLMs, underlining the significant focus areas within the LLM compression community**. To further demonstrate the practical application of our research, we **included a real-world example generated using our PB-LLM**.\n\nAs the discussion period is nearing its end, we would like to inquire if there are any remaining questions or concerns. Your insightful feedback is immensely valued and has been instrumental in enhancing our work. \nDue to the current scores (8865), your score matters a lot to us, please take a look at our second-round responses, and give us a chance to clarify all the concerns. \n\nBest,\n\nAuthors of Submission 3635"
                    }
                },
                "number": 29,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3635/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700712280294,
                "cdate": 1700712280294,
                "tmdate": 1700714662426,
                "mdate": 1700714662426,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "T5IFyC96el",
            "forum": "BifeBRhikU",
            "replyto": "BifeBRhikU",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission3635/Reviewer_92rD"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission3635/Reviewer_92rD"
            ],
            "content": {
                "summary": {
                    "value": "The paper examines the application of network binarization to compress Large Language Models (LLMs), an approach that reduces model weights to a single bit. The authors have developed methodologies that significantly improve the performance of binarized LLMs, thereby contributing valuable insights to the field of LLM compression through network binarization."
                },
                "soundness": {
                    "value": "4 excellent"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "4 excellent"
                },
                "strengths": {
                    "value": "1. Compressing LLMs is an important question for today\u2019s AI research, and the authors first introduce binarization into LLM compression pushing the quantized LLM into ultra-low bits. \n2. The authors present a thorough exploration of network binarization techniques. They effectively demonstrate the feasibility and potential of partially-binarized LLMs using post-training quantization and quantization-aware training methodologies.\n3. The inclusion of source code with the submission is commendable, enabling reproducibility and verification of the reported results, which are impressive."
                },
                "weaknesses": {
                    "value": "1. While the incorporation of Quantization-Aware Training (QAT) in LLM compression is an interesting proposal, its practicality is uncertain given the substantial costs associated with training LLMs. Could the authors elaborate on the overhead implications of QAT for LLMs? \n2. In regards to Table 2, it is unclear whether GPTQ-PB represents the method proposed by the authors. Could you clarify the distinction between GPTQ-PB and PB-LLM within the context of your study?\n3. The application of optimal scaling techniques appears to be confined to the specific case presented. Could these techniques be generalized to other bit configurations, and if so, how might this affect the compression performance?"
                },
                "questions": {
                    "value": "See weaknesses"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "details_of_ethics_concerns": {
                    "value": "N/A"
                },
                "rating": {
                    "value": "8: accept, good paper"
                },
                "confidence": {
                    "value": "5: You are absolutely certain about your assessment. You are very familiar with the related work and checked the math/other details carefully."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission3635/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission3635/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission3635/Reviewer_92rD"
                    ]
                }
            },
            "number": 4,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission3635/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1699496160819,
            "cdate": 1699496160819,
            "tmdate": 1699636319070,
            "mdate": 1699636319070,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "0r8vxttqlw",
                "forum": "BifeBRhikU",
                "replyto": "T5IFyC96el",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3635/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3635/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Responses to Reviewer 92rD"
                    },
                    "comment": {
                        "value": "## Response to Weakness 1: PB-LLM Training Efficiency\n\n> Weakness  1. While the incorporation of Quantization-Aware Training (QAT) in LLM compression is an interesting proposal, its practicality is uncertain given the substantial costs associated with training LLMs. Could the authors elaborate on the overhead implications of QAT for LLMs.\n\nThank you for recognizing the innovative aspect of our approach. We appreciate the opportunity to elaborate on the practicality and overhead implications of QAT for LLMs.\n\nAs detailed in Sections 3.4 and 4.1 of our paper, our QAT process for PB-LLMs begins with a pre-trained model, significantly reducing the additional training overhead. Notably, we fine-tune our binarized PB-LLMs for only 10K iterations, a duration sufficient to surpass the performance of LLM-QAT, which requires a considerably longer training period of 100K iterations. Practically, this fine-tuning necessitates just 2 NV-link connected A6000s over approximately 2 days to achieve performance recovery for the binarized LLaMA-7B. In contrast, LLM-QAT demands around 7-10 days with 8 A6000s, underscoring the efficiency of our approach.\n\nFurther, in Section 3.4.1, we discuss training efficiency in depth. Our proposed salient weights frozen mechanism optimally leverages pre-trained weights. As demonstrated in Fig. 1, we initially filter out a specific number of weights\u20142% by magnitude\u2014at the onset of quantization-aware training. These weights remain frozen throughout the training process, as substantiated by the training efficiency analysis in Fig. 5. The results clearly indicate that these salient weights are instrumental in preserving LLM capacity. By maintaining their high-bit representation, we facilitate the training of quantized LLMs while simultaneously diminishing the complexity of optimization, thus contributing to the overall practicality and feasibility of our method.\n\n\n## Response to Weakness 2: Clarification of Table 2\n\n> Weakness 2. In regards to Table 2, it is unclear whether GPTQ-PB represents the method proposed by the authors. Could you clarify the distinction between GPTQ-PB and PB-LLM within the context of your study? \n\nWe apologize for any confusion caused by the terminology in Table 2 and appreciate the opportunity to clarify. In Table 2, 'GPTQ-PB' refers to our method based on post-training quantization (PTQ), whereas 'PB-LLM' designates the approach based on quantization-aware training (QAT). Specifically, considering the partially-binarized weight matrix as a novel weight format, we explored two distinct methodologies to enhance the performance of quantized LLMs using this format. 'GPTQ-PB' represents our method following the PTQ paradigm, while 'PB-LLM' aligns with the QAT paradigm.\n\nTo improve clarity and unify the terminology in our paper, we have revised this section. Specifically, 'GPTQ-PB' has been renamed to 'PB-GPTQ' in the updated version of the manuscript (aligning with \u2018PB-LLM\u2019), which has been uploaded. The revisions are highlighted in red for easy identification and reference.\n\n\n## Response to Weakness 3: Different Bits Number\n\n>Weakness 3. Aplication of optimal scaling techniques appears to be confined to the specific case presented. Could these techniques be generalized to other bit configurations, and if so, how might this affect the compression performance?\n\nOur PB-LLM technique is adaptable to various bit configurations. PB-LLM employs selective binarization of the LLMs' weight matrix, retaining a proportion of weights in high bits to enhance linguistic capacity. The formula governing the overall bit number, $N_{bit}$, is $N_{bit} \\leq 1 \\times r_{binary} + N_{salient-bit} \\times (1 - r_{binary}) + 1$. Here, $r_{binary}$ is the ratio of binarized weights, and $N_{salient-bit}$ is the number of bits reserved for salient weights (e.g., 8 bits), with an additional bit used for a bitmap index mechanism. By varying $r_{binary}$, we can achieve different levels of bit quantization.\n\nThe flexibility of our method across various bit settings is demonstrated in Tables 2 and 3 (binary ratio varies from 10% to 50%). These results illustrate the generalization capability of PB-LLM, confirming its effectiveness not just in the specific case presented but also in a range of bit configurations.\n\nApart from the generalization ability in different bits, we have supplemented some experiments to investigate the generalization ability on larger LLMs during the rebuttal period. This is referred to the responses to Reviewer 9nFP."
                    }
                },
                "number": 2,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3635/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700371897159,
                "cdate": 1700371897159,
                "tmdate": 1700372001809,
                "mdate": 1700372001809,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "SAEmimcKIS",
                "forum": "BifeBRhikU",
                "replyto": "FiBTgnR7BF",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3635/Reviewer_92rD"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3635/Reviewer_92rD"
                ],
                "content": {
                    "comment": {
                        "value": "Thanks for the authors' reply, and my questions are addressed very well. I keep my score and recommend this paper for acceptance."
                    }
                },
                "number": 28,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3635/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700709418496,
                "cdate": 1700709418496,
                "tmdate": 1700709418496,
                "mdate": 1700709418496,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    }
]