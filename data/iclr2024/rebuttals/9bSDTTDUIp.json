[
    {
        "title": "ERM++: An Improved Baseline for Domain Generalization"
    },
    {
        "review": {
            "id": "lreo7mzeZD",
            "forum": "9bSDTTDUIp",
            "replyto": "9bSDTTDUIp",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission5994/Reviewer_Xq2C"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission5994/Reviewer_Xq2C"
            ],
            "content": {
                "summary": {
                    "value": "The paper proposes ERM++, which introduces several techniques to improve the ERM baseline on multi-source domain generalization. The techniques consist of that for training data utilization, model parameter selection, and weight-space regularization. Experiments on 5 widely-used domain generalization datasets with different backbones show the effectiveness of the method."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "1. The paper investigates many techniques for the ERM model to improve multi-source domain generalization, which helps other researchers in this field to find suitable methods for their research.\n\n2. The paper provides rich experiments to show the benefits of the utilized techniques for domain generalization."
                },
                "weaknesses": {
                    "value": "1. Although the paper includes many techniques to improve the ERM model on domain generalization, most of these technologies have been proposed or are widely known. The improvement with these techniques is not surprising and inspiring.\n\n2. The paper argues to propose a general baseline for future domain generalization works with the existing techniques. However the experiments, such as Table 3 (a), Table 4, and Table 5 show that different techniques benefit different datasets or settings, which is not general to the domain generalization task.\n\n3. Except for the averaged accuracy, it is better to provide more insight of different techniques on how they benefit or harm the performance of domain generalization on different datasets."
                },
                "questions": {
                    "value": "See weakness."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "3: reject, not good enough"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 1,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission5994/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698685250664,
            "cdate": 1698685250664,
            "tmdate": 1699636642469,
            "mdate": 1699636642469,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "MedEtPNTj7",
                "forum": "9bSDTTDUIp",
                "replyto": "lreo7mzeZD",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission5994/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission5994/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Author Response"
                    },
                    "comment": {
                        "value": "> Although the paper includes many techniques to improve the ERM model on domain generalization, most of these technologies have been proposed or are widely known. The improvement with these techniques is not surprising and inspiring.\n\nWhile each technique may be well known, it is the combination of these techniques that constitutes ERM++. It is common for one technique to not compose well with another; for example CORAL does not compose well with our method(Table 3a.) Therefore, the combination of these techniques improving generalization performance is worth noting for the community. \n\n> The paper argues to propose a general baseline for future domain generalization works with the existing techniques. However the experiments, such as Table 3 (a), Table 4, and Table 5 show that different techniques benefit different datasets or settings, which is not general to the domain generalization task.\n\n> Except for the averaged accuracy, it is better to provide more insight of different techniques on how they benefit or harm the performance of domain generalization on different datasets.\n\n\n\n\nWhile each ERM component impacts different datasets in a different way, overall ERM++ improves over the ERM baseline on all datasets . See table 4; Row 7 is better than Row 1 in all cases, even though it doesn\u2019t represent the best performance for each dataset individually.Domain generalization is a very challenging problem, and we cannot expect every technique to improve every dataset. Predicting which technique will perform well where in all DG situations in the future is an even more futile. Then, the best we can hope for is a set of simple techniques (simple also means less likely to overfit) that does very well on a number of known DG tasks, which is exactly what ERM++ accomplishes."
                    }
                },
                "number": 4,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission5994/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700285317008,
                "cdate": 1700285317008,
                "tmdate": 1700285317008,
                "mdate": 1700285317008,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "WKVXB6kr4x",
            "forum": "9bSDTTDUIp",
            "replyto": "9bSDTTDUIp",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission5994/Reviewer_72G7"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission5994/Reviewer_72G7"
            ],
            "content": {
                "summary": {
                    "value": "A training protocol containing three main components is introduced to compose ERM++ which is a new baseline proposed in the submission. By observing the critical of the training length, a two-stage training procedure is conducted by determining the training length with the source domain validation set performance while training on the source training set in the first stage and then in the second stage training on the whole set. Model weight initialisation and weight-space regularisation, namely MPA application, are also studied. For the weight space regularisation idea, I hold my option for the later discussion. ERM++ is evaluated on a large variety of DG benchmarks with significant improvement comparied with vanilla ERM."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "1. The experiments are dense and comprehensive. The proposed baseline is evaluated on most existing domain generalisation benchmarks comprehensively. \n2. ERM++ explore existing practical technique tricks in DG with a detailed description."
                },
                "weaknesses": {
                    "value": "1. The name is a little misleading as MPA is part of ERM++. If this is the case, it is natural to wonder what ERM + MPA performance will be like and by removing MPA from ERM++, then how ERM++ will perform. I think the closest setting is Table 4. Once MPA is added, for example comparing #1 and #2, the performance boosts significantly. The rest setting cumulates each tech one by one. But it is also important to know whether each one contributes independently. \n\n2. One of the main points made in DomainBed is that without a complicated algorithm design with fair hyperparameter running ERM is a very strong baseline. However, ERM ++ is way more complicated than ERM. \n\n3. Besides, since, it is justified by the submission that MPA works well with other introduced tricks, also it is good to know whether ERM++ is compatible with other advanced optimisation algorithms like SAM, GASM, SAGM, which is the benefit of using ERM. \n\n4. In terms of the training cost, ERM ++ is compared with other models such as MIRO and DIVA, but the comparison with ERM is more important."
                },
                "questions": {
                    "value": "See the above sections."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 2,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission5994/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698771407414,
            "cdate": 1698771407414,
            "tmdate": 1699636642358,
            "mdate": 1699636642358,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "OZ4OfZHxCu",
                "forum": "9bSDTTDUIp",
                "replyto": "WKVXB6kr4x",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission5994/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission5994/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "> The name is a little misleading as MPA is part of ERM++. If this is the case, it is natural to wonder what ERM + MPA performance will be like and by removing MPA from ERM++, then how ERM++ will perform. I think the closest setting is Table 4. Once MPA is added, for example comparing #1 and #2, the performance boosts significantly. The rest setting cumulates each tech one by one. But it is also important to know whether each one contributes independently.\n\nThank you for the suggestion of an ablative study in addition to a cumulative one. As each run is fairly expensive; we were unable to run an extensive ablation for the submission. It seems like the main concern is that some of the components may interact negatively with each other. We believe that a cumulative study suggests that this is not the case. Nevertheless, we will provide an ablative study for the camera ready and update the paper with it. \n\n> One of the main points made in DomainBed is that without a complicated algorithm design with fair hyperparameter running ERM is a very strong baseline. However, ERM ++ is way more complicated than ERM.\n\nAlthough we dissect ERM++ into many pieces, each piece is easy to implement. Then, we disagree with this assessment \n\n> I terms of the training cost, ERM ++ is compared with other models such as MIRO and DIVA, but the comparison with ERM is more important.\n\nERM is also very expensive; the parameter turning tries 20 different trials of hyper-parameters. Instead, we use reasonable default ones for most values except training length.  This means that overall, ERM++ is 2.5x cheaper than ERM (we have two runs to select from training length (ES), each 4x longer(LT), so 20/8 = 2.5."
                    }
                },
                "number": 3,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission5994/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700285305873,
                "cdate": 1700285305873,
                "tmdate": 1700285305873,
                "mdate": 1700285305873,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "Jb1o4ZyrW4",
            "forum": "9bSDTTDUIp",
            "replyto": "9bSDTTDUIp",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission5994/Reviewer_4v1r"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission5994/Reviewer_4v1r"
            ],
            "content": {
                "summary": {
                    "value": "This work provides a detailed study of techniques used to improve the performance of empirical risk minimization (ERM) in domain generalization. Three categories of improvements are combined (data utilization, initialization, and regularization) to achieve state-of-the-art performance with lower computational cost than competing strategies."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "1. The strategies used to maximize ERM performance for domain generalization are practically useful, and the resultant model is a competitive baseline for future work in the area.\n2. Extensive experiments were performed with many different methods, architectures, and datasets. The ablation studies are also well done.\n3. Careful analysis of the results were performed and edge cases were highlighted in the text. In particular, many of my initial questions were answered upon a closer read of the analysis, for example the discussion of VLCS performance in Section 5.1."
                },
                "weaknesses": {
                    "value": "1. While the premise of the contribution - that ERM can match SOTA DG algorithms when appropriate data utilization, initialization, and regularization are applied - is important, the strong performance of ERM has been known since [1] and is not exactly novel. The main contribution of this paper is in applying recent \u201ctricks of the trade\u201d to further boost ERM numbers. While this may be helpful for practitioners, no new insight is offered as to why the proposed techniques are useful for ERM specifically or why ERM is a good baseline for domain generalization in the first place.\n2. Many of the proposed improvements to ERM are not actually specific to ERM and can be applied to other state-of-the-art methods to improve performance. For example, it would be helpful to see a comparison where some methods in Table 2 are run with better initialization (say, AugMix) to see whether ERM still outperforms them. As is, the comparisons are made on somewhat unequal footing.\n3. I believe the investigation of weight-space regularization is incomplete. First, why is ERM++ not run with SWAD, and is there any advantage of MPA in this scenario? Second, there is another category of weight-space regularization which is not included in the paper, namely sharpness aware minimization (SAM) [2] based techniques (e.g., SAGM [3]). SAM and SWA have been extensively compared [4] and found to each be beneficial in different circumstances. It would be interesting for the community to compare these two techniques in a DG setting, and I believe this experiment is necessary to claim a fully rigorous investigation of weight-space regularization for DG.\n\nThere is also a fair amount of confusing writing and typos, detailed in the next section."
                },
                "questions": {
                    "value": "Here, I list some minor questions as well as suggestions for improving the writing.\n\n1. The reference [5] cited in Table 2 should also be cited in the introduction.\n2. The bar graph in Figure 1 is pixelated. If it was made with `matplotlib`, this can be fixed by setting the DPI or saving it as a PDF.\n3. There is an inconsistent use of dataset names and abbreviations in the tables (e.g., TerraIncognita vs TI vs TerraInc vs TerraInco). I would recommend using the full name of the dataset everywhere, and perhaps reducing the font size when it doesn\u2019t fit. The same goes for model names (e.g., Meal-V2 vs Meal V2 vs MV2).\n4. There is an inconsistent use of spaces before citations, (e.g., Author(Citation) vs Author (Citation)). I encourage the authors to use the ~ LaTeX character to create a small space before the citations, and to keep this consistent throughout the text.\n5. \u201cSketch\u201d is misspelled in Table 6.\n6. The headings in Table 7 are not explained. What are R0, R1, etc and P, I, Q, etc?\n\n***Recommendation***\n\nOverall, while this paper provides a useful benchmark on maximizing ERM performance for domain generalization, my concerns about novelty and the incomplete investigation of weight-space regularization cause me to lean slightly towards rejection rather than acceptance.\n\n***References***\n\n[1] Gulrajani and Lopez-Paz. In Search of Lost Domain Generalization. ICLR, 2021.\n\n[2] Foret et al. Sharpness-Aware Minimization for Efficiently Improving Generalization. ICLR, 2021.\n\n[3] Wang et al. Sharpness-Aware Gradient Matching for Domain Generalization. CVPR, 2023.\n\n[4] Kaddour et al. When Do Flat Minima Optimizers Work? NeurIPS, 2022.\n\n[5] Vapnik. An overview of statistical learning theory. IEEE Transactions on Neural Networks, 1999."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission5994/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission5994/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission5994/Reviewer_4v1r"
                    ]
                }
            },
            "number": 3,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission5994/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698775692107,
            "cdate": 1698775692107,
            "tmdate": 1699636642246,
            "mdate": 1699636642246,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "uBA5dPGOcQ",
                "forum": "9bSDTTDUIp",
                "replyto": "Jb1o4ZyrW4",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission5994/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission5994/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Author Response"
                    },
                    "comment": {
                        "value": ">While this may be helpful for practitioners, no new insight is offered as to why the proposed techniques are useful for ERM specifically\n\nWhile each technique may be \" a trick of the trade\", it is the combination of these techniques that constitutes ERM++. It is common for one technique to not compose well with another; for example CORAL does not compose well with our method(Table 3a.) Therefore, the combination of these techniques improving generalization performance is worth noting for the community. \n \n> specifically or why ERM is a good baseline for domain generalization in the first place.\n\nThank you for the very interesting question. While conclusive proof is beyond this paper, the authors have a main hypotheses.The main alternative to ERM is learning features invariant to domain label; which means that the domain cannot be predicted from the features of a sample. HOWEVER, classes are not balanced amongst domains in most of the common datasets; eg. domain 1 has a different class distribution than domain 2. This means that in order to become domain invariant, the network must learn to also suppress class-discriminative features, likely impeding performance.  Future investigation of this phenomenon is left to future work. \n\n> Many of the proposed improvements to ERM are not actually specific to ERM and can be applied to other state-of-the-art methods to improve performance. For example, it would be helpful to see a comparison where some methods in Table 2 are run with better initialization (say, AugMix) to see whether ERM still outperforms them. As is, the comparisons are made on somewhat unequal footing.\n\nA good point! We remind the reviewer that we propose a baseline, and we do not claim that ERM++ is the best possible method, just that it is a highly effective yet simple baseline. This means that it should be the job of researchers in the future to make sure any method they invent to compare to ERM++. Additionally, we direct the reviewer to table 3a, where we show that ERM++ (and hence the initialization with augmix) composes well with DIWA and MIRO. \n\n> I believe the investigation of weight-space regularization is incomplete. First, why is ERM++ not run with SWAD, and is there any advantage of MPA in this scenario? Second, there is another category of weight-space regularization which is not included in the paper, namely sharpness aware minimization (SAM) [2] based techniques (e.g., SAGM [3]). SAM and SWA have been extensively compared [4] and found to each be beneficial in different circumstances. It would be interesting for the community to compare these two techniques in a DG setting, and I believe this experiment is necessary to claim a fully rigorous investigation of weight-space regularization for DG.\n\nAgain, thank you for the question. The authors of SWAD show that SAM and SWAD do not compose as well as As ERM and SWAD; in Table 4 of [1] they show that SAM + SWAD achieves 65.5% accuracy averaged across domains and datasets  while ERM+SWAD achieves 66.9%. Therefore, we leave it out of our comparisons. However, we agree that a more thorough investigations as to why would be very interesting, and will update our work with this for the camera ready. \n\n> There is also a fair amount of confusing writing and typos, detailed in the next section.\n\nThank you for the suggestions, we will incorporate them into our writing. \n\n[1] Cha, Junbum, et al. \"Swad: Domain generalization by seeking flat minima.\" Advances in Neural Information Processing Systems 34 (2021): 22405-22418. (https://proceedings.neurips.cc/paper_files/paper/2021/file/bcb41ccdc4363c6848a1d760f26c28a0-Paper.pdf)"
                    }
                },
                "number": 2,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission5994/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700285284705,
                "cdate": 1700285284705,
                "tmdate": 1700285284705,
                "mdate": 1700285284705,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "moXuSza8pK",
            "forum": "9bSDTTDUIp",
            "replyto": "9bSDTTDUIp",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission5994/Reviewer_Pkyt"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission5994/Reviewer_Pkyt"
            ],
            "content": {
                "summary": {
                    "value": "The paper present a new strong baseline, named ERM++, for the study of domain generalization (DG). By incorporating multiple previous results in training data utilization, parameter selection, and regularization, ERM++ achieved state-of-the-art performance on the DomainBed benchmark."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "The obvious strength of the paper is the exciting results. The experimental settings are carefully described."
                },
                "weaknesses": {
                    "value": "Despite presenting exciting results with elaborated experiments, the paper lacks technical insight into the effectiveness of various components, especially when they are used together. While I do see the merit of the engineering approach and agree that the field should appropriately acknowledge this as a baseline for large DomainBed, I do not think the current contribution of ERM++ is fit for a venue like ICLR. Thus, I cannot recommend acceptance for the paper."
                },
                "questions": {
                    "value": "Why did the evaluation results for CMNIST and RMNIST not included in the paper?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "3: reject, not good enough"
                },
                "confidence": {
                    "value": "5: You are absolutely certain about your assessment. You are very familiar with the related work and checked the math/other details carefully."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission5994/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission5994/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission5994/Reviewer_Pkyt"
                    ]
                }
            },
            "number": 4,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission5994/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698817779836,
            "cdate": 1698817779836,
            "tmdate": 1699636642120,
            "mdate": 1699636642120,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "ki2qsqcoop",
                "forum": "9bSDTTDUIp",
                "replyto": "moXuSza8pK",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission5994/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission5994/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Author responses"
                    },
                    "comment": {
                        "value": "> While I do see the merit of the engineering approach and agree that the field should appropriately acknowledge this as a baseline for large DomainBed, I do not think the current contribution of ERM++ is fit for a venue like ICLR. \n\nThank you for acknowledging the importance of engineering and  the importance of ERM++ to the field. We disagree, however, about the lack of technical insight. First, we discuss the motivation of each component in subsections of section 3. Furthermore, the  fact that we show these tricks work together in combination is itself a technical novelty, especially in as empirical a field as machine learning research.\n\n> Why did the evaluation results for CMNIST and RMNIST not included in the paper?\n\nMNIST are toy datasets compared to what we evaluate on; it is common to not include them in modern DG work, eg SWAD[1]\n\n[1] Cha, Junbum, et al. \"Swad: Domain generalization by seeking flat minima.\" Advances in Neural Information Processing Systems 34 (2021): 22405-22418."
                    }
                },
                "number": 1,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission5994/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700285276804,
                "cdate": 1700285276804,
                "tmdate": 1700285276804,
                "mdate": 1700285276804,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    }
]