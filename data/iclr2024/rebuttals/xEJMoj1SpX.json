[
    {
        "title": "Elucidating the Exposure Bias in Diffusion Models"
    },
    {
        "review": {
            "id": "owDCamiQ6I",
            "forum": "xEJMoj1SpX",
            "replyto": "xEJMoj1SpX",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission3513/Reviewer_tyf7"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission3513/Reviewer_tyf7"
            ],
            "content": {
                "summary": {
                    "value": "This paper studies the problem of exposure bias in diffusion models.  Exposure bias is defined as the input mismatch between $x_t$ during training and $\\hat{x}_t$ during sampling, which results error accumulation during sampling and eventual sampling drift. This in turn affects the quality of generated images. \n\nThe primary cause of exposure bias is ascribed to the difference between the growth truth posterior distribution $q(x_{t-1} | x_t, x_0)$ and the sampling distribution $q(x_{t-1} | x_t, \\hat{x}^t_\\theta)$. In practice, the difference between the prediction $\\hat{x}_\\theta^t$ and ground truth $x_0$ is non-zero. The paper analytically shows that this is due to increased variance at sampling time which results in accumulation of error during sampling. Inspired by the error in variance, a metric to measure exposure bias is also proposed by drawing inspiration from FID. \n\nTo alleviate exposure bias, this work proposes a method called Epsilon scaling which can be used at sampling and does not require re-training/finetuning of diffusion models. The core idea is to scale down the predicted $\\epsilon_\\theta^s$ at sampling so that it is closer to training $\\epsilon_\\theta^t$.  \n\nQualitative and quantitative results indicate that the proposed method results in improved FID scores and helps in alignment of sampling trajectory with training trajectory, thus reducing exposure bias."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "1. The paper is well-written. The paper provides a clear explanation about the problem of exposure bias and its causes by deriving expressions for sampling probability distribution that shows increased variance. It also provides clear intuition for different choices while designing the proposed method. For instance, the intuition for correcting $\\epsilon_\\theta$ to reduce exposure bias instead of reducing variance error has been explained clearly. \n2. The method is relatively simple and easy to implement as it introduces a scaling factor in the sampling process of diffusion models and does not require re-training of diffusion models. Previous method by Ning et al. (2023) mitigates this issue by perturbing inputs during training which requires retraining diffusion models. \n3. The proposed method improves FID scores significantly for different families of diffusion models like DDPM, DDIM, ADM, EDM and LDM. \n4. The primary contribution of this work which is empirical demonstration of the fact that correction of exposure bias can be done without retraining diffusion models is valuable."
                },
                "weaknesses": {
                    "value": "1. The proposed method of Epsilon scaling is not tuning-free as it is sensitive to the choice of hyper parameter of the schedule $\\lambda_t = kt+ b$ and thus requires extensive hyper parameter tuning. The choice of optimal hyperparameters varies for each dataset as well as the number of sampling steps T. As per Table 10, Table 11 and Table 12, values of k and b have been tuned up to 4th or even 5th decimal place. For instance, there are values like k=0.00022 , b=1.00291 in Table 10. This degree of hyperparameter tuning seems a bit extreme.  The paper is also missing relevant sensitivity analysis for hyperparameters k and b, and it would be useful to include it (both over large strides and small strides). \n2. The process of finding optimal hyperparameters for Epsilon scaling seems to be slow and can be computationally intensive.  Usually, generating 10K sampling to calculate FID takes several minutes for small sampling steps and several hours for large sampling steps. Tuning hyper-parameters for each dataset and each choice of sampling length T, can thus require lot of GPU compute and time. While the method itself is simple, tuning this method for optimal performance can be tricky.\n3. In Table 3, for CIFAR-10, values of EDM for VP and VE should be reported for NFE=35 which gets FID = 1.97 (VP) and 1.98 (VE) on CIFAR-10, respectively. Underreporting FID values of EDM is a bit misleading."
                },
                "questions": {
                    "value": "1. In Figure 5, Figure 9b and Figure 10b, what is the reason for smaller values of $\\| \\epsilon \\|_2$ of ADM-ES compared to its values at training time towards end of sampling (time steps 18-21)?\n2. Could the authors include the number of sampling steps in qualitative results in Figures 11-15?\n3. Could the authors indicate the amount of compute (number of GPUs as well as time) needed to find optimal hyperparameters?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "8: accept, good paper"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission3513/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission3513/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission3513/Reviewer_tyf7"
                    ]
                }
            },
            "number": 1,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission3513/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698786781338,
            "cdate": 1698786781338,
            "tmdate": 1700717407352,
            "mdate": 1700717407352,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "jALlMWVGT3",
                "forum": "xEJMoj1SpX",
                "replyto": "owDCamiQ6I",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3513/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3513/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "Thank you very much for the insightful and helpful suggestions. We answer each question in detail below:\n\n**Q1. The proposed method of Epsilon scaling is not tuning-free as it is sensitive to the choice of hyper parameter of the schedule $\\lambda_t = kt+b$ and thus requires extensive hyper parameter tuning. The paper is also missing relevant sensitivity analysis for hyperparameters k and b, and it would be useful to include it (both over large strides and small strides).**\n\n**A1**. Thank you for pointing this out, Reviewer gcKq also asked a similar question. Overall, the parameters k,b are insensitive to the FID result, please refer to our answer A2 to Reviewer gcKq for details. Since the linear schedule $\\lambda_t = kt+b$ is determined from its optimal uniform schedule $\\lambda_t=b^*$, b of the linear schedule is actually computed rather than brute-force searched. Thus in the linear schedule case, only k is searched with several trials. The sensitivity analysis is of great interest and helpful for the reader to understand the easiness of our method, for example, we present a curve that shows the FID w.r.t the full range of $b$. We decided to include it in the paper later on.\n\n\n**Q2. The process of finding optimal hyperparameters for Epsilon scaling seems to be slow and can be computationally intensive. Usually, generating 10K sampling to calculate FID takes several minutes for small sampling steps and several hours for large sampling steps. Tuning hyper-parameters for each dataset and each choice of sampling length T, can thus require lot of GPU compute and time. While the method itself is simple, tuning this method for optimal performance can be tricky.**\n\n**A2**. As we mentioned above, the determination of $\\lambda_t$ is practically easy and not expensive. For each dataset and network, we find the optimal $\\lambda_t$ by always using a single A100 GPU, costing from several minutes to three hours. We hope this tackles your concerns about the computational cost of our method.\n\n\n**Q3. In Table 3, for CIFAR-10, values of EDM for VP and VE should be reported for NFE=35 which gets FID = 1.97 (VP) and 1.98 (VE) on CIFAR-10, respectively. Underreporting FID values of EDM is a bit misleading**\n\n**A3**. Thank you for the question, to make sure we measure the true improvement of our method, we re-run the sampling and FID measurement for EDM baseline in the same machine and environment. We report FID=1.97 for EDM (VP, uncond) and FID=1.82 for EDM (VP, cond) in the paper, the latter is different from FID=1.79 reported in EDM, which is possibly due to the machine difference. To avoid misunderstandings, we will add a sidenote in the table to mention the result is reported by re-running the baseline.\n\n\n**Q4. In Figure 5, Figure 9b and Figure 10b, what is the reason for smaller values of $|\\epsilon|$ of ADM-ES compared to its values at training time towards end of sampling (time steps 18-21)?**\n\n**A4**. Thank you for the question, timestep 18-21 in these three figures means the beginning of the sampling, which we should clarify in the figure (will update it). The smaller $\\epsilon$ norm corresponds to the effect that we push the sampling trajectory away from the original trajectory.\n\n\n**Q5. Could the authors include the number of sampling steps in qualitative results in Figures 11-15?**\n\n**A5**. That is a good suggestion, we will include it in the next version paper.\n\n \n**Q6. Could the authors indicate the amount of compute (number of GPUs as well as time) needed to find optimal hyperparameters?**\n\n**A6**. Finding an optimal uniform $\\lambda_t$ takes 6 to 10 trails of searching, which corresponds to several minutes to 3 hours in a single A100 GPU, depending on NFE and dataset resolution. We will include the details in the appendix."
                    }
                },
                "number": 7,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3513/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700472665501,
                "cdate": 1700472665501,
                "tmdate": 1700472665501,
                "mdate": 1700472665501,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "qLWFtL4nuu",
                "forum": "xEJMoj1SpX",
                "replyto": "jALlMWVGT3",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3513/Reviewer_tyf7"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3513/Reviewer_tyf7"
                ],
                "content": {
                    "comment": {
                        "value": "Thank you for your responses to my questions. \n\nFor Q1. Could you please indicate the values of $k$ in your tables for hyperparameter search? Currently, the response includes only values of $b$ in Tables 11 and 12 above. I would also argue that the current range of $b$ is narrow, and therefore I don't completely agree with the statement \"FID gain can be achieved in a wide range of k,b, which indicates the insensitivity of the hyperparameters.\"\n\nI am also curious about the response to Q4 raised by Reviewer FqVz. I have calibrated my current rating on the basis of rebuttal and responses to other reviews, but I am open to updating it in the future."
                    }
                },
                "number": 8,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3513/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700552651183,
                "cdate": 1700552651183,
                "tmdate": 1700552651183,
                "mdate": 1700552651183,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "3mC6zD2ESB",
                "forum": "xEJMoj1SpX",
                "replyto": "M1UuEOfHsr",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3513/Reviewer_tyf7"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3513/Reviewer_tyf7"
                ],
                "content": {
                    "comment": {
                        "value": "Thank you for sharing these additional results. I do think that this paper offers a nice perspective on correcting exposure bias and  empirical results are encouraging, as the gains seem consistent, even though they are minor in some cases like DDIM. One of my major concerns was sensitivity of this method to hyperparameter. This has been addressed to some extent. I still feel that the need for 6-8 trials and upto 3 hours GPU time for finetuning is a lot, given that these hyperparameters don't seem to transfer across timesteps, datasets or specific parametrization of diffusion process. Overall, I do think that this paper has some interesting insights and therefore I'm increasing my score."
                    }
                },
                "number": 13,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3513/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700717414119,
                "cdate": 1700717414119,
                "tmdate": 1700717414119,
                "mdate": 1700717414119,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "wwoxkdcHN7",
            "forum": "xEJMoj1SpX",
            "replyto": "xEJMoj1SpX",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission3513/Reviewer_gcKq"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission3513/Reviewer_gcKq"
            ],
            "content": {
                "summary": {
                    "value": "This work focuses on the `exposure` bias problem for diffusion models. The exposure bias is caused by error accumulation across the sampling trajectory since during inference only samples from the previous timestep step are used, while during training samples are exposed to ground truth training. The work then quantifies and analyzes the exposure bias during inference, during different timesteps showing the error is high by the end of sampling (for multi-step sampling) and shows a monotonic trend. Lastly, the paper proposes epsilon scaling as an inference time sampling strategy to mitigate this issue and shows higher quality generations compared to other samplers while (slightly) improving FID."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "1. The work does an overall good job of introducing and explaining exposure bias. The section itself was didactic and a valuable portion of the paper. Results are shown for simple single and multi-step samplings that quantify the variance error caused by exposure bias.\n2. The work then proposes a simple approach to reduce the exposure bias, by scaling the norm of the predicted noise term. The work also shows that the scaling factor needs to be handled differently when sampling for different number of steps. \n3. Results are shown for several different variants of diffusion models, and several baseline samplers are considered. The proposed method shows competitive FID scores with similar or fewer timesteps."
                },
                "weaknesses": {
                    "value": "1. Results for the proposed epsilon-scaling mechanism with DDIM solver aren't impressive. There's only a marginal change in the FID score, compared to the DDIM sampler which is used as a popular framework for many diffusion models. Here, the gains are marginal even for cases with reasonable timesteps (~50 or more).\n2. There is little information provided regarding how the scaling factor $k$ and $b$ are selected, and how many hyperparameters were searched for optimal $k$ and $b$. It would also be good to quantify sensitivity to these hyperparameters."
                },
                "questions": {
                    "value": "1. Does the method perform worse than Heun solvers with suboptimal $k$ and $b$ selection?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "2: You are willing to defend your assessment, but it is quite likely that you did not understand the central parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission3513/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission3513/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission3513/Reviewer_gcKq"
                    ]
                }
            },
            "number": 2,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission3513/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698879726638,
            "cdate": 1698879726638,
            "tmdate": 1699636304813,
            "mdate": 1699636304813,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "uEl3PglWkW",
                "forum": "xEJMoj1SpX",
                "replyto": "wwoxkdcHN7",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3513/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3513/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "Thank you for your reviews and constructive suggestions. Our relies to each question is listed below.\n\n**Q1. Results for the proposed epsilon-scaling mechanism with DDIM solver aren't impressive. There's only a marginal change in the FID score, compared to the DDIM sampler which is used as a popular framework for many diffusion models. Here, the gains are marginal even for cases with reasonable timesteps (~50 or more)**\n\n**A1**. Although the FID gain of Epsilon Scaling in DDIM is less than the gain in DDPM, our method is still useful in DDIM sampler as a simple plug-in sampling solution. Except for the outlier in CelebA 20-step sampling, the FID improvement is also non-trivial and can be significant from 4.06 to 3.38 in CIFAR-10. In the case that DDIM-ES gains little benefit, one can easily get a better sample quality by increasing the value of $\\eta$ from 0 to 0.2, 0.5, etc.\n\n\n**Q2. There is little information provided regarding how the scaling factor $k$\n and $b$ are selected, and how many hyperparameters were searched for optimal $k$ and $b$. It would also be good to quantify sensitivity to these hyperparameters.**\n\n**A2**.  Thank you for the suggestions. First, the FID gain can be achieved in a wide range of k,b, which indicates the insensitivity of the hyperparameters. For example, in Tables 11, 12, we present the FID and parameter b across ADM and EDM baselines. We are going to add a more complete sensitivity graph and analysis in the paper.\n\nTable 11. FID on ADM baseline and CIFAR-10 under different parameters b (b=1 represents the baseline)\n| b | 1 (baseline) | 1.015 | 1.016 | 1.017 | 1.018 | 1.019 |\n| --- | --- | --- | --- | --- | --- | --- |\n| NFE=100 | 3.37 | 2.20 | 2.18 | 2.17 | 2.21 | 2.31 |\n| NFE=50 | 4.43 | 2.53 | 2.51 | 2.49 | 2.53 | 2.55 |\n\nTable 12. FID on EDM baseline and CIFAR-10 under different parameters b (b=1 represents the baseline)\n| b | 1 (baseline) | 1.0005 | 1.0006 | 1.0007 | 1.0008 |\n| --- | --- | --- | --- | --- | --- |\n| NFE=35 | 1.97 | 1.948 | 1.947 | 1.949 | 1.953 |\n|  |  |  |  |  |  |\n| b | 1 (baseline) | 1.004 | 1.005 | 1.006 | 1.007 |\n| NFE=13 | 7.16 | 6.60 | 6.55 | 6.54 | 6.55 |\n\nThanks to the insensitivity of parameters $k$, $b$, the parameter searching is effortless, searching for a constant $b$ takes no more than 10 trials for a specific network, dataset and sampling step. We usually take 2 rounds of searching, first doing the coarse search with a stride of 0.005, then doing a fine search with a stride of 0.001. When using linear schedule $\\lambda_t=kt+b$, we first find its optimal uniform schedule $\\lambda_t=b^*$, then search for the optimal slope $k$ while maintaining $\\sum\\lambda_t$ unchanged (i.e. $\\sum\\lambda_t=NFE \\times b^* $), in this way, $b$ of the linear schedule is calculated, we got only $k$ is searched. There are already descriptions of the selection of $k,b$ in Appendix A.8, but we will accordingly add more details to the appendix. \n\n\n**Q3. Does the method perform worse than Heun solvers with suboptimal $k$ and $b$ selection?**\n\n**A3**. Due to the wide range of near-optimal solutions, our method still works well under suboptimal k and b, see Table 12 where we use Heun solver."
                    }
                },
                "number": 6,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3513/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700471807081,
                "cdate": 1700471807081,
                "tmdate": 1700471807081,
                "mdate": 1700471807081,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "hOezNHNdq9",
            "forum": "xEJMoj1SpX",
            "replyto": "xEJMoj1SpX",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission3513/Reviewer_ujfx"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission3513/Reviewer_ujfx"
            ],
            "content": {
                "summary": {
                    "value": "This paper investigates the exposure bias problem in diffusion models by modeling sampling distribution, based on which they attribute the prediction error at each sampling step as the root cause of the exposure bias issue. They discuss potential solutions to this issue and propose a metric for it. Along with the elucidation of exposure bias, we propose a simple, yet effective, training-free method called Epsilon Scaling to alleviate the exposure bias. \nExperiments on various diffusion frameworks, unconditional and conditional settings, and deterministic vs. stochastic sampling verify the effectiveness of this method."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "1. It is interesting and insightful to take in-depth exploration on the exposure bias problem in diffusion models. This paper connects exposure bias with prediction error and gives the expressions of prediction error.\n\n2. To solve the exposure bias in a learning-free manner, this paper proposes to scale the noise prediction in the sampling process to match the noise prediction in the training process. \n\n3. Solid experiments. Extensive experiments demonstrate the generality of Epsilon Scaling and its applicability to different diffusion architectures."
                },
                "weaknesses": {
                    "value": "1. The main concern lies in the assumption at the start of the derivation. In part 3.2, the authors assume that the reconstructed image x_{\\theta}^t at the sampling process follows the Gaussian distribution, where the mean is the GT image x_0, and the variance is the Gaussian noise. This conflicts with some intuitive observations. For example, the reconstructed image x_{\\theta}^t is often a degraded version of the GT image, and the mean of x_{\\theta}^t is different from x_0. \n\n2. Some formulations, notations and explanations in part 3.1 and 3.1 are redundant. It is highly recommended to improve the organization and the writing of this section.\n\n3. It is necessary to discuss the further meaning and defects of exposure bias correction. For instance, the necessity of matching the forward and sampling process. Reducing such bias forces the generated images to be more similar to the training images in distribution, i.e, more data repetition in the generated images. The authors are encouraged to give more discussions."
                },
                "questions": {
                    "value": "Please refer to the questions in the Weaknesses."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 3,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission3513/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1699067084781,
            "cdate": 1699067084781,
            "tmdate": 1699636304701,
            "mdate": 1699636304701,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "nMPxAV2gKC",
                "forum": "xEJMoj1SpX",
                "replyto": "hOezNHNdq9",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3513/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3513/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "Thank you very much for your helpful comments and we now answer each of your questions.\n\n**Q1. The main concern lies in the assumption at the start of the derivation. In part 3.2, the authors assume that the reconstructed image x_{\\theta}^t at the sampling process follows the Gaussian distribution, where the mean is the GT image x_0, and the variance is the Gaussian noise. This conflicts with some intuitive observations. For example, the reconstructed image x_{\\theta}^t is often a degraded version of the GT image, and the mean of x_{\\theta}^t is different from x_0.**\n\n**A1**. The generated sample is the result of multi-step sampling, where the Gaussian approximation of $x_0$ prediction error holds in a single step (please see our answer A1 to reviewer nv6a). For multi-step sampling, this Gaussian might be loose and exhibit the mean drift. \n\n\n**Q2. Some formulations, notations and explanations in part 3.1 and 3.1 are redundant. It is highly recommended to improve the organization and the writing of this section.**\n\n**A2**. Thanks for your suggestions, we will simplify section 3.1 since the DDPM formulation is already well-known in the field. \n\n\n**Q3. It is necessary to discuss the further meaning and defects of exposure bias correction. For instance, the necessity of matching the forward and sampling process. Reducing such bias forces the generated images to be more similar to the training images in distribution, i.e, more data repetition in the generated images. The authors are encouraged to give more discussions.**\n\n**A3**. From the sampling trajectory perspective, exposure bias correction indeed tries to match the training and sampling trace. The main benefit of this match is to avoid the intermediate sample $\\hat{x_t}$ falling into the problematic vector field that has never been trained in the training phase. From the sample quality perspective, the exposure bias correction corresponds to the correction of overexposure, underexposure, and detail defects. \n\nWe empirically observed that the generated image samples before and after applying Epsilon Scaling share the same semantic mode. Thus, the exposure bias correction does not affect the diversity of the synthesised samples. Our experiments of recall further show that the correction of exposure bias results in even slightly better sample diversity (see Table 10 below). Thus, reducing exposure bias does not lead to data repetition. We plan to add this discussion in section 5.6 \n\n\nTable 10. Recall of ADM and ADM-ES using 100-step sampling\n\n|  | CIFAR-10 | LSUN 64x64 | FFHQ 128x128 | ImageNet 64x64 | ImageNet 128x128 |\n| --- | --- | --- | --- | --- | --- |\n| ADM | 0.591 | 0.605 | 0.497 | 0.621 | 0.586 |\n| ADM-ES | 0.613 | 0.606 | 0.545 | 0.632 | 0.592 |"
                    }
                },
                "number": 5,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3513/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700471364452,
                "cdate": 1700471364452,
                "tmdate": 1700471364452,
                "mdate": 1700471364452,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "6Klyh6hNhj",
            "forum": "xEJMoj1SpX",
            "replyto": "xEJMoj1SpX",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission3513/Reviewer_FqVz"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission3513/Reviewer_FqVz"
            ],
            "content": {
                "summary": {
                    "value": "The paper studies the \"exposure bias\" in diffusion models, which boils down to the statistical discrepancy between neural predictions at different time $t$. To alleviate the issue, the authors propose a simple scaling strategy to match the norm of neural predictions at training and sampling time. The idea is to calculate the related empirical statistics and then determine the scaling factor at different time $t$. Empirically, the proposed scaling method improve the baseline across architectures, noisy schedule and datasets."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "- The paper tries to address an important issue in diffusion models, where the initial error accumulation can negatively affect the quality of the generated samples.\n\n- It introduces a method that employs the empirical $\\ell_2$ ratio during both training and sampling phases to decide the appropriate scaling factor. This technique is straightforward yet proves to be effective.\n\n- Extensive experiments show that the proposed method can consistently improve the pre-trained models across datasets."
                },
                "weaknesses": {
                    "value": "- Several prior works have observed and identified the \"exposure bias\" problem studied in the current paper. It would be helpful to discuss them in the paper: (1) Section 4 (practical considerations) and Fig 13 in EDM [1] points out that the neural network tends to remove slightly too much noise. Hence they use an inflated noise to counteract it. I think adding $S_{noise}$ into ODE or SDE samplers is a valid baseline for the current paper. (2) Section 4.2 in PFGM [2] / Section 5, Fig 4.b in PFGM++ [3] further dig into the exposure bias problem and show that the strong norm-t relation in the diffusion model is the cause. \n\n- The current paper demonstrates the discrepancy of the prediction norms (Fig 2) without further examining the reason. [2] seems to offer a plausible explanation for this phenomenon. If their argument is true, this \"exposure bias\" mainly occurs in large $t$ (norm-t is strongly correlated). I guess one simple experiment to validate the hypothesis is to use true score up to a certain time $t$ during sampling and study the effects (like current Fig.2, but the green and red curve would be the same in [t,T]).\n\n\n- It's encouraging to see that the method improves over EDM, especially in the small NFE regime. Could the authors try to apply the method on PFGM++, which is claimed to be more robust to the \"exposure bias\"? It could also verify if or not the exposure bias is due to the strong norm-t correlation pertaining to diffusion models.\n\n### Minors\n\n- I think the prediction error is not $x^t_\\theta - x_0$ but $x^t_\\theta - E_{x_0|x_t}[x_0]$.\n\n[1] Elucidating the Design Space of Diffusion-Based Generative Models, NeurIPS 2022\n\n[2] Poisson Flow Generative Models, NeurIPS 2022\n\n[3] PFGM++: Unlocking the Potential of Physics-Inspired Generative Models, ICML 2023\n\nOverall I'm impressed by the empirical performance of the proposed methods. However, there are many loose threads (the reasoning of exposure bias, the question below, comparing to related work (e.g., EDM inflating). I will raise my score if the authors address some of them."
                },
                "questions": {
                    "value": "- I don't immediately see why the quotient of $\\Delta N(t) = |\\epsilon^s|/|\\epsilon^t|$ can be translated into the scaling factor at $\\epsilon(x_t,t)$ during sampling. Because $\\Delta N(t) = |\\epsilon^s|/|\\epsilon^t|$ and $\\Delta N(t)=\\int_t^T \\lambda_t$ only implies that $\\frac{d |\\epsilon^s(x_t,t)|/|\\epsilon^t(x_t,t)|}{dt}=\\lambda_t$. \n\nI tried the simplest data distribution I can come up with --- $p(x)=\\delta(x-0)$. The argument even failed in this case. (I use the notation in EDM and assume $t=\\sigma$). The true $\\epsilon$ at $x_t$ is $\\epsilon(x_t,t) = -\\frac{x_t}{t^2}$. By solving the diffusion ODE $dx/dt = -\\frac{x_t}{t}$ we get $x_t = \\frac{Tx_T}{t}$ (assume the start point at time $T$ is $x_T$). However, when we scale $\\epsilon$ by $\\lambda_t$, the resulting $x_t$ does not directly relate to $\\Delta N(t)=\\int_t^T \\lambda_t$, but a interval over $\\lambda_t/t$. I suggest rethinking the principled way of scaling by working out the toy example first."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 4,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission3513/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1699075660872,
            "cdate": 1699075660872,
            "tmdate": 1699636304632,
            "mdate": 1699636304632,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "0GUQqOJ50Q",
                "forum": "xEJMoj1SpX",
                "replyto": "6Klyh6hNhj",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3513/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3513/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "Thank you very much for the interesting and insightful comments, our answers to each question are shown below:\n\n\n**Q1. Several prior works have observed and identified the \"exposure bias\" problem studied in the current paper. It would be helpful to discuss them in the paper: (1) Section 4 (practical considerations) and Fig 13 in EDM [1] points out that the neural network tends to remove slightly too much noise. Hence they use an inflated noise to counteract it. I think adding $S_{noise}$ into ODE or SDE samplers is a valid baseline for the current paper. (2) Section 4.2 in PFGM [2] / Section 5, Fig 4.b in PFGM++ [3] further dig into the exposure bias problem and show that the strong norm-t relation in the diffusion model is the cause.**\n\n**A1**. We think our Epsilon Scaling is consistent with EDM\u2019s statement: the neural network tends to remove slightly too much noise, because our solution scales down the predicted noise, thus avoiding removing too much noise. We will update the SDE sampler experiments once we get the results. As for PFGM++ discussion, please refer to our answers A2 and A3.\n\n\n**Q2. The current paper demonstrates the discrepancy of the prediction norms (Fig 2) without further examining the reason. [2] seems to offer a plausible explanation for this phenomenon. If their argument is true, this \"exposure bias\" mainly occurs in large $t$ (norm-t is strongly correlated). I guess one simple experiment to validate the hypothesis is to use true score up to a certain time \n during sampling and study the effects (like current Fig.2, but the green and red curve would be the same in [t,T]).**\n\n**A2**. First of all, we reckon the strong norm-t opinion does not contradict our claim that the prediction error of $x_0$ is the cause of exposure bias. We are convinced that PFGM++ is robust to prediction error compared with diffusion models. So they are two concepts and can be concurrent. Also, we argue that exposure bias exists in the whole sampling chain of diffusion models. The experiment in paper [1] supports our opinion, where they measure the FID by leaking the ground truth $x_t$, $t \\sim(1, T)$ and $T=1000$, to the network at the beginning of sampling, then the sampling starts at $x_t$. We replicate their results on ADM and ImageNet 32 in Table 6. We see that the FID is still far from near-zero even though the sampling starts at $x_{300}$ and $x_{100}$ which jump over the large t area (norm-t is strongly correlated).\n\nTable 6. FID on ImageNet 32\n| t | 100 | 300 | 500 | 700 | 1000 |\n| --- | --- | --- | --- | --- | --- |\n| ADM | 0.98 | 1.81 | 2.59 | 3.11 | 3.54 |\n\n[1] Mang Ning, Enver Sangineto, Angelo Porrello, Simone Calderara, and Rita Cucchiara. Input perturbation reduces exposure bias in diffusion models. ICML, 2023\n\n\n**Q3. It's encouraging to see that the method improves over EDM, especially in the small NFE regime. Could the authors try to apply the method on PFGM++, which is claimed to be more robust to the \"exposure bias\"? It could also verify if or not the exposure bias is due to the strong norm-t correlation pertaining to diffusion models.**\n\n**A3**. We think PFGM++ is an interesting baseline to apply our method. We present the results on PFGM++ (D=128) and PFGM++ (D=2048) under unconditional sampling (see Table 7, 8). We found that Epsilon Scaling (ES) is compatible with PFGM++ and even enjoys the extra benefit: under very small NEF regimes, the FID gain of ES is still significant. We believe the robustness to prediction error of PFGM++ is the reason. We would like to include the full experiments on PFGM++ in the main paper and discuss the strong norm-t relation in the paper as well.\n\n Table 7. FID on PFGM++ baseline (D=128) and CIFAR-10\n| NFE | 9 | 13 | 21 | 35 |\n| --- | --- | --- | --- | --- |\n| PFGM++ | 37.82 | 7.55 | 2.34 | 1.92 |\n| PFGM++ with ES  | 17.91 | 4.51 | 2.31 | 1.91 |\n\nTable 8. FID on PFGM++ baseline (D=2048) and CIFAR-10\n| NFE | 9 | 13 | 21 | 35 |\n| --- | --- | --- | --- | --- |\n| PFGM++ | 37.16 | 7.34 | 2.31 | 1.91 |\n| PFGM++ with ES  | 17.27 | 4.88 | 2.20 | 1.90 |\n\nRegarding the small NFE regime on EDM baseline, we present the results of using the Euler solver below, since we found that, when NFE is smaller than 10 in EDM, the Heun solver performs much worse than the Euler solver mainly due to the twice-larger stepsize and severe truncation error.\n\nTable 9. FID on EDM baseline under small NFE regimes (CIFAR-10 and unconditional)\n| NFE | 5 | 7 | 9 | 13 |\n| --- | --- | --- | --- | --- |\n| EDM | 68.69 | 36.58 | 22.97 | 12.28 |\n| EDM-ES | 55.26 | 27.29 | 16.34 | 8.39 |\n\n\n**Q4. I don't immediately see why the quotient of $\\Delta N(t)=|\\epsilon_s| / |\\epsilon_t|$ can be translated into the scaling factor at $\\epsilon (x_t, t)$ during sampling. Because $\\Delta N(t)=|\\epsilon_s| / |\\epsilon_t|$ and $\\Delta N(t) = \\int_{t}^{T} \\lambda_t $ only implies that $ \\frac{d|\\epsilon^s (x_t, t)| / |\\epsilon^t (x_t, t)|}{dt} = \\lambda_t $.**\n\n**A4**. Updating soon"
                    }
                },
                "number": 4,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3513/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700471269263,
                "cdate": 1700471269263,
                "tmdate": 1700471269263,
                "mdate": 1700471269263,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "kGwvZE4yfz",
                "forum": "xEJMoj1SpX",
                "replyto": "6Klyh6hNhj",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3513/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3513/Authors"
                ],
                "content": {
                    "title": {
                        "value": "A short summary"
                    },
                    "comment": {
                        "value": "Dear reviewer, we summarize our points of view below:\n1. Our Epsilon Scaling is consistent with EDM\u2019s statement: the neural network tends to remove slightly too much noise. Our solution scales down the predicted noise thus avoiding removing too much noise.\n2. The reasoning about the exposure bias is fully analysed throughout Section 3 in our paper.\n3. We have shown that exposure bias exists in the whole chain of sampling, rather than mainly in the large t area where norm-t is strongly correlated. \n4. We agree that PFGM++ framework is robust to prediction error, but our argument \"the prediction error of $x_0$ is the cause of exposure bias\" does not contradict PFGM's opinion. Also, our experiments have shown the existence of exposure bias in PFGM++ and our method can consistently improve it. Therefore, according to your hypothesis, we have verified that the exposure bias is not due to the strong norm-t correlation.\n5. The $\\Delta N(t)$ question is unclear to us for two reasons. First, the solution of your reverse ODE is $x_t = \\frac{T}{t}x_T$, this leads to $x_0 = \\infty$ which is contradictory with your defined forward diffusion $x_t=-t^2\\epsilon$ because $x_0=0$ in this case. Second, the derivation of $\\Delta N(t)=\\int \\lambda_t/t dt$ looks obscure to us and we had tried to get your clarification but failed.\n\nOverall, the questions you raised were very interesting and insightful, but we deeply regret that your zero engagement in the discussion provided us with no opportunity for effective communication. Finally, we are always glad and open to having future discussions after the end of this discussion period. Thanks!"
                    }
                },
                "number": 14,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3513/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700738713986,
                "cdate": 1700738713986,
                "tmdate": 1700738713986,
                "mdate": 1700738713986,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "2roaJSJf2c",
            "forum": "xEJMoj1SpX",
            "replyto": "xEJMoj1SpX",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission3513/Reviewer_nv6a"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission3513/Reviewer_nv6a"
            ],
            "content": {
                "summary": {
                    "value": "This paper take account into the exposure bias problem in the diffusion model, which is the distribution shift between the distribution derived by the forward diffusion process and the (learned) reverse diffusion process at the same time. The exposure bias phenomenon starts with the observation that the expected noise (or signal) from a noisy input, or a drawn sample within the trajectory, is not accurately evaluated. Precisely, the variance of the expected signal given the more-noisy signal is greater in the generative reverse process than in the forward process. The intuitive approach to overcome this is to directly downscale the noise variance term with respect to the variance ratio, but from existing works, this is infeasible because when doing this, the output variance term will be outbounded to the (theoretically available) noise schedule. However, these existing works does not explain the ill performance in the low-NFE regime. This leads to the hypothesis that the negative effect of the exposure bias exceeds the gain of the optimal variance.\n\nEven though there exist some works that deal with the exposure bias, they all consider re-training of the existing diffusion models, which is costly and sometimes require additional hyperparameter tuning. To alleviate this, this paper proposes a new calibration method called epsilon scaling. The method of epsilon scaling is derived simply by a data-driven approach: draw expected noise from the training set (noisy data as input) and from sampling trajectory (intermediate particle in the trajectory) and compare the expected noise term. The motivating experiment shows that the noise term of the sampling data is always greater than that of the training data, and can be intuitively scaled via the ratio between the expectation of the training and sampling estimated noise mean. The experimental session shows that in a mid-NFE regime (20~100), this shows superior performance compared to non-calibrated cases. Moreover, the paper validates that this method alleviates the exposure bias."
                },
                "soundness": {
                    "value": "4 excellent"
                },
                "presentation": {
                    "value": "4 excellent"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "* The background and the motivating section is well clarified, by first notifying the necessity of calibrating the expected noise term in the diffusion sampling, and then compare the existing method to the newly proposed method.\n* To the best of our knowledge, this paper is the first training-free method that calibrates the distribution drift (e.g. exposure bias), by modifying the neural network output with some dataset statistics.\n* The experimental section showed that this training-free method works as a pipeline over a variety of existing diffusion model methods, including the early DDIM/ADM to the more recent LDM/EDM."
                },
                "weaknesses": {
                    "value": "* Although this method is introduced as a simulation-free method, it is not completely simulation-free; in order to determine $\\lambda_t$ for each timestep, one can compute the dataset statistics with respect to all intermediate trajectory particle, which require some simulation. (But not heavy.)\n * The assumption that the model value $x_\\theta^t$ is averaged to the true $x_0$ should be more verified.\n * In the experimental section, only constant or linearized values are used as the scaling schedule $\\lambda_t$. This implies that constant reduction of the expected noise is helpful for the sampling process.\n * Analytic-DPM is also a simulation-free (only calculates the optimal variance over the timesteps) This paper proposed that the limit of the Analytic-DPM method is that this is not advantageous in the low-NFE regime, but this paper reproduces well even in low-NFE regime (NFE=10), if the variance clipping in high-SNR (last or second last sampling step) timesteps is held. The fair comparison in various NFE regime should be done, which can affect the scoring of this paper."
                },
                "questions": {
                    "value": "* What about the case that the NFE is less than 20 or greater than 100?\n * At least for small NFE, I recommend adding some ablation studies on fully-searched $\\lambda_t$ with respect to all timesteps, rather than fixing this to the fixed value $b$ or taking a linear approximation.\n * It will more support the method, if the bias of the expected noise $\\epsilon_\\theta^s$ or $\\epsilon_\\theta^t$. This helps the reader to understand that by simply scaling down the expected noise calibrates the sampling steps, without taking bias (i.e. translating) the noise.\n\n======\n\nMiscellaneous\n * In the line below Equation 7, does $q ( x_t|x_{t+1},x_\\theta^{t+1})$ have the same distribution as $q(x_{t+1}|x_t,x_\\theta^t)$?\n * The exposure bias term $\\delta_t$ should be more precisely denoted in the main section. This proposed metric is only introduced in detail in the appendix section.\n * It will be helpful if the Analytic-DPM and the existing exposure bias methods are also considered as the benchmark, even though this does not use the baseline reverse diffusion process by modifying \n * It will be also helpful also to be mentioned if the Analytic-DPM requires the heavy clipping of the noise variance $\\beta_t$ in the near-signal part of the sampling, which causes"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "details_of_ethics_concerns": {
                    "value": "None."
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission3513/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission3513/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission3513/Reviewer_nv6a"
                    ]
                }
            },
            "number": 5,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission3513/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1699602945867,
            "cdate": 1699602945867,
            "tmdate": 1699636304554,
            "mdate": 1699636304554,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "u1Q0LGqw2t",
                "forum": "xEJMoj1SpX",
                "replyto": "2roaJSJf2c",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3513/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3513/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "Thank you very much for the reviews and helpful comments, we now reply to your questions:\n\n**Q1. The assumption that the model value $x_{\\theta}^t$ is averaged to the true $x_0$ should be more verified.**\n\n**A1**. The Gaussian assumption of the single step $x_0$ prediction error was first proposed at Analytic-DPM [1] and later on verified at [2] in their section 5.3 and appendix A.5, where they use Shapiro\u2013Wilk statistical test to verify that $x_{\\theta}^t-x_0$ is nearly an isotropic Gaussian, we will also mention this in the paper.\n\n[1] Fan Bao, Chongxuan Li, Jun Zhu, and Bo Zhang. Analytic-dpm: an analytic estimate of the optimal reverse variance in diffusion probabilistic models. ICLR, 2022b\n\n[2] Mang Ning, Enver Sangineto, Angelo Porrello, Simone Calderara, and Rita Cucchiara. Input perturbation reduces exposure bias in diffusion models. ICML, 2023  \n\n\n**Q2. Analytic-DPM is also a simulation-free (only calculates the optimal variance over the timesteps) This paper proposed that the limit of the Analytic-DPM method is that this is not advantageous in the low-NFE regime, but this paper reproduces well even in low-NFE regime (NFE=10), if the variance clipping in high-SNR (last or second last sampling step) timesteps is held. The fair comparison in various NFE regime should be done, which can affect the scoring of this paper..**\n\n**A2**. Our observation for Analytic-DPM is that their optimal sampling schedule $\\beta_{t}^*$ underperforms the DDPM baseline in the large NFE regime (400~1000), and $\\beta_{t}^*$ indeed performs well in the mid and low NFE range. We appreciate your suggestions of verifying our method in various NFE regimes and we add the results in A3\n\n\n**Q3. What about the case that the NFE is less than 20 or greater than 100?**\n\n**A3**. Thanks for mentioning this, our method also works well when NFE<20 and NFE>100. For example, in the ADM baseline, our ADM-ES consistently gains FID improvements on different datasets using NFE=10 and constant Epsilon Scaling (see Table 1). We will roll it out to all baselines we used in our paper after the short discussion period.\n\nTable1. FID under NFE=10 on ADM baseline\n|  | CIFAR-10 | LSUN 64x64 | ImageNet 64x64 (cond) |\n| --- | --- | --- | --- |\n| ADM | 23.37 | 45.35 | 27.90 |\n| ADM-ES (ours) | 16.89 | 23.66 | 20.94 |\n\nAs for large NFE regions, we show the full results on Analytic-DDPM baseline (Table 2) and ADM baseline (Table 3), where we use constant $\\lambda_t$ for Epsilon Scaling (ES). However, we highlight that it is unnecessary to use very high NFE in practice since NFE=100 achieves the near-optimal FID in most cases while being computationally efficient. Many works in the literature have also noticed this phenomenon [3][4][5].\n\nTable 2. FID on CIFAR-10 using Analytic-DDPM baseline (linear noise schedule)\n| NFE | 20 | 50 | 100 | 200 | 400 | 1000 |\n| --- | --- | --- | --- | --- | --- | --- |\n| Analytic-DDPM | 14.61 | 7.25 | 5.40 | 4.01 | 3.62 | 4.03 |\n| Analytic-DDPM with ES | 11.02 | 5.03 | 4.09 | 3.39 | 3.14 | 3.42 |\n\n\nTable 3. FID on CIFAR-10 using ADM baseline\n| NFE | 200 | 300 | 1000 |\n| --- | --- | --- | --- |\n| ADM | 3.04 | 2.95 | 3.01 |\n| ADM-ES | 2.15 | 2.14 | 2.21 |\n\n\n[3] Nichol, A. Q. and Dhariwal, P. Improved denoising diffusion probabilistic models. In ICML, 2021\n\n[5] Lu, C., Zhou, Y., Bao, F., Chen, J., Li, C., & Zhu, J. Dpm-solver: A fast ode solver for diffusion probabilistic model sampling in around 10 steps.\u00a0NeurIPS, 2022\n\n[4] Yilun Xu, Mingyang Deng, Xiang Cheng, Yonglong Tian, Ziming Liu, and Tommi Jaakkola. Restart sampling for improving generative processes. NeurIPS, 2023\n\n\n**Q4. At least for small NFE, I recommend adding some ablation studies on fully-searched $\\lambda_t$ with respect to all timesteps, rather than fixing this to the fixed value $b$ or taking a linear approximation**\n\n**A4**. Fully searching $\\lambda_t$ for each timestep is an expensive ablation study even for small NFE as we need either multi-round simulations for each timestep or exponential effort of brute-force search. Due to the short discussion time, we found it difficult to present the ablation results now, but we will add these to the paper in the future."
                    }
                },
                "number": 2,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3513/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700470774985,
                "cdate": 1700470774985,
                "tmdate": 1700470774985,
                "mdate": 1700470774985,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "amgD55fWDT",
                "forum": "xEJMoj1SpX",
                "replyto": "2roaJSJf2c",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3513/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3513/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "**Q5. It will more support the method, if the bias of the expected noise $\\epsilon_{\\theta}^s$ or $\\epsilon_{\\theta}^t$. This helps the reader to understand that by simply scaling down the expected noise calibrates the sampling steps, without taking bias (i.e. translating) the noise**\n\n**It will be also helpful also to be mentioned if the Analytic-DPM requires the heavy clipping of the noise variance $\\beta_t$ in the near-signal part of the sampling, which causes**\n\n**A5**. It looks like these two questions are sort of incomplete, would you mind re-stating your questions?\n\n\n**Q6. In the line below Equation 7, does $q(x_t | x_{t+1}, x_{\\theta}^{t+1})$ have the same distribution as $q(x_{t+1} | x_t, x_{\\theta}^t)$ ?**\n\n**A6**. Thank you for pointing this out, we intended to say that $q(\\hat{x_t}| x_{t+1}, x_{\\theta}^{t+1})$ and $q(x_{t-1}| x_{t}, x_{\\theta}^{t})$ are in the same function format and they are just the difference in notation. Clear clarification would be made, such as, 'we now compute compute $q(\\hat{x_t}| x_{t+1}, x_{\\theta}^{t+1})$, which share the same function format as $q(x_{t-1}| x_{t}, x_{\\theta}^{t})$, by substituting with the index $t+1$ and using $\\hat{x_t}$ to highlight that it is generated in the sampling stage'\n\n\n**Q7. The exposure bias term $\\delta_t$ should be more precisely denoted in the main section. This proposed metric is only introduced in detail in the appendix section.**\n\n**A7**. Thanks for the suggestion, we also realized that the exposure bias $\\delta_t$ is important for the readers to understand the metric and we will move it to the main paper.\n\n\n **Q8. It will be helpful if the Analytic-DPM and the existing exposure bias methods are also considered as the benchmark, even though this does not use the baseline reverse diffusion process by modifying.**\n\n**A8**. We tested the performance of our Epsilon Scaling on Analytic-DPM, PFGM++ even though they are not the initial target baselines of our method (see Table 2 for the results of Analytic-DPM). Regarding the exposure bias solutions, we also directly compare Epsilon Scaling with Input Perturbation [2] (a training regularization to reduce exposure bias) on the baseline ADM. The results shown in Table 4,5 demonstrate the effectiveness and generalization of Epsilon Scaling. We use constant $\\lambda_t$ for Epsilon Scaling (ES) below.\n\nTable 4. FID on CIFAR-10 (2nd Heun solver and D=128)\n| NFE | 9 | 13 | 21 | 35 |\n| --- | --- | --- | --- | --- |\n| PFGM++ | 37.82 | 7.55 | 2.34 | 1.92 |\n| PFGM++ with ES | 17.91 | 4.51 | 2.31 | 1.91 |\n\nTable 5. FID on CIFAR-10\n| NFE | 10 | 20 | 50 | 100 |\n| --- | --- | --- | --- | --- |\n| ADM (baseline) | 23.37 | 10.36 | 4.43 | 3.37 |\n| ADM-IP | 20.93 | 6.96 | 2.91 | 2.38 |\n| ADM-ES (ours) | 16.89 | 5.15 | 2.49 | 2.17 |"
                    }
                },
                "number": 3,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3513/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700471063985,
                "cdate": 1700471063985,
                "tmdate": 1700471063985,
                "mdate": 1700471063985,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "eyGeitcSkA",
                "forum": "xEJMoj1SpX",
                "replyto": "amgD55fWDT",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3513/Reviewer_nv6a"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3513/Reviewer_nv6a"
                ],
                "content": {
                    "title": {
                        "value": "Re: Response"
                    },
                    "comment": {
                        "value": "The Question 5 is that, the compared Analytic-DPM method only works fine when the handcrafted heavy clipping of the noise variance at the near-signal part of the sampling phase. If the proposed method works without this clipping, then it will be a better alternative of correcting the posterior variance.\n\nSubsequently, we appreciate the authors for detailed response on the questions and concerns that are raised. I remain the current score of marginal above threshold recommending this paper to be accepted, according at the current stage of the revision."
                    }
                },
                "number": 16,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3513/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700739180684,
                "cdate": 1700739180684,
                "tmdate": 1700739180684,
                "mdate": 1700739180684,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    }
]