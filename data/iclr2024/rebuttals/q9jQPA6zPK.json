[
    {
        "title": "Leveraging Hyperbolic Embeddings for Coarse-to-Fine Robot Design"
    },
    {
        "review": {
            "id": "3KNlyoEJ1u",
            "forum": "q9jQPA6zPK",
            "replyto": "q9jQPA6zPK",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission7350/Reviewer_Wtet"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission7350/Reviewer_Wtet"
            ],
            "content": {
                "summary": {
                    "value": "This paper investigates the soft cellular robot design problem. Instead of traditional approaches that apply genetic algorithms directly in the design space, this paper proposes to optimize the robot design in the robot embedding space, specifically a 2D hyperbolic space defined by Poincare ball. It constructs the embedding space by first sampling a set of robots in a coarse-to-fine procedure and applying Sarkar\u2019s method to construct the Poincare ball. It then finds the optimal design from the sampled set by applying CEM in the hyperbolic space. During design optimization, it follows previous work [1] to gradually adapt and optimize a transformer-based policy via PPO to control the robot designs in the current CEM population."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "1. Parameterizing the discrete robot design space into continuous embedding space and optimizing the robot in this continuous space is novel and interesting.\n\n2. The experiments clearly show the advantages of the proposed NERD over baselines."
                },
                "weaknesses": {
                    "value": "1. The generalizability of the proposed approach to other robot design representations is uncertain. Testing the approach on one common robot design representation would make it more convincing.\n\n2. The choice of Sarkar\u2019s construction for hyperbolic embedding needs more justification.\n\n3. The experiments need improvements."
                },
                "questions": {
                    "value": "1. The coarse-to-fine process seems specialized for the cellular robot representation in EvoGym. Is it generalizable to other robot design representations, such as articulate rigid robots (e.g. Wang et al. 2019 [1], Gupta 2021 [2])?\n\n2. Since coarse-to-fine clustering is based on running K-Means with different random seeds, it seems to be possible that there are two robot designs located in different subtrees. Will such two designs be embedded in similar locations in the hyperbolic space?\n\n3. Being relevant to the last question, it seems that the cell type is not used during the embedding. If I understand correctly, the embedding only captures the structural/subdivision similarity but not the cell functionalities. How can we interpret the distance in the embedding space into the similarity between designs? \n\n4. Some notations are unnecessarily complicated. For example, it would be easier to understand if just saying the algorithm clusters the robot cells into 2, 4, 8, \u2026, Nc/2, Nc components instead of using logarithm and exponential expressions.\n\n5. Page 6 \u201cIn practice, similarity here means that fine-grained robots only need to change one component to be the same as their parent robots\u201d. What does it mean? The fine-grained robots have more clusters than the parent robot, does it mean the fine-grained robots only change the cell type of one \u201cnew\u201d cell cluster?\n\n6. During the algorithm, is the robot design set fixed after the initial sampling? In other words, when you do $argmin$ in line 9 (Algorithm 1), do you always search for a design in the pre-sampled robot design pool?\n\n7. After reading the paper, the phrase \u201ccoarse-to-fine\u201d is indeed the way of building the candidate robot design pool instead of a coarse-to-fine optimization process. If this understanding is correct, the paper (especially the abstract and introduction) needs to be more clear about this point to prevent confusion.\n\n8. EvoGym has 32 tasks however the algorithm is only tested on 15 of them. It would be great if the authors could evaluate the proposed algorithm on other tasks as well.\n\n9. It would be great to provide the pseudo-code for the ablation variations to help understand the design of those ablation methods. For example, does HERD w/o C2F differ from full NERD mainly on the pre-sampled robot design set? So how does HERD w/o C2F sample the robot design set?\n10. From the visual results, most of the optimized designs only have one single cell type. Does this result from the limitation of the embedding approach since the embedding only captures structural information but is not informative about the cell types?\n\n11. How does the proposed embedding approach compare to other embedding approaches such as neural network embedding (e.g. GLSO [3])\n\n[1] Tingwu Wang, Yuhao Zhou, Sanja Fidler, and Jimmy Ba. Neural graph evolution: Towards efficient automatic robot design\n\n[2] Agrim Gupta, Linxi Fan, Surya Ganguli, and Li Fei-Fei. Metamorph: Learning universal controllers with transformers\n\n[3] Jiaheng Hu, Julian Whitman, and Howie Choset. GLSO: Grammar-guided Latent Space Optimization for Sample-efficient Robot Design Automation"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission7350/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission7350/Reviewer_Wtet",
                        "ICLR.cc/2024/Conference/Submission7350/Senior_Area_Chairs"
                    ]
                }
            },
            "number": 1,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission7350/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698180559414,
            "cdate": 1698180559414,
            "tmdate": 1700766267754,
            "mdate": 1700766267754,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "vBJypCt2tY",
                "forum": "q9jQPA6zPK",
                "replyto": "3KNlyoEJ1u",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission7350/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission7350/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Additional Experimental Results, New Pseudo-Code for Ablation Variants and Clarifications to Other Questions [Part 1]"
                    },
                    "comment": {
                        "value": "Thanks for the valuable comments and helpful suggestions. Here we provide additional experimental results and detailed explanations for your questions.\n\n> **Weakness 1 & Question 1**: The generalizability of the proposed approach to other robot design representations is uncertain. Testing the approach on one common robot design representation would make it more convincing. The coarse-to-fine process seems specialized for the cellular robot representation in EvoGym. Is it generalizable to other robot design representations, such as articulate rigid robots (e.g. Wang et al. 2019 [1], Gupta 2021 [2])?\n\n**A**: Though our paper mainly focuses on multi-cellular robot design problems, our method HERD can still be extended to other robot design representations, such as articulate rigid robots. Here we provide a solution to this setting. \n\nTo implement the idea of coarse-to-fine robot design in rigid robots, the major challenge is to define the refinement process for coarse-grained robot designs. Once the refinement definition is given, we can organize the design space as a hierarchy through recursive refinement, embed the hierarchy in hyperbolic space, and use CEM for optimization as we did in the paper. In the following, we discuss the refinement of rigid robots in detail.\n\nFormally, a rigid robot design $D$ can be represented by a tree $D=(V,E,g,h)$, where each vertex $v\\in V$ represents a joint in robot morphology and each edge $e=(v_i,v_j)\\in E$ represents a limb connecting two joints $v_i,v_j$ and $|E|=|V|-1$. The function value $g(v)$ defines joint-specific attributes and function value $h(v_i,v_j)$ defines limb-specific attributes. \n\nThe intuition behind the solution is to regard the coarse-grained robot as a simplified tree, to which we enrich details such as adding new vertices and new edges during refinement, such that the fine-grained robot has a 'similar' shape to the coarse-grained robot. Given a design $D$, we denote the finer-grained design of $D$ by $D'=(V',E',g',h')$. $D'$ is a valid refinement of $D$ if and only there is a vertex map $\\pi:V'\\to V$ such that the following conditions are satisfied:\n\n(i) (coarse-to-fine condition): $|V|<|V'|$;\n\n(ii) (edge condition): the edge $e'=(v'_i,v'_j)\\in E'$ if and only if there is an edge $e=(v_1,v_2)\\in E$ such that $\\pi(v'_i)=v_i$ and $\\pi(v'_j)=v_j$;\n\n(iii) (vertex attribute condition): for each $v'\\in V'$, we have $g'(v')=g(\\pi(v'))$;\n\n(iv) (edge attribute condition): for each $e'=(v'_i,v'_j)\\in E'$, we have $h'(v_i',v_j')=h(\\pi(v_i'),\\pi(v_j'))$;\n\nThe above conditions enable $D'$ to be one of the refinements of $D$ with a 'similar' shape. Given this refinement definition, we can then organize the design space of rigid robots as a hierarchy like multi-cellular robots and use the hyperbolic solution for coarse-to-fine optimization. \n\nDue to the time limitation of rebuttal, we only provide a conceptual solution. We believe this could be a promising future work.\n\n> **Weakness 2**: The choice of Sarkar's construction for hyperbolic embedding needs more justification.\n\n**A**: There are two reasons for this choice. Firstly, Sarkar's construction can embed the tree structure with arbitrarily low distortion [5], which matches our needs of embedding the tree of robot designs. Secondly, Sarkar's construction is a training-free method that will not bring extra computational cost and is also simple to implement.\n\n\n> **Weakness 3**: The experiments need improvements.\n\n**A**: Thank you for your suggestions. We have improved our experiments by including the results of other tasks from EvoGym in Figure 25 of Appendix C in the revised reversion of our paper. Please refer to Question 8 for extra discussions.\n\n\n> **Question 2**: Since coarse-to-fine clustering is based on running K-Means with different random seeds, it seems to be possible that there are two robot designs located in different subtrees. Will such two designs be embedded in similar locations in the hyperbolic space?\n\n**A**: There might be some misunderstandings. For each number of clusters, we only run K-Means *once* on robot cells per experiment. In this case, two similar robot designs will always be located in the same subtrees, then they will also be embedded in similar locations in the hyperbolic space."
                    }
                },
                "number": 6,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission7350/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700562026660,
                "cdate": 1700562026660,
                "tmdate": 1700562026660,
                "mdate": 1700562026660,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "DDr8BGfqVN",
                "forum": "q9jQPA6zPK",
                "replyto": "3KNlyoEJ1u",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission7350/Reviewer_Wtet"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission7350/Reviewer_Wtet"
                ],
                "content": {
                    "title": {
                        "value": "Reply to Author's Response"
                    },
                    "comment": {
                        "value": "Thank you for your detailed response. The additional results from the whole EvoGym tasks are helpful and thank you for the effort to put them together. After reading the response, I have two follow-up questions:\n\n1. The answer to Question 2 confuses me further. Does running K-Means only once per experiment mean you only have one robot for each number of clusters? In other words, each robot design only has one child fine-grained design, is that the case? Otherwise, how do you get different child designs for one parent design with only one K-means run? More details about how this step works would be super helpful and is also relevant to my Question 3.\n\n2.  For the reply to my Question 7, I do think I understand correctly. The coarse-to-fine is mainly for constructing the design candidate pool instead of optimization. The optimization process shown in Algorithm 1 can be \"automatic coarse-to-fine\" but there is no theoretical guarantee. It basically finds the nearest design in the embedding space around the current CEM mean and it can be possible to get coarse-grained robots in the later stage of the algorithm. Feel free to point out if I misunderstood anything here or if there is any other missing special mechanism designed to enforce the coarse to fine optimization."
                    }
                },
                "number": 12,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission7350/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700641287812,
                "cdate": 1700641287812,
                "tmdate": 1700641326258,
                "mdate": 1700641326258,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "XdhJ2Ez150",
                "forum": "q9jQPA6zPK",
                "replyto": "3KNlyoEJ1u",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission7350/Reviewer_Wtet"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission7350/Reviewer_Wtet"
                ],
                "content": {
                    "title": {
                        "value": "Reply to Authors' Response"
                    },
                    "comment": {
                        "value": "Thank you for your prompt response and further clarification on the robot construction process. Now I think it is clear to me how this process works. If I understand correctly, the short answer is that the cluster layout of all child robots under a parent robot are all the same while the only difference among them is their different choices of cell types. Also please update your manuscript about this detail, since I cannot find any explicit paragraph about this detail after I read the method section several times). Given this fact, I have one last question left.\n\nSince you only run K-means once for each parent robot design to construct finer robot layouts, will it miss some large branches of robot structures and can it be a limitation of the proposed method? For example, assume we have 4x4 grid cells, if our first K-means cluster the cell into left and right clusters such as (A, B denote for different cell types) \n     $$AABB$$\n     $$AABB$$\n     $$AABB$$\n     $$AABB$$\n    Is it still possible for the algorithm to get the robot in a top-down layout in its descendants as\n     $$AAAA$$\n     $$AAAA$$\n     $$BBBB$$\n     $$BBBB$$\n    Since each round of the algorithm is only able to change the cell type of one cluster, it seems this structure branch will be missed and can limit the optimality of the algorithm."
                    }
                },
                "number": 14,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission7350/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700680771048,
                "cdate": 1700680771048,
                "tmdate": 1700680771048,
                "mdate": 1700680771048,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "Qj6zxQIrEL",
                "forum": "q9jQPA6zPK",
                "replyto": "3KNlyoEJ1u",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission7350/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission7350/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Thank you for the extra feedback"
                    },
                    "comment": {
                        "value": "Thank you for your prompt reply! Here we provide additional explanations to your questions.\n\n> **Suggestion 1**: If I understand correctly, the short answer is that the cluster layout of all child robots under a parent robot is all the same while the only difference among them is their different choices of cell types. Also please update your manuscript about this detail, since I cannot find any explicit paragraph about this detail after I read the method section several times).\n\n**A**: This is a correct understanding. Thanks for the suggestion, we have updated our paper about this detail in Section 4.1.\n\n> **Question 1**: Since you only run K-means once for each parent robot design to construct finer robot layouts, will it miss some large branches of robot structures and can it be a limitation of the proposed method? For example, assume we have 4x4 grid cells, if our first K-means cluster the cell into left and right clusters such as (A, B denote for different cell types)\n> $$\n> \\begin{matrix} AABB \\\\\\ AABB \\\\\\ AABB \\\\\\ AABB \\end{matrix}\n> $$\n> Is it still possible for the algorithm to get the robot in a top-down layout in its descendants as\n> $$\n> \\begin{matrix} AAAA\\\\\\ AAAA\\\\\\ BBBB\\\\\\ BBBB \\end{matrix}\n> $$\n> Since each round of the algorithm is only able to change the cell type of one cluster, it seems this structure branch will be missed and can limit the optimality of the algorithm.\n\n**A**: We would like to thank the reviewer for pointing this out and here we provide some analysis into this issue. In short, part of this problem may occur, but it will not affect the optimization too much and can be easily solved.\n\nDuring our implementation, we did observe this issue. However, it is caused by the small number of mutations (the number of clusters to change), which is a hyperparameter. Actually, if we increase the value of this hyperparameter, we will be able to cover the entire design space definitely. For the sake of maintaining the similarity between parent robots and child robots, we set the value to $1$. There is a trade-off between this similarity and the coverage of design space. In the empirical study, we found that the final performance was sufficiently good when the number of mutations was set to $1$.\n\nApart from that, even though this hyperparameter is set to $1$, the robot hierarchy might still include most of Robot-1's child robots shown as follows:\n$$\n\\text{(Robot-1):}\n\\begin{matrix} AAAA\\\\\\ AAAA\\\\\\ BBBB\\\\\\ BBBB \\end{matrix}\\quad\n\\text{(Children):}\n\\begin{matrix} BBAA\\\\\\ BBAA\\\\\\ BBBB\\\\\\ BBBB \\end{matrix}\\quad \n\\begin{matrix} AABB\\\\\\ AABB\\\\\\ BBBB\\\\\\ BBBB \\end{matrix}\\quad\n\\begin{matrix} AAAA\\\\\\ AAAA\\\\\\ AABB\\\\\\ AABB \\end{matrix}\\quad\n\\begin{matrix} AAAA\\\\\\ AAAA\\\\\\ BBAA\\\\\\ BBAA \\end{matrix}\n$$\nThese child robots can be generated by mutating $2\\times 2$ cells of the following left-right robots that are included in the current robot hierarchy:\n$$\n\\begin{matrix} AABB\\\\\\ AABB\\\\\\ AABB\\\\\\ AABB \\end{matrix}\\quad\n\\begin{matrix} BBAA\\\\\\ BBAA\\\\\\ BBAA\\\\\\ BBAA \\end{matrix}\n$$\n\nThanks again for your efforts and insightful comments! We hope our clarification addresses your concerns and sincerely appreciate it if you could re-evaluate our work."
                    }
                },
                "number": 17,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission7350/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700739267959,
                "cdate": 1700739267959,
                "tmdate": 1700739398001,
                "mdate": 1700739398001,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "KPdmE7VUO2",
            "forum": "q9jQPA6zPK",
            "replyto": "q9jQPA6zPK",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission7350/Reviewer_S1iZ"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission7350/Reviewer_S1iZ"
            ],
            "content": {
                "summary": {
                    "value": "The paper proposes a novel co-design algorithm for multi-cellular robots. The authors noticed two critical insights 1. \"coarse-grained robots are less complicated to design and control due to their low degree of freedom\" and 2. \"coarse-grained robots can usually solve part of the task\". Built on these two insights, the authors proposed a coarse-to-fine design algorithm where a CEM optimizer optimize robot design in Poincare ball hyperbolic embedding space. The hyperbolic embedding embeds a coarse-to-fine tree structure so the optimization effectively. The authors benchmark the proposed algorithm on a variety of environments in evo-gym and shows the effectiveness of the algorithm."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "4 excellent"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "- The writing quality of this paper is very good. All design choices are introduced with clear motivation. Ideas are explained clearly with text and high-quality figures.  \n- It's quite novel for the authors to map the robot design to a space that has a favorable optimization landscape for methods as simple as CEM. \n- The two insights the authors point out, 1. \"coarse-grained robots are less complicated to design and control due to their low degree of freedom\" and 2. \"coarse-grained robots can usually solve part of the task\", has a potential to motivate new research\n- The proposed method is a sound algorithm  to the cellular robot design problem and the experiments thoroughly justified the point.\n\nOverall this is a technically solid paper with novel contributions that's clearly above acceptance threshold."
                },
                "weaknesses": {
                    "value": "- It's unclear how general is the hyperbolic space is for robotics design. See my questions in the next section\n- It's unclear to me to me how exactly any point on the manifold correspond to a robot configuration. Some concrete example may help understanding. If I randomly sample a point using a coordinate, what's the robot configuration it correspond to? It seems that human has to handcraft such rules."
                },
                "questions": {
                    "value": "- The authors chose Poincare ball as the hyperbolic embedding space for the design tree. I am wondering how general is this? In particular, hyperbolic manifold seems very limiting. For example, let's say the robot can be comprised of material A and material B. From the center, I extend two different trees branching towards material A and material B separately. However, in each branch, fine-grained branches start to contain configurations that blends A & B which means the two branches should merge. In this case, you will have to have a finite cylinder manifold, correct?\n\n- How exactly does the manifold correspond to designs or robot parameters? How many branches are there? I understand how do you map between the euclidean space and the hyperbolic space but this seems unclear. Giving more visualizations across the disk manifold will be helpful."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "details_of_ethics_concerns": {
                    "value": "NA"
                },
                "rating": {
                    "value": "8: accept, good paper"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission7350/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission7350/Reviewer_S1iZ",
                        "ICLR.cc/2024/Conference/Submission7350/Senior_Area_Chairs"
                    ]
                }
            },
            "number": 2,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission7350/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698813071168,
            "cdate": 1698813071168,
            "tmdate": 1700719656081,
            "mdate": 1700719656081,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "cgAR6voxNy",
                "forum": "q9jQPA6zPK",
                "replyto": "KPdmE7VUO2",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission7350/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission7350/Authors"
                ],
                "content": {
                    "title": {
                        "value": "New Visualization Results and Clarifications of Other Questions"
                    },
                    "comment": {
                        "value": "Thanks for your positive comments and constructive suggestions. Here we provide extra visualization results and detailed explanations for your questions.\n\n> **Weakness 1**: It's unclear to me how exactly any point on the manifold corresponds to a robot configuration. Some concrete examples may help to understand. If I randomly sample a point using a coordinate, what's the robot configuration it corresponds to? It seems that human has to handcraft such rules.\n\n**A**: We would like to clarify that we do not have to handcraft such rules. Instead, we simply calculate the distance between the sampled point and other points that are embedded in the hyperbolic manifold. Then we choose the point and its corresponding robot design with minimum distance. Please refer to Figure 21 in Appendix B.2 in the revised version of our paper for a simplified visualization.\n\n\n> **Question 1**:  It's unclear how general the hyperbolic space is for robotics design. The authors chose the Poincare ball as the hyperbolic embedding space for the design tree. I am wondering how general this is. In particular, the hyperbolic manifold seems very limiting. For example, let's say the robot can be comprised of material A and material B. From the center, I extend two different trees branching towards material A and material B separately. However, in each branch, fine-grained branches start to contain configurations that blend A & B which means the two branches should merge. In this case, you will have to have a finite cylinder manifold, correct?\n\n**A**: Thanks for the idea. In our experiment, the \"branch-merge problem\" might happen with a low possibility but will not influence the optimization severely. This is because our method HERD optimizes the robot designs starting from the center of the Poincar\u00e9 ball, and it can automatically identify the promising sub-space regardless of whether the branches are merged or not. The idea of the finite cylinder manifold might further improve final performance, but optimizing within a three-dimensional space may also introduce additional complexities to the problem, which requires in-depth empirical investigation.\n\n\n> **Question 2**: How exactly does the manifold correspond to designs or robot parameters? How many branches are there? I understand how you map between the Euclidean space and the hyperbolic space but this seems unclear. Giving more visualizations across the disk manifold will be helpful.\n\n**A**: To correspond a point in the manifold to a design, as we discussed in Weakness 1, we simply choose the pre-embedded robot design in the manifold with the minimum distance to the point.\n\nThe number of branches may vary with the level of the hierarchy of robot designs. For example, the number of branches originating from the root node only has two branches. As for the other level of the hierarchy, we restrict the number of branches originating from the same non-leaf node to $20$. This restriction may limit the search space, but since the hierarchy grows exponentially, the search space is still large enough to contain the designs that solve given tasks, as long as the number of branches exceeds a threshold.\n\nThanks for the suggestion of visualization. We have visualized the 'corresponding process' in a simplified disk manifold, as there are too many points in the original manifold to be visualized clearly. Please refer to Figure 21 in Appendix B.2 in the revised version of our paper for details"
                    }
                },
                "number": 5,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission7350/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700561896763,
                "cdate": 1700561896763,
                "tmdate": 1700561896763,
                "mdate": 1700561896763,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "kJ1xUoFyqN",
                "forum": "q9jQPA6zPK",
                "replyto": "KPdmE7VUO2",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission7350/Reviewer_S1iZ"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission7350/Reviewer_S1iZ"
                ],
                "content": {
                    "comment": {
                        "value": "Thank you for your clarifications and additional visualizations. \n\nI acknowledge that I've read your responses carefully as well peer reviewers' comments. After reading through reviewer Wtet's comments carefully, I realized there were a few components that I didn't fully understand in my first pass. However, your responses are very helpful to give me a better under standing.\n\nOverall I think the merits of the paper still outweight its problems. On the other hand due to the reason below I decide to lower my confidence to 3."
                    }
                },
                "number": 16,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission7350/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700719637115,
                "cdate": 1700719637115,
                "tmdate": 1700719637115,
                "mdate": 1700719637115,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "Mvrr3YoZji",
            "forum": "q9jQPA6zPK",
            "replyto": "q9jQPA6zPK",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission7350/Reviewer_9c5Z"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission7350/Reviewer_9c5Z"
            ],
            "content": {
                "summary": {
                    "value": "This paper proposes a coarse-to-fine method for designing multi-cellular robots with hyperbolic geometry."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "4 excellent"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "1. The paper is well written, easy to follow, the visualizations are nicely designed and the accompanying website shows impressive results.\n2. Incorporating hyperbolic geometry into robot planning is innovative and interesting.\n2. The experiment shows promising results over a variety of tasks."
                },
                "weaknesses": {
                    "value": "1. As one of the concerns of multi-cellar system, the design space is very large, so how hyperbolic solution solved this problem is not well examined.\n2. The quantitative analysis of the proposed model is somewhat absent, some tables will help the understanding of the evaluation of different methods."
                },
                "questions": {
                    "value": "please see the weaknesses"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission7350/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission7350/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission7350/Reviewer_9c5Z"
                    ]
                }
            },
            "number": 3,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission7350/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698840055379,
            "cdate": 1698840055379,
            "tmdate": 1699636879280,
            "mdate": 1699636879280,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "WydNucJ0r9",
                "forum": "q9jQPA6zPK",
                "replyto": "Mvrr3YoZji",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission7350/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission7350/Authors"
                ],
                "content": {
                    "title": {
                        "value": "New Quantitative Analysis and Clarifications of Other Questions"
                    },
                    "comment": {
                        "value": "Thanks for your comments and valuable suggestions. Here provide additional quantitative analysis of the proposed method and explanations for your questions.\n\n> **Weakness 1**: As one of the concerns of the multi-cellar system, the design space is very large, so how a hyperbolic solution solves this problem is not well examined.\n\n**A**: Our method HERD solves the large space problem of multi-cellular system by adopting a coarse-to-fine robot design mechanism, in which HERD starts by finding the optimal coarse-grained robot designs and subsequently refines them. For a simple and better optimization, we embed any-grained robots in hyperbolic space and use Cross-Entropy Method to optimize robot designs in hyperbolic space. The design space is substantially reduced in this way because (1) the design space of coarse-grained robots that HERD optimizes first is much smaller than the original design space; (2) by using the guidance of coarse-grained designs, HERD focuses on promising sub-space without the needs to explore the whole space, which further reduces the design space. This intuition is elaborated in Figure 1 and the Introduction Section of our paper. \n\nWe have also examined the above solution empirically in our paper. We first show that HERD can successfully solve plenty of tasks in Figures 3 & 22, then we check the functionality of coarse-to-fine and hyperbolic embedding components in Figure 4, finally, we visualize the optimization process of HERD in Figure 5 for an in-depth understanding of how it works. \n\n\n> **Weakness 2**: The quantitative analysis of the proposed model is somewhat absent, some tables will help the understanding of the evaluation of different methods.\n\n**A**: Thanks for the suggestion. We have revised our paper and updated several tables of the performance comparisons with baselines and ablation studies in Appendix D. Specifically, we compare our method HERD with various baselines in Table 2 and HERD outperforms other robot design methods in most tasks, which showcases the effectiveness of our method. We also display the numeric results of ablation studies in Table 3 in Appendix D, which demonstrates the validity of the main components of our method: coarse-to-fine robot design and hyperbolic embedding. Please refer to the updated version of our paper for detailed quantitative results."
                    }
                },
                "number": 4,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission7350/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700561790752,
                "cdate": 1700561790752,
                "tmdate": 1700561790752,
                "mdate": 1700561790752,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "uZqyoTNzXQ",
                "forum": "q9jQPA6zPK",
                "replyto": "WydNucJ0r9",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission7350/Reviewer_9c5Z"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission7350/Reviewer_9c5Z"
                ],
                "content": {
                    "comment": {
                        "value": "Thank you for the explanation. \n\nI understand conceptually that a coarse-to-fine design reduces computational complexity. All evaluations presented are qualitative, as indicated by the authors in Figures 3, 4, 5, and 22. Demonstrating quantitatively how much computation was saved would further enhance the significance of this work. \n\nI will stay (slightly) positive to this paper."
                    }
                },
                "number": 15,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission7350/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700689175987,
                "cdate": 1700689175987,
                "tmdate": 1700689175987,
                "mdate": 1700689175987,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "TF5Yv0EEI9",
            "forum": "q9jQPA6zPK",
            "replyto": "q9jQPA6zPK",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission7350/Reviewer_WvQM"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission7350/Reviewer_WvQM"
            ],
            "content": {
                "summary": {
                    "value": "This paper addresses the task of multi-cellular soft robot design given a specific robotic task in simulation. \n\nIt proposes a novel robot design optimization method to enable efficient optimal design search in a vast robot design space. The proposed method searches the design space in a coarse-to-fine manner. The design space is first transformed into a hyperbolic space, where each robot design is embedded into the hyperbolic space via a train-free strategy. The finer design has a larger embedding norm, forming a coarse-to-fine robot hierarchy in the hyperbolic space. Then, the Cross-Entropy Method is adopted to search in the hyperbolic space.\n\nThis paper uses 15 tasks from EvoGym for experiments. It compares with manual design and several robot design methods. It also conducts ablations on the coarse-to-fine and hyperbolic embeddings."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "1. This paper is well-written.\n2. The experiment section provides enough evaluations, i.e., 15 diverse tasks in the simulation.\n2. Searching robot design space in a coarse-to-fine manner via hyperbolic space is novel."
                },
                "weaknesses": {
                    "value": "1. The issue of local optimal (not very good performance compared to other baselines) and large variance: Does the parent node of an optimal robot design node consistently outperform the parent node of a non-optimal robot design node? If not, coarse-to-fine seems greedy and vulnerable to local optimal. The proposal method, HERD, appears to have no mechanism for exploration in the global design space, potentially leading to the high variance in Figure 3. And HERD is not significantly better than baselines."
                },
                "questions": {
                    "value": "1. What are the policy architecture and learning methods adopted for the baselines? Are they the same as those of HERD?\n2. HEARD w/o HE:  how to integrate NGE with CEM? Could you provide more details on this ablation?\n3. How is the performance of a HandCrafted robot determined\uff1f Does it use a transformer-PPO policy? If yes, it should also be reported with variance, e.g., in Figure 3. \n4. How can we guarantee that sequential refinements on a coarse design are better than sequential refinements on another coarse design, given that the former coarse design outperforms the latter coarse design?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission7350/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission7350/Reviewer_WvQM",
                        "ICLR.cc/2024/Conference/Submission7350/Senior_Area_Chairs"
                    ]
                }
            },
            "number": 4,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission7350/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698887209136,
            "cdate": 1698887209136,
            "tmdate": 1700616139359,
            "mdate": 1700616139359,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "ojfvL919ot",
                "forum": "q9jQPA6zPK",
                "replyto": "TF5Yv0EEI9",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission7350/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission7350/Authors"
                ],
                "content": {
                    "title": {
                        "value": "New Visualization Results, New Pseudo-Code for Ablation Variants, and Clarifications of the Questions [Part 1]"
                    },
                    "comment": {
                        "value": "Thanks for the comments and helpful suggestions. Here we provide detailed clarifications to your questions.\n\n> **Weakness 1**: The issue of local optimal (not very good performance compared to other baselines). HERD is not significantly better than baselines.\n\n**A**: We respectfully disagree with this claim. Our method HERD is significantly better than baselines as shown in Figure 3 and Figure 22 of the paper, which includes 15 tasks. In summary, (1) HERD outperforms all the other robot design baselines (CuCo, Vanilla RL, BO, GA, CPPN-NEAT) in 12 tasks out of 15 tasks; (2) HERD is much better than HandCrafted Robot in 7 tasks and has a comparable performance in 5 tasks. \n\nHERD utilizes a variant of the Cross-Entropy Method (CEM) for optimizing the coarse-to-fine robot design process. CEM is a popular stochastic optimization method due to its simplicity and effectiveness. Because of its population-based search and stochastic nature, it has less tendency to local optimality convergence than many other heuristic methods. Its global optimality can be further enhanced by using a mixture of Gaussian models [1], which can be an interesting direction for future work. \n\n\n> **Weakness 2**: The proposal method, HERD, appears to have no mechanism for exploration in the global design space. \n\n**A**: There might be some misunderstandings. HERD has an exploration mechanism, which is built inherently in the Cross-Entropy Method (CEM) -- a stochastic optimization method we use. Concretely, HERD maintains a distribution of robot designs and optimizes the distribution with CEM. When sampling from this distribution, HERD explores the robot design space such that robots of lower performance will still be sampled, though with a relatively lower possibility. \n\n\n> **Weakness 3**: The issue of high variance in Figure 3. \n\n**A**: We appreciate the reviewer pointing this out. High variance is a common challenge in the field of robot design. For example, GA in task Carrier-v1 and CuCo in task GapJumper-v0 also show high variance. One major cause of this problem is that the optimal control policies are possibly difficult to learn as the robot designs are changing over time. Similar robots might have totally different performances due to the learning issue of control policies. For a fair comparison, our method HERD together with baselines CuCo, Vanilla RL, and HandCrafted Robot adopt the same control policy architecture (transformers) and optimization algorithm (PPO). It is an open and important direction for future work to investigate more effective control policy learning methods in the field of robot design.\n\n> **Weakness 4 & Question 4**: Does the parent node of an optimal robot design node consistently outperform the parent node of a non-optimal robot design node? If not, coarse-to-fine seems greedy and vulnerable to local optimal. How can we guarantee that sequential refinements on a coarse design are better than sequential refinements on another coarse design, given that the former coarse design outperforms the latter coarse design?\n\n**A**: We do not need to guarantee that \"the parent node of an optimal robot design node consistently outperforms the parent node of a non-optimal robot design node\", because our method HERD is not a greedy deterministic algorithm. As we discussed in Weakness 2, HERD uses a stochastic optimization method to optimize the distribution of robot design instead of one or several robot samples. Hence, HERD can still explore child nodes from another subtree if the current child nodes are less efficient.\n\n\n> **Question 1**: What are the policy architecture and learning methods adopted for the baselines? Are they the same as those of HERD?\n\n**A**: The baselines CuCo, Vanilla RL, and HandCrafted Robot adopt the same control policy architecture (transformers) and learning method (PPO) as our method HERD. For the other baselines GA, BO, and CPPN-NEAT, we use their official implementations from CuCo and EvoGym."
                    }
                },
                "number": 2,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission7350/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700561480426,
                "cdate": 1700561480426,
                "tmdate": 1700561596564,
                "mdate": 1700561596564,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "sfP82qSUJS",
                "forum": "q9jQPA6zPK",
                "replyto": "ojfvL919ot",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission7350/Reviewer_WvQM"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission7350/Reviewer_WvQM"
                ],
                "content": {
                    "comment": {
                        "value": ">A: The baselines CuCo, Vanilla RL, and HandCrafted Robot adopt the same control policy architecture (transformers) and learning method (PPO) as our method HERD. For the other baselines GA, BO, and CPPN-NEAT, we use their official implementations from CuCo and EvoGym.\n\nThanks for the clarification!\n\nI think it is important to mention that the control policy of other baselines GA, BO, and CPPN-NEAT is **not the same** as other baselines and your method."
                    }
                },
                "number": 9,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission7350/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700615761919,
                "cdate": 1700615761919,
                "tmdate": 1700615761919,
                "mdate": 1700615761919,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "83l06HEYKe",
                "forum": "q9jQPA6zPK",
                "replyto": "sfP82qSUJS",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission7350/Reviewer_WvQM"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission7350/Reviewer_WvQM"
                ],
                "content": {
                    "comment": {
                        "value": "All my concerns are addressed.\n\nI raised my score to Rating: 6."
                    }
                },
                "number": 10,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission7350/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700617965376,
                "cdate": 1700617965376,
                "tmdate": 1700617965376,
                "mdate": 1700617965376,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    }
]