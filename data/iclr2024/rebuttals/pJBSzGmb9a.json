[
    {
        "title": "On the Global Convergence of Natural Actor-Critic with Neural Network Parametrization"
    },
    {
        "review": {
            "id": "vNDtRrBuiF",
            "forum": "pJBSzGmb9a",
            "replyto": "pJBSzGmb9a",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission7035/Reviewer_koRw"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission7035/Reviewer_koRw"
            ],
            "content": {
                "summary": {
                    "value": "The paper provides a theoretical convergence analysis for natural actor-critic with neural network function approximation for the critic and softmax parameterization for the actor. The authors are able to prove global convergence is proven."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "This paper studies a problem closely related to the practice. Data are allowed to be Markovian in the analysis, which uses a result from Bertail & Portier (2019), which might be of independent interest."
                },
                "weaknesses": {
                    "value": "First of all, the authors claim in the introduction that existing works that study actor-critic with neural network function approximation only provide asymptotic results. However, I found the following paper, which is not compared with in this paper:\n\nCayci, Semih, Niao He, and R. Srikant. \"Finite-time analysis of entropy-regularized neural natural actor-critic algorithm.\" arXiv preprint arXiv:2206.00833 (2022).\n\nCould the authors kindly clarify how the result in this submission differentiates from the one in this paper from 2022?\n\nIn addition, the authors consider the flexibility of allowing non-i.i.d. samples in their analysis as a contribution of this paper, but the following paper, which the authors have already cited, also allows Markovian data. Could the authors shed some light on how the analysis technique used in this paper differs from the one in the following paper? (I understand their result is only for linear function approximation. Does this make a big difference in the part of analysis pertaining to the concentration over non-i.i.d. Markovian data?)\n\nXu, Tengyu, Zhe Wang, and Yingbin Liang. \"Improving sample complexity bounds for (natural) actor-critic algorithms.\" Advances in Neural Information Processing Systems 33 (2020): 4358-4369.\n\nThe above two questions is mainly concerned with the significance/novelty of this submission. I also have several technical questions, which I will defer to the Questions section."
                },
                "questions": {
                    "value": "- What is the architecture of your neural network in Algorithm 1? How does this function class look like? You stated $L$ layers and $m$ neurons per layer in Section 4, but is there any other requirements or specifications? A paragraph that states this more rigorously would be appreciated.\n\n- A related question is: how does the size of your neural network function class or $\\Theta$ affect the variance portion of your final error bound? Your current bound does not show any dependence on it. Could you explain why the upper bound of the expectation of a supremum over $\\Theta$ does not need to depend on the complexity of $\\Theta$ in Equation (110)? Otherwise, if the Rad quantity in (110) actually depends on $\\Theta$, could you explicitly present in your theorem how $C_k$ in your Equation (111) depends on $\\Theta$, as most existing theoretical results do. This is an important aspect of such theoretical results, since taking a covering with a supremum usually compromises the sharpness of the bound. If you'd like to compare with the rates in other theoretical works, it might come across as unfair if your bound does not show this aspect.\n\n- Is there any difference between Algorithm 1 and the procedure you actually use in your theoretical analysis? Algorithm 1 seems to be a practical implementation which uses gradient descent to solve the objective in Equation (11), whereas I believe you assume there is an oracle that can find the global minimizer of (11) in your theoretical analysis. (Otherwise, could you explain how you avoided the non-convexity?) If this is the case, this difference should be made much clearer in the writing, and Theorem 1 should not be claimed as a result for the current Algorithm 1.\n\n- Please let me know if the following is correct: $\\alpha m$ can be $\\Theta(\\frac{1}{\\mathrm{poly}(n,L)})$, so the second line of Equation (17) can be viewed as $\\frac{1}{K(1-\\gamma)}\\sum_{k=1}^K\\sum_{j=0}^{J-1}(1 - \\frac{1}{n^2})^n$. Since $(1 - \\frac{1}{n^2})^n$ is monotonically increasing and converges to a constant, is this term on the order of $\\frac{J}{1-\\gamma}$? If this is the case, it is non-decaying.\n\n- What is $\\mu_k$ in Theorem 1? Isn't the loss function in Equation (9) just MSE?\n\n- Could you also explain the following in Remark 3:\n\n> This term is present due to the fact that the optimization for the critic step is non-convex, hence convergence can only be guaranteed with a high probability. We show in the Appendix F that if the critic is represented by a two layer neural network with ReLU activation, using the convex reformulation as laid out in Mishkin et al. (2022), a deterministic upper bound on the error can be obtained.\n\nNormally, the high probability bound is due to the randomness in your samples. Could you explain why you attribute it to the non-convexity? Furthermore, when everything is convex, could you explain why you can obtain a deterministic result, when the samples from Line 5 and 10 of Algorithm 1 are still random?\n\n- Also, the notation $n.J$ in Algorithm 1 and Theorem 1 seems weird. Did you mean to write $n\\cdot J$? Same with other instances of dots.\n\nDespite my serious concerns at the moment, I'm open to raising my score if authors' clarification could clear my questions."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "3: reject, not good enough"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission7035/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission7035/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission7035/Reviewer_koRw"
                    ]
                }
            },
            "number": 1,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission7035/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1697832719416,
            "cdate": 1697832719416,
            "tmdate": 1699636826336,
            "mdate": 1699636826336,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "Jjg5wrZrfi",
                "forum": "pJBSzGmb9a",
                "replyto": "vNDtRrBuiF",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission7035/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission7035/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Reply To Reviewer"
                    },
                    "comment": {
                        "value": "__Weaknesses__\n\n* With regards to the paper Cayci et.al (2022), thank you for pointing it out. Since the paper is on archive, it did not come across in our literature review. However, having gone through it, we can see that in this paper, the actor and critic are both restricted to a two layer neural network, this is in contrast to our work which allows for a multi layer actor and critic. Additionally, note that this work achieves a sample complexity of $\\epsilon^{-6}$ which is worse than our result or $\\epsilon^{-4}$ even in this restricted setting. We will add this paper in our related works.\n\n*  Secondly with respect to the the non-i.i.d analysis in Xu et al.(2020), the ergodicity assumption is used to bound the difference between the estimate of the advantage function obtained form the Markovian data and that which would have been obtained from i.i.d data. This can be seen in Page 23 equation 25. For our case we account for the Markovian dependence in the critic samples by splitting the critic optimization as given in Equation (25), here the corresponding term is $\\epsilon^{3}_{k,j}$. This term is bounded using the theory in Bertail and Porter (2019). Additionally, since we calculate the natural gradient update through the optimization given in equation (29), we account for the Markovian dependence of its samples through the result of Doan (2022). Note that by using this optimization we avoid having to invert our estimate of the fisher information matrix as is the case for Xu et al.(2020). \n\n__Questions__ \n* With regards to the architecture of the network, the results we have used from Zhu (2019), were proven for  a fully connected feed-forward neural network with ReLU activation layers. This result also holds for a smooth activation function (the author states that the results can be made sharper for a smooth activation function), this result would also apply for a conventional neural network as well as a residual neural network. For our case we can assume the case of a fully connected neural network with $L$ layers, at least $m$ neurons per layer and with an ReLU activation function for each layer.\n\n* With regards to Equation (110), the set $\\Theta$ here does not represent the class of all possible neural networks but only the two neural networks corresponding to the parameters $\\theta_{k,j}^2$  and $\\theta_{k,j}^3$, this is a typo on our part, we will rename it to $\\Theta^{'}$ and state that it is the set of only two parameters $\\theta_{k,j}^2$ and $\\theta_{k,j}^3$. This is because we only need this bound for the two mentioned parameters as shown in Equation (112) and (113). We will make that change in the final version. With regards to the property of the function class, Bertail and Porter mentions that the function class has to be uniformly bounded. This condition is satisfies for the set $\\Theta^{'}$ as it has only two elements and the state action pairs are defined on a bounded space.\n      \n* Thank you for pointing out this result, this was an over-site on our part. The term that you mentioned $\\left(1-\\frac{1}{n^{2}}\\right)^{n}$ does indeed converge to $1$ and hence the term on the right you have pointed out will be non-decaying. However, we can resolve this by a minor modification. In lines  $7-11$ of Algorithm 1 we perform stochastic gradient descent with data sample of size $n$ and also putting the number of iterations equal to $n$. We did not consider the edge case which you have mentioned where the error term becomes non-decaying. However this can be remedied with a minor modification. Instead of lines  $7-11$ of Algorithm 1 we will have the following.\n  * Sample and store $n$ state action pairs and the resulting rewards using policy $\\pi^{\\lambda_{k}}$\n  * Then randomly sample the tuple $(s_{i},a_{i},r(s_{i},a_{i}),s_{i+1})$ from the stored data, calculate $y_{i}$ and preform the gradient descent step as in line 9 and 10 of Algorithm 1 respectively. This random sampling and update will be performed for $T_{k,j}$ iterations.\n\nThis will result in the superscript in the term to be $T_{k,j}$ instead of $n$. This can be seen from Equation 13.2 on page 34 of Zhu (2019) (please note that for some reason, the supplementary part of this paper is not available on the PMLR website, but is available on the archive version). Now using the result of Theorem 2 of  Zhu (2019), for $T_{k,j} = \\Theta\\left(poly(n,L)\\cdot{\\log\\frac{1}{\\epsilon}}\\right)$ the term inside the summation will be upper bounded by epsilon.  \n\n* The term $\\mu_{k}$ represents the strong convexity parameter in Equation (9), since the function in Equation (9) is the expectation of a square loss function, we have to consider its strong convexity parameter."
                    }
                },
                "number": 5,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission7035/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700000349886,
                "cdate": 1700000349886,
                "tmdate": 1700000349886,
                "mdate": 1700000349886,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "sJQrQdUhoN",
            "forum": "pJBSzGmb9a",
            "replyto": "pJBSzGmb9a",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission7035/Reviewer_vh1k"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission7035/Reviewer_vh1k"
            ],
            "content": {
                "summary": {
                    "value": "The authors propose an actor-critic method with neural network parametrization to solve the RL problem with discrete time, a finite action space and a (potentially) continuous state space. A natural policy gradient method is used for the actor and a method similar to the deep Q-net is applied for the critic. The authors give a global convergence result for the algorithm."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "The authors propose a new method to solve the RL problem, which has a nice convergence result. I would suggest the paper be published if the author could address my concerns and problems."
                },
                "weaknesses": {
                    "value": "The presentation is not clear enough and there are many mistakes. The correctness of the main theorem remains questionable. I will put the details in \u201cQuestions\u201d.\nFor example, the authors did not give definition for the notation r\u2019(s,a), which caused some confusion. I will, according to the description of Definition 2, understand r\u2019(s,a) as a realization of R(\\cdot | s,a), which is the same as r(s,a)."
                },
                "questions": {
                    "value": "Major questions:\n1.\tPage 3. The definition of Bellman operator. In (3), the authors use one realization of the reward r\u2019(s,a) to define the Bellman operator. This makes (T^\\pi Q)(s,a) a random variable. So, T^\\pi Q^\\pi = Q^\\pi does not hold. Maybe the authors can consider the setting when the reward is deterministic, otherwise there is a lot to fix. A more challenging alternative is to redefine the Bellman operator with r\u2019(s,a) replaced by its conditional expectation. As a follow up, when T^\\pi Q is not deterministic, \\eps_{approx} in Assumption 4 could be as large as O(1) according to the variance of the reward. In this case, Theorem 1 becomes meaningless. As another follow up, in page 8 eqn (24), Lemma 2 of Munos (2003) is also for deterministic reward.\n2.\tPage 4 before (8). The authors use the property of compatible function approximation, which is an extremely strong assumption for neural network parametrization. According to Sutton, this means \\frac{\\partial Q}{\\partial \\theta} = \\frac{\\partial \\pi}{\\partial \\lambda} / \\pi. And Sutton also points out (in the paper that the author cited) that \u201cQ being linear in the features may be the only way to satisfy this condition\u201d. On the one hand, this assumption is too strong to make the work practical. On the other hand, there is no critic parametrization until eqn (10). So, I think a normal version of the policy gradient theorem (theorem 1 in the ref) is enough.\n3.\tTheorem 1 (and also Lemma 7). The authors give no description or assumption on \\mu_k. Therefore, the constants for big O in the theorem depend on \\mu_k, and hence depend on K. This makes the theorem meaningless. I would suggest giving a positive lower bound for \\mu_k. Please note that \\mu_k is also the lower bound for the (eigenvalue of the) Fisher information matrix (7), which guarantees that F is invertible.\n4.\tLemma 6. According to the description of Lemma 6, there is no randomness in (50) and I don\u2019t see why \u201cwith high probability\u201d is needed. My understanding is that (50) left is not an expectation, but a conditional expectation only w.r.t. the RL problem. The randomness comes from the initialization of neural network etc. However, the authors give no description of the network (except the width). I believe inequality like (50) could only hold when one gives a very explicit setting for everything. Please clarify the setting with details so that we can justify the application of the referenced theorems.\n5.\tProof of theorem 1. Eqn (56) is not consistent with line 20 in the algorithm. There should be a coefficient 1/(1-\\gamma). I think the statement of theorem 1 need modification accordingly, because you are tracking the dependence on 1/(1-\\gamma). (58)-(60), when you define err_k, do you mean to use A^{\\pi_{\\labmda_k}} instead of A_{k,J}? Otherwise, it is not consistent with (66). \n\nMinor questions:\n1.\tPage 2. The sentence \u201cthe non-convexity of the critic can be avoided if we use the natural policy gradient algorithm\u201d is not clear. What do you mean by \u201cthe non-convexity of the critic\u201d? Natural policy gradient is the actor algorithm, why does it resolve the problem for the critic?\n2.\tPage 2 Related works: actor-critic methods. I think papers like \u201cProvably global convergence of actor-critic: A case for linear quadratic regulator with ergodic cost\u201d (NIPS2019) and \u201cSingle Timescale Actor-Critic Method to Solve the Linear Quadratic Regulator with Convergence Guarantees\u201d (JMLR2023) are also related.\n3.\tPage 3. Why does the stationary distribution \\rho^\\pi_\\nu depend on the initial distribution \\nu, especially when Assumption 2 holds?\n4.\tPage 4. The definition of natural policy gradient method. I believe that the dagger means inverse of pseudo-inverse of the matrix. It should not appear in eqn (7), where the Fisher information matrix is defined. Also, please clarify the dagger notation.    \n5.\tPage 4. Please give the full name of DQN when it first appears.\n6.\tPage 6 after (15). In Xu and Gu (2020), I did not find the assumption described in the paper.\n7.\tProof of theorem 1. (53)(54) looks unnecessary when you have (55)(56). (54) looks wrong. (58) should be >= instead of <=? Eqn (58) to (59) has nothing to do with the performance difference lemma, maybe you mean eqn (59) to (60)? (59) first line, should use the advantage function instead of the Q function? (59) second line, should be + instead of -? Eqn (63), why does k goes to J-1 instead of K? Also, in (63), \\pi_{\\lambda_0} should be \\pi_{\\lambda_1}? It seems that one of \\eta is omitted from (62) to (63), which is not wrong but makes the proof harder, why doing this?\n8.\tPlease add an explanation for the log(|A|) in eqn (64).\n\nThere also some Typos:\nPage 3 after \u201cHence, we can write\u201d d^\\pi(s_0) should be d^\\pi_{s_0}(s)\nPage 4. \\Lambda should be a subset (not element) of R^d\nPage 5 Algorithm. Line 12, should be Q_k = Q_{\\theta_n}?\nPage 6 eqn (15). w^t should be w? \nIn theorem 1, Lemma 6,7, many of the dots (as product) are written as periods.\nTheorem 1 eqn (17)-(19) and in the proof. \\lambda_K should be \\lambda_k?\nPage 9 Upper Bounding Error in Actor Step. There should be a square in the expression below.\nPage 14 Def 9. Z is a subset of R^n.\nLemma 2 consider three random variables.\nPage 16 eqn (47) bias should be approx.\nPage 16 bottom, \\theta_k should be \\lambda_k, argmin should be min.\nPage 17 eqn (57)-(62), lack the second \u201cKL(\u201d."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "5: You are absolutely certain about your assessment. You are very familiar with the related work and checked the math/other details carefully."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission7035/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission7035/Reviewer_vh1k",
                        "ICLR.cc/2024/Conference/Submission7035/Senior_Area_Chairs"
                    ]
                }
            },
            "number": 2,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission7035/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698186355318,
            "cdate": 1698186355318,
            "tmdate": 1700672007886,
            "mdate": 1700672007886,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "bcwLOQzcnK",
                "forum": "pJBSzGmb9a",
                "replyto": "sJQrQdUhoN",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission7035/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission7035/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Reply To Reviewer"
                    },
                    "comment": {
                        "value": "__Major Questions__\n* We apologise for the error in the definition of $T^{\\pi}Q(s,a)$. It should have been defined as $T^{\\pi}Q^{\\pi}(s,a) = \\mathbb{E}(r(s,a)) + {\\gamma}{\\int}Q(s^{'},\\pi(s^{'}))P(ds^{'}|s,a)$, where $\\mathbb{E}(r(s,a))$ is the expected reward given the state action pair $(s,a)$. This would make $T^{\\pi}Q(s,a)$ a fixed value and not a random variable. With regards to our comment about about the result in Munos (2003), we referenced that result as a result  similar to that was used in Faharmand (2010), which we used for our analysis. As for the result we used (in Equations 74-77), it depends upon the property $T^{\\pi}Q^{\\pi}(s,a)=Q^{\\pi}(s,a)$. This property will hold even for a random reward function. This is shown as follows.\n\n    \\begin{eqnarray}\n        Q^{\\pi}(s,a) &=& \\mathbb{E}\\left[ \\sum_{t=0}^{\\infty}{\\gamma}^{t}r(s_{t},a_{t})|s_{0}=s,a_{0}=a\\right] \\\\\\\\\n                    &=& \\mathbb{E}(r(s,a))  + \\gamma \\mathbb{E} \\left[\\sum_{t=1}^{\\infty} {\\gamma}^{t-1}r(s_{1},a_{1})|s_{0}=s,a_{0}=a \\right] \\\\\\\\\n                     &=&  \\mathbb{E}(r(s,a))  + {\\gamma}{\\int}Q(s^{'},\\pi(s^{'}))P(ds^{'}|s,a) \\\\\\\\\n                     &=&  T^{\\pi}Q^{\\pi}\n    \\end{eqnarray}\n\n \n    We will define $r^{'}(s,a)$ as the realisation of the random reward at the state action pair. We will also replace $r^{'}(s,a)$ in Equation (27) and replace $r(s,a)$ with $r^{'}(s,a)$ in Equation (28). Additionally, in Algorithm 1, $r(s,a)$ will be replaced by  $r^{'}(s,a)$. \n\n* With regards to the reference of Sutton (1999), we would like to point out that before it states that a linear parameterization of the critic is required, in the line just above this statement (at the bottom of page 3), the  author assumes that the policy is being parameterised using a linear function. It is for this reason that a linear parametrization of the critic is required. In our case where we assume that the policy parametrization is smooth and not necessarily linear, restricting the critic to be a linear function would also require us to restrict the policy class to be linear. This is not something that is done typically in practice. As for the piratical feasibility of using a neural network for the critic, it is shown in Bharadwaj (2022), natural actor critic with a neural parameterization does converge. \n\n* Thank you for pointing this out. We agree that we should have added an additional assumption in order to ensure the constant appearing on the loss function is independent ok $K$. Thus the additional assumption will be as follows.\n    * There exists a constant $\\\\mu$ such that for any policy $\\pi_{\\lambda}, \\lambda \\in \\Lambda$ we have \n   \n        \\begin{eqnarray}\n         \\mathbb{E}_{s,a \\sim \\zeta^{\\lambda}} \\left(\\nabla{\\log}(\\pi(a|s))\\nabla{\\log}(\\pi(a|s))^{T}\\right)  \\succeq  \n         \\mu{\\cdot}I_d\n         \\end{eqnarray}\n\n        Where  $\\zeta^{\\lambda}$ is the stationary state distribution corresponding to the policy $\\pi_{\\lambda}$, $I_d$ is the identity matrix of dimension $d$ which is the dimensionality of  $\\Lambda$.\n\n* The randomness in Equation (50) is as you suggested because of the random initialization of the neural network parameters during the critic step. With regards to the architecture of the network, the results we have used from Zhu (2019), which  were proven for a fully connected feed-forward neural network with ReLU activation layers. The results also holds for a smooth activation function (the author states that the results can be made sharper for a smooth activation function). The result would also apply for a conventional neural network as well as a residual neural network. For our case we can assume the case of a fully connected neural network with $L$ layers, at least $m$ neurons per layer and with an ReLU activation function for each layer.\n\n*  Thank you for pointing this out. We need to change the natural policy update is given by $\\lambda_{k+1} = \\lambda_{k} + {\\eta}w_{k}$. This is in keeping with the analysis in Agarwal, (2020). We explain in Appendix $E$ how our analysis extends upon the work done for the natural policy gradient to that of a natural actor critic."
                    }
                },
                "number": 3,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission7035/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1699998927122,
                "cdate": 1699998927122,
                "tmdate": 1700111391817,
                "mdate": 1700111391817,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "mwKDHwL0JA",
                "forum": "pJBSzGmb9a",
                "replyto": "sJQrQdUhoN",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission7035/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission7035/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Continiuation of Reply"
                    },
                    "comment": {
                        "value": "__Minor Questions__\n\n* When we are implementing the natural actor critic, if the critic parameterization is non-convex (as is the case for a neural network parametrization) the estimation of the critic at an iteration of the natural actor critic algorithm becomes a non-convex problem. This is the reason why prior works such as (Xu et al. 2020) used a linear parameterization of the critic. Natural Policy Gradient algorithms do not have this issue as they take a sample based estimate of the critic at each iteration. The reason that they avoid this problem is because they do not account for the error incurred due to sample estimate of the critic. \n* Thank you for pointing out these works. We will incorporate them in the related works, the reason we did not focus on the case of Linear Quadratic regulators is because we were focusing on existing literature where linear critic is used. A linear quadratic regulator would be a further simplification and hence not our focus.  \n*  They stationary distribution as you have pointed out does indeed not depend upon the starting distribution if the Markov chain is ergodic, we will make the required change.  However, we do not know of any rigorous proof to show that the visitation distribution will not depend upon the initial distribution.\n * Yes the dagger notation should not be present in Equation (7), thank you for pointing this out. We will add that the dagger notation represents the pseudo inverse.\n * We will rename it to Deep Q Networks algorithm.\n*  This is a typo. The paper were referring to here was Liu et al. (2020). The assumption we referred to can be seen in Assumption 4.4 on page 7. \n*  Thank you pointing out these mistakes. We will correct them in the final version. We will also add discussions about the $|\\log(\\mathcal{A})|$ term that you mentioned. \n\n\n__Bibliograpahy__\n\nMunos, R\u00e9mi. \"Error bounds for approximate policy iteration.\" ICML. Vol. 3. 2003.\n\nFarahmand, Amir-massoud, Csaba Szepesv\u00e1ri, and R\u00e9mi Munos. \"Error propagation for approximate policy and value iteration.\" Advances in Neural Information Processing Systems 23 (2010)\n\nSutton, Richard S., et al. \"Policy gradient methods for reinforcement learning with function approximation.\" Advances in neural information processing systems 12 (1999). \n\nDiddigi, Raghuram Bharadwaj, Prateek Jain, and Shalabh Bhatnagar. \"Neural network compatible off-policy natural actor-critic algorithm.\" 2022 International Joint Conference on Neural Networks (IJCNN). IEEE, 2022. \n\nAllen-Zhu, Zeyuan, Yuanzhi Li, and Zhao Song. \"A convergence theory for deep learning via over-parameterization.\" International conference on machine learning. PMLR, 2019\n\nAgarwal, Alekh, et al. \"On the theory of policy gradient methods: Optimality, approximation, and distribution shift.\" The Journal of Machine Learning Research 22.1 (2021)\n\nXu, Tengyu, Zhe Wang, and Yingbin Liang. \"Improving sample complexity bounds for (natural) actor-critic algorithms.\" Advances in Neural Information Processing Systems 33 (2020).\n\nLiu, Yanli, et al. \"An improved analysis of (variance-reduced) policy gradient and natural policy gradient methods.\" Advances in Neural Information Processing Systems 33 (2020)."
                    }
                },
                "number": 4,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission7035/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1699999146055,
                "cdate": 1699999146055,
                "tmdate": 1700293218863,
                "mdate": 1700293218863,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "eDdWrogoBG",
                "forum": "pJBSzGmb9a",
                "replyto": "2kUf5XGaB6",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission7035/Reviewer_vh1k"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission7035/Reviewer_vh1k"
                ],
                "content": {
                    "title": {
                        "value": "The revision looks good and I decide to raise my assesment to 6"
                    },
                    "comment": {
                        "value": "The revision looks good and I decide to raise my assesment to 6"
                    }
                },
                "number": 14,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission7035/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700671943941,
                "cdate": 1700671943941,
                "tmdate": 1700671943941,
                "mdate": 1700671943941,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "6Q8T6p4GBH",
            "forum": "pJBSzGmb9a",
            "replyto": "pJBSzGmb9a",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission7035/Reviewer_x5yz"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission7035/Reviewer_x5yz"
            ],
            "content": {
                "summary": {
                    "value": "This paper studies the convergence of NAC under two two-layer NN settings. The authors gives a $\\epsilon^{-4}(1 - \\gamma)^{-4}$ sample complexity for the guarantee for global convergence."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "- This paper provides a non-asymptotic sample complexity for NAC under two-layer NN, compared to previous work, the non-asymptotic bound is more challenging.\n- This paper is well-written and easy to follow."
                },
                "weaknesses": {
                    "value": "- The contribution of this paper needs to be highlighted: it seems that the result can be provided by combining the NTK analysis and the global convergence of NAC (Xu et al., 2020a). Since NTK analysis views the neural networks as a kernel method, the analysis is just let the width of $m$ be very large and then does the error analysis given the linear function.\n- Given the aforementioned issue, the result $\\epsilon^{-4}(1 - \\gamma)^{-4}$ cannot match the previous result $\\epsilon^{-3}(1 - \\gamma)^{-4}$ in the linear case. I suspect the addition $\\epsilon^{-1}$ is sacrificed for the neural network approximation errors\n\nTherefore, I would encourage the authors to highlight the contribution of this paper based on the current well-developed NTK theory and  NAC theory."
                },
                "questions": {
                    "value": "Please see the weakness."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "5: You are absolutely certain about your assessment. You are very familiar with the related work and checked the math/other details carefully."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 3,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission7035/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698627928088,
            "cdate": 1698627928088,
            "tmdate": 1699636826078,
            "mdate": 1699636826078,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "ZipCs7hixn",
                "forum": "pJBSzGmb9a",
                "replyto": "6Q8T6p4GBH",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission7035/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission7035/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Reply To Reviewer"
                    },
                    "comment": {
                        "value": "__Weaknesses__\n\n* With regards to your comment about combining NTK analysis with  for the work of Xu et al. (2020a), we would like to  __point out a key deficiency in that approach__. In Xu et al. (2020a), while the policy class is non linear, the critic class has been restricted to a linear function. Now note that in Sutton(1999) on page 5, it is stated that a critic is restricted to be linear only when the policy class is also parameterized by a linear function for the compatible function approximation to hold. Thus in order for the compatible function approximation to hold, in the limit of the of the infinite width, both the actor and critic should converge to a linear kernel. If such a result is achieved, we will not recover the result of  Xu et al. (2020), where the policy is still non-linear and the critic is linear. As  Xu et al. (2020a) itself notes, the term $\\zeta^{actor}_{approx}$ (which is the term Sutton (1999) references) can be said to be small for an  overparameterized neural policy according to Wang (2019). This is mentioned in page 8 just before Theorem 3. However, Wang (2019) states that __both__ actor and critic are represented by a neural network for this error to be small, something that is not possible in  Xu et al. (2020a) as the critic has to be linear. \n    \n    __However, results achieving convergence for the natural actor critic in the infinite width limit have been proven and our result improves upon them.__\n    \n    Indeed, Wang (2019), mentioned in Xu et al. (2020a) is such a work. It establishes an upper bound only for the case where both the actor and critic are restricted to a two layer network with ReLU activation.\n    If you look at the convergence result in Theorem A.4. We see that while the iteration complexity of the result is $\\mathcal{O}(T^{-\\frac{1}{2}})$ the sample complexity required for the to achieve an $\\epsilon$ error bound is $\\epsilon^{-8}$. additionally, we see that the extra error due to neural network architecture, note the $\\mathcal{O}(m^{-\\frac{1}{8}})$ term in Theorem A.4, means that the minimum width in the neural network required is of the order $\\mathcal{O}(\\epsilon^{-\\frac{1}{8}})$. For our result, we achieve a sample complexity of $\\mathcal{O}(\\epsilon^{-\\frac{1}{4}})$ and the minimum width in the neural network required is of the order $\\mathcal{O}(\\epsilon^{-\\frac{1}{2}})$. \n\n    Similarly for the result in Fu et al. (2020), while the requirement for a two layer actor and critic is extended to a multi layer actor and critic, the sample complexity even in the asymptotic limit is $\\mathcal{O}(\\epsilon^{-\\frac{1}{6}})$ as can be seen in Theorem C.5. Additionally the minimum width in the neural network required is of the order $\\mathcal{O}(T^{-\\frac{1}{6}})$, where $T$ is the number of iterations of the algorithm. Since the iteration complexity is given by $\\mathcal{O}(\\epsilon^{-\\frac{1}{2}})$, the minimum width in the neural network required is of the order $\\mathcal{O}(\\epsilon^{-\\frac{1}{12}})$. Thus both in terms of sample complexity as well as the minimum width of the neural network, our result improves upon it. \n\n     We would also like to point out that both these works assume that sample can independently sampled from the stationary state distribution of a given policy, something which is not possible in practice. Our work does not have this restriction. Additionally, both prior works require the use of energy based policies, our analysis is more general, which includes energy based policies but is not restricted to them. Finally, we would like to point out that these results also do not have any empirical studies.\n\n * As per the reviewers suggestion, we will add more references related to NTK theory.\n\n__Bibliography__\n\nXu, Tengyu, Zhe Wang, and Yingbin Liang. \"Improving sample complexity bounds for (natural) actor-critic algorithms.\" Advances in Neural Information Processing Systems 33 (2020).\n\nSutton, Richard S., et al. \"Policy gradient methods for reinforcement learning with function approximation.\" Advances in neural information processing systems 12 (1999).\n\nWang, Lingxiao, et al. \"Neural policy gradient methods: Global optimality and rates of convergence.\"  In International Conference on Learning Representations, 2019.\n\nFu, Zuyue, Zhuoran Yang, and Zhaoran Wang. \"Single-timescale actor-critic provably finds globally optimal policy.\"   In International Conference on Learning Representations, 2020.\n\nAllen-Zhu, Zeyuan, Yuanzhi Li, and Zhao Song. \"A convergence theory for deep learning via over-parameterization.\" International conference on machine learning. PMLR, 2019."
                    }
                },
                "number": 2,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission7035/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1699996018142,
                "cdate": 1699996018142,
                "tmdate": 1700291282501,
                "mdate": 1700291282501,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "NI6rwvleMU",
            "forum": "pJBSzGmb9a",
            "replyto": "pJBSzGmb9a",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission7035/Reviewer_1Jb4"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission7035/Reviewer_1Jb4"
            ],
            "content": {
                "summary": {
                    "value": "The authors study natural actor-critic with multi-layer neural network as the function approximation, which builds upon their unique decomposition of the error in the critic steps."
                },
                "soundness": {
                    "value": "4 excellent"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "- The paper extends previous on natural actor critic to the case of multi-layer neural network and studies the sample complexity of the algorithm. The theoretical study is solid.\n- The presentation of the paper is great.\n- The paper relaxes the assumptions of previous study of natural actor critic. In particular, the paper does not require i.i.d. sampling."
                },
                "weaknesses": {
                    "value": "- The paper does not provide any empirical study on the algorithm and does not discuss on the empirical implicaiton.\n- The authors claim that they are the first to show the sample complexity of natural actor critic algorithms with neural networks. However, to my understanding, the asymptotic converge result in Wang et al, 2019 and Fu et al, 2020 can be converted to an upper bound on the sample complexity directly. Given that, the contribution in this study is rather incremental.\n- Missing reference:\nAgarwal, Alekh, et al. \"On the theory of policy gradient methods: Optimality, approximation, and distribution shift.\" The Journal of Machine Learning Research 22.1 (2021): 4431-4506."
                },
                "questions": {
                    "value": "- In Theorem 1, $J.n$ should be written as $J\\cdot n$. \n- The paper does not present a detailed description on how to parameterize the Q function and the policy with neural network in the main part of the paper. A detailed description or a hyper-link to it is helpful.\n- The analysis and the error rate of the neural network seems to lie in the regime of neural tangent kernel. Papers on neural tangent kernel should be cited properly. Here are a few examples:\n  - Jacot, Arthur, Franck Gabriel, and Cl\u00e9ment Hongler. \"Neural tangent kernel: Convergence and generalization in neural networks.\" Advances in neural information processing systems 31 (2018)."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "3: reject, not good enough"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 4,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission7035/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698628636643,
            "cdate": 1698628636643,
            "tmdate": 1699636825961,
            "mdate": 1699636825961,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "QKc207pBYF",
                "forum": "pJBSzGmb9a",
                "replyto": "NI6rwvleMU",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission7035/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission7035/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Reply To Reviewer"
                    },
                    "comment": {
                        "value": "__Weaknesses__\n\n* We remark that our current work is theoretical in nature where we establish the global optimality of already existing natural actor critic algorithm. A rigorous theoretical understand of global convergence was missing from the literature and our paper fills that gap. Regarding the empirical study, we believe that it would not add any additional value to our contributions because it has already been widely shown in the literature that the natural actor-critic algorithm with neural network parameterization works very well in practice as in Bharadwaj (2022) and has real world applications such as Wang (2021). The focus of our work is establishing that theoretically. \n\n\n* With regard to the two papers mentioned, we respectfully disagree with the reviewer.  Let us consider them individually. \n    \n    1. First, Wang (2019), establishes an upper bound only for the case where both the actor and critic are restricted to a two-layer network with ReLU activation. Furthermore, if we look at the convergence result for the neural policy gradient in Theorem A.4. We see that while the iteration complexity of the result is $\\mathcal{O}(T^{-\\frac{1}{2}})$ the sample complexity required for the to achieve an $\\epsilon$ error bound is $\\epsilon^{-8}$. Additionally, we see that the extra error due to neural network architecture, note the $\\mathcal{O}(m^{-\\frac{1}{8}})$ term in Theorem A.4, which means that the minimum width in the neural network required is of the order $\\mathcal{O}(\\epsilon^{-\\frac{1}{8}})$. For our result, we achieve a sample complexity of $\\mathcal{O}(\\epsilon^{-\\frac{1}{4}})$ and the minimum width in the neural network required is of the order $\\mathcal{O}(\\epsilon^{-\\frac{1}{2}})$.   \n   2. Secondly,  in Fu et al. (2020), while the requirement for a two layer actor and critic is extended to a multi layer actor and critic, the sample complexity even in the asymptotic limit is $\\mathcal{O}(\\epsilon^{-\\frac{1}{6}})$, this can be seen in the discussion below theorem C.5. Also, the minimum width in the neural network required is of the order $\\mathcal{O}(T^{-\\frac{1}{6}})$, where $T$ is the number of iterations of the algorithm. Since the iteration complexity is given by $\\mathcal{O}(\\epsilon^{-\\frac{1}{2}})$, the minimum width in the neural network required is of the order $\\mathcal{O}(\\epsilon^{-\\frac{1}{12}})$. Thus both in terms of sample complexity as well as the minimum width of the neural network, our result improves upon the results mentioned. \n\n__Other novelties in our work__ We would also like to point out that both these works assume that sample can independently sampled from the stationary state distribution of a given policy, something which is not possible in practice. Our work does not have this restriction. Also, both prior works require the use of energy based policies, our analysis is more general, which includes energy based policies but is not restricted to them. Finally, we would like to point out that these results also do not have any empirical studies.\n\n__Questions__\n \n* Thank you for pointing this out, we will correct this typo.\n\n* With regards to the architecture of the network, the results we have used from Zhu (2019), which  were proven for a fully connected feed-forward neural network with ReLU activation layers. The results also holds for a smooth activation function (the author states that the results can be made sharper for a smooth activation function). The results in Zhu (2019) would also apply for a conventional neural network as well as a residual neural network. For our case we can assume the case of a fully connected neural network with $L$ layers, at least $m$ neurons per layer and with an ReLU activation function for each layer.\n\n* It seems we have cited the version of this paper published in COLT and not the one in JMLR. We will cite the JMLR version in the final version of our paper.\n\n* We will add the stated reference in the related works section of our final paper.\n\n__Bibliography__\n\nDiddigi, Raghuram Bharadwaj, Prateek Jain, and Shalabh Bhatnagar. \"Neural network compatible off-policy natural actor-critic algorithm.\" 2022 International Joint Conference on Neural Networks (IJCNN). IEEE, 2022.\n \nR. Wang, J. Li, K. Wang, X. Liu and X. Lit, \"Service Function Chaining in NFV-Enabled Edge Networks with Natural Actor-Critic Deep Reinforcement Learning,\" 2021 IEEE/CIC International Conference on Communications in China (ICCC), Xiamen, China, 2021\n\nWang, Lingxiao, et al. \"Neural policy gradient methods: Global optimality and rates of convergence.\"  In International Conference on Learning Representations, 2019.\n\nFu, Zuyue, Zhuoran Yang, and Zhaoran Wang. \"Single-timescale actor-critic provably finds globally optimal policy.\"   In International Conference on Learning Representations, 2020.\n\nAllen-Zhu, Zeyuan, Yuanzhi Li, and Zhao Song. \"A convergence theory for deep learning via over-parameterization.\" International conference on machine learning. PMLR, 2019."
                    }
                },
                "number": 1,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission7035/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1699993314686,
                "cdate": 1699993314686,
                "tmdate": 1699996014449,
                "mdate": 1699996014449,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    }
]