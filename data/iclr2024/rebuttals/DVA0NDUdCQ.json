[
    {
        "title": "Efficient Large Language Models Fine-Tuning on Graphs"
    },
    {
        "review": {
            "id": "4fS92zL51b",
            "forum": "DVA0NDUdCQ",
            "replyto": "DVA0NDUdCQ",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission8798/Reviewer_k4U4"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission8798/Reviewer_k4U4"
            ],
            "content": {
                "summary": {
                    "value": "This paper studies learning from Text-Attributed Graphs (TAGs) using  large language models (LLMs). Specifically, they find that existing LLM approaches that exploit text information in graphs suffer from inferior computation and data efficiency. To address these issues, they propose the LEASUNG fine-tuning algorithm that  not only effectively adapts LLMs to downstream graph learning tasks with limited\nlabeled data but also exhibits strong scalability and efficiency. Extensive experiments verify the superior performance in terms of both computation and data efficiency."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "[+] The manuscript is well-presented. The authors clearly present the motivations, the methods and the experiments.         \n\n[+] The topic of LLMs for graph is trendy and important in graph learning community.            \n\n[+] Extensive experiments are performed to verify the effectiveness in terms of both computation and data efficiency."
                },
                "weaknesses": {
                    "value": "[-] The proposed method can only work for text-attributed graphs and node classification tasks. However, some recent works have validated that LLMs can process nearly all kinds of graphs and node-level/edge-level/graph-level tasks, which makes the contribution of this work being less significant.          \n\n[-] The performance of the proposed method is not superior. For example, on Cora dataset, the proposed method equpped with LLMs are inferior to the Shallow Embedding.           \n\n[-] The experiments are somewhat limited. Specifically, the authors only evaluate the proposed method in homophilous graphs. I notice that some concurrent works [1,2] in LLMs for graphs report the results on heterophilous graphs. So, how about the performance of the LEADING algorithm perform on heterophilous graphs?            \n\n[-] The authors only use some small and out-of-date language models (BERT and DeBERTa). Why not try more powerful LLMs such as GPT-3.5 and LLaMA [3]?             \n\n[-] The codes for reproducing the results are not provided.            \n\n\n[1] Exploring the Potential of Large Language Models (LLMs) in Learning on Graphs\uff08arXiv:2307.03393v3\uff09              \n[2] GRAPHTEXT: GRAPH REASONING IN TEXT SPACE (arXiv:2310.01089v1)                \n[3] Llama: Open and efficient foundation language models. arXiv preprint arXiv:2302.13971, 2023"
                },
                "questions": {
                    "value": "1. How about the performance of the LEADING algorithm perform on heterophilous graphs?          \n\n2. Why not try more powerful LLMs such as GPT-3.5 and LLaMA?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 1,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission8798/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698844146641,
            "cdate": 1698844146641,
            "tmdate": 1699637105869,
            "mdate": 1699637105869,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "ZQ0upU5hPA",
                "forum": "DVA0NDUdCQ",
                "replyto": "4fS92zL51b",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Rebuttal by Authors - Post 1"
                    },
                    "comment": {
                        "value": "Dear reviewer,\n\nThank you for your valuable comments. We appreciate your recognition of our motivation and the experiment design. We have addressed all of your concerns as follows:\n\n**Q1.** The proposed method can only work for text-attributed graphs and node classification tasks. However, some recent works have validated that LLMs can process nearly all kinds of graphs and node-level/edge-level/graph-level tasks, which makes the contribution of this work being less significant.\n\n**A1.** We respectively disagree with this comment. We would like to point out that the proposed training GNN-LLM algorithm is general and can be used for any feature extraction backbones and downstream prediction tasks, enabling data and tasks beyond text-attributed graphs and node classification tasks.\n\nFirst of all, our proposed method is a general end-to-end GNN training algorithm, which supports any feature extraction backbones that process various kinds of node attributes including but not limited to language, images, video and audio. It works by simply changing the LLM backbone to any feature extraction backbone. However, in this work, we focus on text-attributed graphs\ndue to the property of chosen benchmark graph datasets and to ensure a fair comparison with the baselines.\n\nSecond, our algorithm framework can support any downstream graph learning tasks. However, exploring LLM for text-attributed graphs is still a pretty new area, and most datasets for graph classification or link prediction do not provide the original raw text attributes. Therefore, we choose node classification tasks following existing state-of-the-art literature such as GIANT [1], GLEM\n[2], and [3] to ensure a fair comparison.\n\nTo provide an example of link prediction, we run the proposed algorithm on Cora dataset. We manually partition the links into distinct sets for training, validation, and testing. This division is performed with two distinct split ratios: (1) a low ratio of 10/30/60 for train/valid/test, and (2) a high ratio of 85/5/10 for the same sets. We use GCN as the downstream GNN. To prioritize faster execution and simplicity, we choose DistilBert as the language model. As indicated in the following table, LEADING exhibits performance advantages over the baselines, especially in scenarios with limited training data. This aligns with the findings presented in our paper concerning node classification.\n\n# Link prediction performance AUC (%) on Cora\n| Methods     | Low     | High     |\n|---------|---------|---------|\n| Shallow Embedding  | 74.7  | 94.9  |\n| Pre-trained DistilBERT  | 64.7 | 68.7  |\n| Supervised-FT DistilBERT  | 66.3  | 89.4  |\n| LEADING(DistilBERT)  | 81.8  | 95.2  |\n\nThird, we provide a comprehensive survey of related works in our paper and no existing work can achieve end-to-end fine-tuning of LLMs on graphs. Our proposed algorithm is the first to achieve this goal and shows tremendously improved scalability: the training cost of LEADING is close to the training of LLMs without graphs (refer to the scalability analysis in Table 2 in our submission), which is not thought to be possible in the literature. Our approach significantly minimizes computation redundancy as shown in Fig. 3 and Fig. 4 in our paper.\n\nTo summarize, our algorithm is general and novel. It makes significant contributions to the end-to-end training of GNN-LLMs. Please kindly let us know the specific references that use raw text language attributes to complete \u201dnearly all kinds of graphs and node-level/edge-level/graph-level tasks\u201d, and we will be happy to provide a discussion and comparison.\n\n[1] Chien, Eli, et al. \u201dNode feature extraction by self-supervised multi-scale neighborhood prediction.\u201d arXiv preprint arXiv:2111.00064 (2021).\n\n[2] Zhao, Jianan, et al. \u201dLearning on large-scale text-attributed graphs via variational inference.\u201d arXiv preprint arXiv:2210.14709 (2022).\n\n[3] Exploring the Potential of Large Language Models (LLMs) in Learning on Graphs, arXiv:2023.07"
                    }
                },
                "number": 14,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8798/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700500186050,
                "cdate": 1700500186050,
                "tmdate": 1700500186050,
                "mdate": 1700500186050,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "RY62cr4E2M",
                "forum": "DVA0NDUdCQ",
                "replyto": "4fS92zL51b",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Rebuttal by Authors - Continue Post 2"
                    },
                    "comment": {
                        "value": "**Q2.** The performance of the proposed method is not superior. For example, on Cora dataset, the proposed method equipped with LLMs are inferior to the Shallow Embedding.\n\n**A2.** We would like to point out that the proposed LEADING method outperforms all LLM baselines on all datasets. Moreover, LEADING outperforms \u201dShallow Embedding\u201d by 4% and around 2% on ogbn-arxiv and PubMed, respectively. We also provide a further experiment based on ogbn-products. For simplicity, we utilize GraphSAGE as the downstream GNN backbone in this context. \n\nIn the presented table, LEADING exhibits superior performance compared to all baselines, particularly surpassing shadow embedding by 4.4%. It's noteworthy that GIANT encounters memory issues in our experiments due to high training costs. As a result, we report the accuracy of the well-trained model available from their official repository. These improvements already verify the superiority of our LEADING method.\n\n# Performance and computation cost comparisons on ogbn-products\n\n| Methods     | Accuracy(%)     | Running Time(s)    | Peak Memory Usage(GB)    |\n|---------|---------|---------|---------|\n| Shallow Embedding| 79.7  | ---  | ---  |\n| Pre-trained DeBERTa  | 62.0  | ---  | ---  |\n| Supervised-FT DeBERTa  | 82.2  | 67200 | 25.1  |\n| GIANT | 83.2  | N/A | OOM |\n| GLEM (DeBERTa)  | 83.2  | 356648 | 25.2 |\n| LEADING (DeBERTa)  | 84.1  | 124164 | 25.6 |\n\nFor Cora, we believe adding more training data or using a better LLM model can outperform Shallow Embedding. To validate this, we conducted the same experiments using SentenceBERT on Cora and Pubmed with the same low labeling rate. The following table shows it is easy to beat Shallow Embedding, which also verifies the superiority of the proposed LEADING method.\n\n# Performance(%) comparison using SentenceBERT\n\n| Methods     | GCN(Cora)     | GAT(Cora)    | GCN(Pubmed)  | GAT(Pubmed)    |\n|---------|---------|---------|---------|---------|\n| Shallow Embedding  | $82.0 \\pm 0.7$ | $82.3 \\pm 0.7$  |$78.9 \\pm 2.0$  |$77.7 \\pm 0.9$  |\n| LEADING (SBERT)   | $\\mathbf{83.3 \\pm 0.3}$  | $\\mathbf{83.8 \\pm 0.5}$  |$\\mathbf{80.5 \\pm 0.4}$  |$\\mathbf{80.2 \\pm 0.8}$  |\n\nFor high labeling rate case, we conduct statistical significance tests on ogbn-arxiv.  We perform 5 times experiments on both our proposed algorithm and the best baselines, GLEM, which has the closest performance as ours on ogbn-arxiv, here we show the results of those performances. The p-value is 9.85e-06 for Rev-GAT and 1.64e-05 for GCN, much less than the commonly used desired significance level 0.01 and highly significance level 0.001. It clearly show that we can reject the null hypothesis. The difference is highly significant.\n\n# Performance(%) on ogbn-arxiv\n\n| Runs | GLEM (GCN)   | LEADING(GCN)     | GLEM (Rev-GAT)      | LEADING(Rev-GAT)   |\n|---------|---------|---------|---------|---------|\n| 1 | 76.90  | 77.42  | 75.90  |76.18  |\n| 2 | 76.80  | 77.30  | 75.95  |76.10 |\n| 3 | 77.00  | 77.26  | 75.93  |76.08  |\n| 4 | 76.85 | 77.34  | 75.86  |76.13 |\n| 5 | 76.78  | 77.34  | 75.87  |76.12 |"
                    }
                },
                "number": 15,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8798/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700502090860,
                "cdate": 1700502090860,
                "tmdate": 1700503197656,
                "mdate": 1700503197656,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "iylAQ71EOq",
                "forum": "DVA0NDUdCQ",
                "replyto": "4fS92zL51b",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Rebuttal by Authors - Continue Post 3"
                    },
                    "comment": {
                        "value": "**Q3.** The experiments are somewhat limited. Specifically, the authors only evaluate the proposed method in homophilous graphs. I notice that some concurrent works [1,2] in LLMs for graphs report the results on heterophilous graphs. So, how about the performance of the LEADING algorithm perform on heterophilous graphs?/How about the performance of the LEADING algorithm\nperform on heterophilous graphs?\n\n\n**A3.** Thanks for your valuable suggestion. Exploring LLM for text-attributed graphs is still a pretty new area, after an extensive search, all benchmark dataset for heterophilic graphs do not provide the original raw text attributes. Therefore, we choose homophilous graphs following existing state-of-the-art literature to ensure a fair comparison and demonstrate our improvements in efficiency and accuracy. For those two cited papers in your comment, GraphText[1] only employs homophilous graphs Cora and Citeseer as TAGs (please refer to the appendix A.2) because it doesn\u2019t require the graph has raw text attributes; and [2] restricts its analysis to some specific nodes which have heterophilous property in homophilous graph Pubmed to draw conclusions. We would be\npleased to incorporate additional experiments once such graph datasets with raw text attributes become available.\n\n[1] GRAPHTEXT: GRAPH REASONING IN TEXT SPACE (arXiv:2310.01089v1)\n\n[2] Exploring the Potential of Large Language Models (LLMs) in Learning on Graphs\uff08arXiv:2307.03393v3\uff09"
                    }
                },
                "number": 16,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8798/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700502353327,
                "cdate": 1700502353327,
                "tmdate": 1700502353327,
                "mdate": 1700502353327,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "LHwoLhyJMf",
                "forum": "DVA0NDUdCQ",
                "replyto": "4fS92zL51b",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Rebuttal by Authors - Continue Post 4"
                    },
                    "comment": {
                        "value": "**Q4.** The authors only use some small and out-of-date language models (BERT and DeBERTa). Why not try more powerful LLMs such as GPT-3.5 and LLaMA?\n\n**A4.** Thanks for this nice suggestion. We would like to point out that the proposed LEADING algorithm is versatile and applicable to any LLM architecture. We choose BERT and DeBERTa as the backbone language models in our initial submission to ensure a fair comparison with state-of-the- art baselines since these are the models they used for evaluation. For instance, we employed BERT\nfollowing GIANT and DeBERTa following GLEM. \n\nFollowing your suggestion, we are happy to provide further experiments on LEADING using larger models. Based on our current computation resources and the code availability of those larger language models, we choose to fine-tune GPT-2 on Cora and ogbn-arxiv datasets. The results shown in the following table indicate that the proposed LEADING algorithm effectively fine-tunes GPT-\n2 to achieve better performance, which is consistent with our experiments on other language models. Regarding the computation cost, LEADING is capable of maintaining computational costs nearly identical to supervised fine-tuning of GPT without graphs. The additional running time arises due to the sequential execution of two pipelines in LEADING, yet this can be effectively mitigated through parallel computing. It incurs significantly less computation overhead or memory cost compared to baselines such as GLEM. GIANT runs out of memory in our experiments. It's crucial to emphasize that enhancing model size may not be essential for achieving superior performance, as evident in the comparison between the results of GPT and the DeBERTa presented in our submission. The effectiveness of fine-tuning is influenced by a range of factors beyond mere model size. Note that we found that in the low labeling case because of the poor quality of generated pseudo labels, GLEM actually achieves its best accuracy in a very special case when the ratio of pseudo labels is set to be 0, this will reduce GLEM to supervised FT LLM, hence we report the same performance as supervised FT case.\n\nBesides, Meta requires a request form to access their Llama model parameters. We submitted the request a week ago but have not received a response yet. We will add new results on Llama once we get access to it. We will provide a complete evaluation of these models in our revision.\n\n# LEADING performance(%) with GPT-2\n| Method | GCN(Cora) | GAT(Cora)|GCN(Arxiv)| Rev-GAT(Arxiv)|\n|----------|----------|----------|----------|----------|\n| Pre-trained GPT-2   | 51.9   | 54.7   | 64.8  | 66.9   |\n| Supervised-FT GPT-2   | 70.8   | 71.7   | 73.2   | 73.8   |\n| GLEM(GPT-2)   | 70.8   | 71.7   | 74.0   | 75.1   |\n| LEADING(GPT-2)   | 80.5   | 81.5   | 74.1   | 75.2   |\n\n# Scalability comparison with GPT-2 on ogbn-arxiv\n| Method | Memory(GB) | Running Time(s) | \n|----------|----------|----------|\n| Supervised-FT GPT-2    | 26.8   | 15555   | \n| GIANT   | OOM  | N/A   | \n| GLEM(GPT-2)   | 26.8   | 82930   | \n| LEADING(GPT-2)   | 27.1   | 27920  |\n\n**Q5.** The codes for reproducing the results are not provided.\n\n**A5.** We would like to kindly point out that the code is not mandatory at the submission stage. However, we will be happy to make our code available upon the acceptance of our work. Thanks for your understanding.\n\nTo conclude, we believe we have fully addressed all of your concerns. Please kindly let us know if you have any further concerns."
                    }
                },
                "number": 17,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8798/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700503039342,
                "cdate": 1700503039342,
                "tmdate": 1700698550474,
                "mdate": 1700698550474,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "q410hfKKTl",
                "forum": "DVA0NDUdCQ",
                "replyto": "4fS92zL51b",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "content": {
                    "title": {
                        "value": "A Friendly Reminder"
                    },
                    "comment": {
                        "value": "Dear Reviewer k4U4,\n\nWe are thankful for your valuable comments and suggestions. We hope that our responses have addressed all your concerns. As there is only one day remaining in the author-reviewer discussion period, we kindly request you let us know if you have any additional questions. We greatly appreciate your further feedback.\n\nIf you find our responses satisfactory, we would kindly request an update of the rating to reflect your assessment. Your feedback is valuable to us, and we appreciate your time and consideration.\n\nBest regards,\n\nAll authors"
                    }
                },
                "number": 21,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8798/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700592085975,
                "cdate": 1700592085975,
                "tmdate": 1700592085975,
                "mdate": 1700592085975,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "O0w1RSWBfZ",
                "forum": "DVA0NDUdCQ",
                "replyto": "LHwoLhyJMf",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8798/Reviewer_k4U4"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8798/Reviewer_k4U4"
                ],
                "content": {
                    "title": {
                        "value": "Thanks for the detailed response"
                    },
                    "comment": {
                        "value": "Thank you for your detailed response. Based on the following reasons, I have decided to keep my score as 5:\n\n1. Regarding the first point, it is important to note that replacing the LLM backbone would deviate from the original topic of \"LLMs for GNNs\". The explanation provided seems somewhat forced.\n\n2. Although you have presented new results with GPT2, it is worth mentioning that the original results in Table 1 demonstrate that the proposed method sometimes performs worse than shallow embeddings, especially on the Cora and CiteSeer datasets when considering the standard deviation.\n\nThank you once again for your response!"
                    }
                },
                "number": 26,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8798/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700704347474,
                "cdate": 1700704347474,
                "tmdate": 1700704347474,
                "mdate": 1700704347474,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "Lj0tLNqVA4",
            "forum": "DVA0NDUdCQ",
            "replyto": "DVA0NDUdCQ",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission8798/Reviewer_DmWL"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission8798/Reviewer_DmWL"
            ],
            "content": {
                "summary": {
                    "value": "This paper introduces an efficient approach for end-to-end fine-tuning of pre-trained language models (PLMs) on text-attributed graphs (TAGs). The authors argue that existing PLM approaches for TAGs suffer from computation and data efficiency issues, and they propose the LEADING algorithm which maintains computation and memory efficiency similar to graph-less fine-tuning of PLMs. LEADING can effectively transfer rich knowledge to downstream graph learning tasks even with limited labeled data in semi-supervised learning. Experimental results show that LEADING demonstrates superior computation and data efficiency in comparison with existing approaches such as GIANT and GLEM."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "+ Generalizing the contextualization power of PLMs to structure-rich text data (e.g., text-attributed graphs) is an important and meaningful task. The goal of improving computation and data efficiency in this task is well-motivated.\n\n+ The ideas of removing encoding redundancy and propagation redundancy, as well as the neighbor decoupling strategy, are intuitive and well-explained.\n\n+ The authors conduct experiments on both small and large graphs and perform comprehensive ablation studies, hyperparameter analyses, and scalability studies."
                },
                "weaknesses": {
                    "value": "- This work mainly studies encoder-only PLMs such as BERT and DeBERTa. I do not see how the entire study can be easily generalized to encoder-decoder and decoder-only PLMs from the perspective of either methodologies or evaluation protocols. Therefore, I do not quite agree with the term \"Large Language Models\" in the title because encoder-only PLMs are usually much smaller than encoder-decoder and decoder-only ones. The study is still a complete one even if only encoder-only PLMs are studied, but the used term somehow overclaims what this study has done.\n\n- Statistical significance tests are missing. It is unclear whether the gaps between LEADING and the baselines are statistically significant or not. In fact, the gaps on arXiv are quite subtle in Table 1, therefore p-values should be reported.\n\n- An important baseline, GraphFormers [1], is cited but not compared.\n\n- The authors only conduct experiments in the semi-supervised node classification task. Besides, all three used datasets are from the academic domain. It is unclear whether the proposed techniques work for other tasks (e.g., link prediction) and other domains (e.g., e-commerce).\n\n[1] Graphformers: Gnn-nested transformers for representation learning on textual graph. NeurIPS'21."
                },
                "questions": {
                    "value": "- Could you conduct statistical significance tests to compare LEADING with the baselines on arXiv?\n\n- Could you report the performance of GraphFormers?\n\n- Could you conduct experiments in other tasks and on graphs from non-academic domains?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 2,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission8798/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698941559492,
            "cdate": 1698941559492,
            "tmdate": 1699637105738,
            "mdate": 1699637105738,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "cM4bqdlClF",
                "forum": "DVA0NDUdCQ",
                "replyto": "Lj0tLNqVA4",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Rebuttal by Authors - Post 1"
                    },
                    "comment": {
                        "value": "Dear reviewer,\n\nThank you for your valuable comments. We appreciate your recognition of our motivation and the proposed idea. We have addressed all of your concerns as follows:\n\n**Q1.** This work mainly studies encoder-only PLMs such as BERT and DeBERTa. I do not see how the entire study can be easily generalized to encoder-decoder and decoder-only PLMs from the perspective of either methodologies or evaluation protocols. Therefore, I do not quite agree with the term \u201dLarge Language Models\u201d in the title because encoder-only PLMs are usually much smaller than encoder-decoder and decoder-only ones. The study is still a complete one even if only encoder-only PLMs are studied, but the used term somehow over-claims what this study has done.\n\n**A1.** Thanks for this nice suggestion. We would like to point out that the proposed LEADING algorithm is versatile and applicable to any LLM architecture. We choose BERT and DeBERTa as the backbone language models in our initial submission to ensure a fair comparison with state-of-the- art baselines since these are the models they used for evaluation. For instance, we employed BERT following GIANT and DeBERTa following GLEM. \n\nFollowing your suggestion, we are happy to provide further experiments on LEADING using other transformers. We select one of the decoder only language models, GPT-2, conducted similar experiments on the cora and ogbn-arxiv dataset. Due to the utilization of causal (auto-regressive) attention in the decoder-only model, we opt to use the last token for classification instead of the [CLS] token in encoder-only model. One simple example can be found here [1]. The results shown in the following table indicate that the proposed LEADING algorithm effectively fine-tunes GPT-2 to achieve better performance, which is consistent with our experiments on other language models. Regarding the computation cost, LEADING is capable of maintaining computational costs nearly identical to supervised fine-tuning of GPT without graphs. The additional running time arises due to the sequential execution of two pipelines in LEADING, yet this can be effectively mitigated through parallel computing. It incurs significantly less computation overhead or memory cost compared to baselines such as GLEM. GIANT runs out of memory in our experiments. Note that we found that in the low labeling case because of the poor quality of generated pseudo labels, GLEM actually achieves its best accuracy in a very special case when the ratio of pseudo labels is set to be 0, this will reduce GLEM to supervised FT LLM, hence we report the same performance as supervised FT case.\n\nBesides, Meta requires a request form to access their Llama model parameters. We submitted the request a week ago but have not received a response yet. We will add new results on Llama once we get access to it. We will provide a complete evaluation of these models in our revision.\n\n# LEADING performance(%) with GPT-2\n| Method | GCN(Cora) | GAT(Cora)|GCN(Arxiv)| Rev-GAT(Arxiv)|\n|----------|----------|----------|----------|----------|\n| Pre-trained GPT-2   | 51.9   | 54.7   | 64.8  | 66.9   |\n| Supervised-FT GPT-2   | 70.8   | 71.7   | 73.2   | 73.8   |\n| GLEM(GPT-2)   | 70.8   | 71.7   | 74.0   | 75.1   |\n| LEADING(GPT-2)   | 80.5   | 81.5   | 74.1   | 75.2   |\n\n# Scalability comparison with GPT-2 on ogbn-arxiv\n| Method | Memory(GB) | Running Time(s) | \n|----------|----------|----------|\n| Supervised-FT GPT-2    | 26.8   | 15555   | \n| GIANT   | OOM  | N/A   | \n| GLEM(GPT-2)   | 26.8   | 82930   | \n| LEADING(GPT-2)   | 27.1   | 27920  |\n\n[1] https://huggingface.co/docs/transformers/model_doc/gpt2"
                    }
                },
                "number": 11,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8798/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700472912281,
                "cdate": 1700472912281,
                "tmdate": 1700698430432,
                "mdate": 1700698430432,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "vhUgmiDHNs",
                "forum": "DVA0NDUdCQ",
                "replyto": "Lj0tLNqVA4",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Rebuttal by Authors - Continue Post 2"
                    },
                    "comment": {
                        "value": "**Q2.** Statistical significance tests are missing. It is unclear whether the gaps between LEADING and the baselines are statistically significant or not. In fact, the gaps on arXiv are quite subtle in Table 1, therefore p-values should be reported./Could you conduct statistical significance tests to compare LEADING with the baselines on arXiv?\n\n**A2.** Thanks for your suggestion. We perform 5 times experiments on both our proposed algorithm and the best baselines, GLEM, which has the closest performance as ours on ogbn-arxiv, here we show the results of those performances. The p-value is 9.85e-06 for Rev-GAT and 1.64e-05 for GCN, much less than the commonly used desired significance level 0.01 and highly significance level 0.001. It clearly show that we can reject the null hypothesis. The difference is highly significant.\n\n# Performance(%) on ogbn-arxiv\n\n| Runs | GLEM (GCN)   | LEADING(GCN)     | GLEM (Rev-GAT)      | LEADING(Rev-GAT)   |\n|---------|---------|---------|---------|---------|\n| 1 | 76.90  | 77.42  | 75.90  |76.18  |\n| 2 | 76.80  | 77.30  | 75.95  |76.10 |\n| 3 | 77.00  | 77.26  | 75.93  |76.08  |\n| 4 | 76.85 | 77.34  | 75.86  |76.13 |\n| 5 | 76.78  | 77.34  | 75.87  |76.12 |\n\n**Q3.** An important baseline, GraphFormers, is cited but not compared./Could you report the performance of GraphFormers?\n\n**A3.** Thanks for your comments. We do not report the performance of GraphFormer due to the following reasons:\n\n(1) GraphFormer faces severe scalability issues since it requires the encoding of all neighboring nodes. This results in significant computation overhead, and we can not run it on large-scale datasets.\n\n(2) The focus of our paper is to provide a flexible LLM fine-tuning framework for arbitrary LLM backbones, but\nGraphformer is a specialized architecture. Therefore, it is hard to make fair and meaningful comparisons. \n\nDue to these reasons, the papers of baselines we compare with do not report the performance of GraphFormer, and we majorly follow their evaluation settings to ensure fair comparisons."
                    }
                },
                "number": 12,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8798/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700474555109,
                "cdate": 1700474555109,
                "tmdate": 1700474555109,
                "mdate": 1700474555109,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "mYlOF4qpOI",
                "forum": "DVA0NDUdCQ",
                "replyto": "Lj0tLNqVA4",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Rebuttal by Authors - Continue Post 3"
                    },
                    "comment": {
                        "value": "**Q4.** The authors only conduct experiments in the semi-supervised node classification task. Besides, all three used datasets are from the academic domain. It is unclear whether the proposed techniques work for other tasks (e.g.,link prediction) and other domains (e.g., e-commerce)./Could you conduct experiments in other tasks and on graphs from non-academic domains?\n\n**A4.**  Thanks for your suggestion. Regarding your first question about the graphs of other tasks, we would like to point out that the proposed training GNN-LLM algorithm is general and can be used for any downstream prediction tasks. However, exploring LLM for text-attributed graphs is still a pretty new area, and most datasets for graph classification or link prediction do not provide the original raw text attributes. Therefore, we choose node classification tasks following existing state-of-the-art literature such as GIANT, GLEM, and [1] to ensure a fair comparison and demonstrate our improvements in efficiency and accuracy.\n\nTo provide an example of link prediction, we run the proposed algorithm on Cora dataset. We manually partition the links into distinct sets for training, validation, and testing. This division is performed with two distinct split ratios: (1) a low ratio of 10/30/60 for train/valid/test, and (2) a high ratio of 85/5/10 for the same sets. We use GCN as the downstream GNN. To prioritize faster execution and simplicity, we choose DistilBert as the language model. As indicated in the following table, LEADING exhibits performance advantages over the baselines, especially in scenarios with limited training data. This aligns with the findings presented in our paper concerning node classification.\n\n# Link prediction performance AUC (%) on Cora\n| Methods     | Low     | High     |\n|---------|---------|---------|\n| Shallow Embedding  | 74.7  | 94.9  |\n| Pre-trained DistilBERT  | 64.7 | 68.7  |\n| Supervised-FT DistilBERT  | 66.3  | 89.4  |\n| LEADING(DistilBERT)  | 81.8  | 95.2  |\n\nFor your comment about graphs of other domains, we provide a further experiment based on ogbn-products, which is representing an Amazon product co-purchasing network. Nodes represent products sold in Amazon, and edges between two products indicate that the products are purchased together. For simplicity, we utilize GraphSAGE as the downstream GNN backbone in this\ncontext.\n\nFrom Table 4, in terms of performance, LEADING outperforms all baselines, including cascaded training (Supervised-FT), self-supervised training (GIANT) and iterative training (GLEM). Regarding computational costs, our findings align with those in our papers: LEADING requires nearly identical memory compared to supervised FT without a graph, and it significantly outperforms GIANT and GLEM. It is worth noting that GIANT runs out of memory in our experiment due to the high training costs associated, so we report the accuracy of the well-trained model provided by their official repository.\n\n# Performance and computation cost comparisons on ogbn-products\n\n| Methods     | Accuracy(%)     | Running Time(s)    | Peak Memory Usage(GB)    |\n|---------|---------|---------|---------|\n| Shallow Embedding| 79.7  | ---  | ---  |\n| Pre-trained DeBERTa  | 62.0  | ---  | ---  |\n| Supervised-FT DeBERTa  | 82.2  | 67200 | 25.1  |\n| GIANT | 83.2  | N/A | OOM |\n| GLEM (DeBERTa)  | 83.2  | 356648 | 25.2 |\n| LEADING (DeBERTa)  | 84.1  | 124164 | 25.6 |\n\n[1] Exploring the Potential of Large Language Models (LLMs) in Learning on Graphs, arXiv:2023.07\n\nTo conclude, we believe we have fully addressed all of your concerns. Please kindly let us know if you have any further concerns."
                    }
                },
                "number": 13,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8798/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700475389863,
                "cdate": 1700475389863,
                "tmdate": 1700475389863,
                "mdate": 1700475389863,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "OL9INs4Hrx",
                "forum": "DVA0NDUdCQ",
                "replyto": "Lj0tLNqVA4",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "content": {
                    "title": {
                        "value": "A Friendly Reminder"
                    },
                    "comment": {
                        "value": "Dear Reviewer DmWL,\n\nWe are thankful for your valuable comments and suggestions. We hope that our responses have addressed all your concerns. As there is only one day remaining in the author-reviewer discussion period, we kindly request you let us know if you have any additional questions. We greatly appreciate your further feedback.\n\nIf you find our responses satisfactory, we would kindly request an update of the rating to reflect your assessment. Your feedback is valuable to us, and we appreciate your time and consideration.\n\nBest regards,\n\nAll authors"
                    }
                },
                "number": 20,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8798/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700592007195,
                "cdate": 1700592007195,
                "tmdate": 1700592007195,
                "mdate": 1700592007195,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "tXpAJhoqp2",
            "forum": "DVA0NDUdCQ",
            "replyto": "DVA0NDUdCQ",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission8798/Reviewer_sP5C"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission8798/Reviewer_sP5C"
            ],
            "content": {
                "summary": {
                    "value": "This research paper suggests an approach to fine-tuning large language models (LLMs) on text-attributed graphs. The main ideas and contributions are as follows;\n\n- Examining the redundancy, in computing (encoding and propagation) when fine-tuning LLMs using graph networks (GNNs) in an end-to-end manner. This analysis uncovers the scalability limitations.\n- Presenting an algorithm called LEADING that reduces computation redundancy by decoupling neighbors and implementing graph modeling. This allows for end-to-end training of LLM GNN to supervised LLM fine-tuning without graphs.\n- Demonstrates that LEADING is more resourceful in transferring knowledge from LLMs to downstream graph learning tasks compared to existing methods in scenarios with labeling rates.\n- Showing that LEADING achieves scalability and efficiency in LLM fine-tuning and significantly outperforms existing iterative or self-supervised methods that combine LLMs and GNNs.\n- Providing complexity analysis and empirical evaluations to highlight the efficiency and scalability benefits of LEADING.\n\nIn summary, this paper enables end-to-end training of LLM GNN through techniques that decrease computation redundancy. This facilitates the transfer of knowledge from LLMs into graph learning tasks with both efficiency and scalability, in mind."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "Importance of the Problem; The paper addresses an issue of tuning Language and Learning Models (LLMs) on graphs, which has implications and challenges, across various domains.\n\nEvaluation of Existing Approaches; The authors conduct an analysis of the limitations in current methods with a particular focus on redundancies in encoding and propagation computations.\n\nInnovative Techniques Proposed; The paper introduces techniques such as neighbor decoupling and implicit graph modeling to overcome the identified limitations. It also presents an approach for training an end to end LLM Graph Neural Network (GNN).\n\nClear Organization; The paper is well structured and easily comprehensible starting with an introduction followed by a summary of related work.\n\nClarity and Elaboration; The authors effectively communicate their ideas and techniques using visual aids while providing sufficient algorithmic details.\n\nExperimental Results; Through experiments conducted on datasets the proposed techniques demonstrate advantages, particularly in terms of prediction accuracy when labeled data is limited as well as scalability.\n\nOriginal Contributions; The analysis of computation redundancies along with the introduced techniques and the end to end training approach are acknowledged as contributions to the field.\n\nImplications; These findings hold implications, for domains that utilize text attributed graphs. They also offer guidance on combining LLMs with GNNs."
                },
                "weaknesses": {
                    "value": "To better understand the proposed techniques and their impact, on data efficiency it would be beneficial to delve into the underlying mechanisms through analysis or intuition.\n\nIn order to fully grasp the importance of the techniques it is advisable to conduct ablation studies that elucidate their individual contributions.\n\nTo demonstrate the scalability of the algorithm a comprehensive evaluation on a range of graph structures and larger scale datasets would be advantageous.\n\nIn the work section it would be beneficial to provide a comprehensive context by discussing existing approaches for efficient training of Graph Neural Networks (GNNs) and implicit models.\n\nCertain parts of the explanation could benefit from in depth details or intuitive explanations especially when describing how the techniques enhance data efficiency.\n\nBy expanding the scope of the ablation study and conducting experiments valuable insights, into these proposed methods can be gained.\n\nThe conclusion section should be refined to offer a concise yet comprehensive summary of the findings and takeaways."
                },
                "questions": {
                    "value": "1. The analysis findings indicate that there is redundancy, in encoding and propagation. It is not clear how neighbor decoupling and implicit modeling specifically contribute to improved knowledge transfer from LLMs. Could you provide some insight or analysis to explain the underlying mechanisms?\n\n2. The ablation study seems to have limitations. It would be beneficial to conduct ablation experiments to assess the individual contributions of neighbor decoupling and implicit modeling towards the observed improvements.\n\n3. Have you explored graphs or additional datasets beyond those that were tested? Conducting experiments on a larger scale could highlight the scalability benefits more effectively.\n\n4. It would be advantageous to expand upon the work section by discussing approaches such as sampling methods for GNN training and explicit models like Neural ODE/DEQ providing more context and motivation for the techniques employed in your research.\n\n5. Some sections of the paper lack sufficient details. For instance the explanation of how your techniques reduce redundancy can be vague at times. Providing details or intuitive explanations would enhance comprehension.\n\n6. The conclusion feels somewhat abrupt. Please summarize the takeaways and contributions clearly for readers well as discussing potential future directions beyond integration, with PEFT.\n\n7. To further strengthen the paper consider expanding the ablation study incorporating references to work conducting large scale experiments and providing additional intuition and details where necessary."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission8798/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission8798/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission8798/Reviewer_sP5C"
                    ]
                }
            },
            "number": 3,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission8798/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1699074978018,
            "cdate": 1699074978018,
            "tmdate": 1699637105630,
            "mdate": 1699637105630,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "BNMTGzZnvb",
                "forum": "DVA0NDUdCQ",
                "replyto": "tXpAJhoqp2",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Rebuttal by Authors - Post 1"
                    },
                    "comment": {
                        "value": "Dear reviewer, \n\nThank you so much for your positive feedback and valuable comments. It is encouraging to note your recognition of the strengths in our method, including its innovativeness and contributions. We address all of your concerns as follows:\n\n**Q1.** To better understand the proposed techniques and their impact, on data efficiency it would be beneficial to delve into the underlying mechanisms through analysis or intuition. / The analysis findings indicate that there is redundancy, in encoding and propagation. It is not clear how neighbor decoupling and implicit modeling specifically contribute to improved knowledge transfer from\nLLMs. Could you provide some insight or analysis to explain the underlying mechanisms?\n\n**A1.** Thanks for your suggestion. Please allow us to clarify that our algorithm improves knowledge transfer from LLMs to downstream tasks, particularly in scenarios with limited data, resulting in significant data efficiency. This is achieved by supporting end-to-end fine-tuning directly on the downstream tasks, a feature not supported by existing algorithms.\n\nAt the beginning of Section 3, we point out that existing algorithms, such as GIANT and GLEM, can not be trained or fine-tuned in an end-to-end manner for the downstream tasks. For instance, GIANT pre-trains the LLMs using self-supervised learning, but their LLMs can not be trained on the downstream tasks due to scalability issues of existing algorithms. Therefore, we believe that due to the mismatch between training and testing, they can not effectively transfer the knowledge of LLMs to downstream tasks, especially when the training data is limited, as shown in our experiments.\n\nNevertheless, there is no existing work in the literature can support the end-to-end training of LLM-GNN. Therefore, the major motivation of our work is to design an efficient and scalable algorithm to support the end-to-end training of LLM-GNN, which enables the LLM models to be optimized directly for the downstream task, leading to improved knowledge transfer and performance.\n\nSpecifically, we first analyze the scalability challenges in end-to-end training of LLM-GNN and identify two primary bottlenecks in Section 3.1: encoding redundancy and propagation redundancy. The proposed techniques including neighbor decoupling and implicit modeling are to solve these two challenges in Section 3.2 and Section 3.3 respectively. The proposed LEADING algorithm is the first to achieve end-to-end training of LLM-GNN, and it shows tremendously improved scalability: the training cost of LEADING is close to the training of LLMs without graphs (refer to the scalability analysis in Table 2 in our submission)."
                    }
                },
                "number": 5,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8798/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700464928059,
                "cdate": 1700464928059,
                "tmdate": 1700464928059,
                "mdate": 1700464928059,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "1OFdekdaQc",
                "forum": "DVA0NDUdCQ",
                "replyto": "tXpAJhoqp2",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Rebuttal by Authors - Continue Post 2"
                    },
                    "comment": {
                        "value": "**Q2.** In order to fully grasp the importance of the techniques it is advisable to conduct ablation studies that elucidate their individual contributions. / The ablation study seems to have limitations. It would be beneficial to conduct ablation experiments to assess the individual contributions of neighbor decoupling and implicit modeling towards the observed improvements.\n\n**A2.**  Thanks again for your suggestion. As discussed in previous answer, the improvements in prediction accuracy come from the improved scalability to support end-to-end training. Therefore, we would like to provide an ablation study to elucidate the individual contributions of the techniques in terms of algorithm efficiency (running time and memory cost).\n\nWe employ the APPNP as GNN backbones and DeBERTa as the language model for our experiments on ogbn-arxiv. We conduct tests in four settings:\n1. DeBERTa + APPNP (batch size 32)\n2. DeBERTa + APPNP + Neighbor Decoupling (batch size 32)\n3. DeBERTa + Implicit Modeling + Neighbor Decoupling (batch size 32)\n4. DeBERTa + Implicit Modeling + Neighbor Decoupling (batch size 128)\n\nFor consistency, we use  two-hop neighbors(5 neighbors for each hop) for all cases. The obtained results reveal that both neighbor\ndecoupling and implicit modeling play crucial roles in reducing memory costs. The additional running time is attributed to the sequential execution of two pipelines in our algorithm. This issue can be easily mitigated through parallel training. Moreover, our LEADING algorithm can use a much larger batch size (128) to reduce the running time due to the significantly reduced memory cost.\nThis ablation study and analysis elucidates the contributions of our techniques and we will incorporate them into our revision.\n\n# Computation cost comparison on ogbn-arxiv\n\n| Methods    | Running time per epoch(s)     | Peak memory usage(MB)    |\n|---------|---------|---------|\n| DeBERTa+APPNP(BS:32)  | 5770  | 47243  |\n| DeBERTa+APPNP + Neighbor Decoupling(BS:32)  | 12117  | 8522  |\n| DeBERTa+ Neighbor Decoupling + Implicit Modeling(BS:32)  | 12117  | 6259  |\n| DeBERTa+ Neighbor Decoupling + Implicit Modeling(BS:128)  | 2996  | 25103  |"
                    }
                },
                "number": 6,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8798/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700466959879,
                "cdate": 1700466959879,
                "tmdate": 1700466959879,
                "mdate": 1700466959879,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "JZBGeGcPdm",
                "forum": "DVA0NDUdCQ",
                "replyto": "tXpAJhoqp2",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Rebuttal by Authors - Continue Post 3"
                    },
                    "comment": {
                        "value": "**Q3.** To demonstrate the scalability of the algorithm a comprehensive evaluation on a range of graph structures and larger scale datasets would be advantageous./ Have you explored graphs or additional datasets beyond those that were tested? Conducting experiments on a larger scale could highlight the scalability benefits more effectively.\n\n**A3.** Thanks for your suggestion. Here, we present the performance results for ogbn-products, which has over 2.4 M nodes, much larger than ogbn-arxiv. We also provide the associated computational costs. For simplicity, we utilize GraphSAGE as the downstream GNN backbone in this context.\n\nFrom the table, in terms of performance, LEADING outperforms all baselines, including cascaded training (Supervised-FT), self-supervised training (GIANT) and iterative training (GLEM). Regarding computational costs, our findings align with those in our papers: LEADING requires nearly identical memory compared with supervised FT without a graph, and it significantly outperforms\nGIANT and GLEM. It is worth noting that GIANT runs out of memory in our experiment due to its high training costs, so we report the accuracy of the well-trained model provided by their official repository.\n\n# Performance and computation cost comparisons on ogbn-products\n\n| Methods     | Accuracy(%)     | Running Time(s)    | Peak Memory Usage(GB)    |\n|---------|---------|---------|---------|\n| Shallow Embedding| 79.7  | ---  | ---  |\n| Pre-trained DeBERTa  | 62.0  | ---  | ---  |\n| Supervised-FT DeBERTa  | 82.2  | 67200 | 25.1  |\n| GIANT | 83.2  | N/A | OOM |\n| GLEM (DeBERTa)  | 83.2  | 356648 | 25.2 |\n| LEADING (DeBERTa)  | 84.1  | 124164 | 25.6 |"
                    }
                },
                "number": 7,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8798/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700467420846,
                "cdate": 1700467420846,
                "tmdate": 1700467420846,
                "mdate": 1700467420846,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "PCj2YsCDHK",
                "forum": "DVA0NDUdCQ",
                "replyto": "tXpAJhoqp2",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Rebuttal by Authors - Continue Post 4"
                    },
                    "comment": {
                        "value": "**Q4.** In the work section it would be beneficial to provide a comprehensive context by discussing existing approaches for efficient training of Graph Neural Networks (GNNs) and implicit models./It would be advantageous to expand upon the work section by discussing approaches such as sampling methods for GNN training and explicit models like Neural ODE/DEQ providing more context and motivation for the techniques employed in your research.\n\n**A4.** Thanks for your suggestion. Here we provide a brief introduction about the related work on those efficient training algorithm, and we will add a more comprehensive study to our revision later:\n\nCurrently, efficient training strategies for GNNs can be broadly classified into three categories. First, sampling methods adopt mini-batch training strategies to mitigate computation and memory requirements by sampling nodes and edges, mitigating the neighbor explosion issues through techniques like neighbor sampling or feature memory updates. Second, pre-computing or post-computing\nmethods separate feature aggregation and prediction models into distinct stages, involving actions such as pre-computing feature aggregation before training or post-processing with label propagation after training. Finally, distributed methods distributes large graphs across multiple servers, parallelizing GNNs training to enhance scalability and efficiency. However, these techniques are not sufficient to support end-to-end GNN-LLM training due to the high computation and memory costs of both. Therefore, existing works choose self-supervised training (GIANT) or iterative training (GLEM), which avoids end-to-end training of LLM and GNNs.\n\nRegarding implicit models, implicit models such as DEQs, Neural ODES and IGNN draw significant research attention due to their memory efficiency. DEQs introduce the concept of deep equilibrium, where the model seeks a fixed-point solution iteratively. It models the forward propagation as solving a fixed point equation. Neural ODEs treat neural networks as continuous dynamical systems, utilizing ordinary differential equations to model the evolution of hidden states. This continuous-depth representation enables seamless integration of depth, offering a flexible and computationally efficient alternative to traditional discrete layer-wise architectures. Both DEQ and Neural ODE can achieve constant memory costs because they do not need to maintain intermediate hidden layers. By using implicit modeling, LEADING also achieves small memory costs, and it can also reduce computation cost by reducing computation redundancy through historical memory."
                    }
                },
                "number": 8,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8798/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700467906964,
                "cdate": 1700467906964,
                "tmdate": 1700467906964,
                "mdate": 1700467906964,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "rYBIDHMW6v",
                "forum": "DVA0NDUdCQ",
                "replyto": "tXpAJhoqp2",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Rebuttal by Authors - Continue Post 5"
                    },
                    "comment": {
                        "value": "**Q5.** Certain parts of the explanation could benefit from in depth details or intuitive explanations especially when describing how the techniques enhance data efficiency./Some sections of the paper lack sufficient details. For instance, the explanation of how your techniques reduce redundancy can be vague at times. Providing details or intuitive explanations would enhance comprehension.\n\n**A5.** Similar as answer 1, the end-to-end GNN-LMM training enhances the knowledge transfer from LLM to the downstream GNN tasks, which contributes to the improvement of data efficiency. However, no existing works can address the significant computation overhead brought by the end to end training LLM and GNN. We explore the primary challenges arising from encoding redundancy\nand propagation redundancy. Therefore, we propose two techniques, neighbor decoupling and implicit modeling to solve these issues. The primary objective of neighbor decoupling is to address encoding redundancy efficiently. In a normal coupling case, each node serves as a target node once and neighbor nodes many times per epoch (please refer to Fig.1 in our submission), However, our decoupling strategy introduces two distinct pipelines: each node is only encoded as a target node once in pipeline1 and as neighbor nodes once in pipeline2 (please refer to Fig.2), this can significantly reduce redundant encoding times.\n\nImplicit modeling aims to alleviate propagation redundancy. It considers forward propagation as the solution to a fixed-point equation, therefore the feature aggregation can be utilized in just one layer, and the gradient computation involving straightforward first-order derivatives of this equation, there is no need to store intermediate values, in contrast to conventional neural networks. Consequently, the memory complexity remains constant and independent of the number of layers employed. This characteristic represents a notable advantage in reducing memory and computation overhead associated with deep architectures."
                    }
                },
                "number": 9,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8798/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700468694125,
                "cdate": 1700468694125,
                "tmdate": 1700468694125,
                "mdate": 1700468694125,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "GilvLlXiZx",
                "forum": "DVA0NDUdCQ",
                "replyto": "tXpAJhoqp2",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Rebuttal by Authors - Continue Post 6"
                    },
                    "comment": {
                        "value": "**Q6.** By expanding the scope of the ablation study and conducting experiments valuable insights, into these proposed methods can be gained./To further strengthen the paper consider expanding the ablation study incorporating references to work conducting large scale experiments and providing additional intuition and details where necessary.\n\n**A6.** Thank you for your valuable suggestion. Regarding the ablation study of the two proposed techniques, we have addressed this in detail in response 2. In the provided table, we illustrate the individual contributions of each technique to our efficiency improvements. The table outlines the impact of each method on the overall enhancement in computation efficiency.\n\nIn relation to large datasets, we have conducted additional experiments on ogbn-products, as outlined in response 3. In these experiments, our proposed algorithm demonstrates superior performance compared to all state-of-the-art baselines while maintaining nearly identical computational costs to supervised fine-tuning without graphs. We will incorporate all the results of these experiments\ninto our revisions.\n\n**Q7.** The conclusion section should be refined to offer a concise yet comprehensive summary of the findings and takeaways./The conclusion feels somewhat abrupt. Please summarize the takeaways and contributions clearly for readers well as discussing potential future directions beyond integration, with PEFT.\n\n**A7.** Thanks for your suggestion. Following all feedbacks from the reviewers, we will carefully incorporate their comments and suggestions into our work. Then the conclusion section will be thoroughly revised and strengthened after the rebuttal process to provide a clear summary of our contributions and takeaways.\n\nTo conclude, we believe we have fully addressed all of your concerns. Thanks again for your support and thoughtful suggestions. Please kindly let us know if you have any further concerns."
                    }
                },
                "number": 10,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8798/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700469450390,
                "cdate": 1700469450390,
                "tmdate": 1700469450390,
                "mdate": 1700469450390,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "pVmuav2k43",
                "forum": "DVA0NDUdCQ",
                "replyto": "tXpAJhoqp2",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "content": {
                    "title": {
                        "value": "A Friendly Reminder"
                    },
                    "comment": {
                        "value": "Dear Reviewer sP5C,\n\nWe are thankful for your valuable comments and suggestions. We hope that our responses have addressed all your concerns. As there is only one day remaining in the author-reviewer discussion period, we kindly request you let us know if you have any additional questions. We greatly appreciate your further feedback.\n\nIf you find our responses satisfactory, we would kindly request an update of the rating to reflect your assessment. Your feedback is valuable to us, and we appreciate your time and consideration.\n\nBest regards,\n\nAll authors"
                    }
                },
                "number": 19,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8798/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700591960786,
                "cdate": 1700591960786,
                "tmdate": 1700591960786,
                "mdate": 1700591960786,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "2iCBZx07nD",
            "forum": "DVA0NDUdCQ",
            "replyto": "DVA0NDUdCQ",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission8798/Reviewer_LoZg"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission8798/Reviewer_LoZg"
            ],
            "content": {
                "summary": {
                    "value": "This paper discusses"
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "1. The idea of combining implicit GNNs and efficient LMs seems quite interesting and intuitive.\n2. The summary of the related in this direction is clear and the author identifies the pain points of the current research in the area."
                },
                "weaknesses": {
                    "value": "1. The main claim of this paper is on large language models whereas the experiments are conducted on small language models like \"BERT\" and \"DeBERTa\". Given the parameter-efficient tuning, it's not that hard to perform experiments on large models such as GPT-2 and Llama-2. \n\n2. The technical novelty is limited. Caching neighborhoods has been one of the common techniques to speed up GNN-LMs. \n\n3. Evaluations are limited on node classifications only. Given the limited scope and \"old\" benchmark on node classification, I don't think the contribution of the proposed idea is significant enough."
                },
                "questions": {
                    "value": "1. Can this approach used in other applications such as link prediction and graph classification?\n\n2. What's the performance on larger benchmarks like ogbn-mag/obgn-product, especially the computational cost?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "3: reject, not good enough"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 4,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission8798/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1699515355746,
            "cdate": 1699515355746,
            "tmdate": 1699637105505,
            "mdate": 1699637105505,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "s58IwwZMJh",
                "forum": "DVA0NDUdCQ",
                "replyto": "2iCBZx07nD",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Rebuttal by Authors - Post 1"
                    },
                    "comment": {
                        "value": "Dear reviewer, \n\nWe sincerely appreciate your valuable comments. It is encouraging to note your recognition of the combination of implicit GNNs and efficient LLMs in our method as both interesting and intuitive.  We address all of your concerns as follows:\n\n\n**Q1.** The main claim of this paper is on large language models whereas the experiments are conducted on small language models like \u201dBERT\u201d and \u201dDeBERTa\u201d. Given the parameter-efficient tuning, it\u2019s not that hard to perform experiments on large models such as GPT-2 and Llama-2.\n\n**A1.** Thanks for this nice suggestion. We would like to point out that the proposed LEADING algorithm is versatile and applicable to any LLM architecture. We choose BERT and DeBERTa as the backbone language models in our initial submission to ensure a fair comparison with state-of-the-art baselines since these are the models they used for evaluation. For instance, we employed BERT following GIANT and DeBERTa following GLEM.\n\nFollowing your suggestion, we are happy to provide further experiments on LEADING using larger models. We fine-tune GPT-2 on Cora and ogbn-arxiv datasets. The results shown in the following table indicate that the proposed LEADING algorithm effectively fine-tunes GPT-2 to achieve better performance, which is consistent with our experiments on other language models. Regarding the computation cost, LEADING is capable of maintaining computational costs nearly identical to supervised fine-tuning of GPT without graphs. The additional running time arises due to the sequential execution of two pipelines, yet this can be effectively mitigated through parallel computing. It incurs significantly less computation overhead or memory cost compared to baselines such as GLEM. Note that GIANT runs out of memory in our experiments. It's crucial to emphasize that enhancing model size may not be essential for achieving superior performance, as evident in the comparison between the results of GPT and the DeBERTa presented in our submission. The effectiveness of fine-tuning is influenced by a range of factors beyond mere model size.\n\nBesides, Meta requires a request form to access their Llama model parameters. We submitted the request a week ago but have not received a response yet. We will add new results on Llama once we get access to it. We will provide a complete evaluation of these models in our revision.\n\n# LEADING performance(%) with GPT-2\n| Method | GCN(Cora) | GAT(Cora)|GCN(Arxiv)| Rev-GAT(Arxiv)|\n|----------|----------|----------|----------|----------|\n| Pre-trained GPT-2   | 51.9   | 54.7   | 64.8  | 66.9   |\n| Supervised-FT GPT-2   | 70.8   | 71.7   | 73.2   | 73.8   |\n| GLEM(GPT-2)   | 70.8  | 71.7   | 74.0   | 75.1   |\n| LEADING(GPT-2)   | 80.5   | 81.5   | 74.1   | 75.2   |\n\n# Scalability comparison with GPT-2 on ogbn-arxiv\n| Method | Memory(GB) | Running Time(s) | \n|----------|----------|----------|\n| Supervised-FT GPT-2    | 26.8   | 15555   | \n| GIANT   | OOM  | N/A   | \n| GLEM(GPT-2)   | 26.8   | 82930   | \n| LEADING(GPT-2)   | 27.1   | 27920  |"
                    }
                },
                "number": 1,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8798/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700459640493,
                "cdate": 1700459640493,
                "tmdate": 1700694861364,
                "mdate": 1700694861364,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "WhyWq44VIu",
                "forum": "DVA0NDUdCQ",
                "replyto": "2iCBZx07nD",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Rebuttal by Authors - Continue Post 2"
                    },
                    "comment": {
                        "value": "**Q2.** The technical novelty is limited. Caching neighborhoods has been one of the common techniques to speed up GNN-LMs.\n\n**A2.** We respectively disagree with this comment. In our paper, we provide a comprehensive survey of related works, and no existing work can achieve end-to-end fine-tuning of LLMs on graphs. Our proposed algorithm is the first to achieve this goal and shows tremendously improved scalability: the training cost of LEADING is close to the training of LLMs without graphs (refer to the scalability analysis in Table 2 in our submission).\n\nCaching neighborhoods is indeed a common technique in accelerating GNNs, and we have cited many related works in our paper but they all require the encoding of both target and neighbor nodes, which are distinctive from our algorithm. Even state-of-the-art scalable GNN training algorithms such as GNNAutoScale (GAS) [1] and GraphFM [2] still encode target nodes and their first-hop neighbors together, which encounter encoding redundancy issues as pointed out in our paper.\n\nIn contrast, our proposed algorithm completely decouples target nodes from their neighbors, which is not thought to be possible in the literature. Our approach ensures that in each epoch, each node is only encoded by LLM twice, which minimizes computation redundancy as shown in Fig. 3 and Fig. 4 in our paper. It brings significant cost reduction compared to other memory/cache-\nbased GNN training strategies.\n\nHere we also provide a memory cost comparison between LEADING and GAS on ogbn-arxiv dataset, employing the same small batch size of 16. Utilizing DeBERTa as the language model, our results demonstrate distinct advantages. Note that even though GAS only considers 1-hop neighbors, it takes significantly more memory usage.\n\nOur algorithm is novel and makes significant contributions to the end-to-end training of GNN-LMs. Please kindly let us know the specific references that speed up the training or fine-tuning of GNN-LMs, and we will be happy to provide a discussion and comparison.\n\n# Memory cost comparison on ogbn-arxiv\n| Methods    | GAS     | LEADING   |\n|---------|---------|---------|\n| Memory(MB)  | 47780  | 3892  |\n\n\n[1] Fey, Matthias, et al. \u201dGnnautoscale: Scalable and expressive graph neural networks via historical embeddings.\u201d International conference on machine learning. PMLR, 2021.\n\n[2] Yu, Haiyang, et al. \u201dGraphFM: Improving large-scale GNN training via feature momentum.\u201d International Conference on Machine Learning. PMLR, 2022."
                    }
                },
                "number": 2,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8798/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700460758833,
                "cdate": 1700460758833,
                "tmdate": 1700460758833,
                "mdate": 1700460758833,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "Xh9uYzbrhS",
                "forum": "DVA0NDUdCQ",
                "replyto": "2iCBZx07nD",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Rebuttal by Authors - Continue Post 3"
                    },
                    "comment": {
                        "value": "**Q3.** Evaluations are limited on node classifications only. Given the limited scope and \"old\" benchmark on node classification, I don't think the contribution of the proposed idea is significant enough. / Can this approach used in other applications such as link prediction and graph classification?\n\n**A3.** We would like to point out that the proposed training LLM-GNN algorithm is general and can be used for any downstream prediction tasks. However, exploring LLM for text-attributed graphs is still a pretty new area, and most datasets for graph classification or link prediction do not provide the original raw text attributes. Therefore, we choose node classification tasks following existing state-of-the-art literature such as GIANT [3], GLEM [4], and [5] to ensure a fair comparison and demonstrate our improvements in efficiency\nand accuracy.\n\nTo provide an example of link prediction, we run the proposed algorithm on Cora dataset. We manually partition the links into distinct sets for training, validation, and testing. This division is performed with two distinct split ratios: (1) a low ratio of 10/30/60 for train/valid/test, and (2) a high ratio of 85/5/10 for the same sets. We use GCN as the downstream GNN. To prioritize faster execution and simplicity, we choose DistilBert as the language model. As indicated in the following table, LEADING exhibits performance advantages over the baselines, especially in scenarios with limited training data. This aligns with the findings presented in our paper concerning node classification.\n\n# Link prediction performance AUC (%) on Cora\n| Methods     | Low     | High     |\n|---------|---------|---------|\n| Shallow Embedding  | 74.7  | 94.9  |\n| Pre-trained DistilBERT  | 64.7 | 68.7  |\n| Supervised-FT DistilBERT  | 66.3  | 89.4  |\n| LEADING(DistilBERT)  | 81.8  | 95.2  |\n\n\n[3] Chien, Eli, et al. \u201dNode feature extraction by self-supervised multi-scale neighborhood prediction.\u201d arXiv preprint arXiv:2111.00064 (2021).\n\n[4] Zhao, Jianan, et al. \u201dLearning on large-scale text-attributed graphs via variational inference.\u201d arXiv preprint arXiv:2210.14709 (2022).\n\n[5] Exploring the Potential of Large Language Models (LLMs) in Learning on Graphs, arXiv:2023.07"
                    }
                },
                "number": 3,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8798/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700461517604,
                "cdate": 1700461517604,
                "tmdate": 1700463289375,
                "mdate": 1700463289375,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "G29oTan7mY",
                "forum": "DVA0NDUdCQ",
                "replyto": "2iCBZx07nD",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Rebuttal by Authors - Continue Post 4"
                    },
                    "comment": {
                        "value": "**Q4.** What\u2019s the performance on larger benchmarks like ogbn-mag/obgn-product, especially the computational cost?\n\n**A4.** To address your concern, we present the performance results for ogbn-products, where the raw text attributes are available. We also provide the associated computational costs. For simplicity, we utilize GraphSAGE as the downstream GNN backbone in this context.\n\nFrom the following Table, in terms of performance, LEADING outperforms all baselines, including cascaded training (Supervised-FT), self-supervised training (GIANT), and iterative training (GLEM). Regarding computational costs, our findings align with those in our papers: LEADING requires nearly identical memory compared to supervised FT without a graph, and it significantly outperforms\nGIANT and GLEM. It is worth noting that GIANT runs out of memory in our experiment due to the high training costs associated, so we report the accuracy of the well-trained model provided by their official repository.\n\n# Performance and computation cost comparisons on ogbn-products\n\n| Methods     | Accuracy(%)     | Running Time(s)    | Peak Memory Usage(GB)    |\n|---------|---------|---------|---------|\n| Shallow Embedding| 79.7  | ---  | ---  |\n| Pre-trained DeBERTa  | 62.0  | ---  | ---  |\n| Supervised-FT DeBERTa  | 82.2  | 67200 | 25.1  |\n| GIANT | 83.2  | N/A | OOM |\n| GLEM (DeBERTa)  | 83.2  | 356648 | 25.2 |\n| LEADING (DeBERTa)  | 84.1  | 124164 | 25.6 |\n\nTo conclude, we believe we have fully addressed all of your concerns. Please kindly let us know if you have any further concerns."
                    }
                },
                "number": 4,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8798/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700463243121,
                "cdate": 1700463243121,
                "tmdate": 1700463243121,
                "mdate": 1700463243121,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "m053yro0AK",
                "forum": "DVA0NDUdCQ",
                "replyto": "2iCBZx07nD",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "content": {
                    "title": {
                        "value": "A Friendly Reminder"
                    },
                    "comment": {
                        "value": "Dear Reviewer LoZg,\n\nWe are thankful for your valuable comments and suggestions. We hope that our responses have addressed all your concerns. As there is only one day remaining in the author-reviewer discussion period, we kindly request you let us know if you have any additional questions. We greatly appreciate your further feedback.\n\nIf you find our responses satisfactory, we would kindly request an update of the rating to reflect your assessment. Your feedback is valuable to us, and we appreciate your time and consideration.\n\nBest regards,\n\nAll authors"
                    }
                },
                "number": 18,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8798/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700591874923,
                "cdate": 1700591874923,
                "tmdate": 1700591874923,
                "mdate": 1700591874923,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "WFYMkKFeNi",
                "forum": "DVA0NDUdCQ",
                "replyto": "s58IwwZMJh",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8798/Reviewer_LoZg"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8798/Reviewer_LoZg"
                ],
                "content": {
                    "title": {
                        "value": "Result of baselines with GPT-2 seems to be misleading"
                    },
                    "comment": {
                        "value": "Hi authors,\n\nThanks for your additional results using GPT-2. Actually, as a researcher in the field, I am pretty sure FT GPT-2 or GLEM(GPT-2) can produce accuracy higher than 52% on Cora. In my practice, a proper tuned LLM is always better than LMs and in this case I will expect much higher performance than these numbers reported by the authors."
                    }
                },
                "number": 22,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8798/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700641783921,
                "cdate": 1700641783921,
                "tmdate": 1700641783921,
                "mdate": 1700641783921,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "XELo2TTBMT",
                "forum": "DVA0NDUdCQ",
                "replyto": "2iCBZx07nD",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8798/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Further Response for your Concerns"
                    },
                    "comment": {
                        "value": "Thanks for letting us know your remaining concern about the GPT-2 performance. We are happy to further clarify this.\n\n(1) In our response, we have shown that FT GPT-2 can achieve 70.8% (GCN) and 71.7% (GAT) accuracy on Cora, which aligns with your comment (higher than 52%). Please refer to \"Supervised-FT GPT-2 in the Table \"LEADING performance (%) with GPT-2\" of our response.\n\n\n(2) We want to point out that the performance of GLEM highly depends on the labeling ratio. In all of our experiments (for all LM backbones such as DeBERTa, BERT, and GPT-2), GLEM works pretty well for the cases of high labeling ratios (such as the results for ogbn-arxiv and ogbn-product). However, GLEM does not perform well for cases of low labeling ratios (such as Cora and PubMed).\n\nThe underlying reason for the above phenomenon is that GLEM [2] adopts a Two-Stage approach (instead of the end-to-end training as our LEADING algorithm): (1) generate pseudo labels and (2) supervised fine-tuning of LMs on the generated pseudo labels. Therefore, the effectiveness of supervised tuning of LMs on the generated pseudo labels heavily relies on the quality of those pseudo labels. In the common low labeling data split of Cora, the quality of pseudo labels is bad such that fine-tuning of GLEM using these low-quality pseudo labels will even hurt the accuracy. \n\n(3) In our further investigation, we found that in the low labeling ratio case (such as Cora and PubMed), GLEM actually achieves its best accuracy in a very special case when the ratio of pseudo labels is set to be 0. This will reduce GLEM to Supervised Fine-tuning LLMs (only using truth labels), and we missed this special case in our initial experiments. Now we have updated our results for GLEM in all tables. Please refer to our updated results in the response and the updated paper. \n\n(4) We would like to emphasize that our LEADING advances over GLEM from multiple perspectives:\n\n(a) **Data efficiency**: Our end-to-end training algorithm LEADING works better than the two-stage training algorithm GLEM under all cases with both low and high labeling rates, which shows better data efficiency.\n\n(b) **Computation efficiency**: The running time of each single experiment of LEADING is much shorter than GLEM as shown in all of our experiments (please refer to Table 2 in our paper and \"Scalability comparison with GPT-2\" in our rebuttal). \n\n(c) **Hyperparameters tuning**: LEADING does not require any additional hyperparameters tuning, which further strengthens its efficiency and simplicity. However, the design of GLEM is more complicated and requires additional hyperparameters tuning such as the ratio of generated pseudo labels, the number of iterations of the EM-Step, etc [2][3].\n\n\nFinally, we would like to thank you again for engaging with us in this discussion. We will incorporate all these updated experiments and additional analyses into our revision. We will also make our code publicly available. We hope our clarification can fully address your concerns. Please kindly let us know if you have any further concerns. \n\n[1] Chen, Zhikai, et al. \"Exploring the potential of large language models (llms) in learning on graphs.\" arXiv preprint arXiv:2307.03393 (2023).\n\n[2] Zhao, Jianan, et al. \"Learning on large-scale text-attributed graphs via variational inference.\" arXiv preprint arXiv:2210.14709 (2022).\n\n[3] https://github.com/AndyJZhao/GLEM/tree/main/OGB/ogbn-arxiv"
                    }
                },
                "number": 23,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8798/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700685622223,
                "cdate": 1700685622223,
                "tmdate": 1700694712849,
                "mdate": 1700694712849,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    }
]