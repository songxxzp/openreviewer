[
    {
        "title": "Offline Reward Inference on Graph: A New Thinking"
    },
    {
        "review": {
            "id": "q8nASoRb0a",
            "forum": "Cqrv7Sve7g",
            "replyto": "Cqrv7Sve7g",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission6978/Reviewer_EMLT"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission6978/Reviewer_EMLT"
            ],
            "content": {
                "summary": {
                    "value": "The paper proposed a graph based method that infers the rewards of unlabelled state-action pairs for offline RL tasks. The method is tested on several robotic environments and the empirical results show that the proposed algorithm outperforms the existing methods."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "The paper has clear presentation and the overall idea is easy to understand. The paper performs sufficient empirical experiments and the results are convincing."
                },
                "weaknesses": {
                    "value": "1. The paper doesn't present complete details of the experiment setup. While $f_\\Theta$ is an important component for constructing the graph weights, throughout the paper no details on the setup of $f_\\Theta$. The paper also doesn't reveal any details about the policy formulation or any parameters related with the training process. \n\n2. While the paper does sufficient comparison over several existing methods, one additional thing that might be worth presenting is comparison with different reward inference methods. For example, one might want compare the paper's method with reward inference simply by KNN."
                },
                "questions": {
                    "value": "1. One potential limit of the method is the size of the weight matrix grows with the number of data points. In this case, it could be very costly to compute the matrix inverse or other related things. Can the author give some comments on the computation cost?\n\n2. An alternative way to infer the reward is to simply use the known part of the reward, i.e., $R_U = W_{UL}R_L$. What's the advantage of the proposed method, compared with this simpler formulation?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "2: You are willing to defend your assessment, but it is quite likely that you did not understand the central parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 1,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission6978/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698195334808,
            "cdate": 1698195334808,
            "tmdate": 1699636815883,
            "mdate": 1699636815883,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "BjRVW1bdUq",
                "forum": "Cqrv7Sve7g",
                "replyto": "q8nASoRb0a",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission6978/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission6978/Authors"
                ],
                "content": {
                    "title": {
                        "value": "To Reviewer EMLT"
                    },
                    "comment": {
                        "value": "I am truly appreciative of your dedication in reviewing my work. Your attention to detail and the suggestions you provided have immensely contributed to its improvement.\n\n### [I]. Explanation of weaknesses \n\n> **[1/2] W1:** The paper doesn't present complete details of the experiment setup.\n\nFor most environments, the network architecture of the function $f_\\Theta$ is a two-layer fully connected network with ReLU activation, and the number of hidden layer neurons is 64.\n\nThe network structures for policy training are as follows:\n\nFor Meta-World environments, it is a two-layer fully connected network with ReLU activation and the number of hidden layer neurons is 64. \n\nFor DeepMind Control Suite environments, it is a three-layer neural network with ReLU activation and the number of hidden layer neurons is 64.\n\n> **[2/2] W2:** While the paper does sufficient comparison over several existing methods.\n\nAs shown in Table 3 of Appendix A.5, our data has annotations for only a small fraction (mostly 10%-15%) of the environments. Therefore, for deep learning fully supervised methods, we found them to be ineffective in our testing. We believe that the KNN-based approach is a promising idea and may yield good results for certain problems. However, applying the KNN method in this scenario requires complementary measurement methods and an appropriate way of propagating rewards. We will give special consideration to the suggestions you have provided in our future work.\n\n### [II]. Explanation of questions\n\n> **[1/2] Q1:** Can the author give some comments on the computation cost?\n\nThanks for the insightful question. For this question, we choose to evaluate the computational costs of our method in several experimental environments, including training time and memory consumption. We also include the results as a section (A.7.1) in the paper's Appendix.\n\nMost of our datasets consist of $1 \\times 10^6$ state-action pairs. For computational convenience, we segment the dataset. We conducted tests on a computer with the following specifications: CPU: Intel i9-9900KF 3.6GHz, GPU: RTX 2070 SUPER (8GB VRAM). The training time and memory consumption for several environments are presented below:\n\nDataset slices containing 10000 state-action pairs:\n|         Env         | Cheetah Run | Walker Walk | Hammer | Door  | Pick-place |\n|:-------------------:|:-----------:|:-----------:|:------:|:-----:|:----------:|\n|    Training time    |   12.68s    |   12.67s    | 2.67s  | 2.7s  |   2.62s    |\n| Memory  consumption |   2351MB    |   2351MB    | 2377MB | 2377M |   2377MB   |\n\nDataset slices containing 20000 state-action pairs:\n|         Env         | Cheetah Run | Walker Walk | Hammer | Door  | Pick-place |\n|:-------------------:|:-----------:|:-----------:|:------:|:-----:|:----------:|\n|    Training time    |    14.8s    |    13.7s    | 13.07s | 13.9s |   13.52s   |\n| Memory  consumption |   5869MB    |   5869MB    | 5886MB | 5886M |   5886MB   |\n\nWe also conducted tests on a server with the following specifications for larger dataset slices: CPU: Intel Xeon Gold 6230 2.10GHz, GPU: RTX 3090 (24GB VRAM).\n\nDataset slices containing 30000 state-action pairs:\n|         Env         | Cheetah Run | Walker Walk | Hammer  |  Door  | Pick-place |\n|:-------------------:|:-----------:|:-----------:|:-------:|:------:|:----------:|\n|    Training time    |   37.61s    |   38.07s    | 23.12s  | 24.34s |   26.72s   |\n| Memory  consumption |   11511MB   |   11511MB   | 11583MB | 11583M |  11583MB   |\n\nDataset slices containing 40000 state-action pairs:\n|         Env         | Cheetah Run | Walker Walk | Hammer |  Door  | Pick-place |\n|:-------------------:|:-----------:|:-----------:|:------:|:------:|:----------:|\n|    Training time    |    39.1s    |   40.09s    | 28.34s | 29.21s |   29.86s   |\n| Memory  consumption |   19577MB   |   19577MB   | 19691MB | 19691MB  |   19691MB   |\n\n\n> **[2/2] Q2:** What's the advantage of the proposed method, compared with this simpler formulation?\n\nThanks for this insightful question. We have carefully considered it and modified the corresponding section in the paper (Section 4.3). Additionally, we have included the detailed derivation process in the Appendix (A.2).\n\nThe inference of rewards for unlabelled nodes requires considering the information transfer between labelled and unlabelled nodes, we use $W_{UL}R_L$ for this calculation while also taking into account the relationships between unlabeled nodes themselves, computed using $W_{UU}R_U$. \nSince unknown rewards $R_U$ are a variable to be learned, we provide an iterative computation formula by:\n\\begin{equation}\nR_U \\longleftarrow W_{UU}R_U + W_{UL}R_L.\n\\end{equation}\n\n-------------\nWe once again sincerely thank Reviewer EMLT from the bottom of our for reviewing our paper. We hope our answers have addressed all your concerns. If so, we would greatly appreciate it if Reviewer EMLT could consider raising their score. Please let us know if there are more questions."
                    }
                },
                "number": 3,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission6978/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700497881970,
                "cdate": 1700497881970,
                "tmdate": 1700497881970,
                "mdate": 1700497881970,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "tFFaV1I94b",
            "forum": "Cqrv7Sve7g",
            "replyto": "Cqrv7Sve7g",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission6978/Reviewer_jJQM"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission6978/Reviewer_jJQM"
            ],
            "content": {
                "summary": {
                    "value": "The paper considers the offline RL setting where reward labels are scarce. In possible application of offline RL, such labels are difficulty/unethical to obtain (such as in healthcare), therefore we need to find ways to maximize the knowledge contained in the available reward labels. The authors propose to construct a graph out of the available data and perform reward inference on nodes for which no reward is available. The method is evaluated on continuous control problems, such as DeepMind Control and Meta World."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "* The method proposes an intuitive solution to the problem of reward scarcity in the offline RL setting\n* The presentation of the paper is good and understandable\n* The method is evaluated across a wide range of environments\n\nLearning efficiently in offline RL necessarily depends on having reward information for each state action pair. When that is not the case practitioners have to find ways to infer the missing rewards labels. The paper proposes a way to infer such labels by considering the underlying geometry of the problem together with considerations with respect to different factors that influence the reward."
                },
                "weaknesses": {
                    "value": "* The baselines used are not well presented. Closely related work is not compared to\n* The empirical evaluation relies on only 5 seeds. Moreover, the presentation of the results does not consider statistical significance\n* No investigation is done to understand the impact of different choices in the algorithm\n\nThe TGR and UDS are presented too succinctly. If the reader is not familiar with these methods it is impossible to understand how they relate. For example \"UDS relabels unlabeled data with zero rewards\"  seems like a very strange way to deal with unlabeled data - it essentially doesn't deal with it. More details would be needed.\n\nThe paper proposes to \"learn a reward propagation graph and infer rewards\", yet a quick google search on \"reward propagation\" reveals a paper from 2020 that proposes a similar method to infer rewards on nodes with missing reward labels [1]. Although their method is for the online RL setting, it seems straightforward to use it in the offline RL setting. This would be an important baseline.\n\nThe empirical evaluation is not adequate from a scientific rigour point-of-view. Only 5 seeds are used and Table 1 highlights the score of methods for which the standard deviation intersects with other methods. This is misleading, only non-intersecting standard deviations should be highlighted. Perhaps additional seeds could help in this. \n\nVery little work is done to understand the impact of different components in the method. For example, what is the impact of using a reward propagation graph? Why not simply infer the reward through a classification/regression loss that takes as input only the current state. This is another important baseline. Finally what is the impact the different reward factors?"
                },
                "questions": {
                    "value": "Section 4.4 \"we\" typo -> it should be capitalized\n\n\"we regard each part of the state and action as a factor that influences the reward\" Doesn't this add more prior knowledge into the problem? What happens if we don't know the factors?\n\nFigure 2 \"prpagation\" typo\n\n\"Cabi et al. (2020) is hard to sketch tasks\" perhaps this needs some rephrasing\n\n\"Konyushkova et al. (2020) assumes rewards are binary, not adaptation to any value reward learning question.\" This could perhaps also use some rephrasing.\n\n\n================================================\n\n[1] Reward Propagation Using Graph Convolutional Networks. Klissarov and Precup. 2020"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 2,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission6978/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698767682697,
            "cdate": 1698767682697,
            "tmdate": 1699636815765,
            "mdate": 1699636815765,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "DovL0aMar0",
                "forum": "Cqrv7Sve7g",
                "replyto": "tFFaV1I94b",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission6978/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission6978/Authors"
                ],
                "content": {
                    "title": {
                        "value": "To Reviewer jJQM"
                    },
                    "comment": {
                        "value": "Thanks, Reviewer jJQM, for generously sharing your time and knowledge in reviewing our work. Your professionalism and attention to detail have played a crucial role in enhancing the quality of our paper. \n\n### [I]. Explanation of weaknesses \n\n> **[1/4] W1:** The TGR and UDS are presented too succinctly.\n\nThanks for pointing out this crucial issue. We have provided further details in the description of TGR and UDS.\n\n> **[2/4] W2:** Reward Propagation Using Graph Convolutional Networks would be an important baseline.\n\n$\\Phi_{GCN}$ is an outstanding and impactful work. We have cited the mentioned article in our paper, and the citation has been updated in the PDF. Upon this baseline, we conducted experimental validations on selected environments. In the experiments, we utilized the same data annotation ratio as our approach for $\\Phi_{GCN}$. We performed five random seed experiments for each environment, calculating the average and standard deviation of the results. The experimental results are presented in the following table:\n\n|  Env  |  Cheetah Run   |    Walker Walk    |     Fish Swim     | Cartpole Swingup |\n|:-----:|:--------------:|:-----------------:|:-----------------:|:----------------:|\n| TRAIN | 430 $\\pm$ 55.9 | 952.7 $\\pm$ 155.2 | 567.6 $\\pm$ 155.2 | 642.4 $\\pm$ 68.9 |\n|  $\\Phi_{GCN}$  | 274 $\\pm$ 71.1 |  634 $\\pm$ 172.3  |  181 $\\pm$ 93.2   | 396 $\\pm$ 132.1  |\n\n\n|  Env  |  Coffee Button   |    Push Wall     |     Hammer      |   Open Drawer   |   Window-open    |\n|:-----:|:----------------:|:----------------:|:---------------:|:---------------:|:----------------:|\n| TRAIN | 4128 $\\pm$ 210.9 | 4501 $\\pm$ 204.6 | 4532 $\\pm$ 59.1 | 4466 $\\pm$ 41.3 | 3829 $\\pm$ 208.4 |\n|  $\\Phi_{GCN}$  | 2845 $\\pm$ 303.8 | 3238 $\\pm$ 192.1 | 2933 $\\pm$ 81.8 | 2989 $\\pm$ 79.3 | 2921 $\\pm$ 234.1 |\n\n$\\Phi_{GCN}$ considers information derived from the state and performs well in environments where the state contributes significantly to the reward. For the environments where the action substantially impacts the reward, the performance of $\\Phi_{GCN}$ is slightly inferior.\n\n> **[3/4] W3:** The empirical evaluation is not adequate from a scientific rigour point-of-view. \n\n1) The goal of RL can be described by maximizing the expected cumulative reward.\nIn this setting, environments exhibit randomness, and different initializations of these environments result in varying learned policies, which affects the std value of Meta-World tasks.\nFor statistical convenience, the average of returns in those tasks presents an intuitive observation of the policies' performance. It is convinced that the std values that assist in showing the stability of the policies in random environments are additional statistics.\n\n2) In the reinforcement learning community, adopting 5 seeds is a feasible setting. In our experimental setup, conducting experiments with 10 seeds would take approximately 4 to 6 months, which is a substantial time investment. \n\n3) Based on your suggestion, we have highlighted the statistically significant highest average returns for each task with bold numbers, in which the average return is the highest, and there is not a clear overlap for the standard deviations among the baselines. For the other results, we only mark the highest average returns for each task with italic numbers, which avoids confusion caused by intersecting standard deviations. We have modified Table 1 and Table 2 in the draft, including updating the captions for both tables.\n\n> **[4/4] W4:** Very little work is done to understand the impact of different components in the method.\n\nThe information in our ablation study in Appendix A.2.1 could address your concern. We evaluated the performance of methods employing four different input modes. We endeavored to utilize deep learning (supervised learning) for reward learning, but deep learning requires substantial amounts of annotated data, and our dataset comprises at most 10%-20% annotated data. This quantity is inadequate for deep learning, making the approach based on deep learning (supervised learning) practically ineffective.\n\n### [II]. Explanation of questions\n\n> **[1/4] Q1:** Section 4.4 \"we\" typo -> it should be capitalized\n\nThank you very much, we have made the necessary corrections.\n\n> **[2/4] Q2:** Doesn't this add more prior knowledge into the problem? \n\nThanks for the insightful question. We believe that if the factors' information is known, it achieves a fine-tuning of the input. If uncertain, one can directly learn along the dimensions of state and action.\n\n> **[3/4] Q3:** Figure 2 \"prpagation\" typo\n\nThank you very much, we have updated the content of the images accordingly.\n\n> **[4/4] Q4-5:**  some rephrasing\n\nThe two modifications you suggested are extremely valuable. Your suggestions prompted us to reconsider related content carefully. We have modified the paragraph and updated it accordingly.\n\n---\nWe once again sincerely thank Reviewer jJQM for reviewing our paper."
                    }
                },
                "number": 2,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission6978/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700497345476,
                "cdate": 1700497345476,
                "tmdate": 1700734729335,
                "mdate": 1700734729335,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "SU1oLnHrQO",
                "forum": "Cqrv7Sve7g",
                "replyto": "DovL0aMar0",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission6978/Reviewer_jJQM"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission6978/Reviewer_jJQM"
                ],
                "content": {
                    "comment": {
                        "value": "Dear authors,\n\nthank you for your detailed feedback and the additional baseline. The paper overall looks more positive to me.\n\nI still feel like the TGR and UDS baselines are not explained deeply enough. Could the authors add more details in the appendix? \n\nMy comment about scientific rigour is not really about theoretical guarantees but more from the point of view of having a proper evaluation. This means having more than 5 seeds (10 minimum) and being rigorous in how results are presented. Right now Table 1 still highlights in bold results that are not statistically significant. What I mean is that the average score is higher, but there is clear overlap in the standard deviation. This should be fixed.\n\nThank you for Appendix A.3.1, this has helped understand the contribution. Please also be make sure not to highlight statistically insignificant results in Table 2."
                    }
                },
                "number": 4,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission6978/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700672357360,
                "cdate": 1700672357360,
                "tmdate": 1700672357360,
                "mdate": 1700672357360,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "0EThIv0amm",
            "forum": "Cqrv7Sve7g",
            "replyto": "Cqrv7Sve7g",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission6978/Reviewer_kgGb"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission6978/Reviewer_kgGb"
            ],
            "content": {
                "summary": {
                    "value": "This study introduces a reward inference technique designed for offline Reinforcement Learning (RL) scenarios in which only a subset of the available data are annotated with reward information. This approach leverages a graph-based framework to extend reward inference to unannotated data points. In this approach, a neural network is trained to predict the weights between nodes in the graph, facilitating the propagation of reward information. Empirical evaluations demonstrate that this approach yields superior reward quality compared to existing baseline methods."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "4 excellent"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "* This paper offers a theoretical foundation by providing guarantees that the proposed reward inference method can converge to at least a local optimum, which enhances its credibility and applicability.\n\n* The manuscript is well-written and presents the research in a clear and easily understandable manner.\n\n* The problem addressed in this work is importance, as it tackles a critical challenge in offline reinforcement learning when applying to real world situation, enabling its practical application in situations where traditional methods might fall short."
                },
                "weaknesses": {
                    "value": "See Questions"
                },
                "questions": {
                    "value": "* In the paper, the reward shaping function $f_{\\theta}$ is trained using annotated data to convert state-action pairs into scalar values, and this information is used to calculate the weights between nodes in the graph. Since $f_{\\theta}$ must learn the relative importance of each dimension in the node data, it raises the question of the necessary diversity within the annotated data. For instance, if all the annotated data consists of expert transitions with the highest rewards, it might be challenging for the function to discern which dimensions of the node data contribute most significantly to changes in reward. Hence, an important question to address is: \"What level of diversity within the annotated data is required for the proposed method to learn an effective function $f_{\\theta$?\"\n* Is the reward calculated by the graph method bounded by the range of rewards in the annotated data, i.e., $\\max{(R_U)}\\leq \\max{(R_L)}$? This question seeks to understand the extent to which the graph-based reward inference can maintain the upper bound of reward values, as derived from the annotated data.\n* To make the proposed method practically feasible, it's essential to investigate the computational cost requirements. Specifically, showing the computational time and memory consumption required for reward inference helps provide insights into the practical applicability and efficiency of the method in real-world scenarios."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission6978/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission6978/Reviewer_kgGb",
                        "ICLR.cc/2024/Conference/Submission6978/Senior_Area_Chairs"
                    ]
                }
            },
            "number": 3,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission6978/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698792599905,
            "cdate": 1698792599905,
            "tmdate": 1700649968228,
            "mdate": 1700649968228,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "xPw2ttSneN",
                "forum": "Cqrv7Sve7g",
                "replyto": "0EThIv0amm",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission6978/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission6978/Authors"
                ],
                "content": {
                    "title": {
                        "value": "To Reviewer kgGb"
                    },
                    "comment": {
                        "value": "I am genuinely appreciative of your dedication to reviewing my work. Your valuable questions and insights have significantly enriched the quality of our work. We briefly summarize the questions into the following three questions:\n\n> **[1/3] Q1:** How diverse is enough for the proposed method to learn a decent function $f_\\Theta$?\n\nThanks for the very valuable and profound question. The commonly used practice in existing work involves datasets generated by training classic reinforcement learning algorithms (such as SAC) policies online[1][2]. During the online training process, the policy evolves from weak to strong, interacting with the environment and generating diverse data. The question raised by the reviewer is very valuable; it represents a specific case but is indeed a scenario that could exist. We ensure the diversity of our dataset in two ways. Firstly, our dataset also adopts the training process data of classic reinforcement learning algorithms (such as SAC). Secondly, we use uniform sampling on the dataset to label state-action pairs, ensuring the uniform presence of annotated state-action pairs with rewards in various \"regions\" of the dataset. In our future work, we will consider how to address the specific case raised by the reviewer.\n\n[1] How to Leverage Unlabeled Data in Offline Reinforcement Learning. Yu, Tianhe, et al. ICML 2022.\n\n[2] Conservative Data Sharing for Multi-task Offline Reinforcement Learning. Yu, Tianhe, et al. NeurIPS 2021.\n\n> **[2/3] Q2:** Are the rewards calculated by the graph bounded by the annotated data, which means $max(R_U) \\leq max(R_L)$?\n\nThanks for the deepful and valuable question. For this question, we added a section in the paper's Appendix A.7.2 to examine the changes in the maximum value of $R_U$ and verify whether the learned reward values are bounded by the annotated data. We design an illustration to demonstrate this issue concerning the formula, which is also shown in Appendix A.7.2. We can observe that within certain ranges of $(I-W_{UU})$ and $W_{UL}$ values, the maximum value in $R_U$ can exceed the maximum value in $R_L$, that is the learned rewards are not bounded by the annotated data.\n\n> **[3/3] Q3:** What is the computation cost requirement for the method in terms of computation time for the reward inference to converge and memory consumption?\n\nThanks for the insightful question. For this question, we choose to evaluate the computational costs of our method in several experimental environments, including both training time and memory consumption. We also include the results as a section (A.7.1) in the Appendix of the paper.\n\nThe majority of our datasets comprise $1 \\times 10^6$ state-action pairs. To facilitate computation, we segment the dataset. We conducted tests on a computer with the following specifications: CPU: Intel i9-9900KF 3.6GHz, GPU: RTX 2070s (8GB VRAM). The training time and memory consumption for several environments are presented below:\n\nDataset slices containing 10000 state-action pairs:\n|         Env         | Cheetah Run | Walker Walk | Hammer | Door  | Pick-place |\n|:-------------------:|:-----------:|:-----------:|:------:|:-----:|:----------:|\n|    Training time    |   12.68s    |   12.67s    | 2.67s  | 2.7s  |   2.62s    |\n| Memory  consumption |   2351MB    |   2351MB    | 2377MB | 2377M |   2377MB   |\n\nDataset slices containing 20000 state-action pairs:\n|         Env         | Cheetah Run | Walker Walk | Hammer | Door  | Pick-place |\n|:-------------------:|:-----------:|:-----------:|:------:|:-----:|:----------:|\n|    Training time    |    14.8s    |    13.7s    | 13.07s | 13.9s |   13.52s   |\n| Memory  consumption |   5869MB    |   5869MB    | 5886MB | 5886M |   5886MB   |\n\nWe also conducted tests on a server with the following specifications for larger dataset slices: CPU: Intel Xeon Gold 6230 2.10GHz, GPU: RTX 3090 (24GB VRAM).\n\nDataset slices containing 30000 state-action pairs:\n|         Env         | Cheetah Run | Walker Walk | Hammer  |  Door  | Pick-place |\n|:-------------------:|:-----------:|:-----------:|:-------:|:------:|:----------:|\n|    Training time    |   37.61s    |   38.07s    | 23.12s  | 24.34s |   26.72s   |\n| Memory  consumption |   11511MB   |   11511MB   | 11583MB | 11583M |  11583MB   |\n\nDataset slices containing 40000 state-action pairs:\n|         Env         | Cheetah Run | Walker Walk | Hammer |  Door  | Pick-place |\n|:-------------------:|:-----------:|:-----------:|:------:|:------:|:----------:|\n|    Training time    |    39.1s    |   40.09s    | 28.34s | 29.21s |   29.86s   |\n| Memory  consumption |   19577MB   |   19577MB   | 19691MB | 19691MB  |   19691MB   |\n\n---\nWe once again sincerely thank Reviewer kgGb from the bottom of our for reviewing our paper and giving suggestions. We hope our answers have addressed all the your concerns. If so, we would greatly appreciate it if Reviewer kgGb could consider raising their score. Please let us know if there are more questions."
                    }
                },
                "number": 1,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission6978/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700496203398,
                "cdate": 1700496203398,
                "tmdate": 1700636959922,
                "mdate": 1700636959922,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    }
]