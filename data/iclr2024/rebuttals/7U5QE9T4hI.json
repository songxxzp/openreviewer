[
    {
        "title": "Learning to Extrapolate and Adjust: Two-Stage Meta-Learning for Concept Drift in Online Time Series Forecasting"
    },
    {
        "review": {
            "id": "7ualFjWFS7",
            "forum": "7U5QE9T4hI",
            "replyto": "7U5QE9T4hI",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission6929/Reviewer_RMU1"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission6929/Reviewer_RMU1"
            ],
            "content": {
                "summary": {
                    "value": "The paper proposed an online forecasting framework. It has two components to capture the macro and micro changes in the time series. An extrapolation network to predict the embedding of a time period based on optimal embedding from previous time periods. Then, the embedding is adjusted individually for each sample before using a decoder to generate the model parameters. The authors tested their methods on 6 datasets and compared them to several relevant continue learning baselines. An ablation study was done to show their impact on the performances. The authors also open sourced 3 datasets.\n\nDisclaimer: I am not familiar with the continuing learning for forecasting literatures, and I would need to count on others to comment on the related works.\n\n==== After reading the authors revision and response ===\nI raised my score to 5 but I don't think the paper is good enough to be accepted at ICLR."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "The paper tries to tackle a practical problem where forecasting models need to be updated given new data, continuously. It\u2019s a bold attempt to combine many ideas: using embedding; decoding model parameters directly from embedding; using LSTM to predict embedding based on previous ones; adjust embeddings on a per-sample basis."
                },
                "weaknesses": {
                    "value": "I could grasp the main ideas of the paper but some parts are not clear to me. For example, how exactly L_{surrogate} is computed? There are more in the question section.\n\nComparing Table 1 and Table 2, it seems the key to beat the baselines is the adjustment. Without it, the proposed method (which is quite complex) will not champion the others. This is not too surprising as the model is adjusted per-sample. But it comes with more computational cost and there is no address on this aspect in the paper.\n\nFollowing from the above, the paper used many ideas and I think many of them, if studied thoroughly, can be a paper itself. For example, how effective learning is in the embedding space than in the original parameter space? How well one could predict parameters of the model in the new period, compared to parameters trained in the new period? What is the impact of just having per-sample adjusted parameters? How efficient is the adjustment? Is it generally applicable for other models? I would think the paper needs simplification, rather than complication."
                },
                "questions": {
                    "value": "What is L_{surrogate}? In the paper it\u2019s written to use a loss network s, but how the loss is computed is still not clear to me. \n\nFor the adjustment of H_p for every sample, does it need to load a checkpoint for every sample? This can be very in-efficient. \n\nWhat is STOPGRAD in eq(7)? Does H_P in eq(7) mean the prediction after adjustment or the base embedding?\n\nIn Figure 3(b), I thought the L_{surrogate} is used to find the sample specific embedding, which is the adjustment. But then why before L_{surrogate}, there is a red-block of adjustment?\n\nWhy not take the model trained in the previous period as a baseline? This should be a good sanity check for all continue learning methods."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission6929/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission6929/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission6929/Reviewer_RMU1"
                    ]
                }
            },
            "number": 1,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission6929/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1697916224249,
            "cdate": 1697916224249,
            "tmdate": 1700686967533,
            "mdate": 1700686967533,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "mLb4HCMnH6",
                "forum": "7U5QE9T4hI",
                "replyto": "7ualFjWFS7",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission6929/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission6929/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Response to Reviewer RMU1 (Part 1)"
                    },
                    "comment": {
                        "value": "Thanks for your constructive suggestions! We address your concerns in the following.\n\n**{Q1}** Issues about efficiency of LEAF and adjustment stage. Does adjusment for each sample need to load a checkpoint for every sample? \n\n**{R1}** In LEAF, we do not require loading a checkpoint for each individual sample. Instead, we utilize a low-dimensional latent embedding to represent the model parameters. During the inference stage, the adjustment module generates sample-specific latent embeddings, which are subsequently decoded into specific model parameters. This process can be seamlessly integrated into the model's forward propagation and does not require the loading of a checkpoint for each individual sample. Furthermore, it is important to note that we do not generate the complete set of parameters for the entire model. Only a subset of parameters, typically from a few layers, is generated, thereby reducing the computational complexity of LEAF.\n\nTo verify our statements, we have added a comparison of the running time for LEAF, the baselines, and a variant of LEAF to investigate the efficiency of our model. The table below presents the running time for a single period while varying the number of samples in that period. One variant of LEAF, called EN, does not utilize the adjustment module. The results indicate the following findings:\n\n(1) LEAF is not significantly more computationally expensive than Fine-tune, despite its superior performance compared to Fine-tune.\n\n(2) Comparing LEAF with the EN variant, the adjustment for each individual sample is not a computational burden, as it is performed in the low-dimensional latent space.\n\n(3) The cost time is sub-linear with respect to the number of samples, thanks to the parallel computing capability of GPUs.\n\nTable 1: Running time comparison for a single period with varying number of samples.\n|Method|\t#samples = 32|#samples = 64|#samples = 128|\n|  ----  | ----  |  ----  |  ----  | \n|Fine-tune | 17.12s | 26.53s| 48.46s |\n|DER++ | 30.44s | 56.16s | 98.15s |\n|LEAF (meta-train) | 27.64s| 43.65s| 72.71s|\n|LEAF (meta-test)|21.33s |33.04s | 57.75s|\n|EN (meta-train)| 22.68s| 38.17s| 65.10s|\n|EN (meta-test) | 17.30s| 29.95s| 54.19s|\n\n**{Q2}** The framework is over-complicated.\n\n\\textbf{R2} While LEAF integrates various ideas to address concept drift in online time series forecasting, its core motivation is straightforward. The key idea behind LEAF is to leverage an extrapolation module to predict the appropriate model parameters for future periods, taking into account the macro-drift. Additionally, LEAF learns a surrogate loss to adjust the model parameters for each individual sample, considering the micro-drift within each sample. The following procedures are performed in the low-dimensional latent space to reduce the computational complexity and alleviate overfitting issues.\n\n**{Q3}**  What is $L_{surrogate}$? How the loss is computed?\n\n**{R3}**  $L^{surrogate}$is parametrized by a neural netowrk $s$. In our implementation, $s$ is a MLP with 2 layers. The output of MLP is a positive real number which is treated as the \"unsupervised loss\" or \"self-supervised loss\" value. In traditional test time training setting, there is a specific self-supervised loss or unsupervised loss, so during inferencing the parameters can be adjusted according to the loss. Nevertheless, the identification of an appropriate self-supervised task or unsupervised loss function that effectively addresses the issue of concept drift in time series data remains a non-trivial challenge. The reason is that a specific test-time objective may not contribute to the prediction performance. As a result, we introduce a network to learn to generate surrogate loss for each individual sample. Specifically, during the meta-training phase, the surrogate loss is learned to capture and compensate for different types of deviations. The rationale is that micro-drift (drift within an individual sample) is often caused by external events, such as weather conditions or holidays. Although data affected by micro-drift may exhibit different patterns, they tend to deviate from their context in a similar manner. For example, the electricity consumption pattern during the summer typically differs from that in the winter, while during holidays it tends to decrease regardless of the season.  During the meta-testing phase, the model utilizes the learned surrogate loss to adjust the latent embedding based on the specific characteristics of each individual sample. Consequently, we propose the learning of an unsupervised or self-supervised loss function via meta-learning as a strategy to manage micro-drift during test time."
                    }
                },
                "number": 9,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission6929/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700648287950,
                "cdate": 1700648287950,
                "tmdate": 1700648306748,
                "mdate": 1700648306748,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "iPIbkgTo5P",
                "forum": "7U5QE9T4hI",
                "replyto": "xThrff1fUa",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission6929/Reviewer_RMU1"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission6929/Reviewer_RMU1"
                ],
                "content": {
                    "title": {
                        "value": "Response to authors"
                    },
                    "comment": {
                        "value": "I would like to first thank the authors for their detailed feedback. \n\nMy main concern is about the complexity of the method and its gain over the adjustment baseline. I am happy to see the authors provided just adjustment as a baseline in the response to reviewer CCky. From the table, just using adjustment is already performing similar or better than all the other baselines. There seems some more improvement using the LEAF on 2 datasets, each with a different base method. But to justify the usefulness of other complex components, I think it will need more signals. \n\nI would have more confidence on the proposed method if the authors show just adjustment as an baseline is clearly worse than LEAF on most datasets combined with most base method in Table 1 in the paper. Then the added complexity maybe justifiable. If they perform similarly overall, I would advocate the authors to focus on the adjustment. Simplicity matters a lot.\n\nI will raise my score to reflect the improvement the author made in the revision. But I don't think the paper is good enough to be accepted at ICLR."
                    }
                },
                "number": 13,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission6929/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700686869963,
                "cdate": 1700686869963,
                "tmdate": 1700686869963,
                "mdate": 1700686869963,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "OTwUcsptYT",
                "forum": "7U5QE9T4hI",
                "replyto": "7ualFjWFS7",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission6929/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission6929/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Thank you and we would like to address your concerns"
                    },
                    "comment": {
                        "value": "Thanks again for you suggestions! We would like clarify that both the extrapolation and adjustment module in LEAF are significant.\n\nWe summarize the results of the ablation studies in the following tables. We have additionally added the ablation studies with TCN as target predicion model to further verify our claim .The variants include:\n- **Latent finetune**: no extrapolation and adjustment module.\n- **EN**: no adjustment module.\n- **A**: no extrapolation module.\n- **EN + A**: LEAF.\n\nThe results indicate the following findings:\n- Comparing **EN** and **A** with **Latent finetune** indicates that both the extrapolation and adjustment module works.\n- Comparing **EN** and **A** with **EN + A** indicates that using only extrapolation or the adjustment module alone does not perform as well as the complete LEAF framework. **Only utilizing the adjustment module is not good enough.**\n\nTable 1: Ablation study results on Load-1 and ETTm1 with prediction models of DLinear. \n|    Method    |    Load-1   | ETTm1|\n|  ----  | ----  | ----  | \n|       |   MSE/MAE    | MSE/MAE| \n|     Latent finetune   |  0.6683 /\t0.5057 |\t0.7019 /\t0.5196     | \n|     EN |  0.6578 /\t0.4931      | 0.6723 /\t0.5066  | \n|     A  |  0.6562/\t0.5045      | 0.6745 /\t0.5295  | \n|     EN + A (LEAF)  |  **0.6042** /\t**0.4605**      | **0.6161**/**0.4836** | \n\n\nTable 2: Ablation study results on Load-1 and ETTm1 with prediction models of PatchTST. \n|    Method    |    Load-1   | ETTm1|\n|  ----  | ----  | ----  | \n|       |   MSE/MAE    | MSE/MAE| \n|     Latent finetune   |  0.8103 /\t0.6068 |\t0.7546 /\t0.5473      | \n|     EN |  0.7539 / \t0.5800 |\t0.7334 / \t0.5410   | \n|     A |  0.6783 /\t0.5198 |\t0.6823 /\t0.5143  | \n|     EN + A (LEAF)  |  **0.6429** /\t**0.5165**      | **0.6717**/**0.5082** | \n\n\nTable 3: Ablation study results on Load-1 and ETTm1 with prediction models of TCN. \n|    Method    |    Load-1   | ETTm1|\n|  ----  | ----  | ----  | \n|       |   MSE/MAE    | MSE/MAE| \n|     Latent finetune   |  0.7945 /\t0.6241 |\t0.9009 /\t0.6236      | \n|     EN |  0.7664 / \t0.5788 |\t0.8013 / \t0.6001   | \n|     A |  0.7214 /\t0.5704 |\t0.8160 /\t0.5953  | \n|     EN + A (LEAF)  |  **0.7080** /\t**0.5312**      | **0.7727**/**0.5526** |"
                    }
                },
                "number": 17,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission6929/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700714020470,
                "cdate": 1700714020470,
                "tmdate": 1700719610944,
                "mdate": 1700719610944,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "K7WRck6D9K",
            "forum": "7U5QE9T4hI",
            "replyto": "7U5QE9T4hI",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission6929/Reviewer_5qcj"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission6929/Reviewer_5qcj"
            ],
            "content": {
                "summary": {
                    "value": "The paper has two primary contribution: A framework that utilizes a two stage embedding approach to capture macro and micro drifts when forecasting time-series data, and introducing a new dataset that could potentially be used for benchmarking mechanisms over concept-drifting time series data streams. Particularly, the authors utilize embedding learned from LSTMs over a time window that are adjusted with a sample-specific surrogate loss to account for micro-drifts. The two functions are jointly learned from data, and embedding are updated over time. The empirical results comparing the proposed LEAF approach to other competing methods over well known datasets and the newly introduced electric load datasets shows that the proposed approach generally performs well, resulting in lower error. Furthermore, the ablation study conducted by the authors demonstrate the rationale behind the two stage optimization procedure proposed in the paper."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "1. The approach has a unique take on predicting over multi-variate time-series data. The paper captures the differences among various competing methods and illustrates well the reasons why the proposed approach works.\n2. The empirical analysis presented in the paper, along with case study, support the proposed hypothesis well.\n3. The paper is well structured providing most of the relevant details needed to replicate the proposed approach."
                },
                "weaknesses": {
                    "value": "1. While the problem of time-series prediction clearly assumes the availability of labeled data over time, it is not clear how the proposed approach is different from metric learning approaches proposed in general data stream classification papers such as Fischer, Lydia, Barbara Hammer, and Heiko Wersing. \"Online metric learning for an adaptation to confidence drift.\" 2016 International Joint Conference on Neural Networks (IJCNN). IEEE, 2016. and Wang, Zhuoyi, et al. \"Metric learning based framework for streaming classification with concept evolution.\" 2019 international joint conference on neural networks (IJCNN). IEEE, 2019.\n2. While the paper conceptually explains the optimization function employed, it is not clear how the actual network architecture is constructed. The authors mention in the implementation details that MLPs were used for implementing decoder. However, lack of additional information significantly reduces the ability to reproduce provided results in the paper.\n3. One of the key elements of a data classification/time series prediction mechanism over a data stream is space and time complexity. This is completely missing in the paper. While the authors claim that LEAF's performance improvements over competing methods are significantly better, it is not clear if this is due to higher cost in computation and/or time. It would be better for the authors to provide a computational complexity analysis and comparison."
                },
                "questions": {
                    "value": "1. In the experimental setting, is there a reason why all forecast horizon is set to 24? What is the relationship between forecast horizon and model performance?\n2. In table 1 and table 2, it is not clear if the results are statistically significant. Can you please include variance among the five trials for these results?\n3. In the last part of Section 4.2, the authors note that ER and DER++ methods incorporate mechanisms that alleviate catastrophic forgetting, and is orthogonal to the proposed solution. Is it possible to incorporate these mechanisms in the proposed solution as future work? What are the challenges?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 2,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission6929/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698814173502,
            "cdate": 1698814173502,
            "tmdate": 1699636807660,
            "mdate": 1699636807660,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "nRgmamg7m6",
                "forum": "7U5QE9T4hI",
                "replyto": "K7WRck6D9K",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission6929/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission6929/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Response to Reviewer 5qcj (Part 1)"
                    },
                    "comment": {
                        "value": "Thanks for your constructive suggestions! We address your concerns in the following.\n\n**{Q1}** What is the main difference between LEAF and online metric leaning methods?\n\n**{R1}** LEAF introduces a novel and distinct contribution by addressing concept drift in online time series forecasting in two stages. LEAF differs from existing metric learning methods in several important ways. The primary goal of [1] is to learn a suitable latent feature space where samples within same class are close together compared to samples from different classes with a focus on noval class problem. [2] aims to mitigate the issue of confidence drift within a hybrid architecture comprising a static offline model and an online adaptive model. Conversely, the objective of LEAF is to capture the dynamic evolution of the distribution $p_t(X, Y)$ by compressing the distribution information into a low-dimensional latent embedding and subsequently modeling the evolution of the latent embedding.  Additionally, the approaches of the first and second studies adhere to a conventional stream learning paradigm, wherein drift detection is followed by adaptation. However, our approach posits that concept drift may occur at any moment for any sample, and as such, the detection and adaptation of drift is implicitly integrated into the extrapolation and adjustment phase.\n\n[1] Metric learning based framework for streaming classification with concept evolution. IJCNN 2019.\n\n[2] Online metric learning for an adaptation to confidence drift. IJCNN 2016.\n\n**{Q2}** Detailed implementation of network architecture.\n\n**{R2}** Actually, in our implementation, the parameter decoder, relation network (R), embedding function (g), and loss network (s) are implemented as 2-layer MLPs. Our primary objective in this research is to address concept drift in online time series forecasting using a general framework. To achieve this, we have simplified the design of the network architecture to ensure that any improvements are solely achieved through the learning framework, rather than relying on a complex network structure. However, it is possible to substitute them with more sophisticated networks to achieve better performance in practical applications. Nevertheless, in this research work, our focus is solely on investigating the framework itself.\n\n**{Q3}** Issues about computational efficiency.\n\n\\textbf{R3} We have added a comparison of the running time for LEAF, the baselines, and a variant of LEAF to investigate the efficiency of our model. The table below presents the running time for a single period while varying the number of samples in that period. One variant of LEAF, called EN, does not utilize the adjustment module. The results indicate the following findings:\n\n(1) LEAF is not significantly more computationally expensive than Fine-tune, despite its superior performance compared to Fine-tune.\n\n(2) Comparing LEAF with the EN variant, the adjustment for each individual sample is not a computational burden, as it is performed in the low-dimensional latent space.\n\n(3) The cost time is sub-linear with respect to the number of samples, thanks to the parallel computing capability of GPUs.\n\nTable 1: Running time comparison for a single period with varying number of samples.\n|Method|\t#samples = 32|#samples = 64|#samples = 128|\n|  ----  | ----  |  ----  |  ----  | \n|Fine-tune | 17.12s | 26.53s| 48.46s |\n|DER++ | 30.44s | 56.16s | 98.15s |\n|LEAF (meta-train) | 27.64s| 43.65s| 72.71s|\n|LEAF (meta-test)|21.33s |33.04s | 57.75s|\n|EN (meta-train)| 22.68s| 38.17s| 65.10s|\n|EN (meta-test) | 17.30s| 29.95s| 54.19s|"
                    }
                },
                "number": 7,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission6929/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700648138795,
                "cdate": 1700648138795,
                "tmdate": 1700648138795,
                "mdate": 1700648138795,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "iEIaPrZk7U",
            "forum": "7U5QE9T4hI",
            "replyto": "7U5QE9T4hI",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission6929/Reviewer_rgPM"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission6929/Reviewer_rgPM"
            ],
            "content": {
                "summary": {
                    "value": "The paper fixates on the concept drift problem in online time series forecasting. The authors classify this problem into macro-drift and micro-drift categories. Technologically, they present the LEAF as a model-agnostic algorithm for online learning, where a queue is stored for macro-drift and a special meta-learnable surrogate loss is adopted for micro-drift. FEAF can consistently boost the forecasting performance of various deep models."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "-\tThe paper focuses on an important question: online time series forecasting.\n-\tThe proposed LEAF is technologically sound. They also provide a new benchmark for concept drifts.\n-\tDetailed ablations are also included."
                },
                "weaknesses": {
                    "value": "1.\tAbout the efficiency.\n\nSince they adopt the meta-learning strategy for training, the efficiency w.r.t. other online learning methods and naive training should be compared, such as the GPU memory, running time in both training and inference phases.\n\n2.\tMore baselines.\n\nActually, TimesNet [1] is a state-of-the-art TCN-based model for time series forecasting. They should also experiment on this model to demonstrate the effectiveness of LEAF, in addition to the vanilla TCN.\n\nBesides, Non-stationary Transformer also claims that it can handle the non-stationary time series, which should also be included in discussion and comparison.\n\n[1] TimesNet: Temporal 2D-Variation Modeling for General Time Series Analysis, ICLR 2023\n\n[2] Non-stationary Transformers: Rethinking the Stationarity in Time Series Forecasting, NeurIPS 2023\n\nOne simple baseline for online learning is to retrain the model with new-coming data. How about this protocol? For example, suppose that the first training adopts 70% data, you can also train a new model when you receive 90% new data.\n\n3.\tThe Na\u00efve setting could be wrong. \n\nWhy not train the model with both warm-up and meta-train data? Since LEAF also adopts the meta-train data for model training, a fair comparison is to adopt the same training data for all baselines. Correct me if I misunderstood.\n\n4.\tAbout the \"model agnostic\" claim.\n\nIt is interesting to generate forecasting model parameters. I suggest listing the generated parameter size for each model, since the transformer-based models are quite big. How to directly decode such big model parameter with MLPs? Or you just change part of the model. This point should be made clearer. If you only adjust the final linear layer, it is hard to claim model agnostic, giving that there are a lot of models do not contain the final linear layer."
                },
                "questions": {
                    "value": "I think the technical design of this paper is reasonable and interesting. But it is insufficient (maybe wrong) in the experiments and clarifications about their design. All the details are included in the weaknesses section."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "3: reject, not good enough"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 3,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission6929/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698819410339,
            "cdate": 1698819410339,
            "tmdate": 1699636807520,
            "mdate": 1699636807520,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "tTM1bqqVgc",
                "forum": "7U5QE9T4hI",
                "replyto": "iEIaPrZk7U",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission6929/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission6929/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Response to Reviewer rgPM (Part 1)"
                    },
                    "comment": {
                        "value": "Thanks for your constructive suggestions! We address your concerns in the following.\n\n**{Q1}** Issues about model efficiency.\n\n**{R1}** We have added a comparison of the running time for LEAF, the baselines, and a variant of LEAF to investigate the efficiency of our model. The table below presents the running time for a single period while varying the number of samples in that period. One variant of LEAF, called EN, does not utilize the adjustment module. The results indicate the following findings:\n\n(1) LEAF is not significantly more computationally expensive than Fine-tune, despite its superior performance compared to Fine-tune.\n\n(2) Comparing LEAF with the EN variant, the adjustment for each individual sample is not a computational burden, as it is performed in the low-dimensional latent space.\n\n(3) The cost time is sub-linear with respect to the number of samples, thanks to the parallel computing capability of GPUs.\n\nTable 1: Running time comparison for a single period with varying number of samples.\n|Method|\t#samples = 32|#samples = 64|#samples = 128|\n|  ----  | ----  |  ----  |  ----  | \n|Fine-tune | 17.12s | 26.53s| 48.46s |\n|DER++ | 30.44s | 56.16s | 98.15s |\n|LEAF (meta-train) | 27.64s| 43.65s| 72.71s|\n|LEAF (meta-test)|21.33s |33.04s | 57.75s|\n|EN (meta-train)| 22.68s| 38.17s| 65.10s|\n|EN (meta-test) | 17.30s| 29.95s| 54.19s|\n\n**{Q2}** More baselines including model retraining, Non-stationary Transformer and more target prediction model, e.g. TimesNet.\n\n**{R2}** Thank you for your suggestion. In response to your feedback, we have incorporated the Retrain and Non-stationary Transformer baselines, as well as the target model TimesNet, into the experiments in the revised version. However, due to time constraints during the rebuttal phase, only the Load-1 and Ettm1 datasets were used. We will report the results on all six datasets in the final version of the paper. By including these baselines, our intention is to provide a comprehensive evaluation and comparative analysis of the performance and effectiveness of our proposed approach. The results are represented in the following tables. Table 2 verifies that LEAF outperforms retraining baseline and Non-stationary Transformer. Table 3 verifies that LEAF works better than other baselines on the state-of-the-art CNN-based prediction model, TimesNet.\n\nTable 2: Performance comparison with **Retrain** and **Non-stationary Transformer**. Retrain uses all historical samples as training data in each period. Non-stationary Transformer is a transformer model trained on a warm-up and meta-train set and tested on a meta-test set.\n\n|Target model (Method)|\tLoad-1\t||\tEttm1||\t\n|  ----  | ----  | ----  | ----  | ----  | \n|\t|MSE|\tMAE|\tMSE| MAE|\n|Dlinear (Retrain)\t|0.6329\t|0.4802\t|0.6667\t|0.4986|\n|Dlinear (LEAF)|\t**0.6042**| **0.4605**| **0.6161** |**0.4836** \t|\t\n|LSTM (Retrain)\t|1.5145\t|0.8507\t|1.4140|\t0.7330|\n|LSTM (LEAF)| **0.6150** |**0.4765**| **0.7246** |**0.5397**|  \n|PatchTST (Retrain)\t|0.6677\t|0.5317\t|0.6394\t|0.5036|\n|Non-stationary Transformer|1.2652 |0.7944|1.4177 |0.7275 |\n|PatchTST (LEAF)|\t**0.6429**| **0.5165** |**0.6717** |**0.5082** | \n|TCN (Retrain)|\t1.0901\t|0.7308\t|1.2118|\t0.7132|\n|TCN (LEAF) |**0.7080**| **0.5312** |**0.7727**| **0.5526** |\n\t\nTable 3: Performance comparison with **TimesNet** as target prediction model.  \t\t\n| | \tEtth2\t| \tLoad-1\t| \tECL\t| \n|  ----  | ----  | ----  | ----  |\n| | \tMSE/MAE\t| MSE/MAE\t| \tMSE/MAE\t\t| \t\t\t\t\t\n|Na\u00efve\t|0.9185\t/ 0.6803\t|1.3167/0.7724|\t0.2826/0.3754|\n|Fine-tune|\t0.7859/0.6271|\t1.1885/0.7428\t|0.1746/0.2864|\n|ER\t|0.8045/0.6319|\t1.134/0.723|\t0.1769/0.2905|\n|DER++\t|0.8045/0.6254\t|1.1288/0.7276\t|0.1816/0.294|\n|LEAF\t|**0.7047**/**0.5894**\t|**0.6424**/**0.5052**\t|**0.1254**/**0.2388** \t|"
                    }
                },
                "number": 5,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission6929/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700647928362,
                "cdate": 1700647928362,
                "tmdate": 1700647928362,
                "mdate": 1700647928362,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "c5aniraApL",
                "forum": "7U5QE9T4hI",
                "replyto": "iEIaPrZk7U",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission6929/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission6929/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Response to Reviewer rgPM (Part 2)"
                    },
                    "comment": {
                        "value": "**{Q3}** Issues of The Na\u00efve setting.\n\n**{R3}** It is important to add a baseline that use warm-up and meta-train data as training set. Following your suggestion, we have added a Na\u00efve baseline (namely Na\u00efve+) by treat both warm-up and meta-train data as training data. The results are shown in the following table. LEAF still outperforms this baseline.\n\nTable 4: Performance comparison with **Na\u00efve+**. \n|\t|\tLoad-1\t|\tLoad-2\t|\tLoad_3|\t\tEtth2\t|\tEttm1\t|\tECL|\n|  ----  | ----  | ----  | ----  |  ----  | ----  | ----  |        \n|**LSTM**|\tMSE/MAE| MSE/MAE |MSE/MAE| MSE/MAE| MSE/MAE| MSE/MAE|\n|\tNa\u00efve+\t|1.4887\t/0.8487|\t1.6944/\t0.9192|\t2.9772\t/1.1576\t|0.9171/\t0.6414|\t1.4140/\t0.7331|\t0.1794\t/0.2943|\n|\tLEAF\t|**0.6150**/**0.4765**\t|**0.6426**\t/**0.5064**|\t**1.7515**/\t**0.8084**\t|**0.7398**\t/**0.5892**|\t**0.7246**/\t**0.5397**|\t**0.1216**/\t**0.2328**|\n|**Dlinear**\t|\tMSE/MAE| MSE/MAE |MSE/MAE| MSE/MAE |MSE/MAE| MSE/MAE|\t\t\t\t\t\t\t\t\t\t\n|\tNa\u00efve+|\t0.6371\t/0.4813\t|0.6233/\t0.4739\t|1.8153\t/0.8165\t|0.7429/\t0.5721|\t0.6666\t/0.5006|\t0.1365/\t0.2284|\n|\tLEAF\t|**0.6042**/\t**0.4605**\t|**0.5915**\t/**0.459**\t|**1.6952**/\t**0.7742**\t|**0.6457**\t/**0.5491**|\t**0.6161**\t/**0.4836**\t|**0.1126**\t/**0.2200**|\n|**PatchTST**\t|MSE/MAE |MSE/MAE |MSE/MAE |MSE/MAE |MSE/MAE| MSE/MAE\t|\t\t\t\t\t\t\t\t\n|\tNa\u00efve+\t|0.7630\t/0.5818\t|0.6674\t/0.5216\t|**1.8485**\t/**0.8729**|\t0.7378\t/0.5869\t|**0.6579**\t/0.5136|\t0.1120\t/0.2214|\n|\tLEAF\t|**0.6429**\t/**0.5165**\t|**0.6155**\t/**0.5054**\t|1.9582\t/0.8794|\t**0.6707**\t/**0.5640**\t|0.6717\t/**0.5082**\t|**0.1098**\t/**0.2161**|\n|**TCN**\t\t|\tMSE/MAE |MSE/MAE| MSE/MAE| MSE/MAE| MSE/MAE |MSE/MAE\t|\t\t\t\t\t\t\t\t\n|\tNa\u00efve+\t|1.1528\t/0.7598\t|0.7877\t/0.5770|\t1.9786\t/0.8871|\t0.9194\t/0.6676|\t1.1733\t/0.7067|\t0.2138\t/0.3230|\n|\tLEAF\t|**0.708**/\t**0.5312**\t|**0.6934**\t/**0.5299**|\t**1.8872**\t/**0.8858**|\t**0.7214**\t/**0.5887**\t|**0.7727**\t/**0.5526**\t|**0.1340**\t/**0.2499**|\n\n**{Q4}** Issues about \"model agnostic\".\n\n**{R4}** We do not generate all parameters of a model, and parameters of few layers are generated. Each kind of layer can be applied, not only linear layer. For example, when DLinear is used as the target model, we generate parameters of a linear layer. When PatchTST is used as the target model, We generate parameter of the last transformer block (including Q/K/V projection networks and a feed-forward network). To apply to different types of layers, we need to know the parameter shape of the network layer in advance, and we calculate the total number of the parameters need to be generated to determine the width of the decoder in LEAF. The generated parameters are reshaped to appropriate shapes and loaded into corresponding layers of the target prediction model."
                    }
                },
                "number": 6,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission6929/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700648004602,
                "cdate": 1700648004602,
                "tmdate": 1700648931491,
                "mdate": 1700648931491,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "ZD27tzjkwg",
                "forum": "7U5QE9T4hI",
                "replyto": "STICWyh9X1",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission6929/Reviewer_rgPM"
                ],
                "readers": [
                    "everyone",
                    "ICLR.cc/2024/Conference/Submission6929/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission6929/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission6929/Reviewers",
                    "ICLR.cc/2024/Conference/Submission6929/Reviewers/Submitted"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission6929/Reviewer_rgPM"
                ],
                "content": {
                    "title": {
                        "value": "Thanks for your response but insist on my original score"
                    },
                    "comment": {
                        "value": "I would like to thank the author's effort in providing new results. However, the main concerns still exist due to the uncorrected paper.\n\n(1) About the Na\u00efve setting. I believe that the correct Na\u00efve setting should be the \"Na\u00efve+\" that the author provided in the rebuttal. \nThis indicates that the experiments are wrong to some extent and the author did not correct them in the revised paper. The current version may mislead some readers in the overclaimed relative promotion.\n\n(2) More corrections or clarifications about \"model agnostic\" are expected in the revised paper.\n\nSince the authors did not revise the paper to a new version, it is hard to give an acceptance decision to this version. Thus, I would like to keep my original score."
                    }
                },
                "number": 15,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission6929/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700706811434,
                "cdate": 1700706811434,
                "tmdate": 1700706811434,
                "mdate": 1700706811434,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "CqXKB2aHb8",
                "forum": "7U5QE9T4hI",
                "replyto": "iEIaPrZk7U",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission6929/Authors"
                ],
                "readers": [
                    "everyone",
                    "ICLR.cc/2024/Conference/Submission6929/Senior_Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission6929/Area_Chairs",
                    "ICLR.cc/2024/Conference/Submission6929/Reviewers",
                    "ICLR.cc/2024/Conference/Submission6929/Reviewers/Submitted"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission6929/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Thank you and we have updated our submission"
                    },
                    "comment": {
                        "value": "Thanks again for you suggestions!\n\nWe have uploaded the revised version of our paper. The modified and newly added parts are indicated with blue highlights. The major modifications made include:\n\n(1) We have included the numeric results of the **Retrain** and **Naive+** baselines. This addition provides a comprehensive evaluation of the effectiveness and advantages of our proposed method. Furthermore, we clarify that the original Naive baseline is not incorrect. In real-world scenarios, the warm-up set represents historical data, based on which we train the initial model. The meta-train and meta-test sets, on the other hand, represent streaming data. The Naive baseline is the most naive strategy, implying that the model will no longer be updated during data stream comes. However, we acknowledge the importance of Naive+ baseline.\n\n(2) We have conducted ablation studies on a new model variant called \"A\" that solely utilizes the adjustment module. The results indicate that the adjustment module works; however, using only extrapolation or the adjustment module alone does not perform as well as the complete LEAF framework.\n\n(3) We have added remarks about the \"model agnostic\" claim in Section 3.2.3. This addition helps readers better understand how to apply LEAF to different types of prediction models.\n\nAdditionally, Table 3 in our previous response confirms that LEAF outperforms other baselines on the state-of-the-art CNN-based prediction model, TimesNet, using three datasets: Etth2, Load-1, and ECL, each with different properties. Since we haven't finnished TimesNet experiments on all six datasets due to limmited time, we promise that we will conduct these experiments on all six datasets and present the results in the final version of the paper."
                    }
                },
                "number": 16,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission6929/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700710721578,
                "cdate": 1700710721578,
                "tmdate": 1700710913213,
                "mdate": 1700710913213,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "gfk3WQehu7",
            "forum": "7U5QE9T4hI",
            "replyto": "7U5QE9T4hI",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission6929/Reviewer_x7gB"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission6929/Reviewer_x7gB"
            ],
            "content": {
                "summary": {
                    "value": "In this manuscript, the authors consider concept-drift phenomenon where the underlying distribution or environment of time series changes. We first classify concepts into two categories, macro-drift corresponding to stable and long-term changes and micro-drift referring to sudden or short-term changes. Obviously, changes in the variance of the data over time due to sudden changes in potential events in a time series prediction task is an interesting open problem."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "1. It is very important to use the meta-learning method to alleviate the problem that the concept drift caused by the data in the online scene leads to the decline of the accuracy of the time series prediction model.\n2. The effectiveness of the proposed algorithm is demonstrated by comparison with several baseline models and abundant ablation experiment and visualization results."
                },
                "weaknesses": {
                    "value": "1. It is suggested that the author consult the related literatures on the concept drift problem of time series data, because the author obviously ignores some studies based on surrogate gradient.\n2. The visual image resolution is too low, and the display effect is very poor.\n3. The MAPE metric was missing of the time series prediction study.\n4. Datasets related to power forecasting are more cyclical temporal patterns, so why does the author not use financial futures datasets with more abrupt phenomena (such as NASDAQ 100 dataset)?"
                },
                "questions": {
                    "value": "Please see details of Weaknesses."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "details_of_ethics_concerns": {
                    "value": "N/A"
                },
                "rating": {
                    "value": "8: accept, good paper"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission6929/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission6929/Reviewer_x7gB",
                        "ICLR.cc/2024/Conference/Submission6929/Senior_Area_Chairs"
                    ]
                }
            },
            "number": 4,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission6929/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698822538135,
            "cdate": 1698822538135,
            "tmdate": 1700649919783,
            "mdate": 1700649919783,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "BPoXVOAVLq",
                "forum": "7U5QE9T4hI",
                "replyto": "gfk3WQehu7",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission6929/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission6929/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Responce to Reviewer x7gB"
                    },
                    "comment": {
                        "value": "Thanks for your constructive suggestions! We address your concerns in the following.\n\n**{Q1}** Literature review of surrogate gradient.\n\n**{R1}** Althogh exsisting works have studied meta-learning explicit [1] and implicit gradients [2] for few-shot learning. LEAF introduces a novel and distinct contribution by introducing a meta-learned surrogate loss for sample-specific adjustment. The surrogate loss in LEAF differs from previous methods in several important ways. Firstly, the surrogate loss in LEAF is sample-wise, allowing it to leverage information within each individual sample. This enables the model to adapt and update itself for each sample, capturing micro-drift that may occur over time. Furthermore, the surrogate loss in LEAF is specifically designed to address the challenges of online time series scenarios. It takes into consideration comprehensive information about the test sample itself, as well as its contextual and relational information with the training data. This design ensures that the surrogate loss effectively incorporates relevant information to capture and handle concept drift in the time series data. In summary, LEAF stands out from existing works by introducing a sample-wise surrogate loss that is carefully designed for online time series scenarios, effectively leveraging information within each individual sample and considering its context and relationship to the training data.   \n\n[1] Semi-Supervised Learning with Meta-Gradient. AISTATS 2021.\n\n[2] Meta-Learning with Implicit Gradients. NeurIPS 2019.\n\n**{Q2}** Issues about visual resolution.\n\n**{R2}** We apologize for any confusion caused. We have used vector diagrams for all our figures. We kindly recommend using a recent PDF reader, such as the Adobe Acrobat Reader DC version 2018.009.20044 that we utilized, for optimal viewing and clarity.\n\n**{Q3}** The MAPE metric was missing of the time series prediction study.\n\n**{R3}** In the experiments, we calculate metrics based on normalized data. However, MAPE is not suitable for normalized data, as many data points have values of zero or close to zero which will cause anomalies in MAPE. Besides, many works [1-4] of time series forecasting do not consider this metric because of this reason.\n\n[1] Informer: Beyond Efficient Transformer for Long Sequence Time-Series Forecasting. AAAI 2021.\n\n[2] Autoformer: Decomposition Transformers with Auto-Correlation for Long-Term Series Forecasting. NeurIPS 2021.\n\n[3] PatchTST: A Time Series is Worth 64 Words: Long-term Forecasting with Transformers.. ICLR 2023.\n\n[4] TimesNet: Temporal 2D-Variation Modeling for General Time Series Analysis. ICLR 2023.\n\n**{Q4}** Financial futures datasets (such as NASDAQ 100 dataset).\n\n**{R4}** Following your suggestion, We have added experiments to evaluate LEAF compared with other baselines on NASDAQ 100 dataset. The results are in the following table, which demonstrate that LEAF outperforms other baselines with different target prediction model in such a stock trading scenario with frequent abrupt drifts.\n\nTable 1: The results on NASDAQ100-small dataset. The look back window is 96, the forecast horizon is 24, and the model update interval is 672.\n| Target model|    Method    |   MSE  | MAE|\n|  ----  | ----  | ----  | ----  | \n|LSTM||||\t\t\t\n||\tFine-tune|\t0.088805614|0.168699994|\n||\tER|\t0.085547001|\t0.164519332|\n||\tDER++\t|0.084219066\t|0.163036682|\n||\tLEAF\t|**0.074302469**\t|**0.155264446**|\n|Dlinear||||\t\t\t\n||\tFine-tune\t|0.059522929\t|0.134353952|\n||\tER\t|0.058921474\t|0.133139943|\n||\tDER++\t|0.058569469\t|0.132555803|\n||\tLEAF\t|**0.057699628**\t|**0.131820278**|\n|PatchTST||||\t\t\t\n||\tFine-tune\t|0.063305718\t|0.14022743|\n||\tER\t|0.062118525\t|0.138101578|\n||\tDER++\t|0.061460179\t|0.13704128|\n||\tLEAF\t|**0.06104332**\t|**0.13698359**|\n|TCN||||\t\t\t\n||\tFine-tune\t|0.133446238\t|0.215211218|\n||\tER\t|0.127925324\t|0.212548892|\n||\tDER++\t|0.131720752\t|0.212856936|\n||\tFSNet\t|1.168908293\t|0.822896293|\n||\tLEAF\t|**0.078140934** |**0.159186956**|"
                    }
                },
                "number": 4,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission6929/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700647796891,
                "cdate": 1700647796891,
                "tmdate": 1700648468580,
                "mdate": 1700648468580,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "ku6wsy8a8C",
                "forum": "7U5QE9T4hI",
                "replyto": "BPoXVOAVLq",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission6929/Reviewer_x7gB"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission6929/Reviewer_x7gB"
                ],
                "content": {
                    "title": {
                        "value": "The author addressed all my concerns."
                    },
                    "comment": {
                        "value": "I am very sorry that I did not consider clearly the problem that many values close to zero after sample preprocessing in such of datasets. The rest concerns are well addressed by the authors. I think the article should be clearly received after adding these revisions. Considering that there is no 7 in the score, I am willing to raise it to 8."
                    }
                },
                "number": 11,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission6929/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700649897511,
                "cdate": 1700649897511,
                "tmdate": 1700649897511,
                "mdate": 1700649897511,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "XgpTzU3Uad",
            "forum": "7U5QE9T4hI",
            "replyto": "7U5QE9T4hI",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission6929/Reviewer_CCky"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission6929/Reviewer_CCky"
            ],
            "content": {
                "summary": {
                    "value": "This paper tries to solve the time series prediction problem which always suffers from dynamics or noon stationarity.  The authors propose a unified meta-learning framework called LEAF (Learning to Extrapolate and Adjust for Forecasting) which divides the concept drift into macro-drift corresponding to stable and long-term changes and micro-drift referring to sudden or short-term changes. An extrapolation module is first meta-learnt to track the dynamics of the prediction model in latent space and extrapolate to the future considering macro-drift. Then an adjustment module incorporates meta-learnable surrogate loss to capture sample-specific micro-drift\npatterns. Extensive experiments are conducted."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "1. This paper is well-presented and well-organized.\n2. This paper proposes a new meta-learning framework called LEAF (Learning to Extrapolate and Adjust for Forecasting) which divides the concept drift into macro-drift corresponding to stable and long-term changes and micro-drift referring to sudden or short-term changes. \n3. Extensive experiments are conducted."
                },
                "weaknesses": {
                    "value": "1. The paper doesn't appear to provide a strong theoretical foundation for the proposed method. It would be beneficial to include a theoretical framework or proofs to support the claims made in the paper.\n2. It should be better if more ablation studies can be provided."
                },
                "questions": {
                    "value": "Please address the questions above"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 5,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission6929/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698854193692,
            "cdate": 1698854193692,
            "tmdate": 1699636807288,
            "mdate": 1699636807288,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "YdCykqBH6W",
                "forum": "7U5QE9T4hI",
                "replyto": "XgpTzU3Uad",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission6929/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission6929/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Responce to Reviewer CCky"
                    },
                    "comment": {
                        "value": "Thanks for your constructive suggestions! We address your concerns in the following.\n\n**{Q1}** Issues about theoretical foundation.\n\n**{R1}** Our proposed method leverages the well-established theories of model-based and optimization-based meta-learning. These theories have been extensively researched and provide a solid foundation for our approach. By deeply adapting and applying these approaches, we aim to address the challenge of concept drift in online time series forecasting effectively. In order to ensure clarity and readability for the readers, we have omitted the detailed theoretical explanations of these methods and instead focused on presenting a concise and clear explanation of our motivation and approach.\n\n**{Q2}** More ablation studies are needed.\n\n**{R2}** In the ablation studies conducted in our paper, we examined the performance of the model as we gradually introduced the designed modules, namely latent optimization, extrapolation module, and adjustment module. As we did not elaborate on the individual performance of the adjustment module, we supplement an additional ablation study to investigate its effectiveness. The results are presented in the following table. It is evident that the adjustment module plays a crucial role in enhancing the forecasting performance by capturing the micro-drift. However, it falls short of surpassing the complete version of LEAF, which emphasizes the significance of the extrapolation module. These findings underscore the importance of both modules in achieving improved forecasting accuracy.\n\nTable 1: Ablation study results on Load-1 and ETTm1 with prediction models of DLinear. \"A\" is the newly added vairant that only utilize the adjustment module.\n|    Method    |    Load-1   | ETTm1|\n|  ----  | ----  | ----  | \n|    Fine-tune    |   MSE/MAE    | MSE/MAE| \n|     Latent finetune   |  0.6683 /\t0.5057 |\t0.7019 /\t0.5196     | \n|     EN |  0.6578 /\t0.4931      | 0.6723 /\t0.5066  | \n|     A (**newly added**)  |  0.6562/\t0.5045      | 0.6745 /\t0.5295  | \n|     EN + A (LEAF)  |  **0.6042** /\t**0.4605**      | **0.6161**/**0.4836** | \n\nTable 2: Ablation study results on Load-1 and ETTm1 with prediction models of PatchTST. \"A\" is the newly added vairant that only utilize the adjustment module.\n\n|    Method    |    Load-1   | ETTm1|\n|  ----  | ----  | ----  | \n|    Fine-tune    |   MSE/MAE    | MSE/MAE| \n|     Latent finetune   |  0.8103 /\t0.6068 |\t0.7546 /\t0.5473      | \n|     EN |  0.7539 / \t0.5800 |\t0.7334 / \t0.5410   | \n|     A (**newly added**)  |  0.6783 /\t0.5198 |\t0.6823 /\t0.5143  | \n|     EN + A (LEAF)  |  **0.6429** /\t**0.5165**      | **0.6717**/**0.5082** |"
                    }
                },
                "number": 3,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission6929/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700647700623,
                "cdate": 1700647700623,
                "tmdate": 1700647700623,
                "mdate": 1700647700623,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "aNKmiYgrNQ",
                "forum": "7U5QE9T4hI",
                "replyto": "YdCykqBH6W",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission6929/Reviewer_CCky"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission6929/Reviewer_CCky"
                ],
                "content": {
                    "comment": {
                        "value": "Thanks for your reply! More ablations have been provided. But my concern about the lack of theoretical contribution still exists."
                    }
                },
                "number": 12,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission6929/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700665224107,
                "cdate": 1700665224107,
                "tmdate": 1700665224107,
                "mdate": 1700665224107,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "zPSA7m6hKK",
            "forum": "7U5QE9T4hI",
            "replyto": "7U5QE9T4hI",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission6929/Reviewer_9YY8"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission6929/Reviewer_9YY8"
            ],
            "content": {
                "summary": {
                    "value": "The paper proposes a two-stage meta-learning framework to address the concept drift issue for time-series forecasting. The authors identify and address the two types of drift namely macro-drift and micro-drift. Drifts in time series that occur over a longer time period are referred to as macro-drifts whereas drifts that occur (and perhaps disappear) within short windows of time are referred to as micro-drifts. Macro-drifts are modeled using an LSTM network that learns the evolution of an embedding space corresponding to macro-drift parameters. The LSTM returns a macro-drift-adjusted embedding which is then used further. Micro-drifts are addressed using meta-learning framework that evaluates the difference between current training data (which is supposed to have micro-drifts) and historical training data using a relation network and returns micro-drift adjusted model parameters.\n\nThe entire framework can learn in an online manner, meaning the model parameters are updated as more data is made available. Initial parameters are learned in an offline phase (warmup) which are then used as initial parameters for online learning phase.\n\nAuthors show comparison of their framework across various time series forecasting architectures (such as PatchTST) and other frameworks that address the concept drift in time series on benchmark datasets."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "1. (quality and clarity) The paper is well-written, the identified concept drift issues and ways to address them have been clearly written with substantial experimental evidence suggesting that their method outperforms existing approaches.\n2. (significance) The proposed framework is more suitable for online-learnning which is a more practical setup and more accurately depicts the real-world scenario in which ML models are deployed.\n2. (significance) The benchmarking of datasets and baselines proposed by authors is essential for further developments in the field."
                },
                "weaknesses": {
                    "value": "1. Authors employ an LSTM network to model the evolution of latent space for addressing the macro-drift. However, using an LSTM to model the evolution of latent space has been significantly explored in the past. I suggest authors to refer to the paper (and its citations): Deep State Space Models for Time Series Forecasting\n\nThe empirical success of LSTM-based evolution is well-known, hence I believe that the solution to the macro-drift issue is short of novelty. The proposed solution can act as a strong baseline for a more novel solution. I suggest authors explore more aggressive approaches for extrapolation than only using a vanilla LSTM for predicting the evolution of parameters.\n\n2. More details on the solution proposed for modeling micro-drifts are needed. Perhaps a more detailed description of the relation network (R) and embedding function (g) is required. What are the alternative ways to implement them and why proposed implementations work the best should also be addressed. I also suspect any off-the-shelf MLP used for the relation network is at the risk of overfitting. I would like to know authors' comments on that, whether they saw any overfitting isses? If possible, please provide the necessary ablations."
                },
                "questions": {
                    "value": "1. In Figure 1a, it is not clear which dataset the shown time-series corresponds to. If this is a real-world dataset, please provide the reference.\n2. Are there any external features and time-related features used in the models? If so, how does their presence affect the overall meta-learning process? Knowing this can also help in evaluating the quality of the proposed framework against external signals which are much easier to learn from."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 6,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission6929/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1699004587331,
            "cdate": 1699004587331,
            "tmdate": 1699636807137,
            "mdate": 1699636807137,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "uL7fxOclzr",
                "forum": "7U5QE9T4hI",
                "replyto": "zPSA7m6hKK",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission6929/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission6929/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Responce to Reviewer 9YY8"
                    },
                    "comment": {
                        "value": "Thanks for your constructive suggestions! We address your concerns in the following.\n\n**{Q1}** The novelty of using an LSTM to model the evolution of latent space, e.g., DeepState; explore more aggressive approaches for extrapolation than only using a vanilla LSTM for predicting the evolution of parameters\n\n**{R1}** While there exist various works, such as DeepState, that model the evolution of time series with hidden states, LEAF takes an innovative approach by representing the model parameters with evolving hidden states. This addresses the challenge of the model changing as data experiences concept drift. Our primary objective in this research is to address concept drift in online time series forecasting using a general framework. To achieve this, we have simplified the design of the network architecture to ensure that any improvements are solely achieved through the learning framework, rather than relying on a complex network structure. Similarly, other networks in LEAF, such as the loss network $s(\\cdot)$, embedding network $g(\\cdot)$ and relation network ${R}(\\cdot)$, are also kept simple, with just two layers of Multilayer Perceptron (MLP). However, it is possible to substitute them with more sophisticated networks to achieve better performance in practical applications. Nevertheless, in this research work, our focus is solely on investigating the framework itself.\n\n**{Q2}** Detailed description of the relation network (R) and embedding function (g) and the alternative ways to implement them and why proposed implementations work the best should also be addressed; Overfitting problem of off-the-shelf MLP.\n\n**{R2}** Actually, in our implementation, both the relation network (R) and embedding function (g) are implemented as 2-layer MLPs. The reason for this design choice is explained in **{R1}**. Adjusting the model for each individual sample may potentially lead to overfitting problems. To mitigate this issue, we have introduced several strategies. Firstly, we optimize the sample-specific model in a low-dimensional latent space, which limits the degree of freedom for adjusting the model. This can be seen as an advanced and more general version of adjusting the last linear layer with a few parameters for each individual sample [1]. Additionally, we only perform one iteration of SGD with a learning rate of 1e-3 to adjust the sample-specific latent embeddings. As a result, the adjusted embedding will not deviate significantly from the base embedding, thereby avoiding overfitting.\n\n[1] Gerald Woo, et al. Learning Deep Time-index Models for Time Series Forecasting. ICML 2023.\n\n**{Q3}** Which data is shown in Fig.1(a)?\n\n**{R3}** The data shown in Fig.1(a) is actually synthetic data. We chose to use synthetic data because when illustrating the macro-drift of real-world data over a significant period of time, the micro-drift that occurs over a shorter duration may not be easily discernible. However, we acknowledge that using real-world data would be more representative and plan to replace the synthetic data with real data in the final version of our work.\n\n**{Q4}** Are there any external features and time-related features used in the models? If so, how does their presence affect the overall meta-learning process? \n\n**{R3}** We have introduced the time-related features (e.g., hour of day, day of week, and month of year) in LEAF and other baselines. Besides, these covariates are also used in the target prediction model. This step, which is a standard practice in time series forecasting, has been omitted in the paper for brevity. These time-related features are embedded with embedding layers which are then added to the time series representations. These features provide information of global time stamp, helping the model understand the overall evolving pattern of time series."
                    }
                },
                "number": 2,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission6929/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700647581168,
                "cdate": 1700647581168,
                "tmdate": 1700647581168,
                "mdate": 1700647581168,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "guvZhK6HCX",
                "forum": "7U5QE9T4hI",
                "replyto": "zPSA7m6hKK",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission6929/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission6929/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "Dear Reviewer 9YY8,\n\nSince the End of author/reviewer rebuttal is approaching, may we know if our response addresses your main concerns? If so, we kindly ask for your reconsideration of the score. Should you have any further advice on the paper and/or our rebuttal, please let us know and we will be more than happy to engage in more discussion and paper improvements.\n\nThank you so much for devoting time to improving our work!"
                    }
                },
                "number": 18,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission6929/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700719394454,
                "cdate": 1700719394454,
                "tmdate": 1700719394454,
                "mdate": 1700719394454,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    }
]