[
    {
        "title": "Neural Snowflakes: Universal Latent Graph Inference via Trainable Latent Geometries"
    },
    {
        "review": {
            "id": "IWF8tAQ76R",
            "forum": "djM3WzpOmK",
            "replyto": "djM3WzpOmK",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission1025/Reviewer_cbgk"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission1025/Reviewer_cbgk"
            ],
            "content": {
                "summary": {
                    "value": "The authors present Neural Snowflakes, a latent graph inference method. Neural Snowflakes are iterative representations that use a trainable activation function to refine input distance values $\\|x - y\\|$. The authors present theoretic justification for their model as well as compelling empirical results on latent graph inference tasks."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "* The authors present compelling empirical results for their method\n* Theoretical analysis underpins these empirical results\n* The fact that Neural Snowflakes can break the curse of dimensionality and don't need exponentially many parameters is a very nice property"
                },
                "weaknesses": {
                    "value": "* The paper does not state the loss function the Neural Snowflake models are trained on\n* There is no mentioning of the computational complexity/ scalability of the approach: does it scale to hundreds of thousands/ millions of data points? Why (not)?"
                },
                "questions": {
                    "value": "Admittedly, I am not an expert on latent graph inference, so I'm doing my best to judge the quality of the work based on the description by the authors and the results produced."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "2: You are willing to defend your assessment, but it is quite likely that you did not understand the central parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 1,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission1025/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698415754087,
            "cdate": 1698415754087,
            "tmdate": 1699636028696,
            "mdate": 1699636028696,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "BbvEllzpFW",
                "forum": "djM3WzpOmK",
                "replyto": "IWF8tAQ76R",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission1025/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission1025/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Clarifications and Scalability"
                    },
                    "comment": {
                        "value": "We thank the reviewer for the questions. We address them below.\n\n**\u201cThe paper does not state the loss function the Neural Snowflake models are trained on\u201d**\n\nWe have addressed this concern in Appendix F: we use a combination of a cross-entropy loss and a graph loss, in line with previous research (Differentiable Graph Module Kazi et. al).\n\n**\u201cThere is no mentioning of the computational complexity/ scalability of the approach: does it scale to hundreds of thousands/ millions of data points? Why (not)?\u201d**\n\nPlease refer to Appendix H for a detailed discussion on computational complexity and scalability. In essence, our model, the neural snowflake, is computationally inexpensive. The primary computational complexity is derived from the dDGM module. However, our theoretical analysis and quasi-metric learning model could be integrated into more scalable latent graph inference pipelines, such as the NodeFormer. A paragraph has been added to the conclusion of the paper to address this aspect. It's important to note that our emphasis is on the geometric structure of the latent embedding spaces used for inferring edges, rather than on enhancing the computational complexity or scalability of existing models.\n\nPlease, let us know if we could address any further concerns."
                    }
                },
                "number": 5,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission1025/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700126714828,
                "cdate": 1700126714828,
                "tmdate": 1700126714828,
                "mdate": 1700126714828,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "ta79E2thuM",
                "forum": "djM3WzpOmK",
                "replyto": "BbvEllzpFW",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission1025/Reviewer_cbgk"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission1025/Reviewer_cbgk"
                ],
                "content": {
                    "comment": {
                        "value": "Dear authors,\n\nThanks for addressing my comments. I will keep my original score for now."
                    }
                },
                "number": 7,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission1025/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700546510522,
                "cdate": 1700546510522,
                "tmdate": 1700546510522,
                "mdate": 1700546510522,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "dScKCpDyux",
            "forum": "djM3WzpOmK",
            "replyto": "djM3WzpOmK",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission1025/Reviewer_pN6S"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission1025/Reviewer_pN6S"
            ],
            "content": {
                "summary": {
                    "value": "The paper presents and analyzes a trainable metric termed \"neural snowflake\", which is a combination of a bounded gaussian kernel distance , a fractal component $\\vert a-b \\vert^\\alpha$ with $\\alpha \\in (0,1]$ and an *irregular* fractal component in log space $\\log\\left(1+\\Vert a-b\\Vert^\\beta\\right)^{1+\\vert p \\vert}$ with $\\beta \\in (0,1],p\\in \\mathbb{R}_0^+$. This distance function is used to learn *latent* graphs from data, wherein the graph structure of a dataset or sample is inferred from the features, instead of being constructed by a human annotater.\n\nThe paper proves that\n\n1. parametrized with an MLP as embedder and the neural snowflake and distance function, we can learn a $d$ dimensional embedding for any finite weighted graph\n2. There are finite weighted graphs which are *not* similarly representable if using a euclidean distance\n3. the depth and hidden width of the MLP depends favourably on the number of nodes and embedding dimensions (order $(n\\log n)^{1.5}$ and linearly, respectively)\n4. For specific graphs (e.g. trees) even more favourable guarantees are possible\n\nThe method is evaluated on Cora, CiteSeer (standard GNN benchmarks) and Tadpole and Aerothermodynamics (used in the paper which introduced the latent graph approach.)"
                },
                "soundness": {
                    "value": "4 excellent"
                },
                "presentation": {
                    "value": "4 excellent"
                },
                "contribution": {
                    "value": "4 excellent"
                },
                "strengths": {
                    "value": "The paper is very accessible for such a technical topic and presents its story clearly and convincingly.\n\n\nNovelty/Originality: Moving from euclidean and Riemanian metrics to quasi-metric spaces is an idea which I haven't seen a lot in the literature ...and I checked because I was actually thinking about going into this direction myself but hadn't properly started working on this due to previous projects. Happy to be \"scooped\" in this manner!\n\nSignificance: Having provable representation power in this sense for arbitrary graphs will be an important ingredient as we move towards building less supervised relational ML models\n\nQuality: derivations, expositions and experiments are well presented and clean. Proofs look sane to me as well, although I did not step through them in detail"
                },
                "weaknesses": {
                    "value": "1.  There is relatively high variances in most of the tables, could you please perform suitable significance tests (e.g. with a bonferonni correction) and mark those that are significant to aid the viewer?\n2. I might have missed it, but what is the STD across? Evaluations or trainings? E.g. in table 7\n3. Nitpick, but explicitly discussing the memory constraints and other concerns in a limitations section in the appendix helps the readers judge potential pitfalls"
                },
                "questions": {
                    "value": "Aside from Q2 in weakness, no questions"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "8: accept, good paper"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 2,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission1025/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698705838095,
            "cdate": 1698705838095,
            "tmdate": 1699636028617,
            "mdate": 1699636028617,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "IizERLzxYr",
                "forum": "djM3WzpOmK",
                "replyto": "dScKCpDyux",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission1025/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission1025/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Additional Clarification on Numerics"
                    },
                    "comment": {
                        "value": "We express our gratitude to the reviewer for their insightful comments, which have contributed to enhancing the quality of our manuscript. A revised version has been submitted to OpenReview, where the reviewer can observe the incorporation of many of their suggestions. Our responses to their comments are provided below.\n\n**\u201cThere is relatively high variances in most of the tables, could you please perform suitable significance tests (e.g. with a bonferonni correction) and mark those that are significant to aid the viewer?\u201d**\n\nThank you for bringing this to our attention. Regrettably, given the time constraints during the rebuttal period, conducting significance tests for all experiments poses a considerable challenge. Nevertheless, it's worth noting that previous papers like \"Differentiable Graph Module\" and \"Latent Graph Inference using Product Manifolds\" have reported similar variances. We hope this provides some indication of the reliability of our experimental results.\n\n**\u201cI might have missed it, but what is the STD across? Evaluations or trainings? E.g. in table 7\u201d**\nWe report results for the test set. We use the same setup as the Differentiable Graph Module paper by Kazi et. al for consistency, 10 fold cross-validation.\n\n\n**\u201cNitpick, but explicitly discussing the memory constraints and other concerns in a limitations section in the appendix helps the readers judge potential pitfalls\u201d**\n\nWe agree discussions on memory constraints and other limitations are important. Please see Appendix H in which these are discussed. Note that computational limitations are inherited from the dDGM module, whereas in principle, our quasi-metric learning neural snowflake is computationally efficient. We have also added some text to the conclusion discussing scalability to larger graphs and future research directions.\n\nPlease let us know if we can address any further concerns."
                    }
                },
                "number": 4,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission1025/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700126676239,
                "cdate": 1700126676239,
                "tmdate": 1700126676239,
                "mdate": 1700126676239,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "7RCXIfF8OB",
                "forum": "djM3WzpOmK",
                "replyto": "IizERLzxYr",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission1025/Reviewer_pN6S"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission1025/Reviewer_pN6S"
                ],
                "content": {
                    "comment": {
                        "value": "Thank you for your comments. I recommend using the time until the camera ready to perform significance tests, maybe following the reasoning laid out in https://www.jmlr.org/papers/volume7/demsar06a/demsar06a.pdf."
                    }
                },
                "number": 8,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission1025/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700683500891,
                "cdate": 1700683500891,
                "tmdate": 1700683500891,
                "mdate": 1700683500891,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "cBgOaqpLHi",
            "forum": "djM3WzpOmK",
            "replyto": "djM3WzpOmK",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission1025/Reviewer_gXAo"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission1025/Reviewer_gXAo"
            ],
            "content": {
                "summary": {
                    "value": "This work studies learning latent structures from pure point clouds (a set of points without graph structures) or graph-structured data (a set of points with observed structures). The authors present rogirous analysis into the property of latent structure learning models and how to conduct latent graph inference that satifies the metric properties. Experiments on several benchmark datasets verify the proposed approach."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "1. The paper studies an important and interesting problem\n\n2. The theoretical analysis is rigorous and with technical depth\n\n3. The overall writing is good though some parts can be improved to increase the readability"
                },
                "weaknesses": {
                    "value": "1. One concern lies in the clarity of the proposed model. The paper title describes the model as a \"universal\" method, but the main paper does not justify this point very well. For example, how universal the model is and to what extent? What is the advantage of the proposed model compared with prior art? Also, the algorithm for the model is missing, which makes the reader hard to understand what is precisely done in the model implementation.\n\n2. The implication of the theoretical results needs to be made more clear. How can the theory apply to practical problems and what is the insight behind the analysis? \n\n3. The experiments are limited with four small datasets. For the Cora and Citeseer, it seems that the common benchmark settings are not used for evaluation. Can the authors provide more reasons on this and what precisely the data splits are used for the present experiments? The baselines for comparison are not sufficient, and some of the typical graph structure learning models are missing, e.g., LDS [1] and the state-of-the-art NodeFormer [2] (that also considers the Gumbel trick).\n\n[1] Luca Franceschi et al., Learning discrete structures for graph neural networks. In ICML, 2019.\n\n[2] Qitian Wu et al., NodeFormer: A Scalable Graph Structure Learning Transformer for Node Classification. In NeurIPS, 2022."
                },
                "questions": {
                    "value": "See some of the questions in the weakness section. Besides, there are some further questions:\n\n1. Can the model handle more difficult datasets, e.g., heterophilic graphs and graphs with incomplete edges?\n\n2. How does the model compare with recent graph structure learning models LDS [1] and NodeFormer [2]?\n\n3. What is the impact of the informativeness of node features on the model performance when not using the input graph?\n\n4. Can the theoretical results be applied to graph Transformers whose attention networks can be seen as latent graph inference?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 3,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission1025/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698749713527,
            "cdate": 1698749713527,
            "tmdate": 1699636028522,
            "mdate": 1699636028522,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "LnTFDAmSZJ",
                "forum": "djM3WzpOmK",
                "replyto": "cBgOaqpLHi",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission1025/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission1025/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Universal Graph Embedding Its Implications on Provable Latent Graph Inference"
                    },
                    "comment": {
                        "value": "**\"One concern lies in the clarity of the proposed model. The paper title describes the model as a \"universal\" method, but the main paper does not justify this point very well. For example, how universal the model is and to what extent?\u201d**\n\nThank you for bringing this to our attention. We have made revisions to the manuscript to enhance the clarity of our contribution. Specifically, we have formalized universal graph embedding. Additional content has been incorporated into Section 4.1.1, including Definition 1 (Universal Graph Embedding) and Theorem 1 (Generic Graph Reconstruction via Universal Graph Inference Models). Please consult Appendix C.2 for the proof of Theorem 1.\n\nThe material presented in Section 4.1.1 provides a comprehensive understanding of the desired properties for a latent graph inference model. Subsequently, Theorem 2 demonstrates that, for any finite weighted graph $G$, the neural snowflake model can establish a geometry in $\\mathbb{R}^d$, allowing a simple MLP encoder to isometrically embed $G$. Thus, Theorem 2 serves as a universal embedding theorem aligned with our specified requirements. Note that this is distinct from more conventional universal approximation theorems.\n\n**\u201cWhat is the advantage of the proposed model compared with prior art?\u201d**\n\nIn this work we are comparing models in terms of their latent space geometric structure. The current state of the art in embedding-based latent graph inference involves embedding into product Riemannian manifolds and inferring edges using differentiable k-nearest neighbor algorithms (as discussed in \"Latent Graph Inference using Product Manifolds, ICLR 2023\"). In addition to the experimental comparisons, our primary theoretical analysis is provided by Proposition 2. This proposition demonstrates that even a simple graph cannot be isometrically embedded into any Riemannian manifold, including the product manifolds utilized in the current state-of-the-art approaches.\n\nUpon comparison with our universal embedding theorem, specifically Theorem 2, we observe a theoretical advantage. This is because our proposed model can isometrically embed any graph, presenting a contrast to the limitations highlighted by Proposition 2 in the context of existing Riemannian manifolds, including those employed in state-of-the-art methods.\n\n**\u201cAlso, the algorithm for the model is missing, which makes the reader hard to understand what is precisely done in the model implementation.\u201d**\n\nThank you for your suggestion. The mathematical description of the neural snowflake architecture can be found in Section 3.1. However, in response to the reviewers' suggestions, we have included an algorithmic description of the model in Appendix G. We hope this provides clarity regarding our implementation. Additionally, further computational implementation details, including hardware specifications, the utilization of symbolic matrices, and hyperparameters, are discussed in Appendix H.\n\n**\u201cThe implication of the theoretical results needs to be made more clear. How can the theory apply to practical problems and what is the insight behind the analysis?\u201d**\n\nWe agree and have added a new theorem, Theorem 1, which clarifies precisely this point.  Briefly, it states that any universal latent graph inference model, as now defined clearly in Definition 1, is such that our inference algorithm can reconstruct the graph from an embedding implementable by the neural snowflake + MLP graph inference model.  Therefore, together Theorem 1 and our universal embedding theorem, namely Theorem 2, imply that graph reconstruction is possible with the neural snowflake precisely since it can isometrically embed any graph."
                    }
                },
                "number": 2,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission1025/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700126062761,
                "cdate": 1700126062761,
                "tmdate": 1700126062761,
                "mdate": 1700126062761,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "1Ay7B7HxU0",
                "forum": "djM3WzpOmK",
                "replyto": "cBgOaqpLHi",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission1025/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission1025/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Details on Experiments"
                    },
                    "comment": {
                        "value": "**\u201cThe experiments are limited with four small datasets. For the Cora and Citeseer, it seems that the common benchmark settings are not used for evaluation. Can the authors provide more reasons on this and what precisely the data splits are used for the present experiments? The baselines for comparison are not sufficient, and some of the typical graph structure learning models are missing, e.g., LDS [1] and the state-of-the-art NodeFormer [2] (that also considers the Gumbel trick).\u201d \u201cHow does the model compare with recent graph structure learning models LDS [1] and NodeFormer [2]?\u201d \u201cCan the theoretical results be applied to graph Transformers whose attention networks can be seen as latent graph inference?\u201d**\n\nWe have addressed these concerns by adding a paragraph to the conclusion. Our primary research goal was to compare the representation capabilities of different embedding spaces. To ensure a fair comparison, we maintained a fixed architecture for the latent graph inference module and solely modified the latent geometry. Models like the NodeFormer primarily emphasize achieving scale, focusing less on analyzing the geometric structure of the latent space used for inferring the latent graph.\nSpecifically, the NodeFormer architecture, in its effort to expedite computation, refrains from directly comparing node feature representations. Instead, it utilizes an averaged embedded quantity to compute similarities. Consequently, making a straightforward comparison in terms of latent space structure and latent graph inferability capabilities becomes challenging and could potentially be misleading. We posit that integrating the geometric concepts discussed in our work with scalable architectures like NodeFormer, rather than DGM, presents an intriguing avenue for future research.\nIn terms of data splits we use the same setup as the Differentiable Graph Module paper by Kazi et. al for consistency, 10 fold cross-validation.\n\n\n**\u201cCan the model handle more difficult datasets, e.g., heterophilic graphs and graphs with incomplete edges?\u201d**\n\nThe model can function even in the absence of edges, allowing it to operate effectively with incomplete edges. Furthermore, the DGM module has demonstrated its effectiveness in handling heterophilic graphs in prior research (as detailed in \"Latent Graph Inference using Product Manifolds, ICLR 2023\").\n\n**\u201cWhat is the impact of the informativeness of node features on the model performance when not using the input graph?\u201d**\n\nIn general, performance tends to degrade without the input graph. The way the latent graph inference module leverages node features depends on the GNN diffusion layers employed downstream, as both are optimized in parallel. For instance, when utilizing GCN layers, the model aims to construct a homophilic graph that GCN layers can efficiently diffuse information on by connecting nodes with similar feature vectors.\n\n\nPlease, let us know if we could address any further concerns."
                    }
                },
                "number": 3,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission1025/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700126124766,
                "cdate": 1700126124766,
                "tmdate": 1700126147411,
                "mdate": 1700126147411,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "n2SVGsQAlg",
            "forum": "djM3WzpOmK",
            "replyto": "djM3WzpOmK",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission1025/Reviewer_Sjjv"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission1025/Reviewer_Sjjv"
            ],
            "content": {
                "summary": {
                    "value": "The authors leverage the representation power of a snowflake metrics using learnable neural snowflake activation in a neural network-based model. In doing so, they prove that neural snowflake permits universal representation for learning latent graphs, which is not the case for simpler previous state-of-the-art geometric embeddings. This is demonstrated theoretically via Theorems 1-2, with particular examples provided to motivate a learnable, non-Riemannian metric. This is also demonstrated empirically with a comprehensive comparison to alternative latent graph inference methods which use more typical metrics, clearly outperforming these baselines in some cases, and performing competitively in others."
                },
                "soundness": {
                    "value": "4 excellent"
                },
                "presentation": {
                    "value": "4 excellent"
                },
                "contribution": {
                    "value": "4 excellent"
                },
                "strengths": {
                    "value": "1. The benefit of the extension to quasi-metric spaces and a learnable neural snowflake activation is clearly explained, as the authors provide both theoretical findings and concrete examples to demonstrate the utility.\n2. The experiments are thorough and well-controlled. The striking improvement in applying neural snowflake in the synthetic setting is convincing, and the marginal benefit in the \"input graph\" experiment of Table 3 demonstrates that this advantage is present in real data as well.\n3. The universal representation power in conjunction with the fact that the model provably needs not to use a large number of parameters is a very strong theoretical result.\n\nOverall, this is a very well-written and convincing work. While I am not entirely knowledgeable on the topic of latent graph inference, I think that the theoretical and empirical arguments of the authors provide a very clear explanation of the novelty of their approach and how it fits in the context of the current state of the field."
                },
                "weaknesses": {
                    "value": "While the majority of the experimental results are convincing, the results of Table 4 are slightly underwhelming. It is certainly a good finding that neural snowflake is competitive in all cases, which cannot be said about any of the other approaches, but the fact that it is usually outperformed by some other method limits the applicability of this approach to real data.\n\nMaybe there is some experiment to evaluate the method in a way that provides more initial information than the experiment in Table 4, but not entirely the original input graph as used in Table 3? However, I don't believe this is entirely necessary to convey the utility of the approach."
                },
                "questions": {
                    "value": "While you note that this is mainly tangential to the primary focus of this paper, you mention that the suboptimality of the Gumbel Top-k edge sampling algorithm may be a reason why the improved performance of your method in the real data settings is not as pronounced. However, would this not affect all methods equally? That is, why do you suggest that an improvement in this regard might better differentiate the neural snowflake model from the baselines?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "8: accept, good paper"
                },
                "confidence": {
                    "value": "2: You are willing to defend your assessment, but it is quite likely that you did not understand the central parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission1025/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission1025/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission1025/Reviewer_Sjjv"
                    ]
                }
            },
            "number": 4,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission1025/-/Official_Review"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1700176380563,
            "cdate": 1700176380563,
            "tmdate": 1700176380563,
            "mdate": 1700176380563,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "LT8XDpjy2g",
                "forum": "djM3WzpOmK",
                "replyto": "n2SVGsQAlg",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission1025/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission1025/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Gumble Top-k Homogenizes Performance Across Latent Graph Inference Models"
                    },
                    "comment": {
                        "value": "Dear reviewer, we would like to thank you for your great review and your very interesting questions.  \n\n\n**While the majority of the experimental results are convincing, the results of Table 4 are slightly underwhelming. It is certainly a good finding that neural snowflake is competitive in all cases, which cannot be said about any of the other approaches, but the fact that it is usually outperformed by some other method limits the applicability of this approach to real data.**\n\nThat is a fair point.  However, unlike the benchmarked methods, each of whose performance varies on each graph inference task the neural snowflake offers consistent top 2 performance.  In particular, this means one can train a single neural snowflake model \u201cout of the box\u201d and achieve competitive performance without having to search through all the representation-space options when performing latent graph inference, which is computationally costly to achieve only slightly better results in some cases.  \n\n\n**Maybe there is some experiment to evaluate the method in a way that provides more initial information than t\nhe experiment in Table 4, but not entirely the original input graph as used in Table 3? However, I don't believe this is entirely necessary to convey the utility of the approach.**\n\nThis would serve as a compelling evaluation metric. While we currently lack awareness of a specific metric or have one in mind, the prospect of devising one for future research is intriguing. Randomly masking certain graph edges could potentially offer a suitable testing method. Thank you for the suggestion, we will consider this in future research.\n\n\n\n**While you note that this is mainly tangential to the primary focus of this paper, you mention that the suboptimality of the Gumbel Top-k edge sampling algorithm may be a reason why the improved performance of your method in the real data settings is not as pronounced. However, would this not affect all methods equally? That is, why do you suggest that an improvement in this regard might better differentiate the neural snowflake model from the baselines?**\n\n\nCertainly, the Gumbel top-k trick affects all embedding spaces, not only the neural snowflake. In the synthetic experiments, we focused on metric learning, in which we showed that neural snowflakes excel. Unlike the latent graph inference experiments, these results are unaffected by edge sampling. In the latent graph inference experiments, the metric learned by the embedding spaces can get \u2018lost in translation\u2019 when \u2018translating\u2019 the learned continuous representation into a discrete graph. The Gumbel top-k trick samples k edges for every node irrespective of the embedding space: this means that the sampled graphs end up having very similar characteristics. The key observation is that the embedding spaces, in the context of latent graph inference, exhibit similar performance because the sampled graphs are consistently similar, regardless of the representation capabilities of the embedding spaces they stem from. Hence, given that the neural snowflake performance is much better in its continuous form (as shown in the synthetic experiments), in relative terms, its performance degrades more when combined with the Gumbel top-k trick for latent graph inference."
                    }
                },
                "number": 6,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission1025/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700527288880,
                "cdate": 1700527288880,
                "tmdate": 1700527311527,
                "mdate": 1700527311527,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    }
]