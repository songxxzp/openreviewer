[
    {
        "title": "Neural Sinkhorn Gradient Flow"
    },
    {
        "review": {
            "id": "M64FIZKM1B",
            "forum": "ztuCObOc2i",
            "replyto": "ztuCObOc2i",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission3768/Reviewer_AcYB"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission3768/Reviewer_AcYB"
            ],
            "content": {
                "summary": {
                    "value": "The authors introduce Neural Sinkhorn gradient flow, which is a Wasserstein Gradient Flow wrt to the Sinkhorn divergence. The authors show that the velocity field can be calculated using the Sinkhorn potentials. This allows training a neural network approximating the velocity field. Furthermore, a mean field limit is established. The algorithm is evaluated on a toy example, MNIST image generation and CIFAR10 image generation."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "The authors do a good job at explaining the underlying concepts of their algorithms. The maths is nicely done. The core idea is very neat and the cifar10 results seem to be good quantitatively wrt other gradient flow works."
                },
                "weaknesses": {
                    "value": "1) The article is full with typos. Just to name a few: \"piror\", \"Sinkhron\", \"Experimrnts\", \"speedest descent\", question mark in the appendix and so on. Please fix those. \n\n2) the authors write \"We do not compare with extant neural WGF methods on MNIST because most of the neural WGF\nmethods only show generative power and trajectories on this dataset and lack the criteria to make\ncomparisons.\" There are several papers (also gradient flow based ones), which evaluate a FID on MNIST. Please provide it as well. \n\n3) Also many of the MNIST digits appear flipped. Did the authors use data augmentation there? Also there seems to some slight noise present the generated MNIST digits. \n\n4) Although the CIFAR10 value seems good, there are unfortunately no generated images provided. It is standard practice to sample many images in the appendix. \n\n5) It is unclear what the trajectories show. Does it show the particle flow or the trained Neural Sinkhorn Gradient Flow? \n\n6) The statement of theorem 2 is incorrect. I guess the authors do not want to sample the Euler scheme (eq 14) but the continuous gradient flow, otherwise the statement would need to depend on the step size $\\eta$. \n\n7) In the proof of Theorem 2: Please provide a proof (or reference) why the mean field limit exists. Or do you mean the gradient flow starting at $\\mu_0$ with target $\\mu$ (first two sentences).\n\n8) Later in that proof: why does there exists a weakly convergent subsequence of $\\mu_t^M$? Further, I cant find the definition of $U_{\\mu}$. \n\n9) The code is not runnable, as the model (or any checkpoints) are not provided.\n\n10) From how I understood it, the learning of the velocity field is batched, i.e., one trains for different sets of $(z_i,x_i)$. Since the Sinkhorn dynamic describes an interacting particle system I dont see how this should be possible. To be more precise, one particle $\\tilde{x}$ could be sent to $x_0$ in the first batch, but to a totally different particle $x_1$ in another one, depending on the drawn prior and target samples. Are the positions of the other particles also input to the neural network (i.e by putting them in the channels)? Please elaborate."
                },
                "questions": {
                    "value": "See weaknesses section. Overall I really like the idea, but the weaknesses prevent me from giving a higher score. It seems like the paper was rushed and is currently not ready for publication. I am willing to raise my score, if the authors address these issues."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission3768/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission3768/Reviewer_AcYB",
                        "ICLR.cc/2024/Conference/Submission3768/Senior_Area_Chairs"
                    ]
                }
            },
            "number": 1,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission3768/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1697637540901,
            "cdate": 1697637540901,
            "tmdate": 1700740134087,
            "mdate": 1700740134087,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "JP04cXQzTI",
                "forum": "ztuCObOc2i",
                "replyto": "M64FIZKM1B",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3768/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3768/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Response to Reviewer AcYB"
                    },
                    "comment": {
                        "value": "Thank you for your appreciation of our idea, we will answer your questions one by one regarding these weaknesses/problems.\n\n**Answer to Weakness 1:** \"Typos\"\n\nWe have fixed all the typos, thank you!\n\n**Answer to Weakness 2:** \"There are several papers (also gradient flow-based ones), which evaluate a FID on MNIST. Please provide it as well.\"\n\nIn fact, we are very willing to make quantitative comparisons with different methods, but due to limited time and computational resources, we did not replicate related algorithms on MNIST and test FID. The literature we reviewed that conducted MNIST experiments with neural WGF-based methods did not provide relevant data, including references [A] and [B]. However, we found that references [C], [G], and [H] evaluate an FID on MNIST. We have provided both our FID values and the FID values given in reference [C] for your reference. We are also very willing to add more comparisons if you could point us to those papers.\n\n**Answer to Weakness 3:** \"Many of the MNIST digits appear flipped\"\n\nWe use data augmentation methods during training, including horizontal flipping on image datasets MNIST/CIFAR10. This is a common practice in the training of generative models like diffusion models [D]. In the revised version of our paper, we have provided in the appendix the results of retraining on datasets that were not subjected to data augmentation.\n\n**Answer to Weakness 4:** \"Generated images provided\"\n\nDue to space constraints, we have added sampling images in the Appendix.\n\n**Answer to Weakness 5:**  \"It is unclear what the trajectories show\"\n\nThe trajectories show the Neural Sinkhorn Gradient Flow. In NSGF, a $32\\times 32$ image can be understood as a particle in the flow. We have provided a clearer description of Figure 4 in the revised version.\n\n**Answer to Weakness 6:** \"The statement of theorem 2\"\n\nWe have revised Equation 14 to an ODE (Ordinary Differential Equation) form in the amended version.\n\n**Answer to Weakness 7 and Weakness 8:** \"The proof of Theorem 2\"\n\nApologies for the previous lack of clarity. We have re-examined and revised the proof of Theorem 2, and these modifications are included in the revised version of our paper (see Appendix for details). To prove that the empirical distribution $\\tilde{\\mu}^M_t$ evolving with equation 14 weakly converges to $\\mu_t$ which is a solution of the equation 15 when $M\\to \\infty$ under the assumption $\\\\tilde{\\mu}\\_0^M \\\\rightharpoonup \\\\mu\\_0$, we show that for arbitrary bounded and continuous $h$ and any $t$, \n$\\\\lim_{M\\\\to \\\\infty}\\\\mathbb{E}\\_{\\tilde{\\mu}^M\\_t}[h]\\to\\mathbb{E}\\_{\\mu\\_t}[h]$. \nWe show this property by Induction over the Continuum and analysis to infinitesimal of $\\mathbb{E}_{\\tilde{\\mu}^M_t}[h]$ and $\\\\mathbb{E}\\_{\\\\mu\\_t}[h]$.\n\n**Answer to Weakness 9:** \"The code is not runnable\"\n\nWe have added a readme and the missing neural network structure components to ensure the completeness of the code.\n\n**Answer to Weakness 10:** \"Minibatch\"\n\nThe regression of vector fields with minibatches serves as an approximation to the potential vector fields of Sinkhorn gradient flows. This method effectively circumvents the problem of repeated pairing, which becomes more prominent as the batch size increases\u2014a challenge commonly encountered in the training of most neural ODE/SDE-based and neural gradient-flow-based generative models, as highlighted in studies like [E], [F], and others. Interestingly, our experiments on toy datasets revealed that, even with small batch sizes, the outcomes of minibatch pairing training were on par with those achieved using larger batches.\nFurthermore, we can assure that when the samples from the initial and target distributions are identical, we can generate the exact same Sinkhorn gradient flow for training, a consistency that [I] and [J] do not guarantee.\n\n[A] Variational Wasserstein gradient flow, ICML'2022\n[B] Deep Generative Learning via Euler Particle Transport, MSML'2022\n[C] Deep Generative Learning via Variational Gradient Flow, ICML'2019\n[D] Denoising diffusion probabilistic models, NIPS'2020\n[E] Multisample Flow Matching: Straightening Flows with Minibatch Couplings, ICML'2023\n[F] Improving and Generalizing Flow-Based Generative Models with Minibatch Optimal Transport, ICML Workshop'2023\n[G] Sliced-Wasserstein Flows: Nonparametric Generative Modeling via Optimal Transport and Diffusions, ICML'2019\n[H] Sliced Iterative Normalizing Flows, ICML'2021\n[I] Flow Matching for Generative Modeling, ICLR'2023\n[J] Flow Straight and Fast: Learning to Generate and Transfer Data with Rectified Flow, ICLR'2023"
                    }
                },
                "number": 7,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3768/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700454162993,
                "cdate": 1700454162993,
                "tmdate": 1700454221036,
                "mdate": 1700454221036,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "YhYbZprjkr",
                "forum": "ztuCObOc2i",
                "replyto": "M64FIZKM1B",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3768/Reviewer_AcYB"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3768/Reviewer_AcYB"
                ],
                "content": {
                    "title": {
                        "value": "Thanks for the rebuttal"
                    },
                    "comment": {
                        "value": "While I think this paper has improved I still have some concerns. \n\n1) Not all typos are fixed. In the appendix there are still several \"Sinkhron\"\n\n2) Regarding 10) please comment on the U-net. As I understand your code (which now includes the model) this has 128 channels, which enables learning the particle dynamics. However, this would become very costly for more particles as the number of parameters in the U-net scales with the channels. So in order to get the mean field limit one would like to take number of particles to $\\infty$, however this is probably very computationally expensive. \n\n3) The cifar samples look good, could you also provide l2-nearest neighbors from the training set in order to show how your model generalizes.\n\n4) can you please also upload the checkpoints of the u-nets? The memory requirements are not really feasible for me to train. If i understand correctly, then I think this will take a lot of velocity field/flow saves in the range of terabytes. (Is that correct? Then this should be mentioned in the paper)"
                    }
                },
                "number": 8,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3768/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700481008485,
                "cdate": 1700481008485,
                "tmdate": 1700486486642,
                "mdate": 1700486486642,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "QoRV4ewVPk",
                "forum": "ztuCObOc2i",
                "replyto": "M64FIZKM1B",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3768/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3768/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Response to Reviewer AcYB"
                    },
                    "comment": {
                        "value": "Thank you for your thorough review and valuable suggestions, particularly regarding paper revisions. Your insights have greatly enhanced the clarity and detail of our paper. We sincerely appreciate your guidance.\n\n1. We apologize and have promptly rechecked and corrected the spelling errors.\n\n2. Generally speaking, the choice of channel count in a U-net reflects a trade-off between the neural network's expressive capacity and the computational and storage costs. In our case, we use 128 channels, a common setting in generative models that employ U-net as their neural network architecture. It's foreseeable that expressing particle flows under mean field limit conditions requires a very deep neural network. However, we wish to emphasize that our demonstration of particle flows in the mean field limit as spatially continuous flows are to showcase our algorithm generating along paths that are more \"information-rich\". Furthermore, the theory related to mean field limits has also been developed in Bayesian sampling methods, especially in particle VI. Our insights are derived from advancements in this field.\n\n3. Thank you for your suggestion. We have included a discussion on sample images and their nearest neighbors in the appendix of the revised version.\n\n4.  Your understanding is correct. The volume of data stored during the first phase of our algorithm increases with the dimensionality of the dataset. For the MNIST/CIFAR-10 experiments, a considerable amount of storage space is needed to establish the trajectory pool during the first phase of the algorithm. Specifically, for CIFAR-10, setting the batch size to 128 and saving all minibatch Sinkhorn gradient flow trajectories while traversing the entire dataset requires about 115GB of storage space. In cases where storage space is limited, we recommend dynamically adding and removing trajectories in the trajectory pool to accommodate training needs. Identifying a more effective trade-off between training time and storage space utilization is a direction for future improvement. We will add a discussion on this in the updated version of our paper.   We note that the supplementary materials are subject to a 100 MB maximum file size limit. Unfortunately, even after compression into a ZIP format, our neural network's size significantly surpasses this limit. With a commitment to reproducibility and aiding the adoption of our approach, we intend to make the code publicly available following the publication of our paper. We try to use \"anonymous.4open.science\" but meet the same limit: \"this exceeds GitHub's file size limit of 100.00 MB\""
                    }
                },
                "number": 13,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3768/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700738728802,
                "cdate": 1700738728802,
                "tmdate": 1700739736506,
                "mdate": 1700739736506,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "1UPw0nNaXl",
                "forum": "ztuCObOc2i",
                "replyto": "QoRV4ewVPk",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3768/Reviewer_AcYB"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3768/Reviewer_AcYB"
                ],
                "content": {
                    "title": {
                        "value": "Thanks for the rebuttal"
                    },
                    "comment": {
                        "value": "I still need to give the paper a proper re-read, but I am raising my score to 5 at least in light of the nice updates."
                    }
                },
                "number": 14,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3768/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700740109924,
                "cdate": 1700740109924,
                "tmdate": 1700740109924,
                "mdate": 1700740109924,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "OPYpDioiBD",
            "forum": "ztuCObOc2i",
            "replyto": "ztuCObOc2i",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission3768/Reviewer_KKim"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission3768/Reviewer_KKim"
            ],
            "content": {
                "summary": {
                    "value": "This paper introduces a novel way to train generative models. The authors want to approximate the gradient flow in the Wasserstein space.  They want to approximate the vector field which transports the source distribution to the real-data empirical distribution while minimizing the Sinkhorn divergence. The authors showed the analytical form of the vector field when one considers the Sinkhorn divergence and then they explain how to learn this vector field with a neural network through the simulation of a probability path. They showed that their procedures recover the true probability path when the number of iid samples goes to infinity. Finally, they validate their proposed method on several image-generative tasks."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "i) The motivation and the introduction are clear\n\nii) Regressing vector fields has been a recent and popular approach with many different applications in machine learning. The proposed approach is interesting and appears to be novel. The theoretical results also show that the proposed method has appealing properties. \n\niii) The authors also provided several experiments showing interesting results from their methods."
                },
                "weaknesses": {
                    "value": "The first thing I would like to highlight is that I have checked the provided code. I see several inconsistencies and weaknesses between the provided code and the paper:\n\n1. There are several differences in the empirical implementation between the paper and the code. In Appendix A, the authors state that they are computing the entropic potential through stochastic optimization algorithms [Genevay et al, 2016]. However, this is not what is done in practice according to the provided code. In practice, the authors compute the potential between mini-batches of samples, they sample a minibatch of cifar10 experiments, then sample a minibatch of the source Gaussian, and simulate the gradient flows between the two minibatches. This style of minibatch approximation induces a bias that should at least be mentioned in the main paper but also discussed. Indeed, the authors do not compute the true Sinkhorn divergence but a minibatch approximation of it; this approximation is slightly different than the one from [1,2] and that should be discussed. I understand the reason why the authors use this approach (decreasing the cost of this preprocessing step), but this is not what they say they do in Appendix A. In that regard, the paper is much closer to the minibatch optimal transport Flow Matching [Pooladian et al., Tong et al] and Appendix A deserves a major revision.\n\n2. With the provided code, there are several insights that should be discussed in the paper. In the provided cifar experiments, the number of Gaussian samples used is 50000 samples. This number is extremely low to approximate the semi-discrete OT. Therefore, a discussion regarding the statistical performance of the method is needed in my opinion.\n\n3. As your method requires the simulation of the probability path, I wonder about the training time between your method and the recent Flow Matching approaches which are simulation free.\n\n4. There are many typos in the paper (including in titles: ie ExperimRnts, Notaions) that lead to poor clarity...\n\n5. The experiments include two toy datasets (synthetic 2D and MNIST). I would like to know how the method performs on other big datasets (Flowers, CelebA) or on other tasks such as single-cell dynamics [4].\n\n6. The related work on optimal transport is incomplete. Several works used the sliced Wasserstein distance to perform gradient flows [3].\n\n[1] Learning Generative Models with Sinkhorn Divergences, Genevay et al, AISTATS 2018\n[2] Learning with minibatch Wasserstein, Fatras et al, AISTATS 2020\n[3] Sliced-Wasserstein Flows: Nonparametric Generative Modeling via Optimal Transport and Diffusions\n[4] TrajectoryNet: A Dynamic Optimal Transport Network for Modeling Cellular Dynamics"
                },
                "questions": {
                    "value": "1. [Pooladian et al., Tong et al.] proved that when the minibatch increases, they get closer to the true optimal transport cost (W_2^2). The interest of their method is that they can rely on minibatches and learn the vector field from an unlimited number of minibatches. Could you follow a similar approach and simulate the gradient flow during training? While it would be an expensive step in training, it might improve the metrics on the different generative model experiments.\n\n2. What is the performance of your method concerning the number of simulation steps (ie Euler integration and its learning rate)?\n\n3. What is the time of the preprocessing step concerning the training time?\n\n4. Could you compare your method with OT-CFM [Pooladian et al., Tong et al.] on the synthetic data? I am curious to compare the differences.\n\nIn my opinion, the mentioned weaknesses have to be revised and this paper should go under a major revision. I deeply think that the experimental section should better highlight what is done in practice and the theoretical section should mention the different biases (statistical and minibatch). Therefore, I recommend rejecting the current manuscript as it does not meet the ICLR acceptance bar.\n\n\n----- EDIT POST REBUTTAL -----\n\nI thank the authors for their answers. I have read the updated manuscript. While it is now better than before, I suggest they add a limitation section where they describe the different biases in their algorithm. I understand the motivations of the paper. Overall, I think that the manuscript deserves another round of reviews but I have decided to move my score to 5 as they have given good answers."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission3768/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission3768/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission3768/Reviewer_KKim"
                    ]
                }
            },
            "number": 2,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission3768/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698338217824,
            "cdate": 1698338217824,
            "tmdate": 1700755549491,
            "mdate": 1700755549491,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "7eIr01E8xJ",
                "forum": "ztuCObOc2i",
                "replyto": "OPYpDioiBD",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3768/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3768/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Response to Reviewer KKim"
                    },
                    "comment": {
                        "value": "Thank you for your suggestions, we will answer your questions one by one regarding these weaknesses/problems.\n\n**Answer to Weakness 1:** \"The differences in the empirical implementation between the paper and the code.\"\n\nWe utilized minibatch sampling for both initial and target distribution pairs and calculated Sinkhorn potentials to construct the trajectory of the Sinkhorn gradient flow. Similar minibatch approximations for calculating the optimal transport plan or the corresponding Sinkhorn distance are noted in [A], [B], [C], and [D], which vary from our method of constructing the minibatch Sinkhorn gradient flow. The theoretical impact of minibatch use has been discussed in [A], and [B], [C] demonstrating through experiments that constructing interpolation flows using minibatch OT plans can train flow-based models with approximate OT paths. We plan to conduct further experiments in our future work. We recognize that minibatch was not explicitly mentioned in the main text, and have addressed this in the revised version (see Algorithm 1 for details). Furthermore, we have added a discussion about the minibatch approximation in Appendix A.\n\n**Answer to Weakness 2:** \"Discussion regarding the statistical performance of the method\"\n\nIn our experiments, we indeed used significantly more than 50,000 Gaussian samples. As detailed in the revised version of our Algorithm 1, we clarified that our method comprises two distinct phases: building the trajectory pool and velocity field matching. The number of Gaussian samples utilized during training is determined in the first phase, while the quantity of trajectory samples used for training the neural velocity fields depends on the second phase. In the first stage, each iteration generates new Sinkhorn WGF paths using freshly resampled Gaussian samples (refer to `main_sinkhorn.py`), which are subsequently employed for vector field matching (see `main_minibatchOT.py`).\nIt's important to note that the parameter of 50,000 Gaussian samples in the code originates from `evaluator.py`, which facilitates the inference process of the NSGF model. For our CIFAR10 experiment, we set this parameter to 50,000 to generate an equivalent number of images for standard FID value testing. We apologize for any confusion this may have caused and have provided detailed descriptions for each file in the supplementary materials of the revised version.\n\n**Answer to Weakness 3:** \"Training time between your method and the recent Flow Matching approaches\"\n\nOur algorithm takes longer in training time compared to simulation-free Flow Matching approaches [A]\uff0c[B], and [C] (we tested the time required to reach the same $W_2$ in 2D experiments, and the table is attached below), but since our model follows the steepest descent flow, we use fewer steps in the inference process to reduce generation time. We consider this a trade-off, which is discussed in our 2D simulations. \nIn our understanding, 'simulation-free' in Flow Matching approaches means that any time snapshot in the Gaussian probability path can be obtained through random interpolation between noise distribution and the target distribution. In the training part of our method, our snapshots come from the discretization of Sinkhorn WGF, obtained through the iterative solving method (see Algorithm 1). In our algorithm, the main complexity of obtaining a snapshot at a specific time $t$ comes from solving the $\\mathcal{W}_{\\varepsilon}$-potential, with a complexity of $\\mathcal{O}(tn^2)$, where $n$ represents the dimension, and $t$ represents the time. Notably, in OT-CFM [B], the authors perform OT matching on the minibatch sample pairs before the stochastic interpolation algorithm, with a complexity of $\\mathcal{O}(n^3log(n))$.\nIt's important to emphasize that although our training process requires more time, this does not impact our inference process. Our experiments demonstrate that we can use fewer steps, which reduces the time needed for generation.\n\n|methods|FM|OTCFM|NSGF|\n| ---- | ---- | ---- | -----|\n|time|119.11|145.94|1727.59|\nTable 1: Time taken by three comparison methods to achieve $W_2<0.2$ in the 8gaussians-moons task, unit: seconds.\n\n**Answer to Weakness 4:** \"typos\"\n\nWe have fixed all the typos, thank you!\n\n**Answer to Weakness 5:** \"big datasets (Flowers, CelebA) or on other tasks such as single-cell dynamics\"\n\nDue to time and computational power limitations, we will construct experiments with big datasets and single-cell dynamics in our future work.\n\n**Answer to Weakness 6:** \"The related work on optimal transport is incomplete\"\n\nWe have added new references on optimal transport, thanks!"
                    }
                },
                "number": 5,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3768/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700453983278,
                "cdate": 1700453983278,
                "tmdate": 1700455410940,
                "mdate": 1700455410940,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "8PU2ATvTRE",
                "forum": "ztuCObOc2i",
                "replyto": "OPYpDioiBD",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3768/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3768/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Response to Reviewer KKim"
                    },
                    "comment": {
                        "value": "**Answer to Question 1:** \"Learn the vector field from an unlimited number of minibatches\"\n\nYes, we can follow a similar approach in [B] and [C].\nIn our experiments, we chose to pre-construct the Sinkhorn WGF training set and perform the vector field matching algorithm. However, in fact, running `main_sinkhorn.py` repeatedly to build a trajectory pool and then using the stored pre-trained data for vector field matching is equivalent to simulating the gradient flow during training and learning the vector field from an unlimited number of minibatches. In our image experiments, considering the balance between expensive training costs and training quality, we opted to first build a trajectory pool of Sinkhorn WGF and then sample from it to construct the velocity field matching algorithm. This is more thoroughly explained in the revised version of Algorithm 1, hoping to eliminate any confusion regarding the code.\n\n**Answer to Question 2:** \"What is the performance of your method concerning the number of simulation steps\"\n\nAccording to Tables 1 and 2, we can observe that our algorithm achieves better generative effects with fewer simulation steps. Similarly, from Table 1, it can be seen that using more simulation steps can enhance the quality of our generation.\n\n**Answer to Question 3:** \"1. What is the time of the preprocessing step concerning the training time?\"\n\nThe main complexity of obtaining a snapshot at a specific time $t$ comes from solving the $\\mathcal{W}_{\\varepsilon}$-potential, with a complexity of $\\mathcal{O}(tn^2)$. In practical terms, we observed that the preprocessing step consumed a considerable amount of time. Therefore, in our image experiments, we chose to first build a trajectory pool and subsequently sample from it for constructing the velocity field matching algorithm. This approach reduces the time spent on the preprocessing step, thereby enhancing the overall efficiency of our algorithm's training process.\n\n\n**Answer to Question 4:** \"Could you compare your method with OT-CFM [B, C] on the synthetic data?\"\n\nWe have already provided some quantitative comparison data for OT-CFM in Tables 1 and 2. Considering the limited length of the paper, we have provided some quantitative image results (similar to Figure 1) in the revised version.\n\n[A] Learning with minibatch Wasserstein: asymptotic and gradient properties, AISTATS\u20192020\n[B] Multisample Flow Matching: Straightening Flows with Minibatch Couplings, ICML'2023\n[C] Improving and Generalizing Flow-Based Generative Models with Minibatch Optimal Transport, ICML Workshop'2023\n[D] Learning Generative Models with Sinkhorn Divergences, AISTATS'2018"
                    }
                },
                "number": 6,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3768/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700454043486,
                "cdate": 1700454043486,
                "tmdate": 1700454043486,
                "mdate": 1700454043486,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "L64SPn6rR0",
                "forum": "ztuCObOc2i",
                "replyto": "OPYpDioiBD",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3768/Reviewer_KKim"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3768/Reviewer_KKim"
                ],
                "content": {
                    "title": {
                        "value": "Thank you for the rebuttal"
                    },
                    "comment": {
                        "value": "Dear authors,\n\nThank you for your rebuttal which I have read carefully.\n\n[Minibatch OT]: While the authors acknowledge the difference between the original submission and the original provided code, they did not make a careful discussion regarding the minibatch OT. I expect the authors to explain and discuss how it is related and how it differs from existing work [A,B,C]. Authors's approximation is a special case of minibatch OT where they only consider specific terms (ie in the original code, they computed OT between minibatches from one partition of the training dataset). Theoretically, it would correspond to a special Incomplete U-statistics. Therefore, I think that a detailed discussion and comparison to minibatch OT (and its bias) is needed and a remark is not enough.\n\n[Practical implementation] Thank you, Algorithm 1 is much clearer now and reflects what is done in practice. I highly recommend authors to update the methodology section in the main paper to incorpore this practical implementation and to discuss it in a limitation section. \n\n[Training time and motivation] Thank you for having run these experiments. In my opinion, they highlight a (known) limitation of the simulation-based approach like the proposed method. The proposed approach takes more than 10 times than other Flow Matching methods to converge. Indeed, the point of Flow Matching method is to avoid the computation of the interpolation samples that can be computed directly on the fly, resulting in a lower training time. It is the interest of these recent flow matching methods compared to simulation-based method. Furthermore, while authors do (minibatch) OT, it is also the case of (minibatch) OT-CFM [Tong et al., Poolidean et al.] and they do not require any simulation during training. Therefore, it is hard to understand the method interest to this recent line of work and that might require a revised motivation section.\n\n[Inference performance] While I understand authors's points regarding the inference, Flow Matching methods take at most 150 steps to converge towards SOTA FIDs on large datasets [Lipman et al.]. The differences between authors's method and Flow Matching method is 50 steps with a non-competitive FID. Therefore, I disagree with the authors that their method is competitive in that aspect. \n\n[Related work]: I would recommend to include a detailed discussion on minibatch OT and other gradient flow based OT method.\n\nThank you for your answers regarding my questions. They have been addressed.\n\nI still think that some key elements are missing from the current manuscript (like the theoretical section which should mention the different biases). Therefore, I keep recommending to reject the current manuscript."
                    }
                },
                "number": 10,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3768/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700494598855,
                "cdate": 1700494598855,
                "tmdate": 1700513385202,
                "mdate": 1700513385202,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "lVRWOCrXf2",
            "forum": "ztuCObOc2i",
            "replyto": "ztuCObOc2i",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission3768/Reviewer_Kh9H"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission3768/Reviewer_Kh9H"
            ],
            "content": {
                "summary": {
                    "value": "Through a series of approximations (and at times, really, relaxations) the authors show that the Sinkhorn gradient flow from one measure to another can be learned.  They do this by first reducing their relaxed problem to a vector field matching problem, and then proposing a neural network-based Algorithm for matching the Sinkhorn-Wasserstein flow's vector field by a neural network (though no convergence/approximation guarantees are proven).\nThe problem is interesting, and its solution is sufficiently novel to merit publication."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "The problem is natural to study, the results are mathematically correct, and the experiments are convincing."
                },
                "weaknesses": {
                    "value": "While the paper is mathematically correct, it does not provide theoretical justification for one of its main components, namely showing that approximate vector field matching yields approximate solutions for all time $t$.  I feel that without this guarantee, there is a gap in the theoretical viability of this model.  Nevertheless, this is a minor point since the length of a conference paper does not allow one to treat every such point.\n\nThere are minor typos throughout. \n* E.g. euclidean instead of Euclidean\n* $lim$ instead of $\\lim$ atop page 15 in the appendix\n* The positive scalar $\\delta$ is not defined in the proof of Theorem $1$\n* In the statement of Lemma 3: \"teh\" should read \"the\"\n\nSome references are obscure\n* For The fact that $\\mu + t\\delta \\mu$ converges weakly to $\\mu$, perhaps it is worth simply noting that due to linearity of integration (wrt to the measure term)."
                },
                "questions": {
                    "value": "Can it be shown that approximate vector field matching yields approximate solutions for all time $t$?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission3768/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission3768/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission3768/Reviewer_Kh9H"
                    ]
                }
            },
            "number": 3,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission3768/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698606606187,
            "cdate": 1698606606187,
            "tmdate": 1699636333063,
            "mdate": 1699636333063,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "PulfQx3hu6",
                "forum": "ztuCObOc2i",
                "replyto": "lVRWOCrXf2",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3768/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3768/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Response to Reviewer Kh9H"
                    },
                    "comment": {
                        "value": "Thank you for your appreciation of our work, we will answer your questions one by one regarding these weaknesses/problems.\n\n**Answer to Weakness 1 & Question 1:**  \"Approximate vector field matching yields approximate solutions for all time\u00a0$t$\"\n\nIt is challenging to rigorously analyze the error bounds of neural networks fitting vector fields at all times $t$, as it is related to properties like the smoothness of the flow and the expressive power of neural networks. Qualitatively speaking, as the number of samples used for training and the number of steps increase, the fitting error of the parameterized vector field for all times $t$ will decrease. We will reserve further developments for our future work.\n\n**Answer to Weakness 2:** \"Typos\"\n\nWe have fixed all the typos, thank you!\n\n**Answer to Weakness 3:** \"Some references are obscure\"\n\nApologies for the unclear referencing in proof of Theorem 1. We have revised this reference in the revised version of our paper."
                    }
                },
                "number": 4,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3768/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700448828512,
                "cdate": 1700448828512,
                "tmdate": 1700448828512,
                "mdate": 1700448828512,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "rb1Sv7qIos",
            "forum": "ztuCObOc2i",
            "replyto": "ztuCObOc2i",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission3768/Reviewer_KkYD"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission3768/Reviewer_KkYD"
            ],
            "content": {
                "summary": {
                    "value": "The paper under consideration deals with the standard generative modelling setup (image generation from noise). To solve this problem, the authors propose to model the gradient flow w.r.t. the Sinkhorn divergence. The paper utilizes an explicit (forward) Euler discretization scheme, i.e., given a distribution $\\mu_t$ at the current time step $t$, the proposed method aims at finding the subsequent distribution $\\mu_{t + 1}$ following the gradient of the Sinkhorn divergence at point $\\mu_t$. The authors validate their methodology on toy 2D setups as well as standard image benchmarks (MNIST and CIFAR10).\n\n**Post-rebuttal update:** I thank the authors for the detailed answer. The majority of my concerns are properly addressed. I rise my score. However, I still tend to reject the paper. Also I agree with reviewer KKim that minibatch OT approximation should be discussed more thorougly. Thank you."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "To the best of my knowledge, the framework of the gradient flow w.r.t. Sinkhorn divergence for pure generative modelling has not yet been considered. This indicates that the paper is indeed bringing something novel to the ML community. At the same time, the idea of the Sinkhorn gradient flow has already arisen in previous research. In particular, [A] solves Sinkhorn barycenter problems by adjusting a generative distribution towards the barycenter distribution with the help of a procedure called \u201cfunctional gradient descent\u201d which is actually the discretization of the gradient flow w.r.t. the sum of Sinkhorn divergences to the target distributions. At the same time, it is worth mentioning, that [A] just simulates particles and does not build a generative model.\nRegarding the other strengths of the paper, I would like to note the well-organized Experiments section.\n\n[A] Sinkhorn Barycenter via Functional Gradient Descent, NeurIPS\u20192020"
                },
                "weaknesses": {
                    "value": "- Some theoretical results from the paper are known. For example, the statement of Theorem 1 could be found in [B] (eq. 26) or [C] (eq. 8). \n- The quality of the code provided is not good. There is no README/or other instruction to run the code. There are imports of non-existing classes. So, there is no possibility of checking (at least, qualitatively) the provided experimental results.\n\nFrom my point, the main weakness of the proposed paper is the limited methodological contribution. The authors simulate the particles of data following Sinkhorn divergence - as I already mentioned, this is not a super fresh idea. To make a generative model from these simulated trajectories, the authors simply solve the regression task to learn the local pushforward maps. And that is it. Combined with the fact, that the practical performance of the proposed approach is far from being SOTA in the generative modelling, the overall contribution of the paper seems for me to be limited."
                },
                "questions": {
                    "value": "- My main question (and, probably, one of the main of my concerns) is regarding the proposed methodology. The authors propose to compute certain $\\mathcal{W}_{\\varepsilon}$ potentials (on discrete support of available samples) and then somehow take the gradients of these potentials w.r.t. the corresponding samples (eq. (13)). From the paper it is not clear how to compute the gradients, because the obtained potentials look like vectors of sample size shape, which are obtained through the iterations of the Sinkhorn algorithm. As I understand, in practice, the authors utilize SampleLoss from the geomloss package ([B]).  The outcome of this observation is that [B] should be properly cited when deriving the algorithm (section 4.2). I recommend authors explicitly use SampleLoss in the algorithm's listing. It will contribute to the clearness of what's going on. \n- The vector field of the Sinkhorn gradient flow is estimated by empirical samples. It is not clear how well this sample estimate approximates the true vector field. This point should be clarified. Note, that Theorem 2 works only for mean-field limit. \n- In the Introduction section, the authors consider a taxonomy of divergences used for gradient flow modelling, namely, \"divergences [...] with the same support\" and \"divergences [...]  with possible different support\". As I understand, the first class is about $f-$ divergences and the second class is about the other types (like Sinkhorn, MMD etc.). I have a question regarding the provided examples of works which deal with the former or the latter type of divergences. The fact is that the works [D], [E], [F], [G] deal with KL-divergence (or f-divergence) minimization. That is why I wonder why did the authors classify them as the second class.\n- A good work regarding poor expressiveness of ICNNs is [H].\n- What is the \u201cground\u201d set ($\\S$ 3.1, first line).\n- Table 1. What are the differences between 1-RF, 2-RF and 3-RF methods?\n\n[B] Interpolating between Optimal Transport and MMD using Sinkhorn Divergences, AISTATS\u20192019\n\n[C] Sinkhorn Barycenters with Free Support via Frank-Wolfe Algorithm, NeurIPS\u20192019\n\n[D] Large-scale wasserstein gradient flows. NeurIPS'2021\n\n[E] Optimizing functionals on the space of probabilities with input convex neural networks. TMLR\n\n[F]  Proximal optimal tranport modeling of population dynamics. AISTATS\n\n[G] Variational wasserstein gradient flow. ICML\n\n[H] Do Neural Optimal Transport Solvers Work? A Continuous Wasserstein-2 Benchmark. NeurIPS\u20192021."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "details_of_ethics_concerns": {
                    "value": "none"
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission3768/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission3768/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission3768/Reviewer_KkYD"
                    ]
                }
            },
            "number": 4,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission3768/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698745650108,
            "cdate": 1698745650108,
            "tmdate": 1700818697559,
            "mdate": 1700818697559,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "La3N3q4LjH",
                "forum": "ztuCObOc2i",
                "replyto": "rb1Sv7qIos",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3768/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3768/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Response 1 to Reviewer KkYD"
                    },
                    "comment": {
                        "value": "Thank you for your suggestions, we will answer your questions one by one regarding these weaknesses/problems.\n\n**Answer to Weakness 1:**  \u201cSome theoretical results from the paper are known\u201d\n\nFor the sake of completeness of our paper, we have included the theory of Sinkhorn WGF derivation in our methods section. Obviously, regarding the discussion of $\\mathcal{W}_{\\varepsilon}$-potential, we are not the first to do so, and we have added more relevant references to enhance the clarity of our paper. It is important to emphasize that our work presents an analysis of our discrete and continuous flows in mean-field limits, which is novel.\n\n**Answer to Weakness 2:** \"The quality of the code provided is not good.\"\n\nApologies that only the algorithm part was provided in the code. We have added a readme and the missing neural network structure components to ensure the completeness of the code in the latest version.\n\n**Answer to Weakness 3:** \"Limited methodological contribution\"\n\nWe observed that existing neural SDE/ODE-based models necessitate multiple iterations through a neural network to produce high-quality samples. We noticed that the generative flows used in these models, such as reverse Ornstein-Uhlenbeck processes or linear flows constructed via random matching, tend to incur information loss. Therefore, exploring Wasserstein Gradient Flows (WGFs) that maintain more information by considering the steepest descent direction is a worthwhile direction. Simultaneously, we recognize that current neural gradient-flow-based models also face issues with information loss. Given this context, we considered leveraging the steepest descent property of Sinkhorn WGF to develop the NSGF model. Remarkably, by using a straightforward velocity field matching approach, we achieved generative quality surpassing existing neural gradient-flow-based models. Our experiments also demonstrated other interesting properties, such as improved generative paths and more meaningful interpolations between distributions, as seen in Figures 1 and 2. Notably, we are the first to construct a generative model based on Sinkhorn WGF, achieving results superior to other neural WGF-based works in fewer steps. We believe that further leveraging techniques from existing diffusion models (such as special neural network structures [D], or rapid sampling techniques [E]) could further enhance the capability of the NSGF model. This is a direction for our future work.\n\n[A] Sinkhorn Barycenter via Functional Gradient Descent, NeurIPS\u20192020\n[B] Interpolating between Optimal Transport and MMD using Sinkhorn Divergences, AISTATS\u20192019\n[C] Sinkhorn Barycenters with Free Support via Frank-Wolfe Algorithm, NeurIPS\u20192019\n[D] Diffusion Models Beat GANs on Image Synthesis,  NIPS'2021\n[E] DPM-Solver: A fast ODE solver for diffusion probabilistic model sampling in around 10 steps, NIPS'2022"
                    }
                },
                "number": 2,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3768/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700448416109,
                "cdate": 1700448416109,
                "tmdate": 1700448559118,
                "mdate": 1700448559118,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "V9F7Yoo3m4",
                "forum": "ztuCObOc2i",
                "replyto": "rb1Sv7qIos",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3768/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3768/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Response 2 to Reviewer KkYD"
                    },
                    "comment": {
                        "value": "**Answer to Question 1:**  \"explicitly use SampleLoss in the algorithm's listing\"\n\nWe have added the detailed computation procedure of $\\mathcal{W}_{\\varepsilon}$-potentials in section 4.2 of the revised version. \n\nIn the original paper, we only explained the calculation of $\\mathcal{W}_{\\varepsilon}$-potentials and the use of the geomloss package in the Appendix. We apologize for this affecting the completeness of the paper.\n\n**Answer to Question 2:** \"How well does this sample estimate approximate the true vector field\"\n\nIn our paper, we concentrate on the mean-field limit situation and plan to address the analysis of the exact approximation error in our future work. It is important to note that conducting error analysis and theoretical proofs about the use of empirical sampling to approximate vector fields in flow-based models is generally challenging. For example, relevant discussions are not provided in references [F] and [H]. Even the analysis of sample complexity for Sinkhorn distance and Sinkhorn potential has gradually developed over time, following the introduction of these concepts.\n\n**Answer to Question 3:** \"The taxonomy in Introduction section\"\n\nBased on our understanding, papers [I] and [J] develop algorithms designed for a broad range of functionals, not limited to KL divergence. For instance, [I] uses the Free Energy Functional in the experiment section. [K] utilizes the Free Energy Functional and neural network parametrization techniques to construct functionals for WGF and JKO algorithms. The Free Energy Functional relies solely on a single distribution and does not require the \u201csame support\u201d condition, leading us to categorize it under the second class, \u201cWith Possible Different Supports.\u201d We acknowledge that our description of these algorithms lacked clarity, and we have made revisions to our revised version. Regarding [L], our reference in the second paragraph was initially to illustrate the \u201cpoor expressiveness\u201d of ICNNs. We have modified this reference in the revised version to address any ambiguity it may have caused.\n\n**Answer to Question 4:**  \"A good work regarding poor expressiveness of ICNNs\"\n\nWe have added that reference, thanks!\n\n**Answer to Question 5:** \"What is the \u201cground\u201d set\"\n\nThe \"ground set\" is simply the underlying set or space under consideration.\n\n**Answer to Question 6:** \"What are the differences between 1-RF, 2-RF and 3-RF methods\"\n\nDifferences between 1-RF, 2-RF, and 3-RF methods depend on the rectified flow technique which recursively applies rectification to obtain a sequence of flows with increasingly straight paths. As the authors show in their experiments, although the rectified flow method produces straighter paths in favor of reducing the number of sampling steps, the accumulation of errors in recursive training may reduce the quality of generation. More details can be found in [M].\n\n[F] Flow Matching for Generative Modeling, ICLR'2023\n[H] Flow Straight and Fast: Learning to Generate and Transfer Data with Rectified Flow, ICLR'2023\n[I] Large-scale Wasserstein gradient flows, NeurIPS'2021\n[J] Optimizing functionals on the space of probabilities with input convex neural networks, TMLR\n[K] Proximal optimal transport modeling of population dynamics. AISTATS\n[L] Variational wasserstein gradient flow, ICML'2021\n[M] Do Neural Optimal Transport Solvers Work? A Continuous Wasserstein-2 Benchmark, NeurIPS\u20192021."
                    }
                },
                "number": 3,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3768/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700448464922,
                "cdate": 1700448464922,
                "tmdate": 1700448764730,
                "mdate": 1700448764730,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "KOGX5hXatq",
            "forum": "ztuCObOc2i",
            "replyto": "ztuCObOc2i",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission3768/Reviewer_MEFG"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission3768/Reviewer_MEFG"
            ],
            "content": {
                "summary": {
                    "value": "This paper introduces the idea of learning a time-dependent velocity field of the Sinkhorn Wasserstein gradient flow from samples from the target distribution to calculate the empirical velocity field approximations. The paper supports its claim by showing that the mean-field limit of this process recovers the true Sinkhorn Wasserstein gradient flow. They also validated the process with some empirical studies."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "The paper is well written and easy to follow. The proofs and arguments in the appendix are well-typed out and clear.  There are some nice diagrams in the empirical section to supports the claim the authors are making."
                },
                "weaknesses": {
                    "value": "I think the experiments could be more extensive. One thing about this method is to investigate the number of samples needed. effectively learn the velocity field. This is one important experiment missing as is remains unclear how sample-efficient the proposed method is. It would also make the paper more completing if the method is applied to generative models that output discrete random variable like binary mnist or even language modelling."
                },
                "questions": {
                    "value": "One possible question is what happens if we change the source distribution to be closer to the target distribution like it was from a generator how would the method perform there. Another question is to better understand the sample complexity of the method as the current method may not be sample efficient due to the empirical distribution being approximated using the samples."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission3768/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission3768/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission3768/Reviewer_MEFG"
                    ]
                }
            },
            "number": 5,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission3768/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1699146383667,
            "cdate": 1699146383667,
            "tmdate": 1699636332903,
            "mdate": 1699636332903,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "Db2vZz5uAD",
                "forum": "ztuCObOc2i",
                "replyto": "KOGX5hXatq",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3768/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3768/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Response to Reviewer MEFG"
                    },
                    "comment": {
                        "value": "Thank you for your appreciation of our work, we will answer your questions one by one regarding these weaknesses/problems.\n\n**Answer to Weaknesses 1 & Question 2:**  \u201cSample complexity of the method\u201d\n\nNote that the NSGF model is gradient-flow-based, and the training of NSGF can be divided into two stages (see Algorithm 1 for details). In the first stage, NSGF constructs trajectories simulating Sinkhorn WGF using target points and source points and stores trajectories in the trajectory pool. In the second stage, we sample from the trajectory pool for velocity matching algorithms instead of using the source and target points. A similar procedure is widely used in flow-based models such as [A], and [B]. As a result, our method has a similar sample complexity to existing flow-based models. We have added relevant experiments in our 2D experiments, see the table below for details:\n\n|methods|FM|OTCFM|NSGF|\n| ---- | ---- | ---- | -----|\n|number of samples|1.23*e6|8.70*e5|7.68*e5|\nTable 1: Trajectory samples were taken by three comparison methods to achieve $W_2<0.2$ in the 8gaussians-moons task.\n\n**Answer to Weaknesses2:** \"Generative models that output discrete random variable\"\n\nThank you for discussing the application of the NSGF model in generative tasks involving discrete random variables. Although our current focus is on simulating Sinkhorn WGF in continuous state spaces, such as for real-valued images, we recognize the potential for extending the NSGF model to discrete state spaces. This extension would follow methodologies similar to those found in [C] and [D]. Exploring the generative capability of the NSGF model in discrete state spaces is an interesting extension, and we will investigate this in our future work.\n\n**Answer to Question 1:** \"Change the source distribution to be closer to the target distribution\"\n\nThe NSGF model is designed to simulate Sinkhorn WGF from a source distribution to a target distribution. If the source distribution is closer to the target distribution, Sinkhorn WGF will converge more quickly. This allows us to use fewer steps and lower computational costs during both the training and inference processes of NSGF. [E] considers using gradient-flow-based methods to refine the samples from a generator, which improves the metrics of the generated images. The NSGF model can also be used to achieve similar improvement, and this will be a focus of our future work.\n\n[A] Flow Matching for Generative Modeling, ICLR'2023\n[B] Flow Straight and Fast: Learning to Generate and Transfer Data with Rectified Flow, ICLR'2023\n[C] Structured Denoising Diffusion Models in Discrete State-Spaces, NIPS'2021\n[D] Argmax Flows and Multinomial Diffusion: Learning Categorical Distributions, NIPS'2021\n[E] Refining Deep Generative Models via Discriminator Gradient Flow, ICLR'2021"
                    }
                },
                "number": 1,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3768/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700448115538,
                "cdate": 1700448115538,
                "tmdate": 1700448539009,
                "mdate": 1700448539009,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "D5kvQHScPP",
                "forum": "ztuCObOc2i",
                "replyto": "Db2vZz5uAD",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3768/Reviewer_MEFG"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3768/Reviewer_MEFG"
                ],
                "content": {
                    "title": {
                        "value": "Response to authros"
                    },
                    "comment": {
                        "value": "Thank you for the thoughtful replies\n\nReply to the Answer to Weaknesses 1 & Question 2\n\nI appreciate the table provided and the comment about how the presented method is similar to others in the literature.  My big issue with this method's sample complexity would be understanding how the sample complexity grows with the dimensionality of the data since you are using the empirical distribution. It might be convincing if a similar table for mnist could be made."
                    }
                },
                "number": 9,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3768/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700493982250,
                "cdate": 1700493982250,
                "tmdate": 1700493982250,
                "mdate": 1700493982250,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    }
]