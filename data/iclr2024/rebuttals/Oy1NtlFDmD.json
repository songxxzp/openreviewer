[
    {
        "title": "STRUCTDROP: A STRUCTURED RANDOM ALGORITHM TOWARDS EFFICIENT LARGE-SCALE GRAPH TRAINING"
    },
    {
        "review": {
            "id": "XpCJ31BJJc",
            "forum": "Oy1NtlFDmD",
            "replyto": "Oy1NtlFDmD",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission8648/Reviewer_jrG5"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission8648/Reviewer_jrG5"
            ],
            "content": {
                "summary": {
                    "value": "The authors propose a sampling mechanism for Graph Neural Networks (GNN) to improve its efficiency on commodity accelerators. The GNN training for large graphs is inefficient due to the requirement for two sparse matrix multiplications in the forward and backward passes of the gradient descent. The authors made an observation that sampling the row-column pairs of the adjacency matrix using their norms (as suggested by previous works since they provide the most accurate numerical approximation) leads to an under-fitting problem. The authors instead suggest sampling the row-column pairs uniformly and using instance normalization to stabilize the training. The experimental results and comparison with previous work show promising results for efficiency gains while retaining similar accuracy as the original GNN."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "4 excellent"
                },
                "contribution": {
                    "value": "4 excellent"
                },
                "strengths": {
                    "value": "- The idea of structured sampling is simple and yet results in large performance gains with limited to none accuracy loss. \n- The paper is well written and organized and can be followed easily by non-experts. \n- The related literature has been sufficiently reviewed and nicely categorized.\n- The authors provided sufficient ablation study on the effect of the instance normalization and dropping ratio.\n- The authors have motivated the problem very well in the Introduction Section with examples."
                },
                "weaknesses": {
                    "value": "- It was not clear why the authors chose only DropEdeg from the previous works on random dropout for GNN to compare with. It would\u2019ve been better if they could compare StructDrop with more methods, especially the more recent ones like Grand [Feng et al. 2020b] and DropNode [Feng et al. 2020a]."
                },
                "questions": {
                    "value": "- It would be better if the authors could mention similar sampling methods like DropEdge in the introduction and explain the differences between the proposed method and them.\n- It was not mentioned in the text that what numbers are reposted in Table 1, for example, are they the test accuracy?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 1,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission8648/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698114275511,
            "cdate": 1698114275511,
            "tmdate": 1699637083311,
            "mdate": 1699637083311,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "uW0gqGlSVF",
                "forum": "Oy1NtlFDmD",
                "replyto": "XpCJ31BJJc",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8648/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8648/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Initial response to jrG5"
                    },
                    "comment": {
                        "value": "We thank the reviewer for acknowledging the clarity of our proposed method, the delivery of ideas as well as the comprehensive experiments. We address the question for the reviewer below.\n\n# Response to \u201cAdding experiment DropNode as a baseline\u201d\n\nWe thank the reviewer for raising this comment for enriching the evaluation and comparison. We further conduct the experiment of DropNode across all different architectures with the same experimental setting. For fair comparison, we set the ratio of edge dropped to the same across different baselines in all experiments. We present the experiment of DropNode in the appendix of the paper. As shown in the results, DropNode experiment results share similar features with DropEdge, where StructDrop achieves a comparable accuracy with DropNode. Same as DropEdge, StructDrop achieves higher efficiency because of hardware efficiency as discussed in section 4.2.2, StructDrop drops the entire columns and rows, leading to reduced adjacency matrix and node embeddings and finally translates into performance gain during training.\n\n# Response to \u201caccuracy type in Table 1\u201d\n\nThe number reported in Table 1 is test accuracy during the experiment. We will add the clarification in paper to avoid ambiguity."
                    }
                },
                "number": 4,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8648/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700694180785,
                "cdate": 1700694180785,
                "tmdate": 1700694180785,
                "mdate": 1700694180785,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "6HyMd3xmFT",
            "forum": "Oy1NtlFDmD",
            "replyto": "Oy1NtlFDmD",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission8648/Reviewer_qoGN"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission8648/Reviewer_qoGN"
            ],
            "content": {
                "summary": {
                    "value": "This paper proposes StructDrop to speed up the sparse and fast matrix multiplication during the training of GNNs. The authors point out two main limitations in the previous works: the inefficiency issue and the under-fitting problem. To this end, they propose uniform sampling and instance normalization to address these problems. Experiments show that the proposed StructDrop achieves considerable speedup for sparse operations and end-to-end GNN with less to no or even better accuracy."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "1. The authors observe the under-fitting problem from the previous column-row pairs selection and employ a uniform sampling to solve this problem to make the trained GNN models more generalizable and speed up the computation by setting the sample ratio.\n2. To address the accuracy degradation problem from the fast matrix multiplication with sampling, this paper proposes an instance normalization to recover the accuracy for different graph model architectures.\n3. The experiments, especially the ablation studies are well done and the paper is easy to follow."
                },
                "weaknesses": {
                    "value": "1. In Table 4, without applying the instance normalization, the accuracy of GCN has a big difference between the max and min values, does this mean the convergence is not yet complete?\n2. According to Table 2, for ogbn-Arxiv dataset, the DropEdge seems slower than vanilla algorithm, which means different datasets would achieve different speedups since their distribution, do you have any ideas about improving the sampling algorithm for specific datasets from their features?"
                },
                "questions": {
                    "value": "Please see above."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 2,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission8648/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698595515224,
            "cdate": 1698595515224,
            "tmdate": 1699637083199,
            "mdate": 1699637083199,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "Wy5Hp149a6",
                "forum": "Oy1NtlFDmD",
                "replyto": "6HyMd3xmFT",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8648/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8648/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Initial response to qoGN:"
                    },
                    "comment": {
                        "value": "We thank the reviewer for recognizing our contributions and writing. We address the questions raised below.\n\n# Response to \u201cthe large variance potentially caused by in-convergence for experiment without instance normalization in GCN\u201d\n\nWe thank the reviewer for the careful review! We add more experiments specifically to check the convergence level with respect to the training epoch. We added them to the appendix of our paper. As shown in the figure, the training of Reddit and ogbn-Arxiv without instance normalization has converged as the highest validation point is achieved far before the training ends. For ogbn-Product dataset, we plot a training curve with 1200 epochs (far more than commonly used configuration) and we see it converge very slowly during training without instance normalization. Note that the number we report in the paper is following the configuration of experiments with instance normalization for ablation study. In ogbn-Product experiment, even with 1200 epochs, the accuracy finally achieves 76.73 \u00b1 2.30, which is far less than with instance normalization. \nThe results show that instance normalization does help with convergence speed as it contributes to the stabilized training under the randomized sampling training mechanism. Meanwhile, the smooth training process contributes to the final accuracy. Nonetheless, The variance of accuracy could be due to the instability of the training process, that because of the randomness the model converges to different points. With instance normalization, the smoother internal shifts (as shown in figure 5) lead to more robust training.\n\n# Response to \u201cdifferent algorithms for fully utilizing the features of datasets\u201d\n\nWe thank the reviewer for the careful thoughts on designing the algorithm! We agree different datasets do have different features which could be utilized, for example, the information redundancy, the connectivity, etc, which could be considered in future work. For our proposed method, we used a general and uniformed sampling scheme, and we only have one hyper-parameter in configuration which is the sampling ratio. This method works well across different datasets."
                    }
                },
                "number": 3,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8648/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700694177738,
                "cdate": 1700694177738,
                "tmdate": 1700694177738,
                "mdate": 1700694177738,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "rM1j16g6xV",
            "forum": "Oy1NtlFDmD",
            "replyto": "Oy1NtlFDmD",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission8648/Reviewer_4Sfp"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission8648/Reviewer_4Sfp"
            ],
            "content": {
                "summary": {
                    "value": "This paper proposes StructDrop, a straightforward strategy that uniformly samples column-row pairs to optimize sparse matrix multiplication for accelerating graph training. They integrate the proposed strategy with the existing classic graph neural network (i.e., GCN and GraphSAGE) in both forward and backward passes. Experimental results show that the proposed approach achieves significant speedup in graph training compared to the vanilla baseline."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "1. The proposed approach is simple and easy to follow. Experimental results show its effectiveness in accelerating graph training.\n2. The paper is easy to read and generally well-written."
                },
                "weaknesses": {
                    "value": "1. The theoretical foundation is insufficient. The proposed method appears naive and relies more on observation and intuition.\n2. Experiments are insufficient. StructDrop only integrates with GCN and GraphSAGE. More classic models, such as GAT [1], and state-of-the-art models on large-scale graph data, like GraphSAINT [2], GCNII [3], Cluster-GCN[4], etc., should be included for comparison.\n\n[1] Veli\u010dkovi\u0107, P., Cucurull, G., Casanova, A., Romero, A., Lio, P., & Bengio, Y. Graph attention networks. arXiv preprint arXiv:1710.10903, 2017.\n[2] Zeng, H., Zhou, H., Srivastava, A., Kannan, R., and Prasanna, V. Graphsaint: Graph sampling based inductive learning method. In International Conference on Learning Representations, 2020. \n[3] Chen, M., Wei, Z., Huang, Z., Ding, B., and Li, Y. Simple and deep graph convolutional networks. International Conference on Machine Learning, 2020. [4] Chiang, W. L., Liu, X., Si, S., Li, Y., Bengio, S., & Hsieh, C. J. Cluster-gcn: An efficient algorithm for training deep and large graph convolutional networks. In Proceedings of the 25th ACM SIGKDD international conference on knowledge discovery & data mining, 2019"
                },
                "questions": {
                    "value": "1. The proposed approach primarily relies on observation and intuition. More theoretical evidence is needed to explain why the proposed method is unbiased, how it ensures training accuracy, and its error boundaries.\n\n2. The Top-k sampling method only accelerates the backward process, and the maximum speedup is limited to 2x. However, from Table 2 we can see the acceleration effect of Top-k sampling far exceeds that of StructDrop. Please explain the reasons.\n\n3. It is insufficient to demonstrate the effectiveness of the proposed approach by only applying StructDrop to GCN and GraphSAGE. It would be helpful to integrate StructDrop with more classical GNN models, such as GAT [1].\n\n[1] Veli\u010dkovi\u0107, P., Cucurull, G., Casanova, A., Romero, A., Lio, P., & Bengio, Y. Graph attention networks. arXiv preprint arXiv:1710.10903, 2017.\n\n4. Both GCN and GraphSAGE do not perform well on large-scale data. Many GNN-related approaches have demonstrated better results and faster training speed on large graphs, such as GraphSAINT [2], GCNII [3], Cluster-GCN[4], etc. It would be beneficial to apply the proposed approach on these models for comparison.\n\n[2] Zeng, H., Zhou, H., Srivastava, A., Kannan, R., and Prasanna, V. Graphsaint: Graph sampling based inductive learning method. In International Conference on Learning Representations, 2020. \n[3] Chen, M., Wei, Z., Huang, Z., Ding, B., and Li, Y. Simple and deep graph convolutional networks. International Conference on Machine Learning, 2020. [4] Chiang, W. L., Liu, X., Si, S., Li, Y., Bengio, S., & Hsieh, C. J. Cluster-gcn: An efficient algorithm for training deep and large graph convolutional networks. In Proceedings of the 25th ACM SIGKDD International Conference on knowledge discovery & data mining, 2019\n\n5. In Table 7, why does the accuracy decrease as the sample ratios increase in the ogbn-Products dataset?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission8648/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission8648/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission8648/Reviewer_4Sfp"
                    ]
                }
            },
            "number": 3,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission8648/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698730999933,
            "cdate": 1698730999933,
            "tmdate": 1700779112418,
            "mdate": 1700779112418,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "1lO0dpB6on",
                "forum": "Oy1NtlFDmD",
                "replyto": "rM1j16g6xV",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8648/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8648/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Initial response to 4Sfp"
                    },
                    "comment": {
                        "value": "# Response to \u201ctheoretical guarantee to StructDrop\u201d\n\nWe thank the reviewer for considering the overall soundness of our proposed scheme. Here we would like to argue that our work takes an initial step towards exploring random algorithms applying to the forward path. We report and find that sound theory for top-k sampling, which is an unbiased estimation, might not be the most robust algorithm for sampling in forwarding, which is inconsistent with intuition. We then experimented and proposed this effective random sampling algorithm, which works well for the training pipeline. We have done comprehensive analysis and experiments for verifying our observations. We hope this first step could benefit the community and innovate more work alongside this direction.\n\n\n# Response to \u201csampling efficiency comparing to top-k sampling in Table 2\u201d\n\nWe thank the reviewer for the careful reviewing our evaluation results. We would like to point out that for all the baseline listed in Table 2, they are conducted and compared in a fair way, that top-K sampling is also applied both in forward and backward pass. Among different mechanisms, Our conclusion is that StructDrop is the robustest in acceleration while preserving the accuracy.\n\n# Response to \u201cadding more architecture for graph training\u201d\nWe thank the reviewer for the careful consideration. We would like to point out that GCN and GraphSAGE are still the robustest and most widely used GNN architectures in graph training. We add another GNN architecture that is widely used \u2014 GCN2 for validating our results. We add experiments of comparing different baselines on this architecture and we add the results in the appendix of the paper. The results show a consistent conclusion with all other architectures, that StructDrop accelerates the sparse operations, largely reducing the computation complexity while preserving the accuracy. Please refer to the appendix for more details. We believe the architecture presented in our paper are used in mainstream GNN training and our results are representative and convincing in GNN accelerations.\n\n\n# Response to \u201cadding more graph training mechanisms\u201d\n\nWe thank the reviewer again for the careful consideration. As suggested, we add Graphsaint experiment to validate whether we can accelerate the subgraph training mechanism effectively using StructDrop. We add experiments of comparing different baselines on this mechanism and we add the results in the appendix of the paper. Comparing through different baseline, StructDrop is the most Robust mechanism that it accelerate the training while maintaining the accuracy, which is consistent with other experiments. Please refer to the appendix for more details.\n\n\n# Response to \u201cWhy does training accuracy decreased with the increased  sample ratio for ogbn-Product dataset\u201d\n\nWe thank the reviewer for the detailed review of this experimental results. We found that ogbn-Product\u2019s performance decreased with the increased sample ratio. We further conduct experiments to change the dropout ratio (a training configuration) in ogbn-Product dataset training. We found consistent results with the results presented in the paper, that with larger dropout ratio, the accuracy decreases more. We explain the phenomenon as follows: the augmentation and generalization performance varies across different datasets. For ogbn-Product, it has much more edges/nodes compared to other datasets, leading to much more information redundancy. The augmentation scale, which can be defined by the ratio of dropped information, i.e. the dropping number of columns row pairs in our settings, will contribute more to the generalization ability, and improve the model\u2019s performance as a result."
                    }
                },
                "number": 2,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8648/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700694159836,
                "cdate": 1700694159836,
                "tmdate": 1700694159836,
                "mdate": 1700694159836,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "fg6kqVIeaa",
            "forum": "Oy1NtlFDmD",
            "replyto": "Oy1NtlFDmD",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission8648/Reviewer_hFvm"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission8648/Reviewer_hFvm"
            ],
            "content": {
                "summary": {
                    "value": "This work introduces Structured Dropout, i.e., StructDrop, to improve the efficiency of graph neural networks\u2019 (GNNs) training on large graphs. Specifically, StructDrop replaces the sparse matrix multiplication (SpMM) in both the forward and backward passes of GNNs with its randomized counterpart achieved through uniformly sampling column-row pairs. Furthermore, to address the distribution shift brought by random sampling, instance normalization is applied after SpMM to rescale node embeddings and stabilize training. Experimental results on the benchmark datasets show that StructDrop significantly accelerates training with negligible accuracy loss or even better accuracy."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "The proposed method, StructDrop, is straightforward and easy to understand. Experiments on benchmark datasets, employing two different GNN architectures, validate the effectiveness of StructDrop in accelerating the training of GNNs. The paper also demonstrates the benefits of incorporating instance normalization to mitigate the negative impact caused by StructDrop. Furthermore, the clarity and smooth flow of the paper contribute to its overall quality."
                },
                "weaknesses": {
                    "value": "The proposed method, StructDrop, makes an incremental technical contribution within the context of existing research. Previous work has already explored the application of randomized matrix multiplication to sparse operations in the backward pass of GNNs. StructDrop builds upon this work by extending the method to the forward pass, with the primary modification being the adoption of a uniform sampling strategy for selecting column-row pairs, as opposed to the previous top-k sampling method. Furthermore, there are some inconsistent statements in this paper. For example, this paper states that StructDrop can address the inefficiency issue in the abstract but lacks elaboration in subsequent sections."
                },
                "questions": {
                    "value": "1.\tIn the abstract, the paper highlights the inefficiency issue associated with random-based sampling approaches but lacks elaboration in subsequent sections. \n\n2.\tIn section 2.2, the paper reviews fast matrix multiplication with sampling. In the original formulation, the column-row pairs are sampled based on the probability distribution given in Equation 4. Did you try this original probability distribution instead of uniform sampling and top-k sampling? It's better to add it as a comparison baseline."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "3: reject, not good enough"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 4,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission8648/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698758981139,
            "cdate": 1698758981139,
            "tmdate": 1699637082958,
            "mdate": 1699637082958,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "FZ2AUNYWHg",
                "forum": "Oy1NtlFDmD",
                "replyto": "fg6kqVIeaa",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission8648/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission8648/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Initial response to reviewer hFvm:"
                    },
                    "comment": {
                        "value": "# Response to \u201cincremental contribution\u201d\nWe claim our contribution as the first to employ random sampling during the whole training pipeline which largely accelerate the GNN training. We study and implement different sampling algorithms and effectively accelerate the graph training. We report and find that sound theory for top-k sampling might not be the most robust algorithm for sampling in forwarding. Instead, a pure random sampling algorithm could work the best. We proposed to apply instance normalization in this scheme for stabilizing the training. We also conduct comprehensive analysis and experiments to verify our results that we accelerate the large graph training far more than previous SOTA GNN acceleration[1] while preserving the accuracy. \n\n# Response to \u201cLack of elaboration for efficiency of random sampling based mechanism\u201d:\nWe would like to point out that our method has largely increased the efficiency of GNN training.  Our evaluation in Table 2 shows that our proposed method achieved at most 3.87x than the vanilla scheme while maintaining the accuracy. Moreover, we accelerated much more in large graph training then previous work. We are the first to study and apply sampling algorithms during the whole training process, and exceed the previous SOTA solution by more than 2x [1]. \n\n# Response to \u201cadding the original formula as part of our baseline\u201d:\n\nWe would like to point our in section 2.2 we wrote \u201c(Adelman et al., 2021) introduced the top-k sampling method: deterministically selecting the k column-row pairs that have the highest values according to Equation 4\u201d. In another word, top-k sampling is based on the equation 4 and is a better mechanism for forming up the sampling. We have thoroughly studied the behavior of top-k sampling and compare our results with it in section 4 as a baseline. Our conclusion is that top-k sampling cannot maintain the accuracy due to underflow, and applying StructDrop will achieve efficiency while preserving the accuracy.\n\n\n\n[1] Liu, Zirui, Chen Shengyuan, Kaixiong Zhou, Daochen Zha, Xiao Huang, and Xia Hu. \"RSC: accelerate graph neural networks training via randomized sparse computations.\" In International Conference on Machine Learning, pp. 21951-21968. PMLR, 2023."
                    }
                },
                "number": 1,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission8648/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700690364835,
                "cdate": 1700690364835,
                "tmdate": 1700690364835,
                "mdate": 1700690364835,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    }
]