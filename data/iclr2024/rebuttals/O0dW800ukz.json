[
    {
        "title": "Multimodal Distillation of Protein Sequence, Structure, and Function"
    },
    {
        "review": {
            "id": "MrMKX2TXN9",
            "forum": "O0dW800ukz",
            "replyto": "O0dW800ukz",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission3403/Reviewer_G223"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission3403/Reviewer_G223"
            ],
            "content": {
                "summary": {
                    "value": "The paper proposes a new method for multimodal training of protein models based on a distillation method. The multimodal model incorporates Protein Sequence, Structure, Gene Ontology Annotation - named Protein SSA for short, which is tested on protein fold and enzyme commission tasks. \n\nThe paper first introduces the problem settings of modeling protein properties and behavior using machine learning with an additional focus on how multimodal data sources can enhance the modeling performance. This leads to the paper's key claims that prior work did not incorporate all possible modalities into their methods prompting the creation of Protein SSA which includes a broader set of modalities. The authors also claim that there is a shortage of protein modeling methods that do not require costly pretraining, leading them to propose a knowledge distillation based training for their multimodal setting. The paper then discusses related work in protein representation learning, domain adaptation and knowledge distillation method with a particular focus on graph-based knowledge distillation methods given that the paper trains GNN in their method.\n\nNext, the paper describes the problem setting and provides a preliminary exploration on whether multimodal embeddings can enhance performance on relevant protein tasks (GO, EC) with the evidence generally being supportive. The paper then describes the main method contribution in Protein SSA, including relevant formulation of message passing for the protein graph as well as the domain adaptation and knowledge distillation framework. The knowledge distillation framework mainly relies on minimizing the KL divergence between the embeddings of the teacher and student models, both of which are approximated by Gaussian distributions. \n\nIn Section 4, the paper describes the experiments Fold classification and enzyme reaction, as well as on GO and EC prediction tasks. Compared to the baselines presented in the paper, Protein SSA generally performs best across all tasks, including different types of methods that use a lower number of modalities. Section 4.5 of the experiments includes an ablation study where the paper investigates the importance of different components, including the presence of annotation in the teacher model, the presence of the teacher model itself and training without the KL loss."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "The paper has the following strengths:\n* It proposes a new method (ProteinSSA) for multimodal protein modeling that includes a larger set of modalities that taken together improve modeling performance (originality, significance).\n* The problem definition and relevant related work are extensively discussed (quality, clarity).\n* The paper includes a relevant ablation study that investigates the effect of removing different components of ProteinSSA (quality, significance).\n* The experimental results are generally nicely presented with relevant analysis provided (quality, significance)"
                },
                "weaknesses": {
                    "value": "The main weakness of the paper is clarify surrounding the training method used:\n* It is unclear whether ProteinSSA makes use of pretrained embedding model, especially for the teacher model. The paper mentions training ProteinBERT with additional modalities, but generally claims that ProteinSSA does not require large-scale pretraining. This appears inconsistent and further clarification would be helpful (significance, clarity).\n* The paper does not compare results against larger scale protein models for relevant tasks, including the ones mentioned in related work (e.g., ESM, KeAP, ProtST). It would be good to get a sense of much model size affects performance on the studied tasks (quality, significance).\n* The GNN architecture is not fully described (clarity)."
                },
                "questions": {
                    "value": "* Can you describe how you obtain the embeddings for each modality? Do you use pretrained models for some or all modalities?\n* Can you describe how large your model ends up being in terms number of trainable parameters?\n* Can you describe your GNN architecture in more detail? How do you consolidate the graphs from the different graph modalities (sequence, structure) into joint embeddings?\n* Can you add the performance of the teacher model into your results tables?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission3403/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission3403/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission3403/Reviewer_G223"
                    ]
                }
            },
            "number": 1,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission3403/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698539475808,
            "cdate": 1698539475808,
            "tmdate": 1700558549940,
            "mdate": 1700558549940,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "ogrAaoil39",
                "forum": "O0dW800ukz",
                "replyto": "MrMKX2TXN9",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3403/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3403/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "Dear Reviewer G223,\n\nWe are grateful for your thorough review. Your comments are highly valued, and we would like to express our heartfelt gratitude. We do our utmost to address the questions you have raised:\n\n**Q1** It is unclear whether ProteinSSA makes use of pretrained embedding model, especially for the teacher model. The paper mentions training ProteinBERT with additional modalities, but generally claims that ProteinSSA does not require large-scale pretraining. Can you describe how you obtain the embeddings for each modality? Do you use pretrained models for some or all modalities? \n\n**A1** Thank you for your valuable feedback! (1) ProteinBERT [1] is not a part of ProteinSSA, and ProteinSSA does not make use of pre-trained embedding model for both the teacher model and the student model. (2) ProteinBERT is the first model to utilize the protein annotation information, using 8943 frequent Gene Ontology (GO) annotations. Compared with ProteinBERT, we use 2752 GO annotations from the GO dataset. We have modified this in the revised manuscript to decrease the misleading. The current state-of-the-art (SOTA) sequence-function pre-trained model is the KeAP [2], but the SOTA model KeAP fails to generate protein embeddings that surpass those obtained from the sequence pre-trained model ESM-1b [10]. This observation demonstrates the limitations of the sequence-function pre-trained model and motivates this work. (3) The main objective of the teacher model is to learn embeddings that contain functional information and provide intermediate supervision during knowledge distillation for the student model. Therefore, the complete training of the teacher model is not our primary concern. (4) Pre-training involves learning general representations from a large dataset. In this work, the teacher model is trained on a relatively small dataset consisting of about 30 thousand proteins with 2752 GO annotations. This is in comparison to ProteinBERT, which uses 106 million proteins, and KeAP, which uses 5 million triplets. (5) There are three protein modalities that we used, including sequence, structure, and function. Both the student and teacher networks use the proposed protein graph message-passing and pooling layers to process the sequence and structure. Thus, the sequence-structure embeddings are obtained from the designed graph neural network. In the teacher model, the function information is encoded by the annotation encoder to get the functional embeddings.\n\n\n**Q2** The paper does not compare results against larger scale protein models for relevant tasks, including the ones mentioned in related work (e.g., ESM, KeAP, ProtST). It would be good to get a sense of much model size affects performance on the studied tasks. Can you describe how large your model ends up being in terms number of trainable parameters?\n\n**A2** Thank you for your informative reviews! (1) Different from those pretraining or self-supervised learning works, our method is to obtain comprehensive embeddings for the student model, which have the functional information learned by the distillation loss. To show the effectiveness, we compare the proposed ProteinSSA to pretraining or self-supervised learning methods: DeepFRI [4], ESM-1b [10], ProtBERT-BFD [5], LM-GVP [6], amino-acid-level IEConv [7], GearNet-based methods [8], ESM-2 [3], KeAP [2], and ProtST [9] on these four tasks, including protein fold classification, enzyme reaction classification, Gene Ontology (GO) term prediction, and enzyme commission (EC) number prediction. Param. means the number of trainable parameters (B: billion; M: million; K: thousand).\n\n| Method | Param.| Pretraining Dataset |Fold | SuperFamily | Family | Enzyme Reaction |\n| :--- | :---: | :---: | :---: | :---: | :---: |:---: |\n|DeepFRI | 6.2M| Pfam (10M)| 15.3 | 20.6 | 73.2 | 63.3 |\n|ESM-1b | 650M| UniRef50 (24M)| 26.8 | 60.1 | 97.8 | 83.1 |\n|ProtBERT-BFD| 420M| BFD (2.1B)| 26.6 | 55.8 | 97.6 | 72.2 |\n| IEConv (amino level)| 36.6M | PDB (476K)| 50.3 | **80.6** | 99.7 |88.1|\n|GearNet-Edge-IEConv (Multiview Contras)| 42M |AlphaFoldDB (805K)|54.1 | 80.5 | **99.9** | 87.5 |\n|GearNet-Edge-IEConv (Residue Type Prediction)| 42M|AlphaFoldDB (805K)|48.8 | 71.0 | 99.4 | 86.6|\n|GearNet-Edge-IEConv (Distance Prediction)|42M |AlphaFoldDB (805K)|50.9 | 73.5 | 99.4 | 87.5|\n|GearNet-Edge-IEConv (Angle Prediction)|42M |AlphaFoldDB (805K)|56.5 | 76.3 | 99.6 | 86.8|\n|GearNet-Edge-IEConv (Dihedral Prediction)|42M |AlphaFoldDB (805K)|51.8 | 77.8 | 99.6 |87.0 |\n| ProteinSSA | 100M |-|**60.5** | 79.4 | 99.8 | **89.4** |"
                    }
                },
                "number": 8,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3403/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700468095380,
                "cdate": 1700468095380,
                "tmdate": 1700701467330,
                "mdate": 1700701467330,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "ZUPX3xzARJ",
                "forum": "O0dW800ukz",
                "replyto": "MrMKX2TXN9",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3403/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3403/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "| Method |Param. |Pretraining Dataset|GO-BP | GO-MF | GO-CC | EC |\n| :--- | :---: | :---: | :---: | :---: |:---: |:---: |\n|DeepFRI |6.2M| Pfam (10M)| 0.399 | 0.465 | 0.460 | 0.631 |\n|ESM-1b | 650M|UniRef50 (24M)| 0.470 | 0.657 | 0.488 | 0.864 |\n|ProtBERT-BFD| 420M| BFD (2.1B)| 0.279 | 0.456 | 0.408 | 0.838 |\n|LM-GVP| 420M|UniRef100 (216M)| 0.417 | 0.545 | **0.527** | 0.664|\n| IEConv (amino level)| 36.6M |PDB (476K)| 0.468 | 0.661 | 0.516 |-|\n|GearNet-Edge-IEConv (Multiview Contras)| 42M |AlphaFoldDB (805K)| **0.490** | 0.654 | 0.488 | 0.874 |\n|GearNet-Edge-IEConv (Residue Type Prediction)| 42M |AlphaFoldDB (805K)|0.430 | 0.604 | 0.465 | 0.843|\n|GearNet-Edge-IEConv (Distance Prediction)|42M | AlphaFoldDB (805K)|0.448 | 0.616 | 0.464 | 0.839 |\n|GearNet-Edge-IEConv (Angle Prediction)| 42M |AlphaFoldDB (805K)|0.458 | 0.625 | 0.473 | 0.853 |\n|GearNet-Edge-IEConv (Dihedral Prediction)|42M | AlphaFoldDB (805K)|0.458 | 0.626 | 0.465 | 0.859 |\n|KeAP| 420M |ProteinKG25 (5M)| 0.466 | 0.659 | 0.470 | 0.845 |\n|ESM-2| 650M |UniRef50 (24M)| 0.472 | 0.662 | 0.472 | 0.874 |\n|ProtST-ESM-1b| 759M | ProtDescribe (553K)| 0.480 | 0.661 | 0.488| **0.878** |\n|ProtST-ESM-2| 759M | ProtDescribe (553K)| 0.482 | **0.668** | 0.487| **0.878** |\n| ProteinSSA |100M |-|0.464 | 0.667 | 0.492 | 0.857 |\n\nAs shown in these tables, without any pre-training or self-supervised learning, our proposed framework, ProteinSSA, achieves comparable accuracy with those methods with less trainable parameters and even outperforms them on fold and enzyme reaction classification.\n\n**Q3** The GNN architecture is not fully described.\n\n**A3** As mentioned in Section 3.3, a protein sequence is composed of $n$ residues, which are represented as graph nodes. We combine the one-hot encoding of residue types with their physicochemical properties, and they serve as the features for each graph node, denoted as $x_i$. In Section 3.1, we introduced the local coordinate system (LCS) [11] as the geometric features for protein 3D structures. The edge feature $e_{ij}$, defined in Eq. (2), represents the concatenation of the geometric features for protein 3D structures used LCS. We define the sequential distance as $l_{ij} = |i-j|$ and the spatial distance as $d_{ij}=|| P_i-P_j||$, and we establish the edge conditions using Eq. (3). Therefore, the protein's sequential and structural information is captured through the graph node and edge features. In Appendix B.2, we provide detailed information about the graph neural network model. We employ two message-passing layers followed by one average sequence pooling layer. After the pooling layer, the number of residues is halved, and we update the edge conditions before performing another round of message passing and pooling, as illustrated in Figure 1. Thus, the final GNN architecture includes eight message-massing and four pooling layers, which are sufficient for achieving satisfactory results. By leveraging message-passing and pooling layers, we integrate the graphs from different modalities (sequence and structure) into joint embeddings. \n\n**Q4** Can you add the performance of the teacher model into your results tables?\n\n**A4** In terms of the teacher model's performance, as we have stated, we use about 30K proteins with 2752 GO annotations from the GO dataset to train the teacher model, without further division into the biological process (BP), molecular function (MF), and cellular component (CC). The $F_{\\mathrm{max}}$ is used as the evaluation metric. We got the $\\mathrm{F}_{\\mathrm{max}}$ for the teacher model is 0.489 overall."
                    }
                },
                "number": 9,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3403/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700468393320,
                "cdate": 1700468393320,
                "tmdate": 1700701507710,
                "mdate": 1700701507710,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "agTK8bmvRi",
                "forum": "O0dW800ukz",
                "replyto": "GmwuazhXkp",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3403/Reviewer_G223"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3403/Reviewer_G223"
                ],
                "content": {
                    "comment": {
                        "value": "Thank you for the detailed answers to my questions. I have revised my score accordingly. I have one additional clarification:\n\n* It seems to be that the performance of ProteinSSA reported in the experiments is that of the student model. 1) Could you clarify this is correct? 2) Could you provide performance numbers for the teacher model within ProteinSSA?"
                    }
                },
                "number": 12,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3403/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700558533207,
                "cdate": 1700558533207,
                "tmdate": 1700558533207,
                "mdate": 1700558533207,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "nmTuWhZsyt",
            "forum": "O0dW800ukz",
            "replyto": "O0dW800ukz",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission3403/Reviewer_1uow"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission3403/Reviewer_1uow"
            ],
            "content": {
                "summary": {
                    "value": "This paper proposes to learn function enhanced protein representations by distilling knowledge from a teacher model with additional GO representation constraint. Here the teacher model is a ProteinBERT, while the GO is encoded by a fully-connected neural network. The combined representation will force the student model to learn meaningful and functional protein representations. The proposed model are evaluated on several understanding tasks, and the performance is pretty good."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "The proposed model performs well on the several protein understanding tasks."
                },
                "weaknesses": {
                    "value": "1. **Lack of baselines:** The paper lacks some important baselines. For example, the paper didn't report the teacher model's performance and the performance of removing the KL divergence term.\n\n2. **The motivation is unclear:** Actually, I don't really get the reason why the author needed to train a student model, which seems redundant. In this paper, the student model is not smaller than the teacher model. Instead, the student model shares parameters with the teacher model. It seems the author just needs to finetune the ProteinBERT involving the additional GO information constraint.\n\n3. **The writing is confusing:** Many parts of the paper make me feel confused, especially the KL divergence part. For example, what do $P_S(G_S, A)$ and $P(Z_S|G_S, A)$ mean? Are these VAE model? If it's true, then expanding the $P_S(G)$ to $P(G|z)P(z)$, I don't think the assumption that \"$E_{p_S(G)}[KL[p_S(y|G)P_T()y|G]]$ does not depend on z\" holds. By the way, I don't really get what the source domain and target domain mean. It seems they are the same domain in the exception that source has an additional constraint on GO."
                },
                "questions": {
                    "value": "I have already mentioned some questions in the weaknesses. Additional questions are provided as follows:\n\n1. In Equation 5, why the author directly add the $h_S$ to h_A without any transformation? It seems they are from different semantic spaces.\n\n2. Removing the AE-T doesn't influence the performance much. Does that mean this additional GO encoder didn't add to much benefit to the whole model?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "details_of_ethics_concerns": {
                    "value": "None"
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission3403/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission3403/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission3403/Reviewer_1uow"
                    ]
                }
            },
            "number": 2,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission3403/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698692593500,
            "cdate": 1698692593500,
            "tmdate": 1700733050504,
            "mdate": 1700733050504,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "ql7idp8DVf",
                "forum": "O0dW800ukz",
                "replyto": "nmTuWhZsyt",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3403/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3403/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "Dear Reviewer 1uow,\n\nWe are grateful for your thorough review. Your comments are highly valued, and we would like to express our heartfelt gratitude. We do our utmost to address the questions you have raised:\n\n**Q1** The paper lacks some important baselines. For example, the paper didn't report the teacher model's performance and the performance of removing the KL divergence term.\n\n**A1** Thank you for your valuable feedback! (1) The proposed method is compared with existing popular protein representation learning methods. We have reported the performance of removing the KL divergence term in the ablation study, shown in Table 5, w/o Teacher means removing the teacher model, which leads to substantial performance drops across all tasks compared to the full ProteinSSA. (2) In terms of the teacher model's performance, as we have stated, we use approximately 30K proteins from the GO dataset to train the teacher model, without further division into the biological process (BP), molecular function (MF), and cellular component (CC). The $F_{\\mathrm{max}}$ is used as the evaluation metric.  Overall, we achieved a $F_{\\mathrm{max}}$ score of 0.489 for the teacher model.  (3) If we do not consider the student model, the inputs of the teacher model consist of sequence, structure, and function. Therefore, we evaluated the teacher model using the GO term dataset and calculated $F_{\\mathrm{max}}$ scores for BP, MF, and CC. The results are as follows: \n\n| Method| GO-BP | GO-MF | GO-CC | \n| :--- | :---: | :---: | :---: | \n| ProteinSSA (student) | 0.464 | 0.667| 0.492 | \n| ProteinSSA (teacher) | 0.769 | 0.832| 0.849 | \n\nThe goal of the Gene Ontology (GO) task is to identify protein functions. Molecular Function (MF) describes activities that occur at the molecular level, with 1,943 classes. Biological Process (BP) represents larger processes, categorized into 489 classes. Cellular Component (CC) describes the parts of a cell or its extracellular environment, with 320 classes. From the provided table, it is evident that incorporating function information as input significantly enhances performance, particularly for MF and CC. These two classes have fewer categories and are more accessible, resulting in higher scores. \n\n**Q2** Actually, I don't really get the reason why the author needed to train a student model, which seems redundant. In this paper, the student model is not smaller than the teacher model. Instead, the student model shares parameters with the teacher model. It seems the author just needs to finetune the ProteinBERT involving the additional GO information constraint.\n\n**A2** Thank you for your informative reviews! (1) At present, not even 1% of sequenced proteins have functional annotation [1,2]. While the teacher network requires extra functions as input, such information is not always available. As discussed in Section 3.2, we highlight the limitations of pre-training and the absence of a well-learned protein functional encoder to encode functional information. To address these challenges and make better use of functional information without extensive pre-training, we propose the multimodal knowledge distillation framework. (2) Compared with the teacher model, the student model is smaller than the teacher model, due to the deprecation of the annotation encoder. (3) The student model is trained by a hybrid loss, present in Eq.(10) in the revised manuscript, it does not share parameters with the teacher model. The Kullback-Leibler (KL) divergence loss is to regularize the parameters of the student model indirectly through the distribution of its embeddings. (4) ProteinBERT [3] is the first model to utilize the protein annotation information, using 8943 frequent GO annotations. The current state-of-the-art (SOTA) sequence-function pre-trained model is the KeAP [4], but the SOTA model KeAP fails to generate protein embeddings that surpass those obtained from the sequence pre-trained model ESM-1b [5]. This observation demonstrates the limitations of the sequence-function pre-trained model and motivates the development of ProteinSSA. (5) In Section 3.2, we have included a preliminary experiment to highlight the limitations of existing sequence-function pre-training models. This experiment serves as the motivation for proposing the multimodal knowledge distillation framework, ProteinSSA, which aims to embed protein sequence, structure, and function.\n\n**Q3** Many parts of the paper make me feel confused, especially the KL divergence part. For example, what do $P_S(G_S,A)$ and $P(Z_S|G_S,A)$ mean? Are these VAE model? If it's true, then expanding the $P_S(G)$ to $P(G|z)P(z)$, I don't think the assumption that \"$E_{p_S(G)}\\left[K L\\left[p_S(y \\mid G) P_T() y \\mid G\\right]\\right]$ does not depend on z\" holds. By the way, I don't really get what the source domain and target domain mean. It seems they are the same domain in the exception that source has an additional constraint on GO."
                    }
                },
                "number": 6,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3403/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700467472473,
                "cdate": 1700467472473,
                "tmdate": 1700570302842,
                "mdate": 1700570302842,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "pIjwgWaxTz",
                "forum": "O0dW800ukz",
                "replyto": "nmTuWhZsyt",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3403/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3403/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "**A3** (1) In the context of domain adaptation, a domain refers to a specific distribution of data. The main goal is to overcome the distribution shift between the source and target domains, which can lead to a decrease in performance when directly applying a model trained on the source domain to the target domain. (2) In section 3.3, we have clarified that the reason for employing domain adaptation strategies is to develop a sample-independent method, particularly for protein samples without available functional labels. The goal is to align the student's latent distributions obtained from sequence-structure embeddings to the distributions of the teacher model's latent space, thereby bridging the gap between different domains and enhancing the performance of the student model. The source domain is the distribution of teacher model's embeddings, and the target domain is the distribution of student model's embeddings. (3) $P(Z_S|G_S,A)$ mean the distribution of $z_S$ in the source domain. In Section 3.1, we have given the definitions. There is a source domain $S$ with the data distribution $p_S(z_S| G_S, A)$, and there is also a target domain $T$ with the data distribution $p_T(z_T|G_T)$, the latent embeddings $z_S, z_T$ are from the teacher and student network for a protein. $A$ with $k$ terms are the GO annotations. $G_S, G_T$ are the input graphs in the source and target domains. Thus, $P_S(G_S,A)$ means the distribution of the input graph $G_S$ and annotation $A$. (4) This is not a VAE model. (5) In Eq.(8) in the revised manuscript, it defines the misalignment in the representation space between the source and target domains. The theoretical derivations are shown in Appendix D. $E_{p_S(G)}\\left[KL\\left[p_S(y|G)\\parallel p_T(y|G)\\right]\\right]$ is fixed and and often small [7] (not dependent on the representation $z$, and $y$ is the protein class), there is no $z$ in this term, which is not dependent on the representation $z$. From Proposition 2 shown in Appendix D, we can see the conditional misalignment in the representation space is bounded by the conditional misalignment in the input space.\n\n**Q4** In Equation 5, why the author directly add the $h_S$ to $h_A$ without any transformation? \n\n**A4** The annotations associated with $G_S$ serve as the input for the annotation encoder, resulting in the extraction of feature vector $h_A$. Notably, both $h_S$ (the feature vector obtained from processing $G_S$) and $h_A$ possess identical feature dimensions, enabling a direct addition of these vectors.\n\n**Q5** Removing the AE-T doesn't influence the performance much. \n\n**A5** (1) In our study, we conducted ablation experiments to analyze the impact of excluding the annotation encoder in the teacher model. This is denoted as \"w/o AE-T\" in Table 5. The results showed a slight decrease in performance because function information was incorporated into the loss function without using the annotation encoder. However, completely removing the teacher model (w/o Teacher) resulted in significant performance drops across all tasks compared to the full ProteinSSA approach. These ablations highlight the importance of utilizing the annotation encoder and incorporating function information in the loss function and the teacher model for optimal results. (2) By removing the annotation encoder in the teacher model but still incorporating function information into the loss function, it can be viewed as a multi-task learning method. This approach leverages knowledge transfer across tasks, leading to improved generalization performance. (3) The auxiliary annotation encoder in the teacher model is implemented as a multi-layer perceptron. Further details about the model can be found in Appendix B.2. Additionally, the GO encoder can be enhanced by utilizing large language models or graph neural networks, as well as incorporating more GO terms to capture a broader range of functional information.\n\nThank you again! \n\n[1] Torres, M., Yang, H., Romero, A. E. & Paccanaro, A. Protein function prediction for newly sequenced organisms. Nat. Mach. Intell. 3, 1050\u20131060 (2021).\n\n[2] Ibtehaz, et al. \"Domain-PFP allows protein function prediction using function-aware domain embedding representations.\" Communications Biology 6.1 (2023): 1103.\n\n[3] Brandes, Nadav, et al. \"ProteinBERT: a universal deep-learning model of protein sequence and function.\" Bioinformatics 38.8 (2022): 2102-2110.\n\n[4] Hong-Yu Zhou, et al. Protein representation learning via knowledge enhanced primary structure modeling, 2023.\n\n[5] Zeming Lin, et al. Language models of protein sequences at the scale of evolution enable accurate structure prediction. BioRxiv, 2022.\n\n[6] Hehe Fan, et al. Continuous-discrete convolution for geometry-sequence modeling in proteins. In The Eleventh International Conference on Learning Representations, 2023.\n\n[7] Ben-David, Shai, et al. \"A theory of learning from different domains.\" Machine learning 79 (2010): 151-175."
                    }
                },
                "number": 7,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3403/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700468005450,
                "cdate": 1700468005450,
                "tmdate": 1700535076649,
                "mdate": 1700535076649,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "s41af6bbEa",
                "forum": "O0dW800ukz",
                "replyto": "pIjwgWaxTz",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3403/Reviewer_1uow"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3403/Reviewer_1uow"
                ],
                "content": {
                    "title": {
                        "value": "Reply to the rebuttal"
                    },
                    "comment": {
                        "value": "Thanks for the response. I have carefully read the author's response and other reviewers' comments. I do agree with reviewer KkPB's opinion that there are too many elements incorporated into this method without a cohesive story, making the paper confusing. For example, I still feel unclear about the motivation of training a student model instead of directly finetuning ProteinBERT with additional functional constraints. Therefore, I'd like to keep my current score."
                    }
                },
                "number": 17,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3403/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700626394552,
                "cdate": 1700626394552,
                "tmdate": 1700626394552,
                "mdate": 1700626394552,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "RZQUP6JWJI",
                "forum": "O0dW800ukz",
                "replyto": "nmTuWhZsyt",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3403/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3403/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "Dear Reviewer 1uow,\n\nWe genuinely appreciate the time and effort you've dedicated to reviewing our work and your acknowledgment of the answers we've conducted.\n\n**(1)** I have carefully read the author's response and other reviewers' comments. I do agree with reviewer KkPB's opinion that there are too many elements incorporated into this method without a cohesive story, making the paper confusing. For example, I still feel unclear about the motivation of training a student model instead of directly finetuning ProteinBERT with additional functional constraints. Therefore, I'd like to keep my current score.\n\n**A1** Thanks for your criticisms. We have made significant efforts to improve the manuscript and have just completed the latest round of revisions. The submitted version has undergone multiple iterations, with each revision incorporating valuable feedback and making necessary improvements. \n\n At present, not even 1% of sequenced proteins have functional annotation [1,2]. While the teacher network requires extra functions as input, such information is not always available. As discussed in Section 3.2, we highlight the limitations of pre-training and the absence of a well-learned protein functional encoder to encode functional information. To address these challenges and make better use of functional information without extensive pre-training, we propose the multimodal knowledge distillation framework. \n\nIn case our answers have justifiably addressed your concerns, we respectfully thank you that support the acceptance of our work. As you know, your support holds great significance for us. Also, please let us know if you have any further questions. Look forward to further discussions!\n\n[1] Torres, M., Yang, H., Romero, A. E. & Paccanaro, A. Protein function prediction for newly sequenced organisms. Nat. Mach. Intell. 3, 1050\u20131060 (2021).\n\n[2] Ibtehaz, Nabil, Yuki Kagaya, and Daisuke Kihara. \"Domain-PFP allows protein function prediction using function-aware domain embedding representations.\" Communications Biology 6.1 (2023): 1103."
                    }
                },
                "number": 20,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3403/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700724116243,
                "cdate": 1700724116243,
                "tmdate": 1700724190841,
                "mdate": 1700724190841,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "xzCi0DS5xv",
                "forum": "O0dW800ukz",
                "replyto": "RZQUP6JWJI",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3403/Reviewer_1uow"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3403/Reviewer_1uow"
                ],
                "content": {
                    "title": {
                        "value": "Further response"
                    },
                    "comment": {
                        "value": "I appreciate the authors' effort in revising the manuscript. I will read the updated version shortly and then see if I have the motivation to update my current score."
                    }
                },
                "number": 21,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3403/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700724312398,
                "cdate": 1700724312398,
                "tmdate": 1700724312398,
                "mdate": 1700724312398,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "VMUGg9SBZW",
                "forum": "O0dW800ukz",
                "replyto": "riTqpmUA4O",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3403/Reviewer_1uow"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3403/Reviewer_1uow"
                ],
                "content": {
                    "title": {
                        "value": "Follow-up comment"
                    },
                    "comment": {
                        "value": "I would like to read the updated version of the manuscript. However, I didn't find where the revised parts are. Maybe the author needs to highlight the revised part to let us know the main revision of the paper. Considering the the effort the author have put into the rebuttal process, I raise my score from 3 to 5, but I still think there is a lot of space for this paper to be improved."
                    }
                },
                "number": 24,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3403/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700733027256,
                "cdate": 1700733027256,
                "tmdate": 1700733027256,
                "mdate": 1700733027256,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "y5It2vh6d4",
            "forum": "O0dW800ukz",
            "replyto": "O0dW800ukz",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission3403/Reviewer_KkPB"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission3403/Reviewer_KkPB"
            ],
            "content": {
                "summary": {
                    "value": "This paper is concerned with how to compute embedded representations of proteins using a variety of data sources.  The authors note the imbalanced nature of protein data, where unannotated sequences are plentiful, with functional annotations an order of magnitude less so, and structures rarer by yet another order of magnitude.  Their solution is to fuse representations by distilling knowledge from a teacher network, for which structure, sequence, and annotations exist, and a student network that acts on sequence and structure alone.  While the student and teacher share a GNN architecture for encoding sequence and structure, the teacher additionally has function annotation information to enrich its' embeddings.  The teacher's richer embedding space regularizes the student's embedding space, thus imparting the student with extra information.  They go on to show favourable performance on tasks predicting fold classification, enzyme reaction, and GO-term predictions."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "- The authors' attempt to circumvent the data imbalance for annotated protein data by using distillation is really interesting, and I think is well worth exploring here.  \n- In addition, combining the best of 1D, 3D (via a replacement for SE(3) tools via [Ingraham et al.]() and GNNs is really interesting too.\n- In particular, the result for ProteinSSA on fold classification is clearly an advance."
                },
                "weaknesses": {
                    "value": "The largest weakness of this paper isn't in the ideas, but with the writing.  There are many examples where it's not quite clear from the text what the authors are trying to convey.  \n\n- The authors stress that ProteinSSA does not require pretraining, and does not make use of annotations.  This is only true of the *student* model, since the teacher does clearly make use of annotations where such exist. Table 1 is thus misleading.\n\n- The title of section 3.2 isn\u2019t very informative.  What problem does it address?  Or what part of the final architecture is being discussed here?  It\u2019s not clear, and would benefit from being rewritten.  For example, how does CDConv relate to KeAP and ESM-1b?  These are very briefly described, but not in sufficient detail to tell the reader why each was chosen, and how they relate to each other & to ProteinSSA as a whole. It\u2019s only when you read to the bottom of 3.2 that you discover that this section is all about establishing that pre-trained models are limited in different ways, and *that\u2019s* why ProteinSSA was made.  Please, lead with this, and then describe the limitations of other sequence-based models that require extensive pre-training afterwards.\n\n- Reading through the subsections of section 3, it\u2019s hard to put my finger on what the focus of this paper is.  \nThe different elements are well described, but what isn\u2019t clear exactly is how they will be synthesized into something new and exciting, as well as why the choices (e.g edge representation of 3.1, sequence function representation of 3.2) were made, and why (beyond them being SOTA at one point in time).  I think section 3 would be clearer, and benefit the reader if it had a summary of the subsections at the beginning, and for each subsection to describe one part of the whole model\n\n- Reading through to Section 3.3, it isn't yet explained why the authors think knowledge distillation is the best way to incorporate knowledge from annotations. Why not just use the teacher network directly? The answer is (I think from subsequent sections) that functional annotation are only sometimes available, so by instead aligning the latent space of the student with that of the teacher, the student derives the benefit of additional knowledge.  I have to stress this is not clear from reading section 3, but should be clearly spelled out somewhere within (or within the introduction).\n\n- Both the sentence preceding equation 8 and the sentence that follow are overly wordy, but without the benefit of clarity.  It\u2019s clear that the addition of a KL regularization term KL($P_{S}(z_{S})$, $P_{T}(z_{T})$) will force the student embedding distribution to become like the teacher distribution, thus affecting the student embedding state.  Words about \u201creduce the bound in the representation spaces\u201d or \u201cKL divergence matches distributions\u2026\u201d is a bit misleading; all that\u2019s intended here is an intention to regularize the parameters of the student  model indirectly through the distribution of its embeddings.\n\n- Table 3 reports only point estimates of max accuracy.  I find max accuracies very difficult to parse in a meaningful way.  I think the improvements of ProteinSSA would be better qualified if you report the distribution of accuracies from multiple runs, especially that of fold classification.  Even if you cannot re-run the alternatives, you can report ProteinSSA results more faithfully.\n\n\n**Minor points:**\n\nIn the introduction, the phrase \u2018grammar of life\u2019 isn\u2019t a helpful metaphor.  I realize this is a small point, but what these models learn are not always distillable into rules for compositional orientation of elements of protein language.\n\n- Equation 5 has a term $\\alpha$ that controls \"the isotropic of protein representations\".  What does this mean?\n- There are some grammtical errors in the first sentence on page 6\n- Page 6 in section 3.3 invokes the CLT.  I don\u2019t think you need to invoke the CLT here to model the distribution of the embeddings as Gaussian, you can just assume it to be true.  At any rate, it\u2019s not clear that the different batch derived embeddings are independent."
                },
                "questions": {
                    "value": "- The ablation study of section 4.5 is welcome, but does not address one of the key choices of the paper (raised in the *Protein Domain Adaptation* paragraph of section 3.3), which is why the teacher embeddings are concatenated with a separate functional embedding rather than using function as an extra term in the loss function for classification.  How come?\n\n- Just prior to equation 10, there is an argument about reducing the generalization bound which seems a non-sequitur.  I do not understand why generalization bound arguments are being used here; it seems very disconnected from the rest of this section.  Could the authors please help me understand why?\n\n- Section 4.1 begins by describing ProteinBERT and how it is pre-trained.  Is this part of ProteinSSA?  If so, can ProteinSSA really claim (as in table 1) that it is not pre-trained?  If not, then is mentioning ProteinBERT here relevant?\n\n\nI want to stress to the authors that I think there is a good paper within here, but that its writing needs work, and that the authors need to think harder about ordering, motivating, and presenting their arguments.  I'm certainly willing to change my score if the post-rebuttal version of the paper takes my suggestions into account."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "5: You are absolutely certain about your assessment. You are very familiar with the related work and checked the math/other details carefully."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission3403/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission3403/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission3403/Reviewer_KkPB"
                    ]
                }
            },
            "number": 3,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission3403/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698720049811,
            "cdate": 1698720049811,
            "tmdate": 1700589375159,
            "mdate": 1700589375159,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "WSi99ZFkag",
                "forum": "O0dW800ukz",
                "replyto": "y5It2vh6d4",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3403/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3403/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "Dear Reviewer KkPB,\n\nThanks for your appreciation and detailed review. We respond to your comments with a heart full of gratitude. We try our best to response the questions below:\n\n**Q1** ProteinSSA does not require pretraining, and does not make use of annotations. This is only true of the student model. Table 1 is thus misleading.\n\n**A1** Thank you for your valuable feedback! (1) It is indeed true that ProteinSSA uses annotations for the teacher model, its objective is to learn embeddings in the latent space that contain functional information and provide intermediate supervision during knowledge distillation for the student model. Therefore, the complete training of the teacher model is not our primary concern. Our main focus is to obtain comprehensive embeddings for the student model, which is trained using distillation loss and task loss without the annotations input. (2) Pre-training involves learning general representations from a large dataset, while fine-tuning adapts the pre-trained model to a specific task or dataset. In the teacher-student framework, the teacher model is usually a well-learned model that serves as a source of knowledge for the student model. The student model aims to mimic the behavior or predictions of the teacher model. In this work, the teacher model is trained on a relatively small dataset consisting of about 30 thousand proteins with 2752 GO annotations. This is in comparison to ProteinBERT [1], which uses 106 million proteins, and KeAP [2], which uses 5 million triplets. It can still be considered as training rather than pre-training for the teacher model, and we mainly want to obtain a better student model. We have clarified this information and modified Table 1 in the revised version for better understanding.\n\n**Q2** What problem does section 3.2 address? Or what part of the final architecture is being discussed here? It\u2019s not clear, and would benefit from being rewritten. How does CDConv relate to KeAP and ESM-1b? These are very briefly described, but not in sufficient detail to tell the reader why each was chosen, and how they relate to each other & to ProteinSSA as a whole. It\u2019s only when you read to the bottom of 3.2 ... , lead with this, and then describe the limitations of other sequence-based models that require extensive pre-training afterwards.\n\n**A2** Thank you for your informative reviews! We have carefully considered your suggestions and made the following revisions to the manuscript. (1) In Section 3.2 of the revised manuscript, we now begin with a summary and central idea of the subsection, followed by the preliminary experiment. We emphasize that the performance of pre-trained models is influenced by various factors, such as model size, dataset scale, and choice of pre-training tasks. To illustrate this, we have conducted an experiment. (2) In this experiment, we want to highlight that the current state-of-the-art (SOTA) sequence-function pre-trained model, KeAP [2], fails to generate protein embeddings that surpass those obtained from the sequence pre-trained model ESM-1b [3]. This observation demonstrates the limitations of the sequence-function pre-trained model and motivates the development of ProteinSSA. (3) As mentioned in Section 3.2, CDConv [4] introduces an effective fundamental operation to encapsulate protein structure and sequence without pre-training or self-supervised learning. CDConv achieves superior performance compared to pre-training methods like GearNet-Edge-IEConv [5]. CDConv is currently the most effective publicly available method for modeling protein sequence and structure. In the field of protein pre-training, KeAP is the current SOTA model for downstream tasks, pre-trained on protein sequences and functions, while ESM-1b is the most prevalent sequence pre-training model. By incorporating the embeddings from KeAP and ESM-1b to enhance the embeddings obtained from CDConv, we can compare the quality and performance of the embeddings from the two pre-trained models, evaluating their ability using the solid sequence-structure base model, CDConv. (4) The student model in the ProteinSSA framework is designed to model protein sequence and structure together, learning functional information from the teacher model without pre-training. Additionally, the message-passing mechanism formulated in Eq.(4) is inspired by CDConv, which convolves node and edge features from sequence and structure simultaneously."
                    }
                },
                "number": 2,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3403/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700466744343,
                "cdate": 1700466744343,
                "tmdate": 1700560950214,
                "mdate": 1700560950214,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "uu5cCIenVw",
                "forum": "O0dW800ukz",
                "replyto": "y5It2vh6d4",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3403/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3403/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "**Q3** The different elements are well described, but what isn\u2019t clear exactly is how they will be synthesized into something new and exciting, as well as why the choices (e.g edge representation of 3.1, sequence function representation of 3.2) were made, and why (beyond them being SOTA at one point in time).\n\n**A3** Thank you for your suggestions! We have carefully reviewed and incorporated your feedback into the manuscript, especially for section 3, we add a summary of the subsections at the beginning, and describe what they functions. For example, (1) we define the problem and notations, and introduce the local coordinate system (LCS) [7] as the geometric features for protein 3D structures. LCS features are widely adopted in protein structure modeling methods [4,8], as they provide informative and comprehensive descriptions of protein structures by considering distance, direction, and orientation. (2) In Section 3.2, we have included a preliminary experiment to highlight the limitations of existing sequence-function pre-training models. This experiment serves as the motivation for proposing the multimodal knowledge distillation framework, ProteinSSA, which aims to embed protein sequence, structure, and function. (3) In Section 3.3, we have presented the overall framework of ProteinSSA, which involves training a teacher model and a student model through iterative knowledge distillation. We have provided a detailed explanation of the network architecture, highlighting the use of the same Graph Neural Network (GNN) architecture in both the teacher and student models. Additionally, we have introduced the concept of protein domain adaptation and derived the loss for the student model. The message-passing mechanism used in both the teacher and student models is inspired by CDConv, which enables better modeling of protein sequences and structures. We have clarified that the reason for developing a sample-independent method, for proteins without available functional labels. The goal is to align the student's latent distributions obtained from sequence-structure embeddings to the distributions of the teacher model's latent space, thereby bridging the gap between different domains and enhancing the performance of the student model.\n\n**Q4** It isn't yet explained why the authors think knowledge distillation is the best way to incorporate knowledge from annotations. Why not just use the teacher network directly? \n\n**A4** Thank you for your reviews! At present, not even 1% of sequenced proteins have functional annotation [9,10]. While the teacher network requires extra functions as input, such information is not always available. Another way is the pre-training and fine-tuning paradigm, as discussed in Section 3.2, we highlight the limitations of pre-training and the absence of a well-learned protein functional encoder to encode functional information. To address these challenges and make better use of functional information without extensive pre-training, we propose the multimodal knowledge distillation framework. \n\n**Q5** Both the sentence preceding equation 8 and the sentences that follow are overly wordy, but without the benefit of clarity. Words about \u201creduce the bound in the representation spaces\u201d or \u201cKL divergence matches distributions\u2026\u201d is a bit misleading; \n\n**A5** Thank you for your informative reviews! We appreciate your feedback and have taken steps to clarify wordy sentences. Regarding Eq.(6)-Eq.(10), we would like to clarify that these equations were used to illustrate the process of deriving an ideal loss for the student model in a theoretical manner, where the goal is to align the student embedding distribution with the teacher embedding distribution. We apologize for any confusion caused and have made the necessary rectifications. \n\n**Q6** Table 3 reports only point estimates of max accuracy. \n\n**A6** Thank you for highlighting this aspect! In Section 4.1, we present the performance is measured with averaged values over three initializations, this means that we report the mean terms of three independent runs instead of point estimation on these four tasks, including protein fold classification, enzyme reaction classification, Gene Ontology (GO) term prediction, and enzyme commission (EC) number prediction. For the variance or confidence intervals of reported results, we follow the results of baselines reported in [4]. For the task of fold and reaction classification, the performance is measured as mean accuracy. For GO Term and EC number prediction, the $\\mathrm{F}_{\\mathrm{max}}$ is used as the evaluation metric. Here, we report the mean (variance) for the proposed ProteinSSA:\n\n| Method | Fold | SuperFamily | Family | Enzyme Reaction | GO-BP | GO-MF | GO-CC | EC |\n| :--- | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: |\n| ProteinSSA | 60.5(0.60) | 79.4(0.96) | 99.8(0.04) | 89.4(0.43) | 0.464(0.007) | 0.667(0.003) | 0.492(0.004) | 0.857(0.011) |"
                    }
                },
                "number": 3,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3403/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700466799555,
                "cdate": 1700466799555,
                "tmdate": 1700554489853,
                "mdate": 1700554489853,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "1ttiLEiDF2",
                "forum": "O0dW800ukz",
                "replyto": "y5It2vh6d4",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3403/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3403/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "**Q7** The phrase \u2018grammar of life\u2019 isn\u2019t a helpful metaphor.\n\n**A7** Thank you for your comment! We highly appreciate your feedback and acknowledge that the knowledge acquired by these models cannot always be distilled into explicit rules for the compositional orientation of elements in the protein language. In the introduction, we discuss protein language models (PLMs) that have demonstrated the ability to learn the 'grammar of life' from large numbers of protein sequences. In works such as [12,13], language models are applied to model protein sequences, highlighting the common characteristics shared between human languages and proteins. For instance, the hierarchical organization [14] suggests that the four levels of protein structures can be analogized to letters, words, sentences, and texts in human languages to a certain degree. In light of these considerations, it may be appropriate to modify the phrase \"learn the grammar of life\" to \"learn the certain grammar of life\". \n\n**Q8** Equation 5 has a term $\\alpha$ that controls \"the isotropic of protein representations\". What does this mean?\n\n**A8** Thank you for your question! In this context, the term \"isotropic\" refers to the uniformity or symmetry of protein representations. It may be better to change the word isotropic to balance.  The hyper-parameter $\\alpha$ controls the balance between the contribution of the annotation encoder ($h_A$) and the graph-level protein embeddings ($h_S$) in the combined representation ($z_S$). By adjusting the value of $\\alpha$, we can control the extent to which the two components contribute to the final representation. A higher value of $\\alpha$ would give more weight to the graph-level protein embeddings, while a lower value would amplify the influence of the annotation encoder. This allows us to control the isotropy or symmetry of the resulting protein representations, determining whether they are more influenced by the annotation or the structural information captured in the graph-level embeddings.\n\n**Q9** A few minor typos in the first sentence on page 6.\n\n**A9** Thanks for your careful reviews! We sincerely appreciate your detailed and valuable suggestions, and we thoroughly revise our paper based on your constructive comments.\n\n**Q10** I don\u2019t think you need to invoke the CLT here to model the distribution of the embeddings as Gaussian, you can just assume it to be true. \n\n**A10** Thank you for your suggestion! It is true that we can assume protein embeddings follow a Gaussian distribution without mentioning the central limit theorem [15]. We have modified this in the revised version.\n\n**Q11** why the teacher embeddings are concatenated with a separate functional embedding rather than using function as an extra term in the loss function for classification. How come?\n\n**A11** Thank you for insightful reviews! (1) We conducted ablation experiments, shown in Table 5, where we excluded the annotation encoder in the teacher model, denoted as \"w/o AE-T\" in Table 5. This means that we incorporated function information into the loss function for the teacher models, while deprecating the use of the annotation encoder. As a result, there was a slight decrease in performance observed. These ablations demonstrate the importance of using the annotation encoder and incorporating function information in the loss function for optimal results. (2) The input functions used in the annotation encoder can be considered as part of the Label-Augmented method. Previous works have successfully utilized label-augmented techniques to enhance model training [16,17]. This technique involves encoding labels and combining them with node attributes through concatenation or summation. By doing so, it improves feature representation and enables the model to effectively utilize valuable information from labels. The Label-Augmented method is applicable to various types of graphs and can be employed in different domains. Thus, we choose to incorporate functional embeddings, concatenated with graph-level protein sequence-structure embeddings. (3) Another approach to improve the model's performance is by incorporating function as an additional term in the loss function, which is commonly seen in multi-task learning (MTL) methods. The objective of MTL is to leverage knowledge transfer across tasks and achieve better generalization. However, when tasks are diverse, a simple shared MTL model can suffer from task interference [18]. Previous work [19] has explored the relationship and mutual adaptability of protein tasks. Considering the concept of prompt learning [18] in the MTL domain, it holds promise as a potential direction for improvement. \n\n| Method | Fold | SuperFamily | Family | Enzyme Reaction | GO-BP | GO-MF | GO-CC | EC |\n| :--- | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: |\n| ProteinSSA | 60.5 | 79.4 | 99.8 | 89.4 | 0.464 | 0.667 | 0.492 | 0.857 |\n| w/o AE-T | 60.4 | 79.1 | 99.7 | 88.9 | 0.454 | 0.664 | 0.490 | 0.854 |"
                    }
                },
                "number": 4,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3403/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700466919583,
                "cdate": 1700466919583,
                "tmdate": 1700533989541,
                "mdate": 1700533989541,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "FUAae7MT34",
                "forum": "O0dW800ukz",
                "replyto": "y5It2vh6d4",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3403/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3403/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "**Q12** Why generalization bound arguments are being used here; \n\n**A12** Thanks for your valuable comments. There exists a misalignment for KL-guided domain adaptation method in the representation space between source domain and target domain because of data differences. Theoretically, the student model should have a lower generalization bound when transferring knowledge from the teacher model, as shown in Eq.(8) in the revised manuscript.  In order to approximate the ideal target domain loss, we reduce the terms inside the radical sign, because the second term in Eq.(8) is often small and fixed.  Thus, we only need to leverage Kullback-Leibler (KL) divergence to align the distributions between source domain and target domain, i.e., $KL[p_S(z)|| p_T(z)]$. \n\n**Q13** Section 4.1 begins by describing ProteinBERT and how it is pre-trained. Is this part of ProteinSSA?\n\n**Q13** Thanks for your question! ProteinBERT [1] is not a part of ProteinSSA. It is the first model to utilize the protein annotation information, using 8943 frequent GO annotations. Compared with ProteinBERT, we use 2752 GO annotations from the GO dataset. We have modified this in the revised manuscript to decrease the misleading.\n\nThank you again for all the efforts that helped us improve our manuscript! In case our answers have justifiably addressed your concerns, we respectfully thank you that support the acceptance of our work. As you know, your support holds great significance for us. Also, please let us know if you have any further questions. Look forward to further discussions!\n\n[1] Brandes, Nadav, et al. \"ProteinBERT: a universal deep-learning model of protein sequence and function.\" Bioinformatics 38.8 (2022): 2102-2110.\n\n[2] Zhou, Hong-Yu, et al. \"Protein Representation Learning via Knowledge Enhanced Primary Structure Modeling.\" bioRxiv (2023): 2023-01.\n\n[3] Zeming Lin, Halil Akin, Roshan Rao, Brian Hie, Zhongkai Zhu, Wenting Lu, Allan dos Santos Costa, Maryam Fazel-Zarandi, Tom Sercu, Sal Candido, et al. Language models of protein sequences at the scale of evolution enable accurate structure prediction. BioRxiv, 2022.\n\n[4] Hehe Fan, Zhangyang Wang, Yi Yang, and Mohan Kankanhalli. Continuous-discrete convolution for geometry-sequence modeling in proteins. In The Eleventh International Conference on Learning Representations, 2023.\n\n[5] Zuobai Zhang, Minghao Xu, Arian Jamasb, Vijil Chenthamarakshan, Aurelie Lozano, Payel Das, and Jian Tang. Protein representation learning by geometric structure pretraining. In International Conference on Learning Representations, 2023.\n\n[6] Varadi, Mihaly, et al. \"AlphaFold Protein Structure Database: massively expanding the structural coverage of protein-sequence space with high-accuracy models.\" Nucleic acids research 50.D1 (2022): D439-D444.\n\n[7] John Ingraham, Vikas Garg, Regina Barzilay, and Tommi Jaakkola. Generative models for graph-based protein design. Advances in neural information processing systems, 32, 2019.\n\n[8] Anishchenko, Ivan, et al. \"De novo protein design by deep network hallucination.\" Nature 600.7889 (2021): 547-552.\n\n[9] Torres, M., Yang, H., Romero, A. E. & Paccanaro, A. Protein function prediction for newly sequenced organisms. Nat. Mach. Intell. 3, 1050\u20131060 (2021).\n\n[10] Ibtehaz, Nabil, Yuki Kagaya, and Daisuke Kihara. \"Domain-PFP allows protein function prediction using function-aware domain embedding representations.\" Communications Biology 6.1 (2023): 1103.\n\n[11] Zeming Lin, et al. Language models of protein sequences at the scale of evolution enable accurate structure prediction. BioRxiv, 2022.\n\n[12] Asgari, E. and Mofrad, M. R. K. (2015). Continuous distributed representation of biological sequences for deep proteomics and genomics. PLOS ONE.\n\n[13] Yang, K. K., Wu, Z., Bedbrook, C. N., and Arnold, F. H. (2018). Learned protein embeddings for machine learning. Bioinformatics.\n\n[14] Ferruz, N. and H\u00f6cker, B. (2022). Controllable protein design with language models. Nature Machine Intelligence, pages 1\u201312.\n\n[15] Oliver Johnson. Information theory and the central limit theorem. World Scientific, 2004.\n\n[16] Samy Bengio, et al. 2010. Label embedding trees for large multi-class tasks. Advances in Neural Information Processing Systems 23 (2010).\n\n[17] Xu Sun, Bingzhen Wei, Xuancheng Ren, and Shuming Ma. 2017. Label embedding network: Learning label representation for soft training of deep networks. arXiv preprint arXiv:1710.10393 (2017)\n\n[18] Wang, Zeyuan, et al. \"Multi-level Protein Structure Pre-training via Prompt Learning.\" The Eleventh International Conference on Learning Representations. 2022.\n\n[19] Hu, Fan, et al. \"A Multimodal Protein Representation Framework for Quantifying Transferability Across Biochemical Downstream Tasks.\" Advanced Science (2023): 2301223."
                    }
                },
                "number": 5,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3403/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700467051498,
                "cdate": 1700467051498,
                "tmdate": 1700555566422,
                "mdate": 1700555566422,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "MhvvWsI3Hf",
                "forum": "O0dW800ukz",
                "replyto": "WSi99ZFkag",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3403/Reviewer_KkPB"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3403/Reviewer_KkPB"
                ],
                "content": {
                    "title": {
                        "value": "response to authors' comment"
                    },
                    "comment": {
                        "value": "Thanks for your reply, I'm encouraged to read that the motivation of ProteinSSA has been addressed (and contextualized) with more care.  \n\n> Pre-training involves learning general representations from a large dataset, while fine-tuning adapts the pre-trained model to a specific task or dataset. In the teacher-student framework, the teacher model is usually a well-learned model that serves as a source of knowledge for the student model. The student model aims to mimic the behavior or predictions of the teacher model. In this work, the teacher model is trained on a relatively small dataset consisting of about 30 thousand proteins with 2752 GO annotations. This is in comparison to ProteinBERT [1], which uses 106 million proteins, and KeAP [2], which uses 5 million triplets. It can still be considered as training rather than pre-training for the teacher model, and we mainly want to obtain a better student model.\n\nI'm not convinced that the distinction between training and pre-training is about the size of the dataset.  If you're beginning from a random initialization and are updating model weights according to some supervised loss, I think most people would consider that training.  Pre-training is usually, as the authors point out, performed using a surrogate (often self-supervised or unsupervised) loss on a much larger data set, and then a pre-trained model is fine-tuned using a more relevant objective and target dataset.  I guess what I'm most unhappy about is that the details of the teacher model aren't really the focus here; the teacher model is constructed so that the distilled student model can be as powerful as possible, and so any teacher model that admits fine-tuning (or training) on function annotations should suffice.  \n\nWhile I think that section 3.2 and 3.3 do a better job of motivating ProteinSSA, I think there's still more attention that could be paid to the writing.  For instance, when motivating why the distributions of the latent spaces between the teacher model and student model are aligned\n\n> Importantly, rather than directly minimizing distances between sample-dependent embeddings ZS and ZT , we develop a sample-independent method. This aligns the student\u2019s latent space with the teacher\u2019s by approximating the distributions of sequence-structure embeddings to the triplet representations. This distribution alignment approach avoids reliance on individual sample embeddings.\n\nwhat isn't mentioned here are the motivations for **why** it's helpful to decouple the teacher model and the student model.  One important reason is that the teacher model can then be trained on a much larger dataset, or multiple datasets, without requiring such information to be available to the student model.  This may seem small, but emphasizing these details helps to establish the motivation."
                    }
                },
                "number": 14,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3403/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700585520195,
                "cdate": 1700585520195,
                "tmdate": 1700585520195,
                "mdate": 1700585520195,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "tdfOWC0RVL",
                "forum": "O0dW800ukz",
                "replyto": "1ttiLEiDF2",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3403/Reviewer_KkPB"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3403/Reviewer_KkPB"
                ],
                "content": {
                    "title": {
                        "value": "Response to authors"
                    },
                    "comment": {
                        "value": "Regarding the authors answer to Q8 ('isotropic'), this description that the authors provide I think is the clearest description of what the $\\alpha$ parameter controls, and maybe should be what appears in the text:\n\n> The hyper-parameter $\\alpha$ controls the balance between the contribution of the annotation encoder ($h_{A}$) and the graph-level protein embeddings ($h_{S}$) in the combined representation ($z_{S}$).\n\nRegarding the choice to incorporate functional annotations through label encoding rather than as a separate loss function, I appreciate the justification via Bengio et al and Sun et al.  I think this justification should also appear in the text (and please add both citations to the manuscript)."
                    }
                },
                "number": 15,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3403/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700586959200,
                "cdate": 1700586959200,
                "tmdate": 1700586959200,
                "mdate": 1700586959200,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "AoLysZ99Kb",
                "forum": "O0dW800ukz",
                "replyto": "FUAae7MT34",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3403/Reviewer_KkPB"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3403/Reviewer_KkPB"
                ],
                "content": {
                    "title": {
                        "value": "Response to Q12, and appendix D"
                    },
                    "comment": {
                        "value": "I find the writing here is still quite confusing.  Generalization bound arguments are typically made with respect to a given model on different datasets.  This application here is to try and bound the loss of the student by the loss of the teacher network plus some distributional alignment terms of the student and teacher model latent variables.  But the notation is overloaded here in confusing ways:\n- What does $Y$ specifically refer to here?  Is it shared by both models?  I did not think the student model had any notion of labeled data necessarily...\n- mutual information is defined on random variables, not on their realizations; so equation (15) and it's description is very confusing for me\n\nOn the whole, I think this is evidence that my original criticism of their being too many elements incorporated into this method without a cohesive story motivating their inclusion stands.  I acknowledge the hard work of the authors in other respects, and will increase my score accordingly, but I don't think the authors succeeded yet in producing the clearest version of this paper."
                    }
                },
                "number": 16,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3403/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700589340279,
                "cdate": 1700589340279,
                "tmdate": 1700589340279,
                "mdate": 1700589340279,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "MEfYovr0BX",
                "forum": "O0dW800ukz",
                "replyto": "y5It2vh6d4",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3403/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3403/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "**(4)** Regarding the authors answer to Q8 ('isotropic'), this description that the authors provide I think is the clearest description of what the \n parameter controls, and maybe should be what appears in the text. Regarding the choice to incorporate functional annotations through label encoding rather than as a separate loss function, I appreciate the justification via Bengio et al and Sun et al. I think this justification should also appear in the text (and please add both citations to the manuscript).\n\n**A4** Thanks for your suggestions! We have added these contents to the revised manuscript.\n\n**(5)** I find the writing here is still quite confusing. Generalization bound arguments are typically made with respect to a given model on different datasets. This application here is to try and bound the loss of the student by the loss of the teacher network plus some distributional alignment terms of the student and teacher model latent variables. But the notation is overloaded here in confusing ways: (a) What does $Y$ specifically refer to here? Is it shared by both models? I did not think the student model had any notion of labeled data necessarily. (b) Mutual information is defined on random variables, not on their realizations; so equation (15) and it's description is very confusing for me\n\n**A5** Thanks for your valuable reviews! The teacher and student models can be used in different datasets. To reduce the generalization bound, we focus on optimizing marginal misalignment and obtain the derived loss for the student model, which is Eq. 9. (a) $y$ represents the underlying functional label for the student model. Although the student model may not have these functional labels, but we can assume that they exist for theoretical reasons. In Appendix D, we have mentioned we assume the source and target domains have the same support set (training set) to derive this theory, i.e,  the difference is that the teacher has functional labels, while the student does not. The derived misalignment Eq. 8 and the derived loss Eq. 9 are based on the assumption that the source and target domains have the same support set. Thus, the loss of Eq. 9 can be used in an unsupervised way for the student to predict functions. However, the student model is applied to different downstream tasks, like classification, which have classification classes. Thus, we add the supervised student loss $L_\\mathrm{student}$ and the knowledge distillation loss the $L_{kd}$ as the final hybrid loss for the student to improve the performance on the classification task. (b) Mutual information is typically used to compute the relationship between random variables. However, if we have a way to discretize or represent the non-variable or actual values as random variables, we may be able to apply mutual information to measure their relationship. This would involve defining appropriate probability distributions for the variables and estimating the probabilities based on the observed data. In Eq. 15, the variable z represents the latent embedding, which is a learned representation of the input graph G. The variable y represents the data label or target variable, which provides information about the class or category to which the input data belongs. The variable G represents the input data itself. G is typically considered as the independent variable in the context of the equation. The mutual information term, denoted as I_S(\u00b7, \u00b7), is calculated on the source domain. It quantifies the amount of information shared between the variables z and y (or G and y) in the source domain. It measures the dependence or correlation between these variables in the context of the source domain data.\n\n\n\nThank you again for all the efforts that helped us improve our manuscript! In case our answers have justifiably addressed your concerns, we respectfully thank you that support the acceptance of our work. As you know, your support holds great significance for us. Also, please let us know if you have any further questions. Look forward to further discussions!\n\n\n[1] Ibtehaz, Nabil, Yuki Kagaya, and Daisuke Kihara. \"Domain-PFP allows protein function prediction using function-aware domain embedding representations.\" Communications Biology 6.1 (2023): 1103."
                    }
                },
                "number": 19,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3403/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700659452958,
                "cdate": 1700659452958,
                "tmdate": 1700714847063,
                "mdate": 1700714847063,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    }
]