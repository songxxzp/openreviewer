[
    {
        "title": "Mark My Words: Repurposing LLMs for Specialized Domains via Ability Tokens"
    },
    {
        "review": {
            "id": "Le6CQzB48W",
            "forum": "GsNp4ob8BY",
            "replyto": "GsNp4ob8BY",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission5697/Reviewer_bkwo"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission5697/Reviewer_bkwo"
            ],
            "content": {
                "summary": {
                    "value": "This work proposes a parameter-efficient finetuning approach similar to \"prompt tuning\", which inserts special tokens to the input and learns to adapt domains and shift behaviors based on the special tokens. Specifically, two types of tokens can be learned: \"domain markers\", which prepends to the input to indicate specific domains, and \"functional tokens\", which appends to the input to indicate specific tasks. The authors conduct experiments on: 1) Machine Translation, to show the proposed approach can achieve modularity and compositionality of different domains; 2) Molecular Property Prediction & Drug-Drug Interaction, where the approach achieves better performance than other baselines when adopting regression heads (rather than to predict discrete tokens); 3) Binding Affinity Prediction, where the approach operates on both Protein and Drug domains and achieves good performance."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "- The proposed approach is an effective application of \"prompt tuning\" with certain adaptation; especially, it is proven effective achieving modularity and compositionality through experiments on Machine Translation and Drug-Drug Interaction. It is shown that modularizing domains and tasks is possible through learning those special tokens, which could derive zero-shot performance on unseen task domains by composition.\n  \n- The proposed approach is evaluated on multiple datasets across different domains, especially including Protein and Chemical Compounds, which are quite distant from natural languages, where it is able to obtain good performance on all of them through finetuning only a small amount of parameters."
                },
                "weaknesses": {
                    "value": "- The proposed approach is similar to \"prompt tuning\" and its related techniques. The mere adaptation is to provide a different set of tokens per domain/task, which itself is relatively trivial. The ability to achieve modularity and compositionality is also not as surprising, though it is still valuable to show it empirically.\n  \n- The state-of-the-art performance on Protein and Chemical Compounds seems to mainly come from using regression heads, rather than from this specific way of using the prompt tuning, as shown by Figure 3. **There are no side-by-side experiments comparing the traditional prompt-tuning and the proposed tuning both adopting regression heads or regular LM heads**. In the end, the proposed approach is essentially equivalent to prompt tuning, if not considering task/domain composition. Adding this side-by-side experiments on a specific task could help to show the advantages of the proposed setting."
                },
                "questions": {
                    "value": "Is it possible to show the results of the regular prompt tuning with regression heads on the task of Descriptor Prediction or QED Prediction alone?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 1,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission5697/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698733205262,
            "cdate": 1698733205262,
            "tmdate": 1699636596151,
            "mdate": 1699636596151,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "U3BStQ3qHm",
                "forum": "GsNp4ob8BY",
                "replyto": "Le6CQzB48W",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission5697/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission5697/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "We appreciate your valuable feedback and constructive comments. We have incorporated them in the revised paper. Below, we answer the questions raised in the review.\n\n&nbsp;\n\n> **More ablations: _\"There are no side-by-side experiments comparing the traditional prompt-tuning and the proposed tuning both adopting regression heads or regular LM heads.\"\"Is it possible to show the results of the regular prompt tuning with regression heads on the task of Descriptor Prediction or QED Prediction alone?\"_**\n\nThank you for your suggestion. We added these baselines to our rebuttal (see Table 1 in the general comment above). Specifically, we evaluate PEFT baselines w. regression head and compare them to our method (ability tokens w. regression head). This setting removes the potential influence of the prediction head and the loss function to help us better understand the effect of ability tokens. The results show that our method outperforms prompt tuning on all tasks and outperforms all PEFT methods extended with the regression head on 3 of 4 tasks. The only exception is the binding affinity task, where our method underperforms LORA w. reg head, which nevertheless uses 12x more trainable parameters than we do (~1M vs. ~86K).\n\nApart from the \"w. regression head\" baselines you suggest, we add another set of ablation studies in Table 2 of the general comment above. We replace the learned embeddings of the domain markers with the text embeddings of the domain names (e.g., inserting the actual tokens \"<\", \"Protein\", \">\" into the input sentence) to examine whether the domain markers have indeed learned useful domain knowledge from the auxiliary data. Our method still achieves outstanding performance, so domain markers are effective and necessary for improving downstream performance in specialized domains.\n\nBeyond these new experiments, our original submission contains detailed ablation studies for different components of our approach (see Section 4.2.2, Figure 3, and Appendix A.1.3), showing the performance of \n- Full method: domain markers + functional tokens + prediction head \n- w/o domain markers\n- w/o functional tokens\n- w/o prediction head\n\nThe first setting obtains the best results. We have also studied the effect of ability token length in Figure 3.\n\n&nbsp;\n\n> **Difference from prompt tuning: _\"The proposed approach is similar to 'prompt tuning' and its related techniques. The mere adaptation is to provide a different set of tokens per domain/task, which itself is relatively trivial.\"_**\n\nWe underscore our difference from existing PEFT methods (including prompt tuning) in Section 2.1 and 3.1. In particular, our method separates task domains from task functions\u2014we use **modularized** tokens to represent different domains/functions and learn them using a **hierarchical** training protocol. These ideas are **not** trivial because they lead to distinct properties compared to existing methods:\n* **Reusability & generalization to unseen tasks**:  While existing PEFT methods require learning a distinct set of parameters for every single task, regardless of whether they share domains, our learned tokens can be shared across tasks and applied to new problems without additional training. For example, as demonstrated in Section 4.2, the <SMILES> marker can be independently applied to both drug combination and the binding affinity task. Additionally, in Section 4.1, the general functional token <Translate> exhibits zero-shot transferability to unseen tasks.\n* **Local applicability & multiple occurrence**: Prompt tuning is \"global\" (applies to the entire query) and therefore always appears at the beginning, whereas our markers are \"local\" (apply to certain substrings of the input) and therefore can appear anywhere and multiple times in the prompt.\n* **Taking advantage of auxiliary data**: For existing PEFT methods, learning the additional parameters (e.g., soft prompts, adapters) uses only the target dataset. In contrast, our design of domain markers allows us to leverage auxiliary unsupervised data and learn domain knowledge from them, which yields better empirical results than the PEFT baselines (Table 2 & 3).\n* **Sample efficiency for downstream tasks**: By inserting learned domain markers into the input, we amortize the sample complexity needed to learn the functional tokens and solve downstream tasks.\n\nApart from these desirable properties, we also show in the new experiments (Table 1 of the general comment above) that our method significantly outperforms prompt tuning, which further provides empirical evidence that these methods differ not only conceptually, but also functionally.\n\nThank you for your question. We will add the above discussion to the paper for better clarity."
                    }
                },
                "number": 8,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission5697/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700595074611,
                "cdate": 1700595074611,
                "tmdate": 1700595074611,
                "mdate": 1700595074611,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "rnUJru1Ree",
            "forum": "GsNp4ob8BY",
            "replyto": "GsNp4ob8BY",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission5697/Reviewer_VcX3"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission5697/Reviewer_VcX3"
            ],
            "content": {
                "summary": {
                    "value": "The authors design a framework for adding trainable special tokens (called ability tokens) to pre-trained language models (LMs). Embeddings of these special tokens are learned on the corpus of specialized domains in order to adapt the model to these domains. The authors introduce two types of ability tokens: domain markers and functional tokens. Domain markers are trained on the single-domain unlabeled corpus. Functional tokens are trained on single-domain and multi-domain labeled samples. During inference, these special tokens are inserted into the input text. Experimental results on machine translation, protein, and molecular property prediction achieve better performance compared with other domain adaption methods, such as LoRA and prompt tuning."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "1. This method achieves better performance in the medical domain than other PEFT methods.\n2. These ability tokens can be combined to generalize to unseen tasks.\n3. Only a few parameters need to be trained for the domain adaption."
                },
                "weaknesses": {
                    "value": "1. This method is similar to existing PEFT methods like Prompt-Tuning. I think it may lack novelties.\n2. Ablation experiments show that the effectiveness of domain markers is relatively limited.\n3. I think that training regression heads for numerical prediction problems may cause an unfair comparison with other adaption methods based on text generation."
                },
                "questions": {
                    "value": "1. What are the main differences between your approach and Prompt Tuning? It would be helpful to add a discussion about this.\n2. Do you use the task-specific linear heads for other baseline methods, like LoRA and prompt tuning?\n3. What is the difference between ability tokens with text instructions used in chat-aligned LLMs?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "details_of_ethics_concerns": {
                    "value": "N/A"
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission5697/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission5697/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission5697/Reviewer_VcX3"
                    ]
                }
            },
            "number": 2,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission5697/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698810741477,
            "cdate": 1698810741477,
            "tmdate": 1699636596043,
            "mdate": 1699636596043,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "0PdcV41rlc",
                "forum": "GsNp4ob8BY",
                "replyto": "rnUJru1Ree",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission5697/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission5697/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Official Comment by Authors 1/2"
                    },
                    "comment": {
                        "value": "Thank you for your feedback and constructive comments, which we have incorporated in the revised paper. Below, we answer the questions raised in the review.\n\n&nbsp;\n\n> **Difference from previous PEFT methods: _\"This method is similar to existing PEFT methods like Prompt-Tuning\u2026What are the main differences between your approach and Prompt Tuning? It would be helpful to add a discussion about this.\"_**\n\nWe underscore our difference from existing PEFT methods (including prompt tuning) in Section 2.1 and 3.1. In particular, our method separates task domains from task functions\u2014we use **modularized** tokens to represent different domains/functions and learn them using a **hierarchical** training protocol. This leads to:\n* **Reusability & generalization to unseen tasks**:  While existing PEFT methods require learning a distinct set of parameters for every single task, regardless of whether they share domains, our learned tokens can be shared across tasks and applied to new problems without additional training. For example, as demonstrated in Section 4.2, the <SMILES> marker can be independently applied to both drug combination and the binding affinity task. Additionally, in Section 4.1, the general functional token <Translate> exhibits zero-shot transferability to unseen tasks.\n* **Local applicability & multiple occurrence**: Prompt tuning is \"global\" (applies to the entire query) and therefore always appears at the beginning, whereas our markers are \"local\" (apply to certain substrings of the input) and therefore can appear anywhere and multiple times in the prompt.\n* **Taking advantage of auxiliary data**: For existing PEFT methods, learning the additional parameters (e.g., soft prompts, adapters) uses only the target dataset. In contrast, our design of domain markers allows us to leverage auxiliary unsupervised data and learn domain knowledge from them, which yields better empirical results than the PEFT baselines (Table 2 & 3).\n* **Sample efficiency for downstream tasks**: By inserting learned domain markers into the input, we amortize the sample complexity needed to learn the functional tokens and solve downstream tasks.\n\nApart from these desirable properties, we also show in the new experiments (Table 1 of the general comment above) that our method significantly outperforms prompt tuning, which further provides empirical evidence that these methods differ not only conceptually but also functionally.\n\nThank you for the suggestion. We will add the above discussion to the paper for better clarity.\n\n&nbsp;\n\n> **Difference from text instructions: _\"What is the difference between ability tokens with text instructions used in chat-aligned LLMs?\"_**\n\nThe biggest difference is that **our ability tokens are not represented as explicit text or actual words**. Besides, our method has the following functional benefits:\n- **Knowledge compression**: Ability tokens can compress large amounts of domain knowledge (via domain markers) or task knowledge (via functional tokens) into a few embedding parameters in a data-driven fashion. Such information is hard to summarize in a few sentences as text instructions.\n- **Task-agnostic**: Ability tokens are more general, e.g., domain markers are task-agnostic and can be reused for new tasks in the same domain. Text instructions are always task-specific.\n- **Flexibility & generalization to unseen tasks**: Ability tokens are composable and can generalize to unseen tasks in a zero-shot fashion, as exemplified in our multilingual experiments (Section 4.1). \n- **Effectiveness**: Ability tokens are more effective and stable compared to hand-crafted text prompts, as shown in Table 2 & 3, where our method outperforms the hard prompt baseline by a large margin.\n\n&nbsp;\n\n> **More baselines: _\"I think that training regression heads for numerical prediction problems may cause an unfair comparison with other adaption methods based on text generation.\"\"Do you use the task-specific linear heads for other baseline methods, like LoRA and prompt tuning?\"_**\n\nThank you for your suggestion. We added these baselines to our rebuttal (see Table 1 in the general comment above). Specifically, we evaluate PEFT baselines w. regression head and compare them to our method (ability tokens w. regression head). This setting removes the potential influence of the prediction head and the loss function to help us better understand the effect of ability tokens. The results show that our method outperforms prompt tuning on all tasks and outperforms all PEFT methods extended with the regression head on 3 of 4 tasks. The only exception is the binding affinity task, where our method underperforms LORA w. reg head, which nevertheless uses 12x more trainable parameters than we do (~1M vs. ~86K)."
                    }
                },
                "number": 6,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission5697/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700594581797,
                "cdate": 1700594581797,
                "tmdate": 1700595113805,
                "mdate": 1700595113805,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "GUkXVF57CZ",
                "forum": "GsNp4ob8BY",
                "replyto": "rnUJru1Ree",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission5697/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission5697/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Official Comment by Authors 2/2"
                    },
                    "comment": {
                        "value": "> **More ablations: _\"Ablation experiments show that the effectiveness of domain markers is relatively limited.\"_**\n\nApart from the \"w. regression head\" baselines you suggest, we add another set of ablation studies in Table 2 of the general comment above. We replace the learned embeddings of the domain markers with the text embeddings of the domain names (e.g., inserting the actual tokens \"<\", \"Protein\", \">\" into the input sentence) to examine whether the domain markers have indeed learned useful domain knowledge from the auxiliary data. Our method still achieves outstanding performance, so domain markers are effective and necessary for improving downstream performance in specialized domains.\n\nBesides these new experiments, our original submission contains detailed ablation studies for other components of our approach (see Section 4.2.2, Figure 3, and Appendix A.1.3), showing the performance of \n* Full method: domain markers + functional tokens + prediction head \n* w/o domain markers\n* w/o functional tokens\n* w/o prediction head\n\nThe first setting obtains the best results. We have also studied the effect of ability token length in Figure 3."
                    }
                },
                "number": 7,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission5697/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700594684467,
                "cdate": 1700594684467,
                "tmdate": 1700594684467,
                "mdate": 1700594684467,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "14OM3xlNAf",
            "forum": "GsNp4ob8BY",
            "replyto": "GsNp4ob8BY",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission5697/Reviewer_4P5B"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission5697/Reviewer_4P5B"
            ],
            "content": {
                "summary": {
                    "value": "This paper explores the repurposing of general language models (LMs) as specialized task solvers, particularly in domains that have limited representation in pre-training corpora. The authors propose the use of ability tokens, specifically domain markers and functional tokens, to enhance LMs' ability to handle specialized inputs. Domain knowledge is encoded in domain markers, while specific task knowledge is encoded in functional tokens. However, a major concern is that the performance seems to be primarily driven by overlap between the training data of the LLMs and the downstream tasks. Additionally, the experiments are mainly focused on one specific domain without testing the generalization of the approach to other domains."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "- The paper presents a straightforward method to incorporate domain knowledge into LMs while maintaining the original knowledge encoded in the models' parameters.\n- The performance of the approach is not sensitive to different context lengths."
                },
                "weaknesses": {
                    "value": "- The contribution of data contamination to the final performance is unclear. The ability tokens, which generally correspond to dataset or task names, may result in LMs memorizing information about the datasets during pretraining. An analysis of this phenomenon is needed to understand the effectiveness of the method.\n- The proposed method is specifically designed for effective domain adaptation of LLMs, but it is only evaluated in the biomedical domain. Evaluations in other domains would strengthen the paper's findings.\n- More ablation studies are required to demonstrate the effectiveness of the ability tokens. For example, evaluating the llama-7b model with and without ability tokens for different tasks.\n- The experiments only utilize one model. Including results from other models would further support the conclusions."
                },
                "questions": {
                    "value": "- Is there any specific procedure for initializing the embedding for ability tokens, or is it done in a standard manner?\n- Are the lengths of domain markers and functional tokens always the same, or can they vary depending on the task?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 3,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission5697/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1699138583826,
            "cdate": 1699138583826,
            "tmdate": 1699636595949,
            "mdate": 1699636595949,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "fDcwGwszGJ",
                "forum": "GsNp4ob8BY",
                "replyto": "14OM3xlNAf",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission5697/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission5697/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Official Comment by Authors 1/2"
                    },
                    "comment": {
                        "value": "Thank you for your feedback and constructive comments, which we have incorporated in the revised paper. Below, we answer the questions raised in the review.\n\n&nbsp;\n\n> **Data contamination: _\"However, a major concern is that the performance seems to be primarily driven by overlap between the training data of the LLMs and the downstream tasks.\"\"The ability tokens, which generally correspond to dataset or task names, may result in LMs memorizing information about the datasets during pretraining.\"_**\n\nWe would like to clarify a couple of points to address these misunderstandings about our work.\n\n**First, it is important to note that the ability tokens do not _\"correspond to dataset or task names.\"_ They exist only in the embedding space and are not represented as actual words.** For example, to learn the token representing the SMILES domain, we introduce \"<ability token 0>\" to the tokenizer with a newly initialized embedding. Then, we prepend \"<aibility token 0>\" (not the word \"SMILES\" or any dataset name related to SMILES) to SMILES strings and learn the embedding for \"<aibility token 0>\" via next-token prediction. At inference time, \"<ability token 0>\" is inserted into the input. Similarly, when learning the binding affinity function, the functional token added to the tokenizer is \"<aibility token 1>\", and its embedding is not tied to the task name \"binding affinity.\"\n\n**Second, the datasets used to train the ability tokens do not appear in pretraining.** Our goal of using ability tokens is to inject *additional* domain/task knowledge into the LLM by leveraging *auxiliary* data. For instance, the dataset we use to train the <Protein> marker is from a recently published source [1], which should not have appeared in the pretraining corpora.\n\n**Lastly, the datasets used for evaluation do not appear in pretraining.** For instance, we generate the QED and descriptor prediction datasets *ourselves* using specialized Python packages. These data have not appeared anywhere on the web, so there should not be a memorization problem.\n\nWe hope this clarifies any misconceptions. Please feel free to share if you have additional concerns. Thank you!\n\n[1] Blanchard AE, Gounley J, Bhowmik D, et al. Language models for the prediction of SARS-CoV-2 inhibitors. The International Journal of High Performance Computing Applications. 2022; 36(5-6):587-602. \n\n&nbsp;\n\n> **More ablations: _\"More ablation studies are required to demonstrate the effectiveness of the ability tokens. For example, evaluating the llama-7b model with and without ability tokens for different tasks.\"_**\n\nWe have performed such ablations in the paper. In particular:\n* The \"hard prompt\" baseline in Table 2 and 3 is **llama-7b without ability tokens and regression head**. This demonstrates the effect of using both ability tokens and regression head.\n* The \"w/o marker\" baseline in Figure 3 (and Appendix A.1.3) is llama-7b with functional tokens and regression head but **without domain markers**. This demonstrates the effect of domain markers.\n* The \"w/o functional\" baseline in Figure 3 (and Appendix A.1.3) is llama-7b with domain markers and regression head but **without functional tokens**. This demonstrates the effect of functional tokens.\n\nFor rebuttal, we add two additional sets of ablations as requested (see the general comment above).\n* In Table 1, we evaluate PEFT baselines w. regression head and compare them to our method (ability tokens w. regression head). This setting removes the potential influence of the prediction head and the loss function to help us better understand the effect of ability tokens. The results show that our method outperforms prompt tuning on all tasks and outperforms all PEFT methods extended with the regression head on 3 of 4 tasks. The only exception is the binding affinity task, where our method underperforms LORA w. reg head, which nevertheless uses 12x more trainable parameters than we do (~1M vs. ~86K).\n* In Table 2, we replace the learned embeddings of the domain markers with the text embeddings of the domain names (e.g., inserting the actual tokens \"<\", \"Protein\", \">\" into the input sentence) to examine whether the domain markers have indeed learned useful domain knowledge from the auxiliary data. Our method still achieves outstanding performance, so domain markers are effective and necessary for improving downstream performance in specialized domains."
                    }
                },
                "number": 4,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission5697/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700594115864,
                "cdate": 1700594115864,
                "tmdate": 1700594294055,
                "mdate": 1700594294055,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "6cKGoAfnYq",
                "forum": "GsNp4ob8BY",
                "replyto": "14OM3xlNAf",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission5697/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission5697/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Official Comment by Authors 2/2"
                    },
                    "comment": {
                        "value": "> **More domains: _\"Additionally, the experiments are mainly focused on one specific domain without testing the generalization of the approach to other domains.\"\"Evaluations in other domains would strengthen the paper's findings.\"_**\n\nThank you for the suggestion. We showcase the general effectiveness of our approach across a diverse set of ten domains, encompassing eight languages, protein sequences (\"MTVPDRSEIAGKWYVV\u2026\"), and chemical formulas (\"CCO[C@H](C(=O)O)Cc1\u2026\").  We deliberately chose the latter two domains because (1) they represent non-linguistic, highly specialized domains with distributions significantly divergent from natural language distributions; (2) they are relatively well-understood with established baselines that we can compare to; and (3) they are substantially different from each other, allowing us to investigate the interactions between them. We acknowledge the potential for expanding the scope of domains in future iterations of this work.\n\n&nbsp;\n\n> **Embedder initialization: _\"Is there any specific procedure for initializing the embedding for ability tokens, or is it done in a standard manner?\"_**\n\nWe have outlined the initialization procedure in Section 3.2 (last paragraph on page 4). Specifically, the ability tokens are initialized using the average embedding of the LLM's original dictionary, scaled by a factor to match the norm of this average embedding with the average norm of all token embeddings in the LLM's original dictionary.\n\n&nbsp;\n\n> **Ability token length: _\"Are the lengths of domain markers and functional tokens always the same, or can they vary depending on the task?\"_**\n\nThe length $p$ is specified as a hyperparameter in Section 3.2 (see the 6th-to-last line on page 4), so it is variable. We explore its impact on downstream performance using the drug combination dataset  (Section 4.2.2 and Figure 3)."
                    }
                },
                "number": 5,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission5697/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700594234788,
                "cdate": 1700594234788,
                "tmdate": 1700594234788,
                "mdate": 1700594234788,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "g6VeTskEsH",
            "forum": "GsNp4ob8BY",
            "replyto": "GsNp4ob8BY",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission5697/Reviewer_gWMh"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission5697/Reviewer_gWMh"
            ],
            "content": {
                "summary": {
                    "value": "This paper discusses the limitations of Large Language Models (LLMs) in highly specialized fields such as biomedical sciences and introduces a new framework to improve their performance in specialized tasks. The authors propose the use of \"ability tokens\" as domain markers to guide the model in specific tasks.\n\nThe setting of this paper is interesting. While adding ability tokens is a common practice in aligning language models with new tasks and modalities, it is non-trivial as it results in changes in the early layers of LLM embeddings. The three-stage hierarchical training protocol is both novel and practical. Additionally, the authors evaluate the method across a wide spectrum of tasks, further demonstrating its applicability."
                },
                "soundness": {
                    "value": "4 excellent"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "1. The paper is well-written, and the claims of the paper are supported by comprehensive experiments on a wide spectrum of tasks. The drug discovery experiments, in particular, are solid, given that biosequences deviate significantly from text, thereby qualifying as a distinctive modality.\n2. The method has good generalization properties (could generalize to unseen tasks). \n3. The study introduces a novel approach that provides contribution to the field, particularly when compared to traditional prompt-tuning methods. The hierarchical training of ability tokens as proposed in the paper enhances the potential for generalization across varied tasks, and allows the combination of ability tokens, making parameter-efficient methods more suitable for multi-task learning."
                },
                "weaknesses": {
                    "value": "1. The paper lacks ablation results, which is crucial to demonstrate the effectiveness of the ability tokens."
                },
                "questions": {
                    "value": "1. What is the effectiveness of the 3-stage training process and how much each stage contributed to generalization results? \n2. A common practice in adapting Llama to specialized domains is to add specialized tokens as words, such as <molecule></molecule>.  However, these tokens are not added as new tokens, but are tokenized into multiple tokens '<', 'molecule', '>',  and then use LORA to adapt the llm to specialized tasks. This method has shown effective in [1][2]. What is the advantage of the proposed methods to this way of adding ability tokens? \n3. What is the data efficiency of the proposed method, compared to prompt tuning and LORA? \n\n\n[1] Zhu, Deyao, et al. \"Minigpt-4: Enhancing vision-language understanding with advanced large language models.\" arXiv preprint arXiv:2304.10592 (2023).\n[2] Liu, Haotian, et al. \"Visual instruction tuning.\" arXiv preprint arXiv:2304.08485 (2023)."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission5697/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission5697/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission5697/Reviewer_gWMh"
                    ]
                }
            },
            "number": 4,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission5697/-/Official_Review"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1699698056034,
            "cdate": 1699698056034,
            "tmdate": 1699698115687,
            "mdate": 1699698115687,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "WXWoWH4Cg1",
                "forum": "GsNp4ob8BY",
                "replyto": "g6VeTskEsH",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission5697/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission5697/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "We appreciate your valuable feedback and constructive comments. We have incorporated them in the revised paper. Below, we answer the questions raised in the review.\n\n&nbsp;\n\n> **More ablations: _\"The paper lacks ablation results, which is crucial to demonstrate the effectiveness of the ability tokens.\"_**\n\nThank you for your suggestion. We conducted two additional sets of ablation experiments to provide further understanding of the contribution of the ability tokens. The detailed results are shown in the general comment above.\n* In Table 1, we evaluate PEFT baselines w. regression head and compare them to our method (ability tokens w. regression head). This setting removes the potential influence of the prediction head and the loss function to help us better understand the effect of ability tokens. The results show that our method outperforms prompt tuning on all tasks and outperforms all PEFT methods extended with the regression head on 3 of 4 tasks. The only exception is the binding affinity task, where our method slightly underperforms LORA w. reg head, which nevertheless uses 12x more trainable parameters than we do (~1M vs. ~86K).\n* In Table 2, we replace the learned embeddings of the domain markers with the text embeddings of the domain names and prompt the LLM, as you suggest. Our method still achieves outstanding performance, which indicates that domain markers have indeed learned useful domain knowledge from the auxiliary unsupervised data.\n\nBeyond these new experiments, our original submission contains detailed ablation studies for different components of our approach (see Section 4.2.2, Figure 3, and Appendix A.1.3), showing the performance of \n* Full method: domain markers + functional tokens + prediction head \n* w/o domain markers\n* w/o functional tokens\n* w/o prediction head\n\nThe first setting obtains the best results. We have also studied the effect of ability token length in Figure 3.\n\n&nbsp;\n\n> **Understanding training protocol: _\"What is the effectiveness of the 3-stage training process and how much each stage contributed to generalization results?\"_**\n\nIn each stage of the 3-stage training process, we learn a different type of ability token. The effect and contribution of individual stages are summarized below:\n\n* **Stage 1: training domain markers.** This stage allows us to inject general domain knowledge into the prompting process. It improves downstream performance since the \"w. domain markers\" setting outperforms the \"w/o domain markers\" setting (Figure 3). This stage also lays out the foundation for later stages because training functional tokens requires learned domain markers. *It contributes the most to the generalization results, given that domain markers are task-agnostic and applicable to various in-domain tasks.*\n* **Stage 2: training single-domain functional tokens.** This stage allows the model to learn task knowledge solely from feature-label pairs (without human instructions) and compress the information into a few embedding parameters. Stage 2 boosts the efficacy of our method since the \"w. functional tokens\" setting outperforms the \"w/o functional tokens\" setting (Appendix A.1.3).\n* **Stage 3: training multi-domain functional tokens.** This stage is similar to stage 2, but the target functions are multi-domain, so we extend the capacity of LLMs to solving multi-domain tasks like drug-protein binding affinity prediction (Section 4.2.3). Moreover, as we show in the multilingual translation experiments (Section 4.1), multi-domain tokens like <Translate> can be combined with different markers and applied to unseen tasks during training. *Thus, this stage also contributes to our markup system's zero-shot generalization ability.*\n\nWe will add the above discussion to the paper for better clarity."
                    },
                    "title": {
                        "value": "Official Comment by Authors 1/2"
                    }
                },
                "number": 2,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission5697/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700593254012,
                "cdate": 1700593254012,
                "tmdate": 1700593679318,
                "mdate": 1700593679318,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "eIDqfS9JOb",
                "forum": "GsNp4ob8BY",
                "replyto": "g6VeTskEsH",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission5697/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission5697/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Official Comment by Authors 2/2"
                    },
                    "comment": {
                        "value": "> **Relevant work: _\"A common practice in adapting Llama to specialized domains is to add specialized tokens as words\u2026 What is the advantage of the proposed methods to this way of adding ability tokens?\"_**\n\nThank you for pointing out this line of related work. The approach you referenced involves two key components: adding \"<\", \"molecule\", \">\" to the input, and using adapters like LORA. We discuss our advantages relative to both components:\n* **Better controllability & conditioning effect.** The efficacy of using pretrained tokens like \"<\", \"molecule\", \">\" relies heavily on their occurrence in the pretraining corpora. However, end users do not have control over this, e.g., we are uncertain how frequently the word \u201cmolecule\u201d occurs (if the frequency is low, then adding the tokens may not be useful) and whether these occurrences align with the target domain. For example, the domain of \"molecule\" is different in the sentence *\"2 atoms of H and 1 of oxygen form a molecule of water\"* (chemistry) and the sentence *\"the four molecules of life are proteins, carbohydrates, lipids and nucleic acids\"* (biology). Our method addresses this limitation by learning continuous embeddings for specialized domains *explicitly using data from the target domain*. This allows more fine-grained control over how we condition the LLM.\n* **Generalization to unseen tasks.** Using LORA after adding \"<\", \"molecule\", \">\" to the input still necessitates *learning a distinct set of parameters for each downstream task*, even though the tasks may share knowledge, as discussed in Section 3.1. On the contrary, our learned domain markers can be used for various tasks in the same domain (e.g., the <SMILES> token can be applied to both drug combination and binding affinity prediction). The learned functional tokens also exhibit zero-shot generalization to unseen domains (e.g., the <Translate> token can generalize to unseen language pairs, as we show in Section 4.1). Thus, our ability tokens are reusable, lowering the deployment costs for new tasks.\n* **Taking advantage of auxiliary data**: For existing PEFT methods, learning the additional parameters (e.g., soft prompts, adapters) uses only the target dataset, whereas our design of domain markers leverages auxiliary unsupervised data and learns domain knowledge from them. This yields better empirical results (Table 2 & 3) and amortizes the sample complexity needed to learn the functional tokens.\n\nTo provide a more direct comparison between our method and the approach you mention, we evaluate LORA/prompt tuning with domain names inserted into the input text (see Table 2 in the general comment). The results show that our method is more effective in addition to being more controllable and generalizable.\n\nThank you for the references. We will add the above discussion to the paper.\n\n&nbsp;\n\n> **Data efficiency: _\"What is the data efficiency of the proposed method, compared to prompt tuning and LORA?\"_**\n\nWe discuss data efficiency in two scenarios:\n* **Case 1: no relevant domain marker or functional token learned yet.** Prompt tuning and LORA learn task-specific parameters entirely from the target dataset. However, our method requires learning task-agnostic domain markers using unsupervised domain data, in addition to learning the functional token using the target dataset. This entails using more data than the PEFT methods, but in practice, the additional unsupervised data is more widely available and much easier to obtain (or generate) than labeled data.\n* **Case 2: there are relevant markers and functional tokens trained for previous tasks which we can use off-the-shelf.** For instance, in our multilingual translation experiments, we have already learned various language markers and the functional token. Thus, we can generalize zero-shot to new translation tasks by directly inserting the learned ability tokens into the input. As we don't have to train any additional parameters, we achieve better data efficiency than the PEFT methods, which still require learning new parameters for new tasks.\n\nWe will add the above discussion to the paper."
                    }
                },
                "number": 3,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission5697/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700593667512,
                "cdate": 1700593667512,
                "tmdate": 1700593667512,
                "mdate": 1700593667512,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    }
]