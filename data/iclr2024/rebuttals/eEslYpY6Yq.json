[
    {
        "title": "On the Equivalence of Graph Convolution and Mixup"
    },
    {
        "review": {
            "id": "SV35ITtHTB",
            "forum": "eEslYpY6Yq",
            "replyto": "eEslYpY6Yq",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission3915/Reviewer_ocCu"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission3915/Reviewer_ocCu"
            ],
            "content": {
                "summary": {
                    "value": "The paper studies the relationship between Graph neural networks and Mixup and formally shows that graph convolution is equivalent to Mixup under certain conditions. The paper proposed two variants of MLPs based on these findings that match the performance of GNNs on node labeling tasks."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "1 poor"
                },
                "strengths": {
                    "value": "The paper is investigating an interesting relationship between graph convolution and Mixup and has several strengths:\n\n1. The paper is very detailed and convincing about the similarities of GNNs and Mixup.\n2. The presentation quality is good.\n3. The proposed methods are potentially valuable (for example, can be fast to train and evaluate for large graphs)."
                },
                "weaknesses": {
                    "value": "While the paper is convincing about the equivalence of graph convolution and Mixup, it's contributions are quite limited.\n\n1. The paper claims potential speed ups (e.g. \"this work ... facilitating efficient training and inference for GNNs when dealing with large-scale graph data\"), but does not provide any time/memory cost comparisons for training/inference. Therefore, it's hard to be convinced about the benefit of the proposed approaches. For example, see Table 1 in [Huang2021] and results in [Duan2022] for such a comparison.\n\n2. Experiments are performed only on Cora, CiteSeer, and PubMed, which are relatively small-scale and sensitive to splits and other factors. Moreover, on PubMed a simple MLP is very strong questioning the usefulness of this dataset for GNNs. It would be more useful to evaluate on more large-scale datasets from Open Graph Benchmark and/or other datasets used in related papers like [Huang2021, Duan2022].\n\n3. The main baselines in this paper are MLP, GNN and SGC. However, a more interesting comparison would be to [Huang2021] that this paper cites but does not discuss in detail and/or other methods like those compared in [Duan2022]. \n\n**References:**\n\n- [Huang2021] Huang et al. \"Combining label propagation and simple models out-performs graph neural networks\", ICLR 2021.\n- [Duan2022] Duan et al. \"A Comprehensive Study on Large-Scale Graph Training: Benchmarking and Rethinking\", NeurIPS Track on Datasets and Benchmark 2022."
                },
                "questions": {
                    "value": "Some previous papers like [Wang2020] also studied the connection between Label Propagation and GNNs. Do the authors think Mixup is connected to Label Propagation and some insights can be derived from that?\n\n[Wang2020] Wang et al. Unifying Graph Convolutional Neural Networks and Label Propagation, 2020"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "3: reject, not good enough"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 1,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission3915/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698676118442,
            "cdate": 1698676118442,
            "tmdate": 1699636351603,
            "mdate": 1699636351603,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": []
    },
    {
        "review": {
            "id": "xfucMsbsUf",
            "forum": "eEslYpY6Yq",
            "replyto": "eEslYpY6Yq",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission3915/Reviewer_12Mm"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission3915/Reviewer_12Mm"
            ],
            "content": {
                "summary": {
                    "value": "This interesting paper establishes the theoretical link between MixUp and Graph-Convolutions.\nThis has the potential to speed-up graph convolutions by transforming them in simple DNN's + MixUp (+H-relabeling)."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "By examining the equations of both MixUp and GCN authors derive the link between the two.\nIn particular a relabeling of the neighboring nodes allow to express GCN's as DNN's + MixUp.\nI believe this is a pretty interesting conclusion!\nAs mentioned this has the potential to speed up computation / scale of GCN's by dropping (expensive) sparse primitives and replacing them with efficient dense operations.\nThe paper is very extensive and well written with lots of good plots and examples!"
                },
                "weaknesses": {
                    "value": "I may have missed something but I believe there is a loss when going from GCN's to DNN+MixUp - loss in structural generalization?\n(see questions)"
                },
                "questions": {
                    "value": "While I understand that DNN+MixUp(+H-relabel) can contribute to same/similar computational graph as DNN's - as showed theoretically and practically by the authors - I also believe that GCN strength is that they can generalize to different graph topologies.\n\nThe neighbour reduction operator of GCN is shape independent - and as such it allows to change graph structure among samples/batches as well as generalize (to some extent) between train and test sets.\n\nI struggle to see how the proposed method can achieve that. But I may have missed something - please explain.\n\nIn which case it should be explained in the text (the lack of the structural generalization feature - constraining to use same graph topology)."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 2,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission3915/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698890856319,
            "cdate": 1698890856319,
            "tmdate": 1699636351528,
            "mdate": 1699636351528,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": []
    },
    {
        "review": {
            "id": "Ey4XQJxv53",
            "forum": "eEslYpY6Yq",
            "replyto": "eEslYpY6Yq",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission3915/Reviewer_Psnu"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission3915/Reviewer_Psnu"
            ],
            "content": {
                "summary": {
                    "value": "The paper studies the connection between graph convolution and Mixup: the neighboring feature-aggregation mechanism of graph convolutional networks highly resembles the feature/label-averaging of Mixup. Given this observation, the paper shows that graph convolution is equivalent to Mixup under two conditions, which are 1) Homophily Relabel - relabeling each node based on its neighbors' nodes prior to training and 2) Test-Time Mixup - aggregating neighboring features during test time. The equivalence is verified empirically by training an MLP (that is oblivious of the graph structure) under Homophily Relabel (HMLP) or Test-Time Mixup (TMLP) and showing that their performance is comparable to that of GCNs. Further investigating the node representation space and the decision boundaries within also reveal that TMLP leads to more discriminative representations with better robustness to unseen data."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "1 poor"
                },
                "strengths": {
                    "value": "- **Novel and original.** The paper proposes a very interesting interpretation of graph convolution, which to the best of my knowledge, has not been studied yet.\n- **Great presentation.** Paper is well-written with clear mathematical derivations that are easy to follow."
                },
                "weaknesses": {
                    "value": "- **Overall significance is unclear and claimed practical/theoretical implications lack support.**\n  - [W1] While Section 6 mentions how TMLP and HMLP can be training-efficient with large-scale graphs since they are MLP-based, there are no experiments to compare computational costs and demonstrate this claim. I also suspect the gain in efficiency would be fairly small since graph convolution can be highly optimized via sparse-dense matrix multiplications.\n  - [W2] The theoretical implications also seem a bit far-fetched: there is a rich line of work on the theoretical expressivity of GNNs [A, B, C, D, E], yet the paper does not convey any clear connection between Mixup and such work to support its theoretical significance. This could most likely constitute another research paper on its own, but any further discussion on what makes \"the Mixup perspective\" particularly interesting with respect to GNN expressivity would be helpful.\n- **Discussion on empirical results do not provide much insight and are often unconvincing due to lack of evidence.**\n  - [W3] Section 3.2 and Figure 3 show that HMLP and GCN share the same test curves, but not the training curves, which the paper conjectures to be \"because the labels of nodes are changed\". I think the discussion could go a bit deeper (maybe via proper ablation),  considering that the training dynamics of HMLP differs from that of GCN in ways other than the node-labels: not only are all the node-labels mixed, but also 1) nodes in the test-set are used for training HMLP (not the case for GCN) and 2) the model parametrization is different. \n  - [W4] Section 4.2 mentions how \"overdoing Mixup may reduce accuracy\", but this observation is not evident from the results in Figure 7, nor is the discussion consistent with the claim that \"Test-Time Mixup enhances model robustness\". Are there any experimental results that can support this observation? Is this discussion in any way related to the oversmoothing problem of graph convolution [F]?\n  - [W5] Figure 8 shows a fairly large discrepancy between GNNs and Mixup on the PubMed dataset. Considering that the main claim is that GNNs and Mixup are equivalent, why are we seeing this discrepancy on performance despite PubMed being a homophilic network just like Cora and CiteSeer?\n\n[A] Morris et al., Weisfeiler and Leman Go Neural: Higher-order Graph Neural Networks. (AAAI 2019)\\\n[B] Xu et al., How Powerful are Graph Neural Networks? (ICLR 2019)\\\n[C] Maron et al., Provably Powerful Graph Networks. (NeurIPS 2019)\\\n[D] Zopf, 1-WL Expressiveness Is (Almost) All You Need. (IJCNN 2022)\\\n[E] Feng et al., How Powerful are K-hop Message Passing Graph Neural Networks. (NeurIPS 2022)\\\n[F] Li et al., Deeper Insights into Graph Convolutional Networks for Semi-Supervised Learning. (AAAI 2018)"
                },
                "questions": {
                    "value": "- [Q1] I am not sure whether Section 2.4 is really necessary on its own as it does not seem to provide significant information. The section could instead be merged to the Related Work paragraph in Section 1.\n- [Q2] Question on HMLP: given the example graph in Figure 2, HMLP uses $(x_i, (0.5, 0.5))$ for training, yet the ground-truth sample during test time will be just one of $(x_i, (1, 0))$ or $(x_i, (0, 1))$. In this case, wouldn't the difference in the labels be detrimental for test-time performance since the model will be trained to output $(0.5, 0.5)$ given $x_i$?\n- [Q3] How are the \"MLP\"s and \"Mixup\"s different for each row of plots in Figure 8? Was slightly confused why the same method appears in different graphs with different accuracies.\n- [Q4] The end of Practical Potentials paragraph in section 6 mentions that HMLP \"eliminates the need for connection information during both training and testing\". Is this true? Although the model being trained may not require connectivity information, the Homophily Relabeling taken place prior to training does seem to require the connectivity.\n\nThere are also several typos:\n- End of Section 1: \"be considered as a generlized ...\" -> \"be considered as a generalized ...\"\n- Notations paragraph in Section 2: \"one-hot labels $Y \\in \\\\{0,1\\\\}^{N \\times (C-1)}$...\" -> Shouldn't it be $Y \\in \\\\{0,1\\\\}^{N \\times C}$ with $C$ classes?\n- Top of page 5: \"We rewrite the $\\tilde{a}i \\cdot X$...\" -> should be subscript \"$\\tilde{a}_i \\cdot X$\"\n- Section 2.4: \"... understanding of this phoneme ...\" -> \"... understanding of this phenomenon ...\"\n- End of Section 3.1: \"Thus in the next, we propose ...\" -> \"Thus in the next paragraph, we propose ...\"?\n- Bottom of page 7: \"In the Figure 4, the performance ...\" -> Wrong reference. \"In Figure 6, the performance ...\"\n- End of Section 4.1: \"The node representation clearly show that what TMLP ...\" -> \"... clearly show what TMLP ...\""
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "3: reject, not good enough"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 3,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission3915/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1699021953493,
            "cdate": 1699021953493,
            "tmdate": 1699636351453,
            "mdate": 1699636351453,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": []
    }
]