[
    {
        "title": "A Symmetry-Aware Learning Approach for Solving Mixed-Integer Linear Programs"
    },
    {
        "review": {
            "id": "8r9P0Z0ffN",
            "forum": "zmV50sislh",
            "replyto": "zmV50sislh",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission6748/Reviewer_9XGv"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission6748/Reviewer_9XGv"
            ],
            "content": {
                "summary": {
                    "value": "This paper focuses on two issues---indistinguishable variable nodes and label ambiguity---in using GNNs to solve MILPs with symmetries.\nIt proposes to use position embeddings and designs a symmetry-aware loss to alleviate the aforementioned two issues, respectively.\nExperiments on four datasets demonstrate the effectiveness of the proposed method in terms of computational efficiency and solution quality."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "1.\tThis paper is easy to follow. It\u2019s worth mentioning that it formulates the issues in using GNNs to solve MILPs with symmetries clearly.\n2.\tThe proposed methods are simple yet effective. They can be combined with a series of GNN based approaches to improve their performance.\n3.\tExperiments on four benchmark datasets, as well as the extensive ablation studies, demonstrate the effectiveness of position embeddings and the symmetry-aware loss."
                },
                "weaknesses": {
                    "value": "1.\tThe authors may want to provide more discussions on some related works.\n\n\ta) The authors mention that [1] and [2] \u201ctry to tackle the label ambiguity drawback by learning conditional distribution\u201d (Section 2). Then, they claim that it \u201cis not symmetry-aware\u201d (Paragraph Baselines, Section 5.1). However, more explanations are necessary.\n\n\tb) The authors claim that \u201cthe random features used in [2] may cause severe generalization issue\u201d (Section 2). They may want to conduct experiments to support this claim and to demonstrate the superiority of position embeddings over random features.\n\n\tc) The authors claim that \u201cnone of the existing learning-based approaches take special care of symmetry handling\u201d (Section 2). However, these approaches identified the symmetry issues and proposed some tricks to deal with these issues. The authors may want to further explain what they mean by \u201ctake special care of symmetry handling\u201d.\n\n\td) Since \u201cworks from mathematical perspectives suggest symmetry-handling algorithms\u201d (Section 2), the authors may want to provide more details about the relationship between this work and those works from mathematical perspectives.\n\n2.\tThe position embedding technique, which is one of the core contributions of this paper, has been implemented in the code of [3] to tackle the strong symmetry.\nhttps://github.com/sribdcn/Predict-and-Search_MILP_method/blob/main/PredictAndSearch_GRB.py#L47.\nTherefore, the technical contribution is minor.\n3.\tThe symmetry-aware loss involves using Hungarian Algorithm to solve Problem (9), whose time complexity is $O(n^3)$. This may lead to a high training cost. Therefore, the authors may want to report the running time.\n4.\tThe authors may want to report the standard deviation of the results in Table 1.\n5.\tSome of the references, such as [2] and [3], are in the wrong form.\n\n[1] Vinod Nair, Sergey Bartunov, Felix Gimeno, Ingrid Von Glehn, Pawel Lichocki, Ivan Lobov, Brendan O\u2019Donoghue, Nicolas Sonnerat, Christian Tjandraatmadja, Pengming Wang, et al. Solving mixed-integer programs using neural networks. arXiv preprint arXiv:2012.13349, 2020.\n\n[2] Ziang Chen, Jialin Liu, Xinshang Wang, and Wotao Yin. On representing mixed-integer linear programs by graph neural networks. In The Eleventh International Conference on Learning Representations, 2023.\n\n[3] Qingyu Han, Linxin Yang, Qian Chen, Xiang Zhou, Dong Zhang, Akang Wang, Ruoyu Sun, and Xiaodong Luo. A gnn-guided predict-and-search framework for mixed-integer linear programming. In The Eleventh International Conference on Learning Representations, 2023."
                },
                "questions": {
                    "value": "1.\tWhy are the results of BKS, Gurobi and PS on the datasets WA and IP different from those reported in [3]?\n2.\tIt seems that with the position embedding, the permutation invariance does not hold any more. For example, if we exchange the positions of two different columns, we will obtain different graph embeddings as they will have invariant node features while variant position embeddings. Is that the case?\n3.\tHow to calculate $\\Phi$ for a given dataset?\n4.\tSince $\\Phi$ indicates the number of possible equivalent solutions, it measures the extend of the issue of label ambiguity. Is there any metric to measure the extend of the issue of indistinguishable variable nodes?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 1,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission6748/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698659346752,
            "cdate": 1698659346752,
            "tmdate": 1699636777123,
            "mdate": 1699636777123,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": []
    },
    {
        "review": {
            "id": "GSEwONDhCf",
            "forum": "zmV50sislh",
            "replyto": "zmV50sislh",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission6748/Reviewer_MwS2"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission6748/Reviewer_MwS2"
            ],
            "content": {
                "summary": {
                    "value": "The paper \u201c A symmetry -aware Learning Approach for solving Mixed-Integer Linear programs'' discusses  how to solve mixed-integer linear programs (MILPs), while taking into account the symmetry that may exist between variables leading to multiple optimal solutions.  It highlights the issue that MILPs often have symmetry, resulting in multiple equivalent solutions and causing challenges for traditional optimization methods. While machine learning-based approaches using graph neural networks (GNNs) have shown promise in solving MILPs, they haven't addressed the issue of symmetry. To tackle this problem, the paper proposes a \"symmetry-aware\" learning approach that incorporates position embeddings to distinguish interchangeable variables and introduces a novel loss function to handle the ambiguity caused by equivalent solutions. The authors conducted experiments on public datasets and found that their approach outperforms existing methods in terms of computational efficiency and solution quality."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "MILP has been used in various capacities in optimization aspects of ML and  recently, with the development of GNN, MILP can be solved as GNNs and this enables use of MILPs as a plug in module in many different deep learning models. In this respect, the paper studies a relevant problem."
                },
                "weaknesses": {
                    "value": "The premise of the paper is based on the weak assumption that symmetry incurs noticeable computational costs. This is not clearly demonstrated in the paper.\nThe improvements proposed by the paper, are not justified as sound theoretical choices. The position embedding seems to add  additional features(why necessarily this way) whereas the symmetry aware loss minimizes distortion to another permutation of the input. What it means in terms of optimization is not clear maybe a simple example of how this helps will illustrate the point better.\nExperimental results are ok, but does not backup the main premise of the the paper that symmetry is significant cost on computational resources."
                },
                "questions": {
                    "value": "NA"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "3: reject, not good enough"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 2,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission6748/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698687887527,
            "cdate": 1698687887527,
            "tmdate": 1699636777000,
            "mdate": 1699636777000,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": []
    },
    {
        "review": {
            "id": "hXnfp9brtu",
            "forum": "zmV50sislh",
            "replyto": "zmV50sislh",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission6748/Reviewer_7CFb"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission6748/Reviewer_7CFb"
            ],
            "content": {
                "summary": {
                    "value": "The paper introduces a neural network MIP solver that is designed to handle symmetry in binary linear programming. The solver predicts initial solutions for MILP using neural networks. The authors highlight the significance of handling variable symmetry and suggest addressing this challenge through positional embedding and a custom-designed loss function. Experimental results show that this approach is superior to other neural solvers and the default Gurobi configuration."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "1 poor"
                },
                "strengths": {
                    "value": "* The paper is written in a clear and easy to understand manner.\n* While the traditional optimization community has widely recognized the symmetry of variables, it has not been studied as much with neural networks. The authors provide valuable insights into the field of neural MILP solving, and their efforts should be greatly appreciated."
                },
                "weaknesses": {
                    "value": "- My primary concern is that this paper represents incremental work compared to a paper published in ICLR 2023 by Han et al., titled \"A GNN-Guided Predict-and-Search Framework for Mixed-Integer Linear Programming.\"\n  - The paper by Han et al. is cited and compared as a significant baseline in this paper. Both papers follow a similar process: a neural network predicts an initial solution, certain digits with higher confidence are fixed and treated as new constraints, and finally, Gurobi is used to solve the modified problem with additional constraints. The only technical addition in this paper appears to be the inclusion of positional embeddings in nodes.\n  - What makes this paper seem more incremental is my observation that positional embeddings are already implemented in the code accompanying Han et al. (ICLR 2023): [github link](https://github.com/sribdcn/Predict-and-Search_MILP_method/blob/b45ded73d261ef912ebb56934607d6424a88b387/PredictAndSearch_GRB.py#L48). My point is that publishing a new paper at a top ML conference by employing a technique that has already proven effective in a previous paper, without providing valuable insights, is questionable.\n  - The experimental improvement compared to Han et al. (ICLR 2023) also seems incremental in Table 1.\n- The authors might argue for the importance of symmetry in solving MIP, which I agree with. However, as an ICLR paper, it requires stronger motivation. \n  - An excellent example can be found in another paper published at ICLR 2023, where the breaking of symmetry is explored: Chen et al.'s \"On Representing Mixed-Integer Linear Programs by Graph Neural Networks.\" Chen et al. offer theoretical insights into solving symmetric MIPs using graph neural networks. They discovered that symmetry is a theoretical bottleneck of GNNs when solving MIPs, and then proposed to break symmetry by introducing random noise. \n  - It's worth noting that when breaking the symmetry of MIPs, positional embeddings and random noise are two sides of the same coin. The underlying technical motivation is to assign the symmetric nodes different features. Also, positional embeddings are random features concatenated to nodes, because positional embeddings are not permutation-invariant. If we randomly permute the nodes, the positional embeddings also change randomly."
                },
                "questions": {
                    "value": "* Seeing that Han et al. (ICLR 2023) have already implemented positional embedding, can the authors explain where the performance improvement comes from?\n* Can the authors distinguish this paper, technically, from Han et al. (ICLR 2023)?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "3: reject, not good enough"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 3,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission6748/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698695520566,
            "cdate": 1698695520566,
            "tmdate": 1699636776805,
            "mdate": 1699636776805,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": []
    },
    {
        "review": {
            "id": "kxHLuutewr",
            "forum": "zmV50sislh",
            "replyto": "zmV50sislh",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission6748/Reviewer_Vpp5"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission6748/Reviewer_Vpp5"
            ],
            "content": {
                "summary": {
                    "value": "This paper studies GNNs for solving MILPs and considers the symmetric properties of MILPs (i.e., switching some variables does not essentially change the problem). The proposed methods include: 1) adding additional features (positional embedding) to differentiate variables that are symmetric; 2) defining the loss function for an orbit of the symmetry group, not just a point. The approach is tested on two datasets and compared with other methods. Some numerical advantages are reported by the authors."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "Symmetry is an important property in MILPs but is rarely considered in GNN-based methods for solving MILPs. It is good to introduce this topic to the community. The writing is clear. The ideas of adding differentiable features and using orbit loss (or symmetry-aware loss) make sense (they are standard in handling symmetry and have been used in other problems). The numerical results show that the approach is promising."
                },
                "weaknesses": {
                    "value": "1. This paper only considers one very special type of symmetry group (a binary matrix and the symmetry group is the the permutation group on the columns). In general, the exact symmetry group of a MILP problem, and hence the symmetry-aware loss, may be very expensive to compute, which makes the proposed method in some sense impractical. I would suggest investigating algorithms based on only partial information about the symmetry group (e.g. the output of the Weisfeiler-Lehman test/color refinement).\n2. Line 6 in Algorithm 1 is expensive to implement, especially when the symmetric group is large. I think the authors should discuss how to solve this subproblem (probably approximately) fast, instead of just saying \"can be solved in parallel\". \n3. Positional embedding (or the related random feature technique) has frequently appeared in the previous literature, which makes the contribution of this paper in some sense incremental."
                },
                "questions": {
                    "value": "None."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "3: reject, not good enough"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission6748/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission6748/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission6748/Reviewer_Vpp5"
                    ]
                }
            },
            "number": 4,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission6748/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1699044161972,
            "cdate": 1699044161972,
            "tmdate": 1699636776523,
            "mdate": 1699636776523,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": []
    }
]