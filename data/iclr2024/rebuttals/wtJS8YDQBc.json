[
    {
        "title": "DEER: A Delay-Resilient Framework for Reinforcement Learning with Variable Delays"
    },
    {
        "review": {
            "id": "5qK5Usdmcd",
            "forum": "wtJS8YDQBc",
            "replyto": "wtJS8YDQBc",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission1630/Reviewer_yS4B"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission1630/Reviewer_yS4B"
            ],
            "content": {
                "summary": {
                    "value": "This paper focuses on reinforcement learning in a Markov decision processes in which the agent observes its current state only after a delay of random length. The proposed algorithm DEER uses offline data to learn an embedding for the delayed state and its corresponding action sequence (s_{t-d}, a_{t-d}, \u2026, a_t). This embedding enables the learning agent to generalize to environments with different or randomized delays. Empirically, DEER outperforms baselines in MuJoCo benchmark tasks with constant and randomized delays."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "1. The problem setting (MDP with delayed state feedback) is especially relevant to real-world RL tasks.\n1. DEER is quite versatile and can be used with any RL algorithm."
                },
                "weaknesses": {
                    "value": "1. It's unclear why breaking the end-to-end decision process into an encoding phase and a decision-making phase increases interpretability. I don't believe this claim is supported by the current experiments. The paper should clarify this contribution.\n1. Since DEER essentially learns a dynamics model that predicts a sequence of states given an initial state and sequence of actions, my understanding is that DEER still suffers the same drawbacks as model-based approaches. \n\n1. DEER seems to have an unfair advantage over the baselines in Figures 4 and 5. In particular, DEER assumes access to an offline dataset, but the baselines do not. I believe DEER could in principle train its encoder in an online fashion -- if so, then an online variant of DEER would provide a fairer comparison across algorithms. \n\n**Other Comments:\n\n1. Figure 1 and 3 are essentially the same. I suggest replacing Figure 1 with Figure 3, and then include the \u201cundelayed trajectory buffer\u201d icon from figure 1.\n    \n2. Advantage (1) seems to subsume advantage (2). I think it's sufficient to say DEER enables agents to generalize to diverse delay environments.\n    \n3. In the abstract and conclusion, it is unclear what \u201ctasks involving delays\u201d and \u201cdelay issues\u201d mean. These phrases are immediately clear from the introduction, but some researchers (such as myself) read the abstract and conclusion before reading the full paper. I suggest clarifying that you\u2019re referring to when the learning agent receives its next observation after taking an action.\n    \n4. The paper should explicitly define \"augmented states. I believe \"augmented state\" refers the concatenation of state and action information, but this term makes me think of a synthetic data generated by a data augmentation function (e.g. a random cropping and recoloration of an image state). \n        \n5. GRU not defined at its first occurrence.\n    \n6. The \u201cOffline assisted Online RL\u201d section would be more readable if you used separate paragraphs for (1) and (2).\n    \n7. It would help readers if you briefly stated how Seq2Seq effectively handles delays.\n    \n10. Last paragraph at section 4 is an experimental detail and would fit better at beginning of paragraph 2 in section."
                },
                "questions": {
                    "value": "1. First line of page 2: What does \u201cdynamic environments\u201d mean?\n\n1. What the difference between d_M and D? The seem to represent the same quantity.\n\n1. The paper mentions the computation drawback of existing approaches. How does DEER compare computationally to the baselines considered?\n    \n1. How does breaking the end-to-end decision-making process into two stages improve interpretability? How is DEER more interpretable than say RLRD and DATS?\n\n1. Does the encoder increase or decrease the dimensionality of the augmented state (s_{t-d}, a_{t-d}, \u2026, a_t)? Does DEER intend to *compress* the MDP?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "value": "Yes",
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission1630/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission1630/Reviewer_yS4B",
                        "ICLR.cc/2024/Conference/Submission1630/Senior_Area_Chairs"
                    ]
                }
            },
            "number": 1,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission1630/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698776229454,
            "cdate": 1698776229454,
            "tmdate": 1700686869440,
            "mdate": 1700686869440,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "TEOa7AjBWC",
                "forum": "wtJS8YDQBc",
                "replyto": "5qK5Usdmcd",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission1630/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission1630/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Response to Reviewer yS4B(Part 1/3)"
                    },
                    "comment": {
                        "value": "We are glad that the reviewer found our work is especially relevant to real-world RL tasks and can be used with any RL algorithm. We hope to provide clarification to address the concerned issues. For the convenience of the reviewer, we reiterate the comments below.\n\n>**[Q1]**  It's unclear why breaking the end-to-end decision process into an encoding phase and a decision-making phase increases interpretability. I don't believe this claim is supported by the current experiments. The paper should clarify this contribution.\n\n**[A1]**  Information states consist of the most recently observed states and their corresponding action sequences. The SACAS method utilizes information states as decision states to design value and policy functions. When there is significant delay, the dimensionality of the action part within the information states can be much larger than that of the states themselves. The SACAS method operates as a black-box process, disregarding the mentioned issue and completing training end-to-end, with the quality depending on the neural network's capacity and parameter settings. However, in the initial phase of our experiments, the delayed state information corresponding to delayed actions is actually known. Using this information, an encoder-decoder can map the information states into a latent space. This process, unlike SACAS's end-to-end random exploration of network parameters, is more directive, compelling the model to start from a good state representation. The improved interpretability is reflected here.\n\n\n>**[Q2]**  Since DEER essentially learns a dynamics model that predicts a sequence of states given an initial state and sequence of actions, my understanding is that DEER still suffers the same drawbacks as model-based approaches.\n\n**[A2]** Model-based algorithms typically involve constructing a dynamics model through real-time interactions with the environment, followed by planning using this model. Consequently, these algorithms are often vulnerable to model and iteration errors. DEER, however, leverages existing data from delay-free environments to learn an encoder-decoder for multi-step prediction. During the decision-making phase, DEER employs the encoder's representation of input states and action sequences, termed as context representation, rather than the final state from multi-step predictions. This representation extracts decision-relevant information from the most recent observed states and action sequences, thereby mitigating sensitivity to deviations from the true state caused by model and iteration errors.\n\n>**[Q3]**  DEER seems to have an unfair advantage over the baselines in Figures 4 and 5. In particular, DEER assumes access to an offline dataset, but the baselines do not. I believe DEER could in principle train its encoder in an online fashion -- if so, then an online variant of DEER would provide a fairer comparison across algorithms.\n\n**[A3]** Due to constraints in computational resources and time, our comparative experiments were exclusively performed on the Hopper and Walker2d tasks, each configured with a delay set at 4. The online version of DEER encompasses two primary modules: an encoder-decoder and a decision-making component. Initially, the encoder-decoder network is randomly initialized, and training data is gathered during real-time interactions within the environment. The encoder-decoder is updated every 300,000 steps. Regarding the decision-making aspect, the SAC framework is employed, wherein the replay buffer stores context representations derived from the encoder's information states. The entire training duration extends to 1 million steps. The comparative results are shown in the following table:\n\n| Version of Deer | Online        | Offline       |\n|-----------------|---------------|---------------|\n| Hopper          | 751.75\u00b1623.66 | 2935.62\u00b1312   |\n| Walker2d        | 141\u00b1159.8     | 2623.14\u00b1542.8 |\n\n\n>**[Q4]** The paper should explicitly define \"augmented states. I believe \"augmented state\" refers the concatenation of state and action information, but this term makes me think of a synthetic data generated by a data augmentation function (e.g. a random cropping and recoloration of an image state).\n\n**[A4]**  Thanks for the suggestion. We replaced all \"augmented states\" with \"information states\"."
                    }
                },
                "number": 7,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission1630/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700527364451,
                "cdate": 1700527364451,
                "tmdate": 1700527813062,
                "mdate": 1700527813062,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "Qy30iDxQ0H",
                "forum": "wtJS8YDQBc",
                "replyto": "5qK5Usdmcd",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission1630/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission1630/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Response to Reviewer yS4B(Part 2/3)"
                    },
                    "comment": {
                        "value": ">**[Q5]** It would help readers if you briefly stated how Seq2Seq effectively handles delays.\n\n**[A5]**  For addressing the delay issue, the Seq2Seq model in the paper serves two purposes: encoder pretraining and policy training. In the encoder pretraining phase, the dataset from the delay-free environment is initially randomly reconstructed to create information state sets with various delay sizes and their corresponding delayed state sequence sets. Specifically, assuming time $t$ and delay $d$ where $d \\in [d_I, d_I+d_M]$, with $D=d_I+d_M$, the information state is denoted as $I_t = (s_{t-d}, a_{t-d},a_{t-d+1}, \\cdots, a_{t-1})$\uff0cand the delayed state sequence is $g_t=(s_{t-d+1}, \\cdots, s_{t-1})$.  For information states with a delay smaller than $D$, to facilitate batch training, these information states are zero-padded until their length reaches $D$. Next, a Seq2Seq encoder-decoder model is employed to predict the state based on the input information state and output the delayed state sequence. Specifically, a multi-layer perceptron encodes each element of the information state to generate corresponding embeddings. These embeddings are then fed into a GRU module to generate a hidden feature vector of a dimension determined by hyper-parameters. Finally, the Seq2Seq model is optimized using MSE loss to improve the accuracy of state sequence prediction, thereby refining the context representation of the information states. These hidden states are the ones utilized for policy learning.\nDuring the policy training phase, the agent interacts with the environment in real-time, causing the length of the information state $I_t$ to dynamically change due to delays. We employ the pretrained Seq2Seq encoder, where information states of varying lengths $I_t$ are fed into the encoder. After several iterations, the encoder extracts delayed state information and maps it to fixed-dimensional context representations. Subsequent policy training relies on these context representations rather than the original state space. Moreover, there is no need for additional adjustments to the chosen policy algorithm due to changes in delays.\n\n>**[Q6]** First line of page 2: What does \u201cdynamic environments\u201d mean?\n\n**[A6]** \u201cdynamic environments\u201d means non-deterministic environments. The corresponding sentence is revised as: While effective in deterministic environments, their adaptability in nondeterministic environments needs further improvement.\n\n>**[Q7]** What the difference between d_M and D? The seem to represent the same quantity.\n\n**[A7]** $d_I \\in Z^{+}$ denotes the intrinsic delay value resulting from long-distance transmission or heavy data transfers. Meanwhile, $d_M \\in Z^{+}$ represents the maximum number of additional dropping steps, ensuring that $d_I + d_M$ remains within the agent\u2019s capacity. The sum of these values is defined as $D = d_I + d_M$.\n\n>**[Q8]** The paper mentions the computation drawback of existing approaches. How does DEER compare computationally to the baselines considered?\n\n**[A8]** To address this inquiry, we conducted a comparative analysis of the time and performance of four algorithms\u2014DEER, RLRD, DATS, and SACAS. Specifically, within the Hopper task, a fixed delay of 4 was established, with each algorithm undergoing three runs of 1 million environmental steps using different seeds. All algorithms were executed on the same NVIDIA GeForce RTX 4090 graphics card, and the time and performance comparison are illustrated in the Table.\n| Algorithm | Time(hour)  | Scaled Return |\n|-----------|-------------|---------------|\n| DEER      | 5.771\u00b10.012 | 0.8\u00b10.11      |\n| RLRD      | 70.67\u00b10.4   | 0.85\u00b10.05     |\n| DATS      | 81.2\u00b10.087  | 0.61\u00b10.13     |\n| SACAS     | 5.01\u00b10.078  | 0.88\u00b10.03     |\n\n>**[Q9]** Modification in paper: figure 1 and 3 are essentially the same, advantage (1) seems to subsume advantage (2), the meaning of tasks involving delays\u201d and \u201cdelay issues\u201d in the Introduction,  making \u201c Offline assisted Online RL\u201d section more readable, GRU not defined at its first occurrence and last paragraph at section 4 would fit better at beginning of paragraph 2 in section.\n\n**[A9]** The aforementioned content will be updated in my newly uploaded PDF."
                    }
                },
                "number": 8,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission1630/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700528646416,
                "cdate": 1700528646416,
                "tmdate": 1700528917451,
                "mdate": 1700528917451,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "Hilg310Qmc",
                "forum": "wtJS8YDQBc",
                "replyto": "5qK5Usdmcd",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission1630/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission1630/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "Has our response sufficiently addressed your inquiries? Are there any additional problems requiring discussion? We eagerly anticipate further correspondence with you. Please let us know if there are any additional comments, questions, or concerns. Many thanks again for the invaluable hard work of all reviewers to improve our work."
                    }
                },
                "number": 15,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission1630/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700627790400,
                "cdate": 1700627790400,
                "tmdate": 1700627790400,
                "mdate": 1700627790400,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "NJJECBc1Uv",
                "forum": "wtJS8YDQBc",
                "replyto": "Hilg310Qmc",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission1630/Reviewer_yS4B"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission1630/Reviewer_yS4B"
                ],
                "content": {
                    "comment": {
                        "value": "The you for the clarifications; my and comments questions have been addressed. After reading through reviewers comments and the authors' response, I've decided to raise my score."
                    }
                },
                "number": 16,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission1630/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700686882127,
                "cdate": 1700686882127,
                "tmdate": 1700686882127,
                "mdate": 1700686882127,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "jybOiP2pjp",
            "forum": "wtJS8YDQBc",
            "replyto": "wtJS8YDQBc",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission1630/Reviewer_pa1n"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission1630/Reviewer_pa1n"
            ],
            "content": {
                "summary": {
                    "value": "This paper addresses the challenge of delays in reinforcement learning (RL) by proposing a framework, DEER (Delay-resilient Encoder-Enhanced RL), aiming to enhance interpretability and overcome random delay issues. It employs a pretrained encoder to convert delayed states and variable-length action sequences into hidden states, providing delay-free states for policy training. Empirical experiments are performed in various delayed scenarios on Gym and Mujoco to demonstrate the performance of DEER against existing RL algorithms in both constant and random delays."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "Unlike the existing methods that address delays in RL by performing state augmentation, this paper introduces a novel framework, namely, deer, to employ a pretrained encoder to encode delayed states along with their corresponding action sequences for further policy training. Delay is an important challenge facing RL in practice, the setting that this paper studies is of practical concern. To address this issue, the authors introduce Delay-resilient Encoder-Enhanced RL (DEER) which leverages an encoder pretrained on undelayed offline datasets to enhance online learning in delayed environments. This approach offers advantages such as generalizability to diverse delay environments, versatility in addressing constant and random delays without modifying the agent's structure, and improved interpretability by breaking the decision process into distinct stages. In particular,\n1. The proposed framework is able to integrate seamlessly with standard RL algorithms without additional modifications.\n2. It is effective in both constant and random delay environments, eliminating the necessity for prior knowledge of delay characteristics.\n3. Empirical studies show that equipped with SAC, it enjoys competitive efficiency and performance compared to existing state-of-the-art methods on Gym and Mujoco tasks."
                },
                "weaknesses": {
                    "value": "The proposed method relies on encoding the augmented state with embeddings. When the state space is large and high-dimensional, further augmentation can be computationally inefficient. Authors should clarify whether higher-dimension embeddings are necessary as a context representation to achieve the desired performance. It is also desirable to have experiments that assess how the performance (w.r.t. return) is affected by the size of embeddings, and whether higher-dimension yields significantly better performance. When a compact / low-dimensional embedding is used, can it still generalize well to different delay scenarios.\n\nThe current method is a direct application of the encoder-decoder framework based on Seq2Seq scheme. Algorithmically, the novelty is limited. The authors are suggested to highlight what are the technical novelties in their algorithmic framework."
                },
                "questions": {
                    "value": "The authors utilize an undelayed offline dataset to pretrain the encoder. In this case, how can it capture the delays in the embeddings of the states when deployed to the delayed environments?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 2,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission1630/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698822062989,
            "cdate": 1698822062989,
            "tmdate": 1699636091808,
            "mdate": 1699636091808,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "w5v5PqWiAG",
                "forum": "wtJS8YDQBc",
                "replyto": "jybOiP2pjp",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission1630/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission1630/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Response to Reviewer pa1n (Part 1/2)"
                    },
                    "comment": {
                        "value": "We thank the reviewer for the useful and detailed comments. In the following, we aim to address your questions and concerns. For the convenience of the reviewer, we reiterate the comments below.\n\n>**[Q1]**  The proposed method relies on encoding the augmented state with embeddings. When the state space is large and high-dimensional, further augmentation can be computationally inefficient. Authors should clarify whether higher-dimension embeddings are necessary as a context representation to achieve the desired performance. It is also desirable to have experiments that assess how the performance (w.r.t. return) is affected by the size of embeddings, and whether higher-dimension yields significantly better performance. When a compact / low-dimensional embedding is used, can it still generalize well to different delay scenarios.\n\n**[A1]** From our experimental results, mapping the information state to a higher-dimensional context representation resulted in better performance of the trained policy in delayed environments. Moreover, the improvement in performance does not have a direct proportional relationship with the increase in dimensions. In other words, higher dimensions do not necessarily yield better results. To clarify this conclusion further, we extended our experiments on the Hopper and Walker2d tasks by encoding the information state into dimensions similar to the original information state (32 and 64 dimensions) under a delay of 4. Subsequently, we employed the SAC framework and the same set of parameters for policy training. The final outcomes of the encoders with different dimensions on the Hopper and Walker2d tasks are presented in the table below.\n\n| Dimension | 32            | 64              | 128            | 256            | 512            |\n|-----------|---------------|-----------------|----------------|----------------|----------------|\n| Hopper    | 363.99\u00b119.15  | 2496.68\u00b11011.77 | 2993.60\u00b1325.07 | 2988.32\u00b1432.15 | 2413.60\u00b1562.31 |\n| Walker2d  | 607.68\u00b1392.12 | 728.15\u00b1122.54   | 1645.92\u00b1286.45 | 2289.55\u00b1968.70 | 623.75\u00b1209.45  |\n\nBased on the data in the table above, it's evident that when the dimension of DEER's pre-trained encoder is too small, such as setting it to dim=32, the encoder's capability is too weak to effectively represent delay information within the information state, resulting in decreased performance. Conversely, when the dimension of DEER's pre-trained encoder is excessively large, for instance, with dim=512, although the encoder has numerous parameters and enhanced capabilities, there is a risk of potential overfitting to the current dataset, leading to decreased performance. Moreover, as the dimension shifts from 64 to 256, the performance improves for both tasks, indicating that the representation capability of the context representation indeed influences the final outcome.\n\n>**[Q2]** The current method is a direct application of the encoder-decoder framework based on Seq2Seq scheme. Algorithmically, the novelty is limited. The authors are suggested to highlight what are the technical novelties in their algorithmic framework.\n\n**[A2]** The technical novelties in DEER are as follows:\nFirstly, DEER stands as the pioneering approach that bridges data from delay-free tasks with applications in delayed tasks. Secondly, DEER doesn't necessitate modifications to subsequent policy algorithms; it seamlessly applies existing algorithms. Lastly, although DEER utilizes a simple Seq2Seq model, context representation derived from its encoder effectively extracts delay-related information, significantly bolstering decision-making capabilities."
                    }
                },
                "number": 5,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission1630/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700512333139,
                "cdate": 1700512333139,
                "tmdate": 1700513293958,
                "mdate": 1700513293958,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "Ck3L9nOIIH",
                "forum": "wtJS8YDQBc",
                "replyto": "jybOiP2pjp",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission1630/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission1630/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Response to Reviewer pa1n (Part 2/2)"
                    },
                    "comment": {
                        "value": ">**[Q3]** The authors utilize an undelayed offline dataset to pretrain the encoder. In this case, how can it capture the delays in the embeddings of the states when deployed to the delayed environments?\n\n**[A3]** The paper only discusses communication delay within the tasks, where the misalignment between the observed states by the agent and the executed actions leads to the current delay environment. We transform delay-free offline datasets to match different delay sizes within the delayed environment. Subsequently, we employ a Seq2Seq encoder-decoder model to predict states in an autoregressive manner. The encoded information state, referred to as the context representation, is then used as the decision-making state. In the delayed environment, at time $t$, the information state is defined as $ I_t = (s_{t-d}, a_{t-d},a_{t-d+1}, \\cdots, a_{t-1}) $ with the corresponding representation as $c_t$, and the decision action as $a_t$. If the subsequent time $t+1$ observes the state $s_{t-d+1}$, the information state updates to $I_{t+1} = (s_{t-d+1}, a_{t-d+1},a_{t-d+2}, \\cdots, a_{t})$ with the corresponding representation as $c_{t+1}$. However, if the state s_{t-d+1} is not observed, the information state updates to $ I_{t+1} = (s_{t-d}, a_{t-d},a_{t-d+1}, \\cdots, a_{t}) $ with the corresponding representation as $c_{t+1}^{\u2018}$, and the decision action as $a_{t+1}$."
                    }
                },
                "number": 6,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission1630/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700513348661,
                "cdate": 1700513348661,
                "tmdate": 1700513348661,
                "mdate": 1700513348661,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "yWjbyhAtAO",
                "forum": "wtJS8YDQBc",
                "replyto": "jybOiP2pjp",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission1630/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission1630/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "Has our response sufficiently addressed your inquiries? Are there any additional problems requiring discussion? We eagerly anticipate further correspondence with you. Please let us know if there are any additional comments, questions, or concerns. Many thanks again for the invaluable hard work of all reviewers to improve our work."
                    }
                },
                "number": 14,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission1630/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700627757145,
                "cdate": 1700627757145,
                "tmdate": 1700627757145,
                "mdate": 1700627757145,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "7YS9Sx9ssr",
                "forum": "wtJS8YDQBc",
                "replyto": "jybOiP2pjp",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission1630/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission1630/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "We hope our response has satisfactorily addressed your queries and concerns. Please do not hesitate to reach out if you have any further questions or require additional clarification. We are truly grateful for the invaluable contributions made by the reviewer, which have significantly enhanced the quality of our work."
                    }
                },
                "number": 24,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission1630/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700715843068,
                "cdate": 1700715843068,
                "tmdate": 1700715843068,
                "mdate": 1700715843068,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "Ph65NXR2Tx",
            "forum": "wtJS8YDQBc",
            "replyto": "wtJS8YDQBc",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission1630/Reviewer_HvM3"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission1630/Reviewer_HvM3"
            ],
            "content": {
                "summary": {
                    "value": "This paper proposed Delay-resilient Encoder-Enhanced RL (DEER), a framework to handle delayed observations in deep RL. DEER leverages an encoder model to interpret delayed observations and actions into a latent representation space using delay-free offline experience, which aims to enhance the robustness of the encoding agains random, variant delay steps. The encoder is empowered with the Seq2Seq model by predicting delay-free observations, and the encoded latent features are used as the input for downstream model-free RL policy and critic network. The authors performed experiments on MuJoCo robotic movement tasks, where DEER outperforms previous methods. Ablation studies were also conducted. In sum, this work appears as a intereting attemptation to mitigated the difficulties in delayed RL task.\n\n\n**[Post-rebuttal]**\nI appreciate the author's repsonses. However, my concerns have not been fully addressed. E.g., there is no reply to my last comment in Weakness, and my inquiry to evaluate DEER's performance in delay=0 has not been addressed by the authors (for my comment \"DEER should also be compared with vanilla SAC in delay=0 case\"). Also, it is still not explained why DEER outperforms expert very much in the Swimmer task.\n\nOverall, I decide to maintain my original rating and I believe a comprehensive revision of the paper will be helpful to improve this work."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "- The delay problem being address in this work is important while under-explored. This work is a good attempt.\n- DEER performs well and beats existing methods in delayed RL problems.\n- The entire paper is generally well-written and easy to follow.\n- The authors performed reasonable ablation studies to address the effect of key hyper-parameters design choice"
                },
                "weaknesses": {
                    "value": "- The novelty of DEER is moderate. From my understanding, the key novelty is a framework combining \"offline-assisted online RL\" and \"Encoder in RL\". \n\n- The definition of RDDMP is quite complex and probably unrealistic. One concern is about the random delay value $z_t$ with dropping probablity $\\mu$. $z_t = d_I$ if $z_{t-1} = d_I + d_M$, which means the $d_M$ steps of delay suddenly \"disappear\".  How can this happen in reality? My suggestion is to modify it as  (this ensures that there is no sudden change of delay steps)\n\n   - $z_t = z_{t-1} - 1$ if $z_{t-1} > d_I$ and with probability $ \\mu_{catch} $\n   - $z_t = z_{t-1} + 1$ if $z_{t-1} < d_I + d_M$ and with probability $ \\mu_{lag}$\n   - $z_t = z_{t-1}$  otherwise\n\n- More implementation details should be mentioned for the baseline models (RLRD, DATS, SACAS). See the questions below.\n\n- DEER should also be compared with vanilla SAC in delay=0 case. This is important to understand the effect of pretrained encoder in deep RL and probably explain why DEER significantly outforms expert in Swimmer (Figure 4).\n\n- While the authos commented three main contributions in the end of Introduction, they seems the same thing for me -- \"We propose a framework which enhances agent performance in delayed RL tasks\".\n\n## Minor\n\n- Fonts are too small in Figure 3. I cannot recognize the subscripts on the printed paper.\n- Figure 6, 7 etc. could be more clear with different linestyles in addition to colors for color-blind-friendly visualization.\n- A table summarizing the numerical reults (including the converged task return of each task and average performance of all tasks) could help the readers get easier access to the empirical results.\n- A typo in the title \"resillient\""
                },
                "questions": {
                    "value": "- How did the authos obtain the result of the baseline models? E.g., DATS used less training samples (environmental steps) than 1e6 in their paper. Also, How many steps of actions are augmented in the state in SACAS? What are the hyperparameters and how did the authors selected them?\n\n- In the end of the first paragraph, it was mentioned minor delays markedly amplifies the risk in self-driving. Is there any reference? Following this question, are there more examples (better with data) of practical scenarios that suffers heavily from delays?\n\n- Why the performance of DEER is sensitive to dimension of latent representation? In particular, why dim=512 results in significantly worse performance in Walker2D (Figure 6)? My expectation is large dimension should work better or similar. A potentially related work is (Ota et al. 2020)\n\nOverall, the being touched problem, i.e., delay in deep RL is a quite important problem and the efforts toward solving this problem should be valuable contribution to the deep learning and robotics community. While there are some tacts in the current version of the manuscript. I am happy to discuss with the authors and will increase my score if my concerns are well addressed.\n\n\n### REF\n- Ota K, Oiki T, Jha D, et al. Can increasing input dimensionality improve deep reinforcement learning?[C]//International conference on machine learning. PMLR, 2020: 7424-7433."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "5: You are absolutely certain about your assessment. You are very familiar with the related work and checked the math/other details carefully."
                },
                "code_of_conduct": {
                    "value": "Yes"
                },
                "first_time_reviewer": {
                    "readers": [
                        "ICLR.cc/2024/Conference/Program_Chairs",
                        "ICLR.cc/2024/Conference/Submission1630/Senior_Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission1630/Area_Chairs",
                        "ICLR.cc/2024/Conference/Submission1630/Reviewer_HvM3"
                    ]
                }
            },
            "number": 3,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission1630/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698841026559,
            "cdate": 1698841026559,
            "tmdate": 1700983122885,
            "mdate": 1700983122885,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "4S9bQZlZ8Z",
                "forum": "wtJS8YDQBc",
                "replyto": "Ph65NXR2Tx",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission1630/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission1630/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Response to  Reviewer HvM3 (Part 1/3)"
                    },
                    "comment": {
                        "value": "We are glad that the reviewer found our work important and thoght it was a good attempt. We hope to provide clarification to address the concerned issues. For the convenience of the reviewer, we reiterate the comments below.\n\n>**[Q1]**  The novelty of DEER is moderate. From my understanding, the key novelty is a framework combining \"offline-assisted online RL\" and \"Encoder in RL\".\n\n**[A1]** The reviewer has indeed grasped the core concept of the DEER method. However, summarizing DEER as a mere fusion of \"offline-assisted online RL\" and \"Encoder in RL\" is somewhat simplistic. Firstly, DEER stands as the pioneering approach that bridges data from delay-free tasks with applications in delayed tasks. Secondly, DEER doesn't necessitate modifications to subsequent policy algorithms; it seamlessly applies existing algorithms. Lastly, although DEER utilizes a simple Seq2Seq model, context representation derived from its encoder  effectively extracts delay-related information, significantly bolstering decision-making capabilities.\n\n>**[Q2]** The definition of RDDMP is quite complex and probably unrealistic. One concern is about the random delay value $z_t$  with dropping probablity $\\mu$. $z_t=d_I$ if $z_{t-1}=d_I+d_M$. which means the $d_M$ steps of delay suddenly \"disappear\". How can this happen in reality? My suggestion is to modify it in another formation.\n\n**[A2]** The reviewer's statement is accurate. In our defined scenario, when the cumulative count of consecutive frame drops reaches $d_M$, it resets. There are two perspectives to explain this setup:\n1.The probability of dropping frames, $\\mu$, for each instance, compounded over $d_M$ consecutive drops, equates to $d_M^{\\mu}$. This value tends to be relatively small, signifying that it is an infrequent occurrence.\n2.In real-world scenarios, when an agent encounters $d_M$ consecutive instances of not receiving a state, it surpasses the agent's capacity to handle delay. Hence, it necessitates the remote end to ensure the appearance of the next state.\nThe proposed scenario by the reviewer is indeed more reasonable but requires a slight modification: when the agent observes the returned state, the current delay reverts to $d_I$, representing the intrinsic delay value resulting from long-distance transmission or heavy data transfers. Hence, $z_t = d_I$ if $z_{t-1} > d_I$ with a probability of $\\mu_{catch}$. Based on this stochastic delay setting, we compared four algorithms (DEER, RLRD, DATS, SACAS) in the Hopper and Walker2d tasks, setting $d_I=2$, $d_M=4$, and $\\mu=0.2, 0.4, 0.6$. Each algorithm was experimented with three different random seeds for 1 million environment steps in each environment configuration. The comparative results are shown below.\n\n| Tasks($\\mu=0.2$) | DEER            | RLRD           | DATS            | SACAS        |\n|----------------|-----------------|----------------|-----------------|--------------|\n| Hopper         | 2583.90\u00b1915.03  | 2391.16\u00b1473.86 | -1064.50\u00b1426.87 | 820.94\u00b115.58 |\n| Walker2d       | 3940.05\u00b11539.67 | 3013.65\u00b1571.69 | -1196.97\u00b1418.48 | 670.84\u00b174.90 |\n|                |                 |                |                 |              |\n\n| Tasks($\\mu=0.4$) | DEER            | RLRD           | DATS            | SACAS        |\n|----------------|-----------------|----------------|-----------------|--------------|\n| Hopper         | 2542.54\u00b1960.73  | 1609.96\u00b1403.12 | -754.47\u00b1225.30  | 609.33\u00b115.80 |\n| Walker2d       | 4247.60\u00b11441.24 | 2062.80\u00b1198.73 | -1237.48\u00b1350.60 | 518.13\u00b147.12 |\n|                |                 |                |                 |              |\n\n| Tasks($\\mu=0.6$) | DEER            | RLRD          | DATS           | SACAS        |\n|----------------|-----------------|---------------|----------------|--------------|\n| Hopper         | 2129.59\u00b1995.17  | 638.93\u00b1230.15 | -735.94\u00b1197.38 | 398.93\u00b148.83 |\n| Walker2d       | 2578.52\u00b11614.18 | 908.23\u00b1222.47 | -672.75\u00b1238.66 | 360.65\u00b128.46 |\n|                |                 |               |                |              |\n\nFrom the table above, it's evident that even under the requested random delay settings by the reviewer, the performance of DEER significantly surpasses other algorithms (although there might be instances where it closely aligns with RLRD scores). This underscores the significance of state representation in decision-making, further emphasizing that the pre-trained encoder in the DEER algorithm indeed extracts delay-related information from the information state.\n\n\n>**[Q3]** DEER should also be compared with vanilla SAC in delay=0 case. This is important to understand the effect of pretrained encoder in deep RL and probably explain why DEER significantly outforms expert in Swimmer.\n\n**[A3]** Whether in fixed or random delay settings, the legend labeled \"Expert\" in the graph corresponds to the performance of vanilla SAC trained with delay=0, as depicted in the Figure 4 and Figure 5 ."
                    }
                },
                "number": 2,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission1630/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700507618427,
                "cdate": 1700507618427,
                "tmdate": 1700513055170,
                "mdate": 1700513055170,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "vgMa1aR2QL",
                "forum": "wtJS8YDQBc",
                "replyto": "Ph65NXR2Tx",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission1630/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission1630/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Response to Reviewer HvM3 (Part 2/3)"
                    },
                    "comment": {
                        "value": ">**[Q4]**  How did the authos obtain the result of the baseline models? E.g., DATS used less training samples (environmental steps) than 1e6 in their paper. Also, How many steps of actions are augmented in the state in SACAS? What are the hyperparameters and how did the authors selected them?\n\n**[A4]** DATS uses fewer training samples, but during training, the probabilistic ensemble network in the dynamics part and the sampling method in the planning part can lead to an increase in the wall-clock time. Moreover, from the results of experiments with random delays, there is a moderate improvement in the final performance with increased steps in the experiments. The code repository for DATS can be found at [1], using default parameters. However, to reach 1 million environment steps, adjustments were made for the number of training instances based on the maximum steps per episode for different tasks: 1000 iterations for ant, halfcheetah, hopper, swimmer, and walker2d, while reacher was set to 20000 iterations.\nRLRD has high sample utilization but takes more time when converting eligible offline trajectory segments into current policy segments. The code repository for RLRD can be found at [2], using default parameters.\nSACAS is derived from the SAC algorithm, with the code available at [3], using default parameters. In cases where the environment encounters a fixed delay $d$, we modified the input dimensions of the SAC policy network and value function network to be the sum of the dimensions of the original state space |S| and the original action space |A| scaled by the delay $d$, denoted as |S| + d|A|. When the environment encounters a random delay $z_t$, we modified the input dimensions of the SAC policy network and value function network to be the sum of the dimensions of the original state space |S| and the maximum delay |$d_I+d_M$| times the action dimensions |A|, expressed as |S| + |$d_I+d_M$||A|.\n\n>**[Q5]** In the end of the first paragraph, it was mentioned minor delays markedly amplifies the risk in self-driving. Is there any reference? Following this question, are there more examples (better with data) of practical scenarios that suffers heavily from delays?\n\n**[A5]** In the '5G + Intelligent Transportation' series white paper (link provided below [4]), clear indicators are specified for the latency requirements in four scenarios of intelligent driving, as detailed below:\nScenario\tAssisted Driving\tRemote Driving\tAutonomous Driving\tVehicle Convoy\n\n| Scenario             | Assisted Driving                             | Remote Driving | Autonomous Driving | Vehicle Convoy   |\n|----------------------|----------------------------------------------|----------------|--------------------|------------------|\n| Maximum Latency (ms) | 20ms/100ms\uff08V2V\uff09 100ms\uff08V2I\uff09 1000ms\uff08V2N\uff09 | 20ms           | 3ms-100ms          | 10ms-25ms        |\n|                      |                                              |                |                    |                  |\n\nAdditionally, in literature [5], practical observations indicate a delay of 0.2 to 0.5 seconds between steering signals from the vehicle's computer and the actual steering wheel operation. While the vehicle remains in motion, this leads to substantial deviations in path tracking, potentially resulting in a loss of control when traveling at high speeds. Furthermore, literature [6] notes that hydraulic vehicle braking systems typically require over 0.4 seconds to achieve the necessary deceleration, significantly impacting the planning and control modules of Connected and Autonomous Vehicles (CAVs).\nIn various other domains such as control of robotic systems [7], distributed computing [8], and management of traffic networks [9], delays have demonstrated adverse effects on the performance of corresponding intelligent agents.\"\n\n**Reference**\n\n[1] https://github.com/baimingc/dambrl\n\n[2] https://github.com/rmst/rlrd\n\n[3] https://github.com/pranz24/pytorch-soft-actor-critic\n\n[4]http://13115299.s21d-13.faiusrd.com/0/1/ABUIABA9GAAglcTHjQYojIWZswY.pdf?f=%E4%B8%AD%E5%9B%BD%E8%81%94%E9%80%9A5G+%E8%BD%A6%E8%BD%BD%E5%AE%9A%E5%88%B6%E5%8C%96%E6%A8%A1%E7%BB%84+%E7%99%BD%E7%9A%AE%E4%B9%A62019.pdf&v=1639047701\n\n[5]\u8d75\u5efa\u8f89, \u9ad8\u6d2a\u6ce2, \u5f20\u65b0\u94b0, \u7b49. \u57fa\u4e8e\u65f6\u95f4\u5ef6\u8fdf\u52a8\u6001\u9884\u6d4b\u7684\u81ea\u52a8\u9a7e\u9a76\u63a7\u5236[J]. 2018.\n\n[6]Bayan, Fawzi P., et al. \"Brake timing measurements for a tractor-semitrailer under emergency braking.\" SAE International Journal of Commercial Vehicles 2.2009-01-2918 (2009): 245-255.\n\n[7]Imaida, Takashi, et al. \"Ground-space bilateral teleoperation of ETS-VII robot arm by direct bilateral coupling under 7-s time delay condition.\" IEEE Transactions on Robotics and Automation 20.3 (2004): 499-511.\n\n[8]Hannah, Robert, and Wotao Yin. \"On unbounded delays in asynchronous parallel fixed-point algorithms.\" Journal of Scientific Computing 76 (2018): 299-326.\n\n[9]Dollevoet, Twan, et al. \"Delay propagation and delay management in transportation networks.\" Handbook of Optimization in the Railway Industry (2018): 285-317."
                    }
                },
                "number": 3,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission1630/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700508175016,
                "cdate": 1700508175016,
                "tmdate": 1700513101837,
                "mdate": 1700513101837,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "UgUnfPT9td",
                "forum": "wtJS8YDQBc",
                "replyto": "Ph65NXR2Tx",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission1630/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission1630/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Response to  Reviewer HvM3 (Part 3/3)"
                    },
                    "comment": {
                        "value": ">**[Q6]** Why the performance of DEER is sensitive to dimension of latent representation? In particular, why dim=512 results in significantly worse performance in Walker2D (Figure 6)? My expectation is large dimension should work better or similar.\n\n**[A6]** The context representations are obtained by encoding the information states through a pre-trained encoder, capable of depicting delayed state information, thus their quality significantly impacts the final performance of the algorithm. The dimensionality reflects the representational capacity of the context representation, making DEER sensitive to dimensions. In the literature mentioned by the reviewer, OFENet explicitly highlights that simply increasing the dimensionality of the decision space doesn\u2019t necessarily lead to improved final performance, as performance is also influenced by network architecture design, regularization, and auxiliary task design. DEER conducts pre-training before policy training, and the encoder structure remains unchanged throughout the subsequent process, differing from OFENet's update framework. Additionally, in the walker2d task, a decrease in performance is observed with 512 dimensions, likely due to overfitting during the encoding and decoding in the pre-training phase.\n\n>**[Q7]** Minor: including the size of font in Figure 3, the color of linestyle in Figure 6 and Figure 7, a table summarizing the numerical reults and A typo in the title \"resillient\".\n\n**[A7]** The aforementioned content will be updated in my newly uploaded PDF."
                    }
                },
                "number": 4,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission1630/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700508723102,
                "cdate": 1700508723102,
                "tmdate": 1700513156809,
                "mdate": 1700513156809,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "wUH8DvNBQi",
                "forum": "wtJS8YDQBc",
                "replyto": "Ph65NXR2Tx",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission1630/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission1630/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "Has our response sufficiently addressed your inquiries? Are there any additional problems requiring discussion? We eagerly anticipate further correspondence with you. Please let us know if there are any additional comments, questions, or concerns. Many thanks again for the invaluable hard work of all reviewers to improve our work."
                    }
                },
                "number": 13,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission1630/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700627737339,
                "cdate": 1700627737339,
                "tmdate": 1700627737339,
                "mdate": 1700627737339,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "wTNKj1Twwg",
                "forum": "wtJS8YDQBc",
                "replyto": "Ph65NXR2Tx",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission1630/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission1630/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "In **[A1]**, we revisited and elaborated on our innovations. Within **[A2]**, under the random delay setup suggested by the reviewer, we conducted diverse algorithmic comparisons on Hopper and Walker2d. **[A3]** delineates the comparison between DEER and vanilla SAC. **[A4]** explicates the application specifics of the Baseline method. **[A5]** illustrates the hazards of delays in real-world scenarios. **[A6]** analyzes the reasons behind DEER's sensitivity to dimensions. We've also updated the graphs and charts in the newly uploaded PDF. We sincerely look forward to engaging in further discussions with you."
                    }
                },
                "number": 20,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission1630/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700702714508,
                "cdate": 1700702714508,
                "tmdate": 1700703117350,
                "mdate": 1700703117350,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "3EWYjEGG5e",
                "forum": "wtJS8YDQBc",
                "replyto": "Ph65NXR2Tx",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission1630/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission1630/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "We hope our response has satisfactorily addressed your queries and concerns. Please do not hesitate to reach out if you have any further questions or require additional clarification. We are truly grateful for the invaluable contributions made by the reviewer, which have significantly enhanced the quality of our work."
                    }
                },
                "number": 22,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission1630/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700715686610,
                "cdate": 1700715686610,
                "tmdate": 1700715686610,
                "mdate": 1700715686610,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "KQhssSkSFb",
            "forum": "wtJS8YDQBc",
            "replyto": "wtJS8YDQBc",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission1630/Reviewer_b2a3"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission1630/Reviewer_b2a3"
            ],
            "content": {
                "summary": {
                    "value": "This paper targets a kind of decision-making task with delays. To this end, the authors propose Delay-resilient Encoder-Enhanced (DEER) RL, in which a Seq2seq model taking the delayed state and subsequent action sequence as inputs and the corresponding state sequence as outputs is trained using the offline dataset. Then, this model provides hidden vector encoding information without delay during the online stage. DEER can handle random delay length and has fixed a hidden dimension. DEER is tested on Mujoco benchmark and shows superior performance."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "4 excellent"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "Tasks with delay often exist in practical scenarios, so it is valuable to propose effective methods for them. Overall, the general idea behind DEER is simple and clear. Leveraging a pretrained model from offline dataset to provide information without delay during the online stage is reasonable. DEER shows stronger performance than compared baselines. The presentation in this paper is pretty good."
                },
                "weaknesses": {
                    "value": "Experiments can be improved in the following aspects.\n- Currently no baselines use the offline dataset, but DEER uses offline data to train the seq2seq model. Some offline-to-online methods should be included as baselines.\n- Offline dataset\u2019s influence on the model performance is not discussed and analyzed. Offline dataset plays a critical role in DEER, so it should be analyzed. \n\nSome shortcomings of previous methods, like inference time, model precision and cumulative errors also exist in DEER. DEER uses an RNN which is not very efficient in terms of the inference time. RNN also has cumulative errors. Except for using more data (the offline dataset), why is DEER more effective than previous methods?"
                },
                "questions": {
                    "value": "Why does pretrained encoder have a very specific requirement (generated by a random policy along with a few expert trajectories) on the offline trajectories?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 4,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission1630/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698933668796,
            "cdate": 1698933668796,
            "tmdate": 1699636091677,
            "mdate": 1699636091677,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "fPntWvtkO2",
                "forum": "wtJS8YDQBc",
                "replyto": "KQhssSkSFb",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission1630/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission1630/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "We are glad that the reviewer characterized our work as \u201cclear\u201d and \u201creasonable\u201d. We thank the reviewer for the useful and detailed comments. In the following, we aim to address your questions and concerns. For the convenience of the reviewer, we reiterate the comments below.\n>**[Q1]** Currently no baselines use the offline dataset, but DEER uses offline data to train the seq2seq model. Some offline-to-online methods should be included as baselines.\n\n **[A1]**  In response to the reviewer's inquiry, we undertook a comparison between the state-of-the-art algorithms PEX [1] and DEER. PEX's core approach involves initially learning a policy from an offline dataset, utilizing this learned policy as a candidate. Subsequently, another policy takes charge of further learning. Both policies interact with the environment in an adaptable manner. While training the offline policy, PEX requires reward information to guide its learning, in addition to states and actions. In contrast, DEER only relies on states and actions.\n\nWithin the MuJoCo environment, we conducted policy training using PEX across six continuous tasks (Ant, HalfCheetah, Hopper, Reacher, Swimmer, and Walker2d), incorporating delays of 1, 2, 4, 6, and 8. Each scenario underwent experimentation using three different seeds. The offline policy training dataset for PEX aligns with that of DEER. Offline policies for various tasks were trained over a day. ~~Presently, the online training has persisted for two and a half days, set to conclude tonight. The comparative results between PEX and DEER will be updated here upon completion of the training.~~ The training outcomes for the Ant, Hopper,  Walker2d, and **HalfCheetah** tasks have been updated. The comparison between the training results of PEX and DEER for these three tasks is shown in the table below.\n\n|    Delay    |   1   |      |   2  |      |   4  |       |   6  |      |   8  |      |\n|:-----------:|:-----:|:----:|:----:|:----:|:----:|:-----:|:----:|:----:|:----:|:----:|\n|  Algorithm  |  DEER |  PEX | DEER |  PEX | DEER |  PEX  | DEER |  PEX | DEER |  PEX |\n|     Ant     |  4636 |  165 | 2903 |  111 | 2574 | 179.9 | 1653 |  314 | 1072 |  182 |\n|    Hopper   |  2484 |  8.6 | 3096 |  6.9 | 2918 |  7.7  | 2565 |  6.5 | 2462 |  7.1 |\n|   Walker2d  |  5411 | -5.1 | 4783 | -4.8 | 4119 |  1.6  | 3546 | -4.8 | 3074 | -4.5 |\n| HalfCheetah | 11971 | 1315 | 9352 | 1058 | 5780 |  1038 | 3853 |  957 | 2924 |  860 |\n\nAnalysis of the data in the table indicates that the final training outcome of PEX closely resembles that of an agent employing a random strategy. The subpar performance is likely associated with the utilized offline dataset, primarily constituted by a significant majority of random trajectories alongside a limited number of expert trajectories. This composition within the offline data has resulted in PEX learning a strategy leaning towards randomness.\n\n\n>**[Q2]** Why does pretrained encoder have a very specific requirement (generated by a random policy along with a few expert trajectories) on the offline trajectories?  Offline dataset\u2019s influence on the model performance is not discussed and analyzed. Offline dataset plays a critical role in DEER, so it should be analyzed.\n\n**[A2]** The reason behind structuring the offline dataset for pre-training the encoder to include a substantial amount of random trajectories and a few expert trajectories in the delay-free environment is to reflect a more realistic scenario, where random trajectories are predominant while expert trajectories are comparatively scarce. To address the reviewer's inquiry regarding the impact of the offline dataset on the model, we introduced two additional types of offline datasets in the Hopper and Walker2d tasks, both with a delay of 4: one composed entirely of random trajectories and the other exclusively of expert trajectories. The subsequent policy training procedures align with DEER's methodology. The comparative outcomes from training with these three distinct offline datasets are presented in the table below.\n\n| Offline datasets (different kinds of trajectories) | Random         | Large random and few expert | Expert         |\n|----------------------------------------------------|----------------|-----------------------------|----------------|\n| Hopper                                             | 2943.56\u00b1891.35 | 2988.32\u00b1432.15              | 3068.09\u00b1617.05 |\n| Walker2d                                           | 405.98\u00b1110.6   | 2289.55\u00b1968.70              | 510.67\u00b195.25   |\n|                                                    |                |                             |                |\n\nThe experimental results from the Walker2d task in the table reveal an intriguing aspect: the quantity of expert trajectories doesn't directly correlate with superior final results. Essentially, the efficacy of DEER's pre-trained encoder seems to hinge closely on the distribution of state transitions within the provided dataset."
                    },
                    "title": {
                        "value": "Response to Reviewer b2a3 (Part 1/2)"
                    }
                },
                "number": 1,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission1630/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700503443899,
                "cdate": 1700503443899,
                "tmdate": 1700699839304,
                "mdate": 1700699839304,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "6qHJau9VaX",
                "forum": "wtJS8YDQBc",
                "replyto": "KQhssSkSFb",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission1630/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission1630/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "Has our response sufficiently addressed your inquiries? \nAre there any additional problems requiring discussion? \nWe eagerly anticipate further correspondence with you.\nPlease let us know if there are any additional comments, questions, or concerns. \nMany thanks again for the invaluable hard work of all reviewers to improve our work."
                    }
                },
                "number": 12,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission1630/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700627704336,
                "cdate": 1700627704336,
                "tmdate": 1700627704336,
                "mdate": 1700627704336,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "Al0oph9ZLh",
                "forum": "wtJS8YDQBc",
                "replyto": "KQhssSkSFb",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission1630/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission1630/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "We hope our response has satisfactorily addressed your queries and concerns. Please do not hesitate to reach out if you have any further questions or require additional clarification. We are truly grateful for the invaluable contributions made by the reviewer, which have significantly enhanced the quality of our work."
                    }
                },
                "number": 23,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission1630/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700715799791,
                "cdate": 1700715799791,
                "tmdate": 1700715799791,
                "mdate": 1700715799791,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    }
]