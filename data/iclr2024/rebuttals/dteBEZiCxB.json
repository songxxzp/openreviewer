[
    {
        "title": "Necessary and Sufficient Watermark for Large Language Models"
    },
    {
        "review": {
            "id": "StrLqfWEbn",
            "forum": "dteBEZiCxB",
            "replyto": "dteBEZiCxB",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission2258/Reviewer_kQfc"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission2258/Reviewer_kQfc"
            ],
            "content": {
                "summary": {
                    "value": "The manuscript delineates the introduction of a Necessary and Sufficient (NS) Watermark, advancing the optimization constraints integral to the formerly introduced Hard watermark. Empirical scrutiny validates that the new watermark upholds the integrity of text quality, ensuring no discernible degradation."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "1 poor"
                },
                "strengths": {
                    "value": "The comprehensiveness of the experiments underlines the efficacy of the NS algorithm proposed."
                },
                "weaknesses": {
                    "value": "Major Concerns:\n\nPredominantly, there is apprehension regarding the foundational framework of the NS watermark, which is an extension of the Hard watermark as discussed in [1]. The predecessor watermark manifests suboptimal performance particularly in scenarios involving low entropy sentences, characterized by an initial sequence of tokens that heavily influences subsequent ones. This limitation is addressed superficially through the hard red list rule, simply by precluding the language model from generating such sequences. Should the NS watermark inherit this rule, it would ostensibly undermine the integrity of low entropy sentence generation, thereby standing in contradiction to the authors' assurance of preserved text quality.\n\nThe second concern pertains to the optimization schema posited in the study. The assertion that the Hard watermark adheres to optimization problem (3) is contested by the operational reality of Large Language Models (LLMs), which employ an autoregressive mechanism, incorporating stochastic elements such as temperature adjustments, beam searches, and top-k selections, rather than strictly maximizing token probability in alignment with the language models. This discrepancy casts doubt on the theoretical soundness of the NS watermark's conceptual underpinnings.\n\nMinor Concerns:\n\nThere is an implication that the robustness of the watermark is compromised to enhance text quality. Despite the provision to manipulate parameters $\\gamma$ and $\\beta$ within the optimization constraints to bolster robustness, the resilience of the proposed scheme does not rival that of [1].\n\nDiscrepancies are evident in Table 1, showcasing a discernible decline in the BLEU score when comparing NS watermark implementations with those devoid of watermarks. This observation counters the assertion of non-degraded text quality through NS watermarking. The absence of a theoretical exposition on the NS watermark\u2019s impact on text quality further weakens the claim, indicating that the empirical data presented may not suffice to substantiate the purported benefits of NS watermarking.\n\n[1] A watermark for large language models. Kirchenbauer et al."
                },
                "questions": {
                    "value": "It is surprising that Soft-Watermark [1] has such a low BLEU score in the machine translation task. According the result reported in [1], the perplexity will not degrade too much when beam search is applied. This raises inquiries regarding whether the optimal experimental conditions were enlisted for the Soft watermark in the experiment."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "3: reject, not good enough"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 1,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission2258/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1697979838571,
            "cdate": 1697979838571,
            "tmdate": 1699636159026,
            "mdate": 1699636159026,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "TAog7RO6b5",
                "forum": "dteBEZiCxB",
                "replyto": "StrLqfWEbn",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission2258/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission2258/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Reply to kQfc"
                    },
                    "comment": {
                        "value": "> Predominantly, there is apprehension regarding the foundational framework of the NS watermark, which is an extension of the Hard watermark as discussed in [1]. The predecessor watermark manifests suboptimal performance particularly in scenarios involving low entropy sentences, characterized by an initial sequence of tokens that heavily influences subsequent ones. [...]\n\nWe assume that the reviewer criticizes the NS-Watermark from the point that the prior works, such as [2], showed that inserting watermarks into low-entropy texts may degrade the text quality.\nHowever, our work studied the watermarking methods from different points of view\nand focused on the minimum constraints for watermarked texts to be distinguishable.\nSpecifically, we found that the minimum constraints for watermarked texts to be distinguishable can be relaxed when the generated texts are long (see Eq. (4))\nand proposed a novel watermarking method that suppresses text quality degradation by imposing a minimum constraint on the generated text based on the text length.\nThe NS-Watermark is the first watermarking method that reduces text quality degradation by focusing on the length of generated texts.\nWe agree that considering the effect of low/high-entropy texts is important, but the discussion on low/high-entropy texts and the minimum constraints of watermarks discussed in our study are different and orthogonal.\n\n> The second concern pertains to the optimization schema posited in the study. The assertion that the Hard watermark adheres to optimization problem (3) is contested by the operational reality of Large Language Models (LLMs), which employ an autoregressive mechanism, incorporating stochastic elements such as temperature adjustments, beam searches, and top-k selections, rather than strictly maximizing token probability in alignment with the language models. [...]\n\nWe only showed the results when the beam search is used for decoding, but it is easy to extend Alg. 1 to other decoding methods (e.g., top-k sampling) as in the Soft-Watermark.\n\n> There is an implication that the robustness of the watermark is compromised to enhance text quality. Despite the provision to manipulate parameters $\\gamma$ and $\\beta$  within the optimization constraints to bolster robustness, the resilience of the proposed scheme does not rival that of [1].\n\nGenerally speaking, there exists a trade-off between text quality and the robustness of watermarks against post-editing.\nThe Soft-Watermark controls this trade-off by tuning the hyperparameters, \nbut as shown in our experiments, the Soft-Watermark cannot change the ratio of green words according to the text length, \ninserts more than the required number of green words in the generated texts, and degrade the text quality more than unnecessary.\nIn contrast, when the level of robustness to be achieved is given by $\\beta$, \nthe NS-Watermark can minimize the degradation of text quality under the conditions that it achieves the given level of robustness, \nwhich is the main advantage of the NS-Watermark over the Soft-Watermark.\n\n>  Discrepancies are evident in Table 1, showcasing a discernible decline in the BLEU score when comparing NS watermark implementations with those devoid of watermarks. This observation counters the assertion of non-degraded text quality through NS watermarking. [...]\n\nWe will replace the phrase \"watermarking methods without degrading the text quality'' with \"watermarking methods that minimize the degradation of text quality'' in the revised manuscript.\n\n> It is surprising that Soft-Watermark [1] has such a low BLEU score in the machine translation task. According the result reported in [1], the perplexity will not degrade too much when beam search is applied. [...]}\n\nOne of the reasons why the quality of texts generated by the Soft-Watermark shown in our experiments is much worse than that reported in [1] is that the experimental settings are different.\n[1] showed the results of generated texts of length $200 \\pm 5 $ (see page 6, Fig. 2, and Table 2 in [1]), whereas we provide the results of all generated texts, which contain both long and short texts.\n\nThe main drawback of the Soft-Watermark is that the Soft-Watermark cannot change the ratio of green words.\nAs shown in Fig. 3, the number of green words in texts generated by the Soft-Watermark increases linearly for the text length, and the Soft-Watermark inserts too many green words when the generated texts are long and degrades text quality more than necessary.\n\nFor these reasons, the results of the Soft-Watermark shown in our experiments are much worse than those shown in [1], which motivates us to propose the NS-Watermark that can change the ratio of green words according to text length in this study.\n\n\n### Reference\n[1] Kirchenbauer et al., ICML 2023, A Watermark for Large Language Models\n\n[2] Kuditipudi et. al., arXiv 2023, Robust Distortion-free Watermarks for Language Models"
                    }
                },
                "number": 6,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission2258/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700643620970,
                "cdate": 1700643620970,
                "tmdate": 1700643620970,
                "mdate": 1700643620970,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "8N2nt1Hv0v",
            "forum": "dteBEZiCxB",
            "replyto": "dteBEZiCxB",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission2258/Reviewer_yeCE"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission2258/Reviewer_yeCE"
            ],
            "content": {
                "summary": {
                    "value": "Recent work [1] has successfully detected texts generated by LLM through the injection of watermarks, however, this method significantly degraded the text quality. In this paper, the authors propose a novel method for watermarking generated texts, termed the \u201cNecessary and Sufficient Watermark\u201d (NS-Watermark). From the observations that prior work [1] overly constrained the text generation, especially on long texts, this paper relaxes the constraints such that the text quality and detection accuracy are ensured. The authors formulate the NS-Watermark as a constrained optimization problem and introduce an efficient algorithm to solve it. The empirical results demonstrate the effectiveness of the proposed method."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "- This work models the watermarking problem as a constrained optimization problem and then solve it by combining dynamic programming and beam search. The authors also proposed an approximation method to reduce the complexity.\n- The proposed method demonstrates superior performance compared to the baselines\n- The paper is effectively structured and exhibits clear and concise writing"
                },
                "weaknesses": {
                    "value": "- Since NS-Watermark requires solving constrained optimization, although the authors did mention the running time in Appendix D.1, how expensive it is against baselines are missing.\n- The proposed algorithms depend on the beam search. However, in the experiment, the authors only use one beam size (k = 1).\n- It is not clear to me how NS-Watermark robust to attacks. For example, NS-Watermark might be removed by simply adding a list of red words?"
                },
                "questions": {
                    "value": "1. Why the authors only select a set of small $\\gamma$? What happens with larger $\\gamma$ ( > 0.1) since in [1], they measured the z-score with values of $\\gamma$ varies from 0.1 to 0.9. Whether or not it is because lower $\\gamma$s enhance the model performance?. Based on equation 2, If $\\gamma$ is small, the z-score will significantly increase. Then, Soft-Watermark with high $\\delta$ can produce high z-score without sacrificing the text quality? Is it still true to keep the same Z threshold? Please correct me if I misunderstood.\n2. How does NS-Watermark compare to Soft-watermark in terms of inference time? In equation 7, the approximated NS-watermark need to generate the text without watermark first, and then solve the constrain optimization problem. Besides, the beam size $k$ and $\\alpha$ significantly affect the running time.\n3. In the case of robustness, making WS-Watermark more robust with post-editing decreases the performance of model substantially. For example, in figure 5a, when $\\beta$ \u2265 0.1 the PPL \u2265 3 which is higher than Adaptive Soft-watermark in Table 2. Similar behaviors with Translation task in figure 5b."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 2,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission2258/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698852239686,
            "cdate": 1698852239686,
            "tmdate": 1699636158961,
            "mdate": 1699636158961,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "7q0Zas2MkF",
                "forum": "dteBEZiCxB",
                "replyto": "8N2nt1Hv0v",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission2258/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission2258/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Reply to yeCE"
                    },
                    "comment": {
                        "value": "> Why the authors only select a set of small $\\gamma$? What happens with larger $\\gamma$ ( $> 0.1$) since in [1], they measured the z-score with values of $\\gamma$ varies from 0.1 to 0.9. Whether or not it is because lower $\\gamma$s enhance the model performance?. Based on equation 2, If $\\gamma$ is small, the z-score will significantly increase. Then, Soft-Watermark with high $\\delta$ can produce high z-score without sacrificing the text quality? Is it still true to keep the same Z threshold? Please correct me if I misunderstood.\n\nOne of the reasons why $\\gamma$ tuned by grid search is different from the one in [1] is that the experimental settings are different.\n[1] showed the results of generated texts of length $200 \\pm 5 $ (see page 6, Fig. 2, and Table 2 in [1]), whereas we provide the results of all generated texts, which contain both long and short texts.\nWhen $\\gamma$ is large, the z-scores short texts do not exceed the thresholds even if all words contained texts are green words (see Eq. (4)).\nSpecifically, texts with lengths shorter than $\\tfrac{\\gamma Z^2}{1 - \\gamma}+1$ cannot exceed the threshold $Z$ even if all words are green.\nThus, $\\gamma$ selected in our experiments is smaller than the one in [1], especially in machine translation tasks where generated texts are relatively short (see Figs. 2 and 3).\n\nIn our experiments, the hyperparameters of the Soft-Watermark are tuned by the grid search.\nThen, the Soft-Watermark achieved the best BLUE scores when $(\\gamma, \\delta) = (0.01, 8)$ in machine translation tasks\nand $(\\gamma, \\delta) = (0.1, 6)$ in natural language generation tasks.\nThus, by extending the search space of $\\gamma$ in the grid search, \nthe PPL scores in Table 2 may be increased, but the BLUE scores in Table 1 would not.\n\n> How does NS-Watermark compare to Soft-watermark in terms of inference time? In equation 7, the approximated NS-watermark need to generate the text without watermark first, and then solve the constrain optimization problem. Besides, the beam size $k$ and $\\alpha$ significantly affect the running time.}\n\nThe time complexity of the Soft-Watermark is $\\mathcal{O}(k T_{\\text{max}})$, whereas the time complexity of the NS-Watermark is $\\mathcal{O}(\\alpha k T_{\\text{max}})$,\nwhere $k$ is the beam size, $T_{\\text{max}}$ is the maximum number of words, and $\\alpha$ is the hyperparameter for the NS-Watermark.\n\nWe evaluated the running time of the Soft-Watermark, adding the results in Fig. 6.\nThe results are consistent with the time complexity discussed above.\nThen, as the review mentioned, the running time of the NS-Watermark with $\\alpha=1$ is approximately twice slower than the one of the Soft-Watermark\nbecause the NS-Watermark needs to generate texts without watermarks before generating texts with watermarks.\n\n> In the case of robustness, making WS-Watermark more robust with post-editing decreases the performance of model substantially. For example, in figure 5a, when $\\beta$\n $\\geq$ 0.1 the PPL $\\geq$ 3 which is higher than Adaptive Soft-watermark in Table 2. Similar behaviors with Translation task in figure 5b.\n\nTable 2 shows the results when the hyperparameters for all methods are tuned to achieve the best PPL under the condition that the false negative rate is less than $5 \\%$,\nand Fig. 5 shows the results when the NS-Watermark generates texts under the condition that it achieves the level of robustness determined by the hyperparameter $\\beta$.\nThus, we cannot directly compare the results in Table 2 and Fig. 5b.\nIf we tune the hyperparameters of the Adaptive Soft-Watermark as in Fig. 5 (i.e., the Adaptive Soft-Watermark achieves the false positive rate of less than $5\\%$ and achieves the level of robustness determined by $\\beta$),\nthe PPL scores of the Adaptive Soft-Watermark may decrease as in the results of the NS-Watermark in Fig. 5.\n\n### Reference\n[1] A watermark for large language models. Kirchenbauer et al., ICML 2023"
                    }
                },
                "number": 3,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission2258/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700198915199,
                "cdate": 1700198915199,
                "tmdate": 1700198915199,
                "mdate": 1700198915199,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "demBvZJDB4",
            "forum": "dteBEZiCxB",
            "replyto": "dteBEZiCxB",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission2258/Reviewer_V7Qr"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission2258/Reviewer_V7Qr"
            ],
            "content": {
                "summary": {
                    "value": "In this paper, the authors propose a novel method to insert watermarks into generated text without compromising text quality. Specifically, the authors formulate the watermarking injection problem as an constrained optimization and provide a linear-time solution. The authors evaluate the effectiveness of the proposed method on machine translation and natural language generation tasks."
                },
                "soundness": {
                    "value": "4 excellent"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "4 excellent"
                },
                "strengths": {
                    "value": "1.  The proposed method can preserve the quality of the generated text at a certain level. \n\n2. The authors provide an approximation solution with linear time complexity\n\n3. The authors conduct a series experiments to evaluate the effectiveness in terms of the text quality, the detection accuracy, and the sensitivity towards the hyper-parameters."
                },
                "weaknesses": {
                    "value": "1. Regarding the methodology: \n\n1.1 There needs to be a more in-depth discussion about the comparison between the proposed naive method and the linear-time approximation method. Since the linear-time method is an approximation method, it would be valuable to understand what it sacrifices in order to obtain the linear time complexity.\n\n1.2 The figure 1's illustration is not very clear.  What's the difference between the two sub-figures in figure 1(a)?\n\n2. Regarding the experiment:\n\n2.1 Lack the comparison between the proposed naive method and the linear-time method.\n\n2.2 My major concern: the experiment about the robustness to post-editing is not convincing. The authors only show the relation between the text quality and the hyper-parameter controlling the robustness. I expect to see is the robustness under real attacking methods. The included attack methods could refer to the three types of attacks adopted in Section 7 of the paper [1]. Without seeing such experimental results under attacking, it's hard to be convinced about the robustness of the proposed method.\n\n[1]\"A Watermark for Large language Models\" by John Kirchenbauer*, Jonas Geiping*, Yuxin Wen, Jonathan Katz, Ian Miers, Tom Goldstein"
                },
                "questions": {
                    "value": "See the content in weakness."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "details_of_ethics_concerns": {
                    "value": "NA"
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 3,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission2258/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698909104073,
            "cdate": 1698909104073,
            "tmdate": 1699636158851,
            "mdate": 1699636158851,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "L4dWyN3EkK",
                "forum": "dteBEZiCxB",
                "replyto": "demBvZJDB4",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission2258/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission2258/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Reply to V7Qr"
                    },
                    "comment": {
                        "value": "> There needs to be a more in-depth discussion about the comparison between the proposed naive method and the linear-time approximation method. [...]\n\nSee the response below.\n\n> The figure 1's illustration is not very clear. What's the difference between the two sub-figures in figure 1(a)?\n\nFig. 1(a) is used to explain the idea described in the last paragraph in Sec. 3.2.\nNaively, the table $\\mathbf{T}[t][g]$ stores the texts of length $t$ containing $g$ green words. Then, we need to fill $\\mathbf{T}[t][g]$ for all \n\n$$(t,g) \\in \\\\{ (t,g) \\in \\mathbb{N}^2 \\mid 1 \\leq t \\leq T_{\\text{max}}, 0 \\leq g \\leq t-1 \\\\}.$$\n\nThat is, we need to fill the areas colored in blue and light blue in the right figure in Fig. 1(a).\nHowever, if $G_{\\text{max}}$ green words appear after generating $t$ words, we do not need to count the number of green words in the remaining text because the constraint in Eq. (4) is guaranteed to be satisfied.\nTo utilize this idea, we modify the table $\\mathbf{T}$ such that $\\mathbf{T}[t][G_{\\text{max}}]$ stores the texts of length $t$ containing \\textbf{at least} $G_{\\text{max}}$ green words.\nAfter this modification, we only need to fill the table $\\mathbf{T}[t][g]$ for all \n$$(t,g) \\in \\\\{ (t,g) \\in \\mathbb{N}^2 \\mid 1 \\leq t \\leq T_{\\text{max}}, 0 \\leq g \\leq \\min\\\\{ t-1, G_{\\text{max}} \\\\} \\\\},$$\n which is the area colored in the left figure in Fig. 1(a).\nCompared to the right figure in Fig. 1(a) with the left figure, the area in the table $\\mathbf{T}$ we need to fill is shrunk. Then, the time complexity can be reduced to $\\mathcal{O}(\\gamma k T_{\\text{max}}^2)$ from $\\mathcal{O}(k T_{\\text{max}}^2)$.\n\n>  Lack the comparison between the proposed naive method and the linear-time method.\n\nWe compared the naive and linear-time methods in the validation data of WMT'16 En$\\rightarrow$De.\nWe denote the naive method by the NS-Watermark with $\\alpha=\\infty$.\nThe results indicate that when $\\gamma$ is large, the BLEU scores increase with $\\alpha$,\nbut when $\\gamma$ is small, the BLEU scores are almost the same,\nand the results of the naive and linear-time methods are almost the same.\nFortunately, because the NS-Watermark achieved the best BLEU score when $\\gamma$ was small,\nthe linear-time method can reduce the time complexity with negligible text quality degradation in practice.\nWe are currently conducting the experiments with $\\gamma=0.1$. We will add these experimental results in a revised version.\n\n| $\\gamma$                  | $\\alpha$ | BLUE   |\n|-------------|----------|--------|\n| $0.01$   | $1$      | $20.9$ |\n| $0.01$                           | $2$      | $23.1$ |\n| $0.01$                          | $3$      | $24.2$ |\n| $0.01$                           | $4$      | $26.0$ |\n| $0.01$                           | $5$      | $26.1$ |\n| $0.01$                          | $\\infty$ | $26.1$ |\n| $0.001$  | $1$      | $31.5$ |\n| $0.001$                           | $2$      | $32.4$ |\n| $0.001$                           | $3$      | $32.4$ |\n| $0.001$                           | $4$      | $32.4$ |\n| $0.001$                           | $5$      | $32.4$ |\n| $0.001$                           | $\\infty$ | $32.4$ |\n| $0.0001$ | $1$      | $32.6$ |\n| $0.0001$                          | $2$      | $32.6$ |\n| $0.0001$                         | $3$      | $32.6$ |\n| $0.0001$                          | $4$      | $32.6$ |\n| $0.0001$                          | $5$      | $32.6$ |\n| $0.0001$                          | $\\infty$ | $32.6$ |\n\n>  the experiment about the robustness to post-editing is not convincing. The authors only show the relation between the text quality and the hyper-parameter controlling the robustness. I expect to see is the robustness under real attacking methods. [...]\n\nThe main advantage of the NS-Watermark over the Soft-Watermark is that\nwhen the level of robustness to be achieved is given by the hyperparameter $\\beta$, the NS-Watermark can minimize the degradation of text quality under the conditions that it achieves the given level of robustness.\nAs shown in our experiments, the Soft-Watermark inserts more than the required number of green words in the generated texts and degrades the text quality more than necessary, even if its hyperparameters are tuned.\n\nThe hyperparameter $\\beta$ can be intuitively interpreted\nand ensures that up to $50\\beta \\\\%$ of the words can be replaced without removing the NS-Watermark.\nThen, how watermarks should be robust to post-editing depends on the application.\nThus, we leave it to future work to experimentally evaluate the robustness using the attacking methods that the reviewer mentioned."
                    }
                },
                "number": 4,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission2258/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700199664133,
                "cdate": 1700199664133,
                "tmdate": 1700199664133,
                "mdate": 1700199664133,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "Z8M7t6ntsm",
                "forum": "dteBEZiCxB",
                "replyto": "L4dWyN3EkK",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission2258/Reviewer_V7Qr"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission2258/Reviewer_V7Qr"
                ],
                "content": {
                    "comment": {
                        "value": "Thank you for your response. As no additional experiments against real attacking methods, I will keep my score."
                    }
                },
                "number": 5,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission2258/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700618906312,
                "cdate": 1700618906312,
                "tmdate": 1700618906312,
                "mdate": 1700618906312,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "EaIomfOlp0",
            "forum": "dteBEZiCxB",
            "replyto": "dteBEZiCxB",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission2258/Reviewer_rYag"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission2258/Reviewer_rYag"
            ],
            "content": {
                "summary": {
                    "value": "The paper proposes a new method, the Necessary and Sufficient Watermark (NS-Watermark) for watermarking texts generated by large language models (LLMs). The authors argue that the use of LLMs can be misused for malicious purposes, hence the need for an efficient watermarking method to distinguish between human and LLM-generated texts. The NS-Watermark applies minimum constraints to generated texts, maintaining text quality while ensuring accurate detection. The authors propose this method in response to existing watermarking methods that degrade the quality of generated texts. The paper demonstrates that the NS-Watermark outperforms existing methods in distinguishing machine-generated text and maintaining text quality, especially in machine translation tasks."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "(1) The paper addresses a significant issue in the field of natural language processing, specifically in mitigating risks associated with the malicious use of large language models.\n(2) The authors propose a novel method, the Necessary and Sufficient Watermark (NS-Watermark), which is an innovative solution to the problem at hand.\n(3) The paper provides a comprehensive analysis of the proposed method, including a well-structured theoretical analysis and practical implementation details."
                },
                "weaknesses": {
                    "value": "(1) It is overclaimed that the text quality is unaffected, compared to the no watermarked model. There is some quality drop compared to the unwatermarked model, but not too much. You can claim the text quality is better than Soft-Watermark. So using the phrase \"without degrading the text quality\" is not fully accurate.\n\n(2) The proposed model explores a less conservative region of z-scores compared to Soft-Watermark. Soft-Watermark's conservative approach provides robustness against attacks. And the NS-Watermark is much slower in terms of decoding speed.\n\n\n(3) Since watermarking is designed to distinguish watermarked text and unwatermarked text, it makes more sense to consider human text and unwatermarked AI-generated text together as negative samples."
                },
                "questions": {
                    "value": "Since the watermarked tokens are dynamically added, if the adversary truncates the text and only provides part of the generated text, will this affect the detection performance?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 4,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission2258/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698994355790,
            "cdate": 1698994355790,
            "tmdate": 1699636158738,
            "mdate": 1699636158738,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "irQPDqqoWl",
                "forum": "dteBEZiCxB",
                "replyto": "EaIomfOlp0",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission2258/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission2258/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Reply to rYag"
                    },
                    "comment": {
                        "value": "> It is overclaimed that the text quality is unaffected, compared to the no watermarked model. [...] So using the phrase \"without degrading the text quality\" is not fully accurate.\n\nWe will replace the phrase \"watermarking methods without degrading the text quality'' with \"watermarking methods that minimize the degradation of text quality'' in the revised manuscript.\n\n> The proposed model explores a less conservative region of z-scores compared to Soft-Watermark. Soft-Watermark's conservative approach provides robustness against attacks. [...]\n\nGenerally, there is a trade-off between text quality degradation and robustness against post-editing.\nThus, the main advantage of the NS-Watermark over the Soft-Watermark is that\nwhen the level of robustness to be achieved is given, the NS-Watermark can minimize the degradation of text quality under the conditions that it achieves the given level of robustness,\nwhereas the Soft-Watermark cannot and inserts more than the required number of green words in the generated texts.\n\nMore specifically, by using hyperparameters $\\beta$, the NS-Watermark can insert the minimum number of green words to achieve the level of robustness determined by $\\beta$.\nIn contrast, even if the hyperparameters $\\gamma$ and $\\delta$ are tuned, the Soft-Watermark cannot control the number of green words contained in the generated texts \nand degrades the text quality more than necessary, as shown in Fig. 3 and Th. 1.\n\n> And the NS-Watermark is much slower in terms of decoding speed.\n\nWe add the experiments, comparing the running time of the NS-Watermark and Soft-Watermark in Fig. 6.\nThe results indicate that the running time of the NS-Watermark is at most twice slower than that of the Soft-Watermark when $\\alpha=1$. \nNote that the NS-Watermark achieved the best BLUE score when $(\\gamma, \\alpha)=(0.0001, 1)$ (see Fig. 4).\n\n> Since watermarking is designed to distinguish watermarked text and unwatermarked text, it makes more sense to consider human text and unwatermarked AI-generated text together as negative samples.\n\nAs the reviewer mentioned, LLM-generated texts without watermarks are also considered negative samples in the formulations of the Hard/Soft-Watermark and NS-Watermark.\nHowever, for the simplicity of explanation, we ignore LLM-generated texts without watermarks, as in the prior work [1].\n\n> Since the watermarked tokens are dynamically added, if the adversary truncates the text and only provides part of the generated text, will this affect the detection performance?\n\nTruncation is also regarded as post-editing. \nThus, we can make the NS-Watermark robust to the truncation by using positive $\\beta$.\nWhen we set $\\beta$ to zero, the truncation can remove the NS-Watermark because the number of green words inserted by the NS-Watermark is minimal and depends on the length of generated texts (see Eq. (4)).\n\n### Reference\n[1] A watermark for large language models. Kirchenbauer et al., ICML 2023"
                    }
                },
                "number": 2,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission2258/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700197966304,
                "cdate": 1700197966304,
                "tmdate": 1700201219240,
                "mdate": 1700201219240,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    }
]