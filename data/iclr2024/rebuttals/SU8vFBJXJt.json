[
    {
        "title": "Why not both? Combining Bellman losses in deep reinforcement learning"
    },
    {
        "review": {
            "id": "8CvXBuuj6v",
            "forum": "SU8vFBJXJt",
            "replyto": "SU8vFBJXJt",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission3472/Reviewer_X6y6"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission3472/Reviewer_X6y6"
            ],
            "content": {
                "summary": {
                    "value": "Some reinforcement learning algorithms usually use a variant of fitted Q-evaluation for policy evaluation, alternating between estimating and regressing a target value function. Based on the prior work, it seems that the Bellman residual can incur poor performance in the linear case or with the neural networks. This paper uncovers that the Bellman residual can be utilized as a useful auxiliary loss for neural fitted Q-evaluation. The authors experimentally show that adding a Bellman residual loss stabilizes policy evaluation. The authors combine the Bellman residual loss with the SAC algorithm, and observe an improved sample efficiency on some tasks while FQE can diverge without the Bellman residual loss."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "# Strengths\n\n- this paper is highly related to the RL community, especially focusing on the fitted Q evaluation problem\n\n- this paper is generally well-written and well-motivated\n\n- this paper unpacks an interesting conclusion, that the Bellman residual loss can serve as a quite good auxiliary loss for the benefit of improving the sample efficiency. The authors show that utilizing the combination of the projected Bellman error and the Bellman residual can be a better choice.\n\n-  codes are included"
                },
                "weaknesses": {
                    "value": "# Weaknesses\n\n- The authors ought to present the theoretical analysis more formally and organize them into theorems like many FQE papers do\n\n- The authors ought to list a detailed hyperparameter setup table in the appendix for clarity\n\n- The hyperparameter $\\lambda$ seems to be important and the most critical part of the proposed method. While I do not see enough discussions on this hyperparameter. The authors use different $\\lambda$ for different tasks or when combined with different algorithms. It is important to give practical guidance on how to determine this parameter\n\n- Are there any way of tuning this parameter (i.e., $\\lambda$) automatically? How does this hyperparameter affect the performance? How sensitive is the method to this parameter? Have you try some other datasets other than MuJoCo? Can your conclusion still hold?\n\n- The authors only combine their method with SAC, then can your method benefit more advanced algorithms like TQC [1], REDQ [2]?\n\n[1] Controlling overestimation bias with truncated mixture of continuous distributional quantile critics. ICML.\n\n[2] Randomized ensembled double q-learning: Learning fast without a model. ICLR.\n\n- Can your method still work when there are already some regularizations on the critic, e.g. DARC [3]? What trade-off we may need to balance the introduced residual loss part and the existing regularization part? I expect some further discussions on this.\n\n[3] Efficient continuous control with double actors and regularized critics. AAAI."
                },
                "questions": {
                    "value": "Please refer to the weaknesses part"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 1,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission3472/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698424035657,
            "cdate": 1698424035657,
            "tmdate": 1699636300169,
            "mdate": 1699636300169,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "kTYwyEoqcm",
                "forum": "SU8vFBJXJt",
                "replyto": "8CvXBuuj6v",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3472/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3472/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "Thank you for your review.\n\n  > 1) Better present the theoretical result\n\nWe have now phrased the result as a proposition in the revised paper. Thank you for your feedback.\n\n  > 2) Hyper-parameter table\n\nWe have put a hyper-parameter table in the appendix. Thank you for your feedback.\n\n  > 3) Importance and best practices for hyper-parameter $\\lambda$\n\n We have added a sensitivity analysis on $\\lambda$ for the SAC + Mujoco experiment and we describe how we ended up choosing $\\lambda = 0.1$ for that particular experiment which hopefully provides some helpful insight.  Because FQE diverges relatively quickly in that setting with high update rates of the target, it ended up relatively easy to set a sensible parameter for that experiment. We discuss this in more detail in this new section of the  appendix. \n\n  > 4) Other datasets than Mujoco\n\nWe have launched some additional experiments on LunardLander-v2 and MinAtar tasks on DQN. Please refer to the new appendix for more details. These preliminary results indicate that the BE term can also be efficient in stabilizing DQN in high target network update regimes.\n\n  > 5) Integration with other techniques such as ensembling, higher update-to-data ratio, double actors, etc.\n\nThere has been a large amount of prior work aimed at improving the sample efficiency of deep RL algorithms. While it is difficult to make definite statements about how this particular auxiliary loss would combine with existing ones, we would like to point out that the mechanisms by which sample efficiency in our case is improved is very unique. Indeed, to the best of our knowledge this regime of high update rate of the target network remains rarely studied as a way of speeding up deep RL. We have shown that it can be impactful on Mujoco tasks and with the new baseline added in the revision, that other modeling-based auxiliary losses are not as effective as the proposed BE loss in preventing divergence of FQE in this regime. Because the properties of our approach are rather unique, we believe there is a good chance that it is complementary with existing methods. Of course successfully integrating these different methods is not trivial but can be an interesting future direction."
                    }
                },
                "number": 7,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3472/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700352060008,
                "cdate": 1700352060008,
                "tmdate": 1700352060008,
                "mdate": 1700352060008,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "bNMaFpgNe8",
            "forum": "SU8vFBJXJt",
            "replyto": "SU8vFBJXJt",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission3472/Reviewer_JxN6"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission3472/Reviewer_JxN6"
            ],
            "content": {
                "summary": {
                    "value": "The paper aims to use residual algorithms, which have some nicer theoretic properties but have often performed worse in practice, especially with deep networks. The proposed resolution is derived as follows.\n\nWe can first decompose a deep NN $Q(s,a)$ into $\\phi \\cdot w$ where $\\phi$ is a feature vector and $w$ are the linear weights. The w can be viewed as the final layer of an NN which is usually linear. Assume a discrete state and action space, the $\\phi$ can define a $\\Phi$ \"feature matrix\" of size $|S x A| x K$ where $K$ is the dimensionality of the feature layer. This is mostly for notation purposes and such a $\\Phi$ is never instantiated in practice except for toy problems.\n\nThe projected bellman error $||Q - T^\\pi Q||$ can be rearranged $||\\Phi w - T^\\pi Q||$. Following prior work, we can demonstrate that this error can be upper bounded by a model learning loss $L(\\phi)$, where $\\phi$ are the latent features of the model, and the loss is defined by how well $\\phi$ can model the reward function / features of the next state assuming an optimal $w$ for said $\\phi$. If I understand the argument correctly, this has not gotten to the new proposed part of this work and is summarizing prior work. The key point is that it shows adding auxiliary model-based losses to a model-free RL algorithm is theoretically justified (and that such losses would be applied to the feature space $\\phi$ and ignore updating the final linear weights $w$)\n\nThe proposal of this work is to not explicitly use a model-based auxiliary loss. Instead, we should just use something like the Bellman error as an auxiliary loss. We are already using a standard TD-error as our \"base\" RL loss, but we can take the Bellman residual objective and use this as the aux. loss. Inspired by feature learning work, we only allow this aux. loss to affect the feature layers (every layer except the last one). This still runs into the classic double sampling bias, which we can either choose to correct for or not."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "The paper provides a helpful primer on Q-learning literature, in particular on the notation norms for considering the $\\phi$ vs $w$ decomposition. I appreciate that the plots have error bars and the empirical improvements over baseline SAC seem slightly promising."
                },
                "weaknesses": {
                    "value": "I may be a bit out of the loop on the MuJoCo test suite, but I thought the typical number of environment steps needed per run was on the order of 10^6 steps or higher. But the methods appear to only be benchmarked up to half of that number? This makes me a little suspicious of the results.\n\nFrom a style standpoint, I'm not sure the theoretical discussion in Section 3 is that helpful and the presentation seems a bit poor. This could be down to me not understanding the paper, but it felt like this:\n\nFigure 1 - a diagram of projection error that has little to do with the proposal to use Bellman residual as an auxiliary loss.\n\nSection 2.1 - A discussion on true bellman error vs projected error, which also has little to do with the bellman residual proposal.\n\nSection 3 - A discussion on feature space learning, where we spend multiple paragraphs and lines of equations deriving losses that show learning good features can improve RL, before saying \"but this should be worse than using the Bellman error, let's do something else\", which felt a little like it was wasting my time.\n\nThe practical implementation of Bellman residual is only brought up around Section 4 and does not seem that related to the sections that come before it.\n\nIn terms of experiments, separate from the \"seems like too few steps\" question, it feels like the paper's argument would be stronger if it included more alternatives for feature learning in the practical section. In Table 1, the BC baseine is good, because it is using a different auxiliary loss than DouBel, and it gives an argument for why DouBel's bellman residual aux. loss is better than a next-state-feature + reward approximation loss. But this table is only for policy evaluation, and then there are no aux. feature methods in Table 2 (episode return) aside from DouBel! So I don't see evidence that DouBel is better than othr auxiliary losses when maximizing episode return, I only see evidence it is better than no aux loss at all.\n\nI think the experiments do support better policy evaluation, but they don't support better policy learning strongly enough. This combined with some of my complaints on presentation make me a bit lukewarm about the work, even if there are some good parts within it."
                },
                "questions": {
                    "value": "I may have missed this - in the feature function gradient, how is $\\lambda$ defined? Is this a hyperparameter fixed during learning, or is it something implicitly defined by $||w||$ to match Eqn 13?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 2,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission3472/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698733758050,
            "cdate": 1698733758050,
            "tmdate": 1699636300069,
            "mdate": 1699636300069,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "Kq9NQW5NLd",
                "forum": "SU8vFBJXJt",
                "replyto": "bNMaFpgNe8",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3472/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3472/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "Thank you for your review.\n\n  > 1) $L(\\phi)$ follows prior work\n\nThere seems to be some confusion on what $L(\\phi)$ is and what part of our work is novel. To the best of our knowledge, no other prior work proposes to minimize $L$ for non-linear policy evaluation. If the Reviewer has references showing otherwise, we would be glad to cite them. \n\nWe would also like to clarify that $L$ is a Bellman error, where the linear part is the minimizer of the projected Bellman error. $L$ itself is not a model learning loss but can be shown to be bounded by one. To the best of our knowledge this insight is also novel and is the main motivation for our research question: if the usual model learning auxiliary losses are upper bounds to a Bellman error, why not minimize directly the Bellman error as an auxiliary loss?\n\n  > 2) Section 3 unrelated to the rest of the paper\n\nThe main point of Section 3 is to show the relationship between existing work on regularising policy evaluation algorithms with auxiliary modeling losses and the proposed Bellman error $L$. The conclusion of Section 3 is not \u201clet us do something else\u201d but instead, why not minimize the Bellman error $L$ directly instead of the upper bounding model learning losses of prior work.\n\nOptimizing $L$ directly is challenging due to the numerical instability of computing the LSTD solution [1]. The practical algorithm is to use instead the current $w$ from an FQE procedure running concurrently as an approximation to the LSTD solution and use this $w$ for computing $L$. While different from computing $L$ exactly, we believe this still lets us investigate the research question raised by Section 3 which is about the merits of using a Bellman error instead of the environment modeling error. \n\nWe hope this clarifies better the relation between Section 3 and the remainder of the paper. Otherwise we would really appreciate some additional feedback to improve the presentation of the paper. \n\nNow because $L$ combines both a Bellman error and the minimizer of the projected Bellman error, we believe the refresher in Section 2 is still useful to fix the terminology. \n\n[1] Scherrer; Should one compute the temporal difference fix point or minimize the bellman\nresidual? the unified oblique projection view.  ICML10\n\n  > 3) Is $10^6$  time-steps not the norm for MuJoCo?\n\nPrior work already considered shorter total time-steps. E.g. REDQ [CITATION] has Mujoco experiments with 120 to 300K time-steps. In our setting the improvement in sample efficiency is most apparent around the 250K time-step mark and our plots are meant to focus on this region.\n\n  > 4) Lack BC baseline for the SAC + MuJoCo experiment\n\nThank you for your suggestion. We have now added this baseline.\n\n  > 5) How is $\\lambda$ defined\n\nLambda is a hyper-parameter. We have now included additional plots in the appendix to show the impact of this hyper-parameter."
                    }
                },
                "number": 6,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3472/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700351964483,
                "cdate": 1700351964483,
                "tmdate": 1700352085231,
                "mdate": 1700352085231,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "1cpinCLlTx",
                "forum": "SU8vFBJXJt",
                "replyto": "Kq9NQW5NLd",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3472/Reviewer_JxN6"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3472/Reviewer_JxN6"
                ],
                "content": {
                    "comment": {
                        "value": "> There seems to be some confusion on what $L(\\phi)$ is and what part of our work is novel. \n\nSorry, I do understand that $L(\\phi)$ is a Bellman error that is upper bounded by the $\\min_{m_r, M_\\phi}$ expression that can be interpreted as a model learning loss. I made a mistake when typing up the review and said $L(\\phi)$ equaled that upper bound by accident. Thanks for clarifying this.\n\n> On Section 3\n\nPresentation wise my suggestion would be to do one of the following.\n\n1. Rename the section title from \"Combining Bellman Losses\" to something more specific to your stated goal of showing the relationship between prior auxiliary modelling losses work and your work.\n2. Move the justification / connection to after the practical implementation step, so that the reader has more context on how the bellman losses are combined before reading the justification of why this should be helpful."
                    }
                },
                "number": 8,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3472/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700690286813,
                "cdate": 1700690286813,
                "tmdate": 1700690286813,
                "mdate": 1700690286813,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "ld4m4KgWbW",
            "forum": "SU8vFBJXJt",
            "replyto": "SU8vFBJXJt",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission3472/Reviewer_BJvN"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission3472/Reviewer_BJvN"
            ],
            "content": {
                "summary": {
                    "value": "This paper studies the use of projected Bellman error (PBE) or the mean squared Bellman Error/Bellman residual (BE). the authors show that although BE is not great on its own, it can be a useful auxiliary loss for neural fitted Q-evaluation. Authors provide theoretical results show that existing auxiliary losses that model reward and transition dynamics can be seen as a combination of PBE and BE, and this motivates the design of a new auxiliary loss, the Double Bellman (DouBel) loss. Empirical results are further provided to show that by using the proposed loss on SAC, it is possible to achieve better loss and performance on MuJoCo benchmark, and allow a more frequent target network update."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "4 excellent"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "**originality**\n- the paper presents a very interesting novel insight making connection between the Bellman losses and the commonly used forward dynamics and reward prediction auxiliary losses. \n- empirical results are provided to further support the theoretical results.  \n\n**quality**\n- the writing and structuring of the paper are good. \n- good covering of related works \n- the proposed method is well-motivated.\n- many technique details are provided, enough seeds are run\n\n**clarity**\n- the results and arguments presented in the paper are clear and easy to follow\n- figures and tables are clear\n\n**significance**\n- the theoretical insight in the paper is quite interesting. \n- the empirical results show that the proposed method can indeed achieve better performance and smaller losses. When comparing to SAC, the proposed method is less prone to divergence and can allow faster target network updates. The proposed method can be a nice way to improve algorithm stability. And I believe this applies to not just SAC but other related algorithms as well."
                },
                "weaknesses": {
                    "value": "I think the paper is very interesting but can be nice to see a bit more empirical study and analysis. \n- To my understanding, a hyperparameter (lambda in algorithm 2) is used to balance how much auxiliary loss to use, can you provide more ablation on how the algoirthm's behavior and how the accuracy of its Q estimates change as lambda changes? \n- In some recent works it has been shown that techniques that provide more accurate Q estimates can be especially helpful when the algorithm is taking more udpates per data point collected. Will the proposed method also benefit from this setting? \n- How much computation overhead does the proposed method have? Would like to see a table comparing wall clock time between it and SAC baseline. \n- Will the proposed method also lead to better long-term performance?"
                },
                "questions": {
                    "value": "- Given the same computation budget, will the proposed method be more efficient compared to methods with other auxiliary losses or with ensemble-based bias reduction? \n- Will it be beneficial to combine the proposed method with other auxiliary losses or other bias reduction techniques, or that does not make sense?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 3,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission3472/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698799238617,
            "cdate": 1698799238617,
            "tmdate": 1699636299987,
            "mdate": 1699636299987,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "WYSSUUK0of",
                "forum": "SU8vFBJXJt",
                "replyto": "ld4m4KgWbW",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3472/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3472/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "Thank you for your review\n\n  > 1) Sensitivity to hyperparameter $\\lambda$\n\nThank you for your feedback. We have run additional experiments on the SAC + Mujoco setting with 4 additional values of $\\lambda$ on the previous 4 Mujoco tasks and averaged over 20 seeds. Results and discussion can be found in the appendix. Please let us know if this addresses your concerns.\n\n  > 2) Will the method benefit from more gradient updates\n\nThe way this paper aims at improving sample efficiency is by recomputing the target more often. This leads to more frequent applications of the Bellman operator and lets the rewards propagate faster through the chain of state-action pairs. This shows well in the policy evaluation experiment where we can compute the distance to the true Q function and has tangible benefit when solving RL tasks as shown in the SAC + Mujoco experiments. To the best of our knowledge, no other work has investigated improving sample efficiency by making FQE more robust to faster target value recomputations. We think because its properties are unique, it is more likely that our work can integrate well with prior improvements of SAC/deep RL such as increasing the Q-function ensemble size or performing more gradient steps. \n\n  > 3) Computation overhead\n\nIn the SAC + Mujoco experiment, the execution time of DouBel was about ~1.2 times  the execution time of vanilla SAC, while DouBel with bias correction was ~1.5 times the execution time of vanilla SAC, because of the extra V-value network. We have added this to the appendix, thank you for pointing it out.\n\n  > 4) Will the proposed method lead to better long-term performance\n\nWe have not observed better long-term performance in the Mujoco task. We think the main benefits of our methods are in the initial speed-up provided by a more frequent application of the Bellman operator. That is why our results focus on the 0-500K range for the SAC + Mujoco task.\n\n  > 5) Efficiency compared to other approaches and possible combinations\n\nMethods such as AQE can be about 200 times slower than SAC, because it has a 10 times larger ensemble size and uses 20 times more gradient steps per sample. Under a fixed computational budget this might not even be more efficient than vanilla SAC. Of course this all depends on the environment and if the cost of interaction is very high (e.g. robotics) it might still be beneficial to focus on sample efficiency first and foremost. As we have shown in the new baseline requested by Reviewer JxN6, auxiliary losses such as those predicting next state features do not stabilize FQE in the high update rate of the target regime, and hence the advantages of our methods are unique. Because of that we believe it can complement quite well prior work towards the goal of developing increasingly more sample efficient deep RL algorithms. Of course merging all these approaches is not necessarily trivial but can be an interesting future direction."
                    }
                },
                "number": 5,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3472/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700351889859,
                "cdate": 1700351889859,
                "tmdate": 1700351889859,
                "mdate": 1700351889859,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "yVep3UrFv1",
            "forum": "SU8vFBJXJt",
            "replyto": "SU8vFBJXJt",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission3472/Reviewer_he6H"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission3472/Reviewer_he6H"
            ],
            "content": {
                "summary": {
                    "value": "The paper proposes using the Bellman Error (BE) as an auxiliary loss in combination with the Projected Bellman Error (PBE) for Fitted Q-Evaluation (FQE). When the action-value function $Q(s,a) = \\Phi w$ is expressed as the product of a learnable feature vector $\\Phi$ and a learnable weight $w$, we can find the parameters $w$ minimizing the PBE in closed form by following the standard LSTD solution. Meanwhile, the feature vector $\\Phi$ can be minimized using the BE. The authors suggest an adaptation of FQE that iteratively minimizes these two objectives. They provide an upper bound of the BE loss when $w$ is the solution of the PBE, which depends on the reward function and the next state-action feature. For practical implementation, they propose a model-free algorithm that does not require estimating these quantities. Experimental results demonstrate that the addition of a BE auxiliary loss makes the Soft Actor-Critic algorithm more stable, especially when increasing the number of gradient steps before updating the target network, resulting in improved sample efficiency."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "- The paper offers a comprehensive and clear presentation of the differences and relationship between the Bellman Error and the Projected Bellman Error.\n\n- To my knowledge, the application of the BE as an auxiliary loss alongside the PBE loss is a novel approach.\n\n- The experiments show a decrease in distance to the true Q function for the proposed method and an increase in sample efficiency, which shows that the proposed auxiliary loss can be effective in practice"
                },
                "weaknesses": {
                    "value": "- The presentation related to the theoretical results is, in general, clear, apart from equation 13: what are $m_r$ and $M_{\\Phi}$?\n\n- In the paper, it is claimed that the proposed method allows for more aggressive target network update rates. However, from the text, I could not understand what exactly that means: is it the case for DouBel(20) or DouBel(1). This generated some confusion throughout the text. I suggest to add an explanation in the text on how target networks are used and why they are important in this setting.\n\n\n- The paper lacks a simple experiment (e.g., with finite state and action spaces) where the theoretical results can be shown to hold true without approximating the solution of LSTD. It would be beneficial to demonstrate how the auxiliary loss aids such settings before introducing approximations.\n\n- From Table 1, it seems that both DouBel(20) and FQE(20) have much lower loss than DouBel(1) and FQE(1). I would expect to see for some of the datasets presented a plot showing the final distance to the true Q function as a function of the number of gradient steps before the target network is updated (e.g., from 1 to 40). Is the loss in DouBel always lower than the loss in FQE, or is there a trade-off?\n\n- It is not clear to me how the theoretical results imply that the algorithm can have more aggressive target network update rates. I understand that the use of the auxiliary loss can decrease the error in the Q function. However, could the author clarify why this matters when having more target network updates?"
                },
                "questions": {
                    "value": "I incorporated most of the questions above. Other minor questions:\n\n- What is the difference between Figures 6, 7, and 8? \n\n- Why is there an initial divergence in Figure 4 for SAC, and how does it relate to the theoretical results?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 4,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission3472/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1699004033707,
            "cdate": 1699004033707,
            "tmdate": 1699636299922,
            "mdate": 1699636299922,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "aBWUqXZb85",
                "forum": "SU8vFBJXJt",
                "replyto": "yVep3UrFv1",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission3472/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission3472/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "Thank you for your review.\n\n  > 1) What are $m_r$ and $M_\\Phi$\n\n$m_r$ and $M_\\Phi$ define linear models in $Phi$ that minimize the squared error to the reward $\\cal R$ and the next state features $\\Phi\u2019$.  We have expanded the explanation in page 5. We hope it is clearer now.\n\n  > 2) Clarifying what are (aggressive) target network update rates\n\nWe have updated Sec. 2.2 to clarify what target update rates mean. Please see the bolded text. \n\nAs for what aggressive update rates are, it depends greatly on the task. For example, tuned hyper-parameters in stable-baseline 3 suggest an update rate of 10 for CartPole but 1000 for Atari. \n\nIn our SAC + Mujoco experiment, we consider the update rate of 10 as aggressive since vanilla SAC, without the proposed regularizer, \u2018diverges\u2019 in many cases. \n\nFor the policy evaluation task, at the fastest update rate of 1, FQE(1) does not diverge but adding our regularizer has a big impact on the distance to the true Q function, whereas for an update rate of 20, DouBel(20) and FQE(20) are about the same in performance and convergence profile.\n\n  > 3) Adding a simple experiment\n\nWe experimented with small scale tabular environments with rich observations (i.e. the MDP is finite and small but the learner observes high dimensional vector valued states).  However, in these simple MDPs, Neural FQE was converging very fast to the true Q function even with a target update rate of 1. These simple MDPs were thus not able to illustrate the challenges of policy evaluation with neural function approximators that one can experience on more complex MDPs.\n\n  > 4) DouBel(20) and FQE(20) have much lower loss than DouBel(1) and FQE(1)\n\nYes, experiments in 6.1 show that if the computational budget allows it, the slower update rate of 20 is better. However, the learning curve illustrates well how slow policy iteration can be in this regime. Because the targets are updated less frequently, the Bellman operator is applied less often and it takes more time to reach a fixed point. To give an idea of the scale of the X axis for the policy evaluation experiments: we perform up to 10K gradient steps, but an algorithm such as PPO on Mujoco performs typically only 320 gradient steps per iteration for its policy evaluation! Even after 10K gradient steps, there are still four Mujoco datasets where DouBel(1) outperforms DouBel(20). Given how computationally expensive deep RL can be, we believe it is still important to consider improving neural FQE through this faster update of the targets. One can always revert to slower update rates once the error reduces enough. The claim of the paper still holds that these faster update rate regimes do not seem helpful with vanilla FQE but become interesting when equipped with our proposed regularizer.\n\n  > 5) DouBel always lower than FQE\n\nIn the policy evaluation experiment, both algorithms performed about the same for the update rate of 20. For the SAC experiments, we have included a new parameter sensitivity analysis and it shows that a too high $\\lambda$ can be detrimental to performance. Some care should definitely be taken in tuning it, although the value of $\\lambda=0.1$ seems to work well for Mujoco tasks and also the new DQN experiments we added to the paper.\n \n  > 6) Relation between theoretical results and more aggressive update rates\n\nThe theoretical results relate the usual auxiliary losses used in prior work based on modeling the reward and next state features with the proposed loss $L(\\Phi)$. It is not about the learning dynamics of neural FQE. A hand-wavy argument could be that Bellman error minimization is stable because it is a true gradient descent method (unlike FQE), and adding an explicit BE term seems to be effective at avoiding gradient updates of the feature function that would blow-up the Bellman error. However, the only validation of this property in the paper is empirical.\n\n  > 7) Difference between Figures 6, 7, and 8 \n\nAs can be seen in Table 1, the policy evaluation experiments are done on three datasets for each of the four Mujoco tasks corresponding to different performance levels of the data generating policy. Figures 6, 7, 8 show the learning curves on four Mujoco tasks for each of the three performance levels."
                    }
                },
                "number": 3,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission3472/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700351785884,
                "cdate": 1700351785884,
                "tmdate": 1700351785884,
                "mdate": 1700351785884,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    }
]