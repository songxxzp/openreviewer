[
    {
        "title": "How to Guess a Gradient"
    },
    {
        "review": {
            "id": "mmKErHemSr",
            "forum": "M8mGHjwFZV",
            "replyto": "M8mGHjwFZV",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission4653/Reviewer_xG3Y"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission4653/Reviewer_xG3Y"
            ],
            "content": {
                "summary": {
                    "value": "The authors study the problem of optimizing a deep neural network without explicitly computing the gradient through backpropagation. This means that the gradient needs to be guessed. The main idea of the paper is that the gradients lie in a subspace that is lower than the size of the model, so the gradients should be guessed in this subspace. The authors show empirically that the gradient guesses obtained through this method are closer to the true gradient than previous methods, but they are biased estimators. They show that the performance of their methods improves with respect to previous methods, but it is still quite lower than using backprop. They argue that this is due to the bias in the gradient estimates and provide empirical evidence in support. Surprisingly, the authors also benchmark their method on the MLP mixer, and they obtain better performances than if they train with backprop.\n\nI lean toward rejection because [I elaborate on these three points in the Weaknesses section]:\n\n(P)resentation. The English is good and the paper starts well, but the presentation gets progressively poor and hard to follow. Especially toward the second part of the paper, there are disconnected paragraphs which it is hard to reconnect to the global story. Although the proposed concepts are not particularly hard, it takes more effort than necessary to understand how experiments are performed, and which evidence leads to what. Further, figures and tables could be much clearer than at the current state. \n\n(S)oundness. Much of the told story is based on reasonable arguments, confirmed by empirical evidence. Since the empirical evidence is the basis of the paper's message, it should be better substantiated than it currently is. This goes along with the presentation, which makes it hard to understand how experiments were performed (e.g. it seems that no hyperparameter tuning was done, and that the evidence is based on single runs), and therefore to understand whether the methodologies are sound. The MLP-mixer runs contain a strong message, and yet nothing is provided to make this evidence strong.\n\n(C)ontribution. A main selling point of the paper is not developed. This is, the good performance on the MLP mixer is just flashed and no attempt is done at analyzing it. This analysis is needed to make this finding consistent, and it would shed light on the argument presented by the authors, stating that it is the bias on the gradient that leads to low performances."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "1 poor"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "STRENGTHS\n- The main idea of the paper, of reducing the dimensionality of the guessing space, is worth exploring. Although the results are not good nor fast nor general enough to replace backprop, it is still a step forward.\n\n- The gradient guesses are much more aligned to the true gradient than previous methods. This is an improvement with respect to previous methods.\n\n- Benchmarks on the MLP mixer show that in that case guessing the gradients is actually better than performing backprop. This is potentially very impactful, since it shows a (large-scale) case in which gradientless optimization matches backprop.\n\n- The authors argue that one can solve the lower performance problem by eliminating the bias in the gradient guesses. Therefore, there is hope that the current limitations of the method can be overcome."
                },
                "weaknesses": {
                    "value": "(HYPERPARAMETERS) Was hyperparameter (HP) tuning performed (and how? e.g. based on which metrics) for all the models or only for those of figure 7? And even then, the displayed learning curves are only on the training set: was the tuning performed on the training set? How many times was each run repeated? I see no error bars, which would lead me to think only once. Do the models have a regularizer term (I guess not, because it would influence the shape of the gradient)? Also, I think that the same HPs were used for different methods, but I believe that the comparison should be performed on the optimal choice of HPs, since likely the HPs that are good for one dynamics are not necessarily good for another.\n\n(CODE) I could not find a statement saying that the authors provide their code, and would have liked to check it (at least to answer to some implementation questions which I was not able to find an answer to in the paper).\n\n(COMPARISONS) The comparisons between methods are shown for a fixed number of steps, but the sheer number of steps is not comparable among methods. Learning curves (accuracy and loss as a function of training time) should be provided at least in the appendix. Could it be for example that the $W^T$ method would often perform better if we only let it evolve longer? \n\n(MLP-MIXER)\nThe results on the MLP mixer are surprising to me. Why is the $W^T$ method performing worse with simple models, and all of a sudden it is doing better than backprop? Can the authors convince the reader that this is not a fluke? How many times were these runs repeated? Can the authors show the learning curves and describe in full detail the model training? Also, if the authors' argument on the bias is correct, then they should see that the gradient guesses on the MLP mixer have no bias, right? Why didn't the authors study this? This result can be very nice, but at the current state it feels incomplete.\n\n(TWO-REGIMES) From figure 1, there seem to be two regimes in the dynamics. At the very beginning of learning, the cosine similarity is much higher than throughout the rest of the run. Do we have an intuition for this? Later on, when measuring the effect of the bias, the authors do it after one epoch. But this is in the initial regime where the cosine similarity is high, and not in the more interesting regime (which starts immediately after) where the cosine similarity becomes stable throughout the run.\n\n(PRESENTATION-QUALITY)\nAlthough the manuscript is written in a good English language, the presentation is not clear. The presentation starts clear, but it becomes progressively more fragmented, and it becomes very hard to follow the flow.\n\nI list a series of additional specific points on the presentation:\n- The figures and tables are scattered anywhere in the text. For example, table 2 is referenced (before table 1) in page 5 but appears in page 9; or figure 1, which is referenced after figure 2, appears on page 2 but is only referenced on page 5.\n- Instead of \"Please refer to the supplementary section\" it would be nicer to know the exact section. Same thing when referencing a figure with multiple plots (e.g. write \"fig.4-left\", instead of just \"fig.4\")\n- Y-labels are always defined, but sometimes in the caption, sometimes in the title, and sometimes on the y axis. I think that it would be nice to at least always have them on the y axis. Likewise, my understanding is that the left column of table 2 is training data, while the right column is testing data, that could be written on the tables (it's only vaguely written in the caption). If find it nice to put (ours) on the methods proposed by the authors, and would also put it elsewhere, e.g. in the table of Fig.1.\n- Fig.1 Why are the curves of $W^T$ and activation perturbation missing on the left hand side plot?\n- The black curves on many sets of figure 3 are not visible. I have to go all the way to the table on page 9 to find out that they are hidden below the bounding box. \n- The self-sharpening is introduced as an effect but then it looks like it is a method, and then there is a discussion on SVD which it is not clear whether it was used for algorithmic or only descriptive purposes. I find the overall description confusing. In general, there I found no clear place where to find the definitions of the methods (except maybe for $W^T$, but it would be nice that all the methods be described consistently with one another)\n- The math of section 2.2 is simple, but I find the way it starts very confusing. The formulas clarified the text for me - it should be the opposite. Also, when mentioning that hypotheses are made, please specifically list which hypotheses.\n- The Visual prompt-tuning experiments in the appendix come out of the blue, and the short paragraph justifying it is not clear.\n- labels are cut (fig.7) and legends require zooming a lot\n- The term \"guess\" has a technical meaning in this paper, so I would use a couple of words to define it.\n- Symbols. E.g. the usage of the $\\top$ symbol is not consistent between Eq.5 and the following paragraph (and in general throughout the text). Or when the weights W1,...,Wk, it is left to the reader to understand these are matrices corresponding to each layer, and not all the weights of the model (so k is the number of layers, and not the number of weights). Or the expectation in equation 14 is over the guesses of the gradient, which is why it does not act on $\\nabla L$.\n- The acronym JVP is defined in the appendix but used in the main paper\n- It would be much easier if the numbered list at the beginning of section 3 corresponded with a number at the beginning of each sectin where those points are treated.\n- typo: there is a period missing at the end of section 3\n- typo: \"This bias is further in the next experiments and Section 4.\"\n- typo: linear combinations OF all the training example activations in the batch\n\n(BREADTH) Although I acknowledge that it is interesting to find alternatives to backprop even though they are not at the level of the state of the art, the current findings only apply to MLP models with ReLU activations, and are only based on heuristical arguments. Additionally, these methods are much (but how much?) slower than using backprop, and significantly worse. The current method relies on specific knowledge of the architectural details, so even if it was faster and better performing than backprop, it would still probably not be implemented."
                },
                "questions": {
                    "value": "- For the related literature section: that learning happens in a tiny subspace was already known since years (https://arxiv.org/abs/1812.04754). Interestingly, this subspace is even smaller than the one used by the authors, so this can perhaps be used for further improvements of the proposed method.\n- The discussion section discusses open research lines. I would add some references.\n\n- I do not understand why the first term of Eq.11 can be ignored. Unless the weights are initialized in the origin (which is usually not the case), this term should be big\n\n- Why is self sharpening only used for the W:1024 models?\n\n- I would like to see a table of how long each of these methods (including backprop) take, per gradient guess, and also how many more epochs are needed to train (we need the training curves here)."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "3: reject, not good enough"
                },
                "confidence": {
                    "value": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 1,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission4653/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698165346213,
            "cdate": 1698165346213,
            "tmdate": 1699636445805,
            "mdate": 1699636445805,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "S3JGxmnFxQ",
                "forum": "M8mGHjwFZV",
                "replyto": "mmKErHemSr",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission4653/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission4653/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "Thank you for taking the time to review our submission and providing thoughtful feedback. We appreciate you highlighting the strengths of our work. We also agree with your assessment that this work is not intended to be immediately practical, but rather a step forward.\n\n**Error bars**: We have added the error bars for Table 2. Specifically, we report mean and standard deviation over 5 runs. We will soon add error bars for Table 1 as well. \n\n**Training/Testing curves**: We have added a figure in the supplementary section depicting the train accuracy and test accuracy curves for each model in Table 2. Each plotted curve is the mean of 5 runs, with translucent bands around it indicating standard deviation.\n\n**Code**: We will share our code and model checkpoints along with the camera-ready draft for transparency and reproducibility. If you have any specific questions about the code, we can answer those as well.\n\n**MLP-Mixer**: We have added train/test curves and more experiments isolating the reason for the increase in accuracy (see figure 8 and explanation below). The result is repeatable, and we will add error bars in Table 1 soon.\n\n**Why is the method better than backprop on the Mixer architecture?**: Please note that Ren et al\u2019s [1] Mixer model (using their local losses and activation perturbation) also achieves higher test accuracy than backprop. We only replace the activation perturbation with W^T, which results in a further 1.5% boost in test accuracy. The core factors behind this sudden improvement are twofold: (1) The local losses used by Ren et al provide much more supervision and help the model train to a high accuracy; (2) Their Mixer architecture seems to overfit with backprop. \n\nTo isolate local losses as the factor, we ran the same experiment without local losses and plotted the results in Figure 8. We see that the overall accuracy for each model is much lower without local losses, and the gap between W^T and activation perturbation is even larger (since variance reduction matters more when the overall variance is larger).\n\nWe also plot train vs. test accuracy, showing that backprop gets better train accuracy (as expected) but generalizes worse. It is not in the scope of our work to speculate why Mixer architecture overfits with backprop, but this could be interesting follow-up work since gradient approximations traditionally overfit more [2]. \n\n**\u201cAre gradient guesses on MLP mixer unbiased?\u201d**: The efficacy of MLP mixers in achieving high accuracy doesn\u2019t necessarily imply unbiased gradients. This complexity is highlighted in our self-sharpening experiments, where significant bias accompanied high cosine similarity and training accuracy. Additionally, the unique dynamics of MLP mixers add another layer of complexity. For instance, the absence of gradient flow between blocks in MLP mixers reduces the potential for positive feedback loops. While bias clearly impacts MLP experiments, its interaction with the model dynamics is still not well understood. Our ongoing research aims to understand these complexities. Along these lines, we have also added further analyses to the supplementary section (Figure 7). \n\n**\u201cMLP Mixer experiments/analysis feel incomplete\u201d**: We appreciate your feedback, and would like to improve the experiments/analysis. Based on our reply so far, which additional experiment/analysis would you recommend?\n\n**\u201cTwo Regimes\u201d**: In our understanding, the cosine similarity changes as the model trains, and the largest effects of that are seen right at initialization (and immediately after). As mentioned in the paper, our reported cosine similarity and 1-step effectiveness (now with error bars) are computed after each epoch and averaged over 50 epochs. Thus, we largely average over the second regime. This can also be seen by visually comparing the cosine similarity in the plot against the reported mean.\n\n**Writing quality and references**: We really appreciate the suggestions. We have incorporated several of these already and will follow all of them for the camera-ready draft. Our goal is to make the paper approachable and easy to read.\n\n**Proposed methods are heuristic; limited to MLP+ReLU**:  The observation that our methods are primarily demonstrated using MLP+ReLU models is valid and appreciated. However, it's important to note that our research, while using MLPs with ReLU activations as a foundational model, actually delves into a broader principle. The concept of partial backpropagation, utilizing locally available Jacobian information, is not confined to this specific architecture. In fact, this approach has the potential to be adapted to various architectures. The insights and findings presented in our paper, therefore, serve as specific instances of a more universally applicable principle. We believe this flexibility and adaptability are significant strengths of our proposed methods."
                    }
                },
                "number": 6,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission4653/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700739696511,
                "cdate": 1700739696511,
                "tmdate": 1700739696511,
                "mdate": 1700739696511,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "Ri444TqYAb",
            "forum": "M8mGHjwFZV",
            "replyto": "M8mGHjwFZV",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission4653/Reviewer_Nqba"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission4653/Reviewer_Nqba"
            ],
            "content": {
                "summary": {
                    "value": "In this paper, in order to guess a better gradient (with less variances), the authors unfold the backpropagation and show that the gradient can be guessed in a much lower dimensional subspace and achieves better cosine similarity compared to the directional gradient. With the better-estimated gradient, they show that they can train a model with higher accuracy without backpropagation than previous methods and extend to cifar10 results."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "The paper is easy to follow and the proposed method is intuitive. In addition, the empirical results are good compared to previous baselines. The idea is simple but effective."
                },
                "weaknesses": {
                    "value": "How large is the largest model? Since the paper mentioned that the proposed method makes the training model with millions of parameters feasible, can we have some of these results?\n\nCan we apply the methods to convolution networks or transformers? Is that possible or easy?"
                },
                "questions": {
                    "value": "See weakness"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 2,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission4653/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698803933378,
            "cdate": 1698803933378,
            "tmdate": 1699636445724,
            "mdate": 1699636445724,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "3SnUYlyyTt",
                "forum": "M8mGHjwFZV",
                "replyto": "Ri444TqYAb",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission4653/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission4653/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "Thank you for the review! Here are the answers to your questions:\n\n**Our largest models for MLP experiments**: Our largest MLP has 6 layers of width 1024, and operates on 32x32x3 images (for CIFAR10). Thus, it has 7.3 million parameters. Specifically:\n\n\n3x128 MLP: 411k\n3x1024 MLP: 4.2M\n6x128 MLP: 460k\n6x1024: 7.3 M\n\n\n**Our model for Mixer architecture (table 1)**: 918k parameters\n\n\nCrucially, we note that our method can train much larger models than directional descent, and in some cases, achieves comparable test accuracy to backprop (i.e. 77% test accuracy on CIFAR10 with Mixer architecture). This is a direct result of our gradient estimates\u2019 cosine similarity being hundreds of times higher than a random guess.\n\n\n**Applying to CNNs/Transformers**: Our method can be applied to CNNs and transformers, but the current formulation does not utilize their architecture/structure. As a result, even though our method performs well on the Mixer architecture, it currently underperforms on CNNs. We hope to close this gap in follow-up work.\n\nPlease let us know if you have any other questions or comments"
                    }
                },
                "number": 5,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission4653/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700739237876,
                "cdate": 1700739237876,
                "tmdate": 1700739237876,
                "mdate": 1700739237876,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "uO4uBSrZNl",
            "forum": "M8mGHjwFZV",
            "replyto": "M8mGHjwFZV",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission4653/Reviewer_58v1"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission4653/Reviewer_58v1"
            ],
            "content": {
                "summary": {
                    "value": "The authors propose several improvements over random directional derivative approaches to approximate the gradient without back-propagation.  \n\nThese are based on considering the gradient calculation and leveraging properties of the components of this gradient calculation - to reduce the variance / make better random samples for parts of approximating the gradient.  E.g., instead of randomly sampling a direction, randomly sampling part of the gradient calculation with a specific structure and plugging in the rest of the formula to estimate the gradient, and generating the random samples in a particular way, e.g., from a subspace more likely to contain the true gradient / closer to the subspace of the true gradient.\n\nThey compare the proposed methods to baselines and a prior enhanced method, and show significant improvements across many architectures and several datasets, analyze and discuss the results and take-aways in detail."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "-The ideas proposed to improve gradient approximation seem novel and are interesting - I feel they could be useful and motivate other work\n\n-The ideas are well motivated and introduced, and overall the paper is well-organized and flows nicely\n\n-Extensive experiment results are provided\n\n-Good discussion and analyses is provided including limitations"
                },
                "weaknesses": {
                    "value": "I feel many of these weaknesses listed below could be addressed, and I would consider raising my score in that case.\n\n\n1) No discussion of broader related work.  I.e., the authors only mention specifically work on using the directional derivatives, but there is a much broader area of work on non-gradient learning for neural networks.  It would be best to point to this other work and situate this work in context of the broader work in this area (e.g., in a small related work section for example). \n\nFor example, one work in particular that comes to mind and is similar in spirit to use random directions, is using random perturbations.  Simultaneous perturbation stochastic approximation (SPSA) has been used, but similarly to improvements in this work and others for the directional derivative approach, a likelihood ratio approach has been proposed, which generates random samples from a more appropriate distribution.  I would be very interested to see a discussion of how the current work and focus area compares to this other work (especially since this work has shown potentially better results than the directional derivative approach).\nExample papers:\n- \"A New Likelihood Ratio Method for Training Artificial Neural Networks\" https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3318847\n- \"One Forward is Enough for Neural Network Training via Likelihood Ratio Method\" https://arxiv.org/abs/2305.08960 (posted earlier in the year as \"Training Neural Networks without Backpropagation: A Deeper Dive into the Likelihood Ratio Method\")\n\nThere are also other interesting approaches, such as:\n- \"The Forward-Forward Algorithm: Some Preliminary Investigations\" https://arxiv.org/abs/2212.13345\n- \"Evolution Strategies as a Scalable Alternative to Reinforcement Learning\" (more generally evolutionary algorithms) https://arxiv.org/abs/1703.03864\n\n\n\n\n2) There are some technical issues, missing details, and incorrect or unsubstantiated statements\n\n- this line in the intro makes no sense:\n\"...and proposes addressing it by augmenting the network supervised and unsupervised loss functions located near trainable parameters.\"\nwhat are you trying to say?\n\n- This is incorrect: \"Our second insight is that by the very nature of ReLU activations, \u2202ReLU(si)/\u2202si will typically be a sparse diagonal matrix, which will \u201czero out\u201d\"\ns_i is not a matrix, but a vector - so there is no way for the gradient with respect to s_i to be a diagonal matrix.  Furthermore, for what reason should we expect this to be sparse?  It's never stated.  In my experience, this depends on a lot of factors and is not necessarily the case.\n\n- \"our third insight is that W \u22a4 often effectively has low rank. \" - this is unsubstantiated - cite a reference or explain / prove why this is the case.\n\n- What is the \"activation perturbation baseline\" - it's shown in results and mentioned as a baseline but it's never explained what it is.\n\n- The \"self-sharpening\" method is not completely / clearly described / explained\n\n- Not all method results are reported in all experiments.  It seems only a subset of method results are shown in several cases, without explanation.  \n-- In particular, the prior work being compared to should be included in more experiments, e.g., in the detailed results of Table 2.\n\n\n3) writing could be cleaned up and improved..."
                },
                "questions": {
                    "value": "Please also see the questions listed in \"weaknesses\" section.\n\nTypo: \"forward-more differentiation\" in Intro\n\nWhy not combine the 3 methods?  It's not completely clear that they are separate at first reading"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "6: marginally above the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 3,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission4653/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698886502087,
            "cdate": 1698886502087,
            "tmdate": 1699636445630,
            "mdate": 1699636445630,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "5C3rXjCbBO",
                "forum": "M8mGHjwFZV",
                "replyto": "uO4uBSrZNl",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission4653/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission4653/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "Thank you for the review!\n\n\n**Related work**: We completely agree, and will include a formal related work section in the camera-ready draft. We hope to create an approachable and complete summary of the developments in this subfield.\n\n\n**Likelihood ratio approach**: The likelihood ratio approach is especially interesting as it seems to be compatible with many different distributions. Since our guesses follow the multivariate normal distribution, this seems like a good match. Furthermore, the probabilistic formulation also naturally supports techniques like importance sampling which could help us reduce the bias significantly.\n\n\n**Confusing line in intro**: Thanks for pointing out the confusion. That line refers to local losses used by Ren et al. We have re-written that line to make it more clear.\n\n\n**Relu derivative**: \u2202ReLU(si)/\u2202si refers to the jacobian of relu activations with respect to the inputs to relu (pre-activations). Since the input and the outputs to ReLU are both vectors, the jacobian is a square matrix, and since each input controls one and only one output, it is a diagonal matrix. We have edited that section of the draft to explain this a bit better. \n \n**Sparsity**: Thank you for the correction. It is true that the ReLU activations may not be too sparse, and it depends on many factors. For example, at initialization, close to 1/2 of the units are active. While this is still useful for reducing the guess space, we have clarified this statement in the revised draft. For reference, gere is a plot of observed sparsity fractions in practice for a 1024x6 MLP on CIFAR-10:\n\n\n**Sparsity fraction**: https://imgur.com/a/IsGUE3j \n\n\n**W^T low rank**: Thank you for pointing this out. Here is previous work showing the claim [1], and we have also added this to the draft.\n\n\n**Activation Perturbation baseline**: This baseline refers to an isotropic random guess in activation space rather than weight space. This method is also used by Ren et al. We have added this clarification in the revised draft.\n\n\n**Self-Sharpening**: This is an unexpected phenomenon we observe during some of our guessing methods where the space of guesses becomes more narrow or \u2018sharpens\u2019, and this improves the cosine similarity to the exact gradient. The reason we call it \u2018self\u2019 sharpening is because this narrowing is caused by a feedback loop of decreasing rank of downstream weights. This decreasing rank narrows the guess space, which makes updates less diverse and further lowers the rank. We have updated the explanation in the draft, and will further improve it for the camera-ready draft.\n\n\n**Reporting all methods**: Could you please clarify what experiment combinations we should include for Table 2? We can add them to our revised draft for completeness. Related to Table 2, we have also added the corresponding training/testing curves. This covers our proposed methods and relevant baselines (directional descent, backprop, activation perturbation) for various MLP sizes.\n\n\n**Writing quality**: Thank you for the feedback. We will focus on writing quality and clarity for the camera-ready draft.\n\n[1]: https://arxiv.org/abs/2103.10427"
                    }
                },
                "number": 4,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission4653/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700739177730,
                "cdate": 1700739177730,
                "tmdate": 1700739177730,
                "mdate": 1700739177730,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "taZ6aHBs54",
            "forum": "M8mGHjwFZV",
            "replyto": "M8mGHjwFZV",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission4653/Reviewer_Gf7u"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission4653/Reviewer_Gf7u"
            ],
            "content": {
                "summary": {
                    "value": "This paper investigates the problem of guessing gradients for forward automatic differentiation or \"forward gradients\" methods.\nThe main focus is to reduce the variance of the forward gradient estimator by generating guesses that possess provably better alignment with the true gradient.\nMost of the presented improvements are agnostic to data and depend only on the network structure, except for the activation mixing method, which indeed relies on the forward propagation of data samples in the model.\nThe paper is well-written, pedagogical, and the experiments are accompanied by theoretical insights.\nOverall, this is a very interesting investigation that should be valuable to research on optimization with forward gradient methods.\nThe experimental protocol is relevant, except for the choice of the model being evaluated, since its accuracy on standard classification benchmarks is extremely low.\n\nIt is worth noting that the authors acknowledge in the main body that their proposed improvements do not make forward gradient methods an alternative for standard backpropagation, and that further research is needed for such approaches to become competitive."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "4 excellent"
                },
                "contribution": {
                    "value": "3 good"
                },
                "strengths": {
                    "value": "1) The experimental protocol is relevant, the theoretical insights are valuable, and the different experiments bring valuable knowledge about the practical training dynamics.\n2) The bias of the proposed methods is appropriately characterized, and its relation with respect to the drop in performance is appropriately showcased. In particular, the authors show that it is a crucial limiting factor for good performances, even in cases where the cosine similarity between the guess and the true gradient is high."
                },
                "weaknesses": {
                    "value": "1) The test accuracies obtained with backpropagation in Table 2 are extremely low. The model clearly overfits the dataset, which is not surprising for an MLP.\n2) It is not clear from the text whether the self-sharpening phenomenon is a desirable property of the training dynamics. As far as I understand, it is not.\n\n[Minor comment]\n3) At the end of the paragraph \"Effect of bias on our methods\", the sentence \"This bias is further in the next experiments and Section 4.\" has a missing word.\n4) The second paragraph of \"SUMMARY AND DISCUSSION\" begins with \"another interesting future research...\" while this is the first research direction proposed. I would switch the order between the second and third paragraphs since the bias of this method has been identified as the main limiting factor."
                },
                "questions": {
                    "value": "1) Could the authors replicate some of their experiments with another model that has an accuracy much closer to SOTA than chance level on these datasets?\nThis is particularly important for Table 2. The best accuracy for CIFAR10 is 53.5%. Similarly, it is 83.5% for SVHN. This is unacceptable for such a research paper. Not that the reviewer has some particular taste for some particular model, but it is impossible to adequately judge the practical relevance of these contributions if the accuracy is exactly half-way between SOTA and chance level. The SOTA for CIFAR10 is > 95% while chance level is 10% - your model is 53.5% which is very problematic. I am not saying that the proposed method should all yield > 90%, but it should be the case for the baseline (standard backpropagation).\n\n2) How is the 1-step effectiveness calculated? Has it been calculated for 1 mini-batch or is it the average for multiple training steps?\nIt would be nice to have a mathematical formula to understand what is at stake here.\n\n3) If the self-sharpening in the $W^{\\top}$ setting is due to the matrix $W$ becoming low rank, is the self-sharpening phenomenon a desirable thing because it leads to higher cosine similarity, or should someone avoid this dimensional collapse because it hampers generalization?\n\n4) An interesting alternative gradient guessing scheme is presented in [1] where a gradient from a small auxiliary classification network is used as a guess direction. It would be nice to be able to compare a purely structural bias such as proposed in the presented work, where the bias is strongly data-dependent. (The experimental settings are quite different, making a fair comparison difficult.)\n\n[1] - L. Fournier, S. Rivaud, E. Belilovsky, M. Eickenberg, E. Oyallon. ICML 2023. Can forward gradient match backpropagation?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 4,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission4653/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1699110023033,
            "cdate": 1699110023033,
            "tmdate": 1699636445553,
            "mdate": 1699636445553,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "VXJbQYzZxA",
                "forum": "M8mGHjwFZV",
                "replyto": "taZ6aHBs54",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission4653/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission4653/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "Thank you for the review. We deeply appreciate your interest and suggestions. We have fixed the writing as you suggested, and will address your questions and mentioned weaknesses below:\n\n\n**1-step effectiveness**: This metric uses only 1 step rather than multiple training steps, but we average that metric over the entire dataset. Mathematically, we are computing:\n\n\nDrop_method = loss_original - loss(w - eta * estimated grad)\nDrop_backprop = loss_original - loss(w - eta * true grad)\nEffectiveness(method, eta) = drop_method/max(drop_method, drop_backprop)\nHighest_effectiveness(method) = max_{eta \\in [1e-6, 1e-5, \u2026 1e-1]} Effectiveness(method, eta)\n\n\nThat is, we are computing how much the loss goes down with the estimated gradient compared to the true gradient. Unlike cosine similarity, this metric relies on the local curvature of the loss landscape too. This makes it more useful than simple cosine similarity since some errors/biases may not be relevant to the loss (e.g. flat directions in the loss landscape). We average this metric over the entire dataset and report its mean and standard deviation.\n\n\n**Self-sharpening phenomenon**: We find self-sharpening to be an unexpected and potentially useful phenomenon (in the context of narrowing guess space) that emerges from the guess bias. We opted to simply report this phenomenon and did not try to control/regulate it in our experiments, and it causes the model to overfit when completely unregulated. However, our singular value experiments show that the rate of self-sharpening can be finely controlled (Figure 5), and we hope to exploit controlled self-sharpening in follow-up work to get fast convergence and less collapse/overfitting.\n\n\n**Fournier et al**: Thank you for sharing this reference. We will add this to the related work section in the camera-ready version. Their thorough experimental analysis is also a useful template for our evaluations, and combining the two methods might produce interesting results. Although we cannot compare against this work in the time frame of this rebuttal, we hope to do a larger scale comparison on multiple architectures in follow-up work.\n\n\n**90% test accuracy with backprop**: We agree that a higher accuracy model is important to understand this method\u2019s effectiveness fully. For reference, our highest accuracy on CIFAR10 (77.4% test, 90% train) is on the Mixer architecture/losses used by Ren et al. This architecture/loss fails to achieve 90%+ test accuracy with backprop, at least for the model sizes described in the paper (0.9M, 76.4% test accuracy). \n\n\nWe tried to get higher test accuracy with backprop by varying the numbers of blocks and groups, augmentations, and training schedules for the Mixer architecture. However, we were unable to achieve 90%+ test accuracy. To our knowledge, popular MLP-Mixer implementations rely on pre-training and/or significant data augmentation like CutMix to excel at vision datasets like CIFAR10 [1,2].\n\n\nThus, we also evaluated our method on VGG16 without batch-norm or dropout. We also added random image cropping (padding=4), horizontal flipping, and mixup augmentation. Although this architecture is not an ideal fit for our method, it gets 90% test accuracy with backprop. The preliminary results are:\n\n|       | Train | Test |\n| ----------- | ----------- | ----------- |\n| Backprop     | 97.9%      | 90.0% |\n| W^T   | 28.7%       |  31.2% |\t\t\t\t\t\n|Directional Descent | 14.2% | 14.7% |\n\nW^T currently underperforms in this setting because the current implementation does not exploit any CNN structure or benefit from local losses like in Ren et al. We also have not done any hyperparameter tuning. We are working on those and will keep you updated.\n \n[1]: https://github.com/omihub777/MLP-Mixer-CIFAR\n[2]: https://github.com/sayakpaul/MLP-Mixer-CIFAR10"
                    }
                },
                "number": 3,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission4653/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700739037972,
                "cdate": 1700739037972,
                "tmdate": 1700739037972,
                "mdate": 1700739037972,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    }
]