[
    {
        "title": "FEATHER: Lifelong Test-Time Adaptation with Lightweight Adapters"
    },
    {
        "review": {
            "id": "F0uomQzjp2",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission9237/Reviewer_F1KC"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission9237/Reviewer_F1KC"
            ],
            "forum": "6yJuDK1DsK",
            "replyto": "6yJuDK1DsK",
            "content": {
                "summary": {
                    "value": "This work tackles the problem lifelong Test-Time Adaptation (TTA): adapting on a sequence of domain shifts presented at test time. The authors propose FEATHER; an orthogonal approach to TTA methods in the literature.\nInstead of adapting the weights of the pretrained model at test time, FEATHER inserts learnable adapters as additional modules in the network while keeping the original model parameters frozen.\nThe inserted adapters are initialized with identity mapping, so that the non-adapted model preserves its performance on source data.\nExperiments are conducted on four standard TTA benchmarks: CIFAR10-C, CIFAR100-C, ImageNet-C, and ImageNet-3DCC.\nThe experimental results show that FEATHER achieves competitive performance compared to state-of-the-art methods while adapting smaller number of parameters."
                },
                "soundness": {
                    "value": "3 good"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "1 poor"
                },
                "strengths": {
                    "value": "This work has the following strengths:\n\n- The problem this work tackles is both important and practical. Pretrained models are likely to experience domain shifts at test-time and adapting them on the fly is essential to ensure their reliability.\n\n- The proposed approach is easy to understand and simple to implement.\n\n- The experiments conducted in this work cover several standard benchmarks to prove the robustness of FEATHER."
                },
                "weaknesses": {
                    "value": "Despite the strengths of this work, there are few weaknesses that should be addressed. \n\n(1) FEATHER lacks the strong objective. The proposed approach seem not improve performance nor efficiency. I will explain next.\n- (1a) From the performance perspective, FEATHER does not provide performance improvement over other baselines (e.g. CoTTA).\n- (1b) From the efficiency perspective, while FEATHER updates a smaller percentage of network parameters when compared to CoTTA, FEATHER is less efficient than CoTTA. In essence, FEATHER adds extra parameters to the network making the forward pass more expensive. Further, the gradient calculation for conducting an update step of FEATHER and CoTTA are similar since FEATHER adds its adapters after every layer. Hence, the gradient will require a back propagation through the entire network. \n\n(2) Missing experiments. While the experiments in this paper covered 4 benchmarks, there are key experiments missing to validate the effectiveness of FEATHER.\n- (2a) Performance comparison. Strong and efficient baselines such as EATA, ECoTTA, and SAR shall be included in the main evaluation comparison. Appendix D only provides the comparison under one setup (ImageNet-C). \n- (2b) Since FEATHER is an orthogonal approach to TTA methods, why is it assumed that it does not need accessing source data? For example, if FEATHER is combined with EATA, source data is necessary for the anti-forgetting regularizer. Having said that, I think it is necessary to compare FEATHER to TTA methods that leverage source data.\n- (2c) Efficiency measures.  The efficiency comparison in this work is based on the percentage of parameters being updated compared to the total number of parameters. I am not sure if this is the right way to compare different TTA methods. First, FEATHER adds extra parameters to the network, and thus by construction, its forward pass is slower than the baseline (e.g. CoTTA). A comparison in terms of runtime and memory usage is more necessary. It is worth mentioning that methods like Tent and EATA only update the normalization layers making them even more efficient than FEATHER.\n\n(3) Writing. The writing of this paper can be vastly improved in several places such as:\n- The mathematical notation and problem description is not clear. In section 2 $f_\\theta$ outputs the prediction $\\hat y$ at the beginning, and later in the same paragraph it is assumed to output a probability vector.\n- The notation in the last paragraph in Sections 3.1 and 3.2 are not clear. What is the element wise addition? how is that different from a regular addition? What is the input and output shapes of the adapting layers?\n- Section 3.3 should mention that FEATHER leverages the same loss function as CoTTA. It was only clear in the experiments how exactly the adaptation is conducted."
                },
                "questions": {
                    "value": "Suggestions: Here are some additional suggestions regarding the paper writing and organizing. Note that these comments were not taken into consideration in the paper evaluation.\n\n- Both Figure 3 and section 3.2 are conveying a very simple message: Initialize the adapters with identity mapping. I would rather invest this space in more experiments with more insights (e.g. combining FEATHER with EATA).\n\n- Formatting and writing: The proposed method is simple while the methodology section is not. I would try to simplify the writing of Section 3 and remove redundant paragraphs.\n\n- Please consider reorganizing the tables in page 7 such that each table is presented with its own paragraph.\n\n- For ImageNet-C experiments, please consider a similar setup to the CIFAR10/100-C experiments where the corruptions are ordered, similar to the continual evaluation in EATA."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "3: reject, not good enough"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 1,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission9237/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1697453664266,
            "cdate": 1697453664266,
            "tmdate": 1699637162258,
            "mdate": 1699637162258,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "yBDa42MNNW",
                "forum": "6yJuDK1DsK",
                "replyto": "F0uomQzjp2",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission9237/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission9237/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Response to Reviewer F1KC"
                    },
                    "comment": {
                        "value": "Thanks for your detailed review and positive remarks about our work tackling an important and practical problem, approach to be easy and simple to implement, and experimental evaluation on various benchmarks to be robust.\n\nWe believe that there is some potential misunderstanding regarding some key aspects. We request the reviewer to take a look at our common response (and the revised version of the paper which incorporates the various suggestions). In addition, we also respond below to the reviewer\u2019s individual comments. We hope our response will help address the questions/concerns and that the reviewer will reconsider the original assessment and consider raising the score.\n\n**Performance comparison of FEATHER vs. CoTTA:** Table 3 clearly demonstrates that, for ImageNet-to-ImageNetC, FEATHER, with only 10.92% trainable adapter parameters, outperforms CoTTA (which adapts all (100%) of the network parameters) in terms of error rate. Further, Table 4 shows that FEATHER\u2019s performance is **comparable** to CoTTA and other approaches, even **with only 6.71%** trainable adapters, while **outperforming** all these methods **with as few as 50.32%** trainable parameters (Table 5). FEATHER can be used with any desired number of trainable parameters depending on the computational budget. In Table 7 in Appendix of the old version (Now Table 4 in the main paper), FEATHER with CoTTA-based TTA objective outperforms EcoTTA for both CIFAR10-to-CIFAR10C and ImageNet-to-ImageNetC datasets. For ImageNet-to-ImageNetC datasets, FEATHER outperforms all the other approaches, including EcoTTA and CoTTA.\n\n**Efficiency comparison of FEATHER vs CoTTA:** We believe the reviewer has missed a very important point here. The gradient calculation for conducting an update step of FEATHER and CoTTA is not similar. In FEATHER, the adapters are only present for some layers depending on the budget for the parameters. Thus, FEATHER does not introduce adapters after every layer. We have added the following line in section 3.1 to clarify this point: \u201cIn practice, we only insert the adapters in a few locations, depending on the computational and memory budget.\u201d. Further, the **backpropagation only requires the computation of gradients of the adapter parameters and not the entire network.** (also see Appendix F for the architecture-specific adapter locations in detail.) Thus, FEATHER drastically improves the parameter efficiency over CoTTA. This is also reflected in the memory saving and wall-clock timing, which we have reported in the rebuttal (as requested by Reviewer CBjP) and in the updated version of the paper.\n\n**Comparison with baselines such as EATA, ECoTTA:** In Appendix Table 7 in the previous version (now Table 4 in the main paper), we have reported the results for the experiments on CIFAR10-to-CIFAR10C and ImageNet-to-ImageNetC, and FEATHER performs better than EcoTTA, which uses EATA loss.\n\n**Access to source data:** The initialization mechanism that we propose for FEATHER adapters circumvents the need for warm-up training of the adapters as in EcoTTA. Our approach does not inherently need source data for warm-up like EcoTTA. Our contribution is on the architectural aspect; however, if one wishes to use a learning objective like EATA, which depends on the source data for computing Fisher information, along with FEATHER, the source data would be utilized. However, this is a requirement of EATA and not that of FEATHER. We report the results of EATA + FEATHER in the updated version of the paper. (Table 6 and Table 7)\n\n**Efficiency (memory/run-time) comparisons:** We have added the comparison in terms of runtime and memory usage in our common response. We provide detailed reasons for comparing the methods based on the number of trainable parameters.  We believe there is some misunderstanding regarding the results reported for TENT (the entire network). We would like to highlight that the TENT (100% trainable) is an additional setting run by us for a transparent comparison. The original TENT method using only BN params performs poorly in the continual setting due to error accumulation and forgetting over time."
                    }
                },
                "number": 5,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission9237/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700517412027,
                "cdate": 1700517412027,
                "tmdate": 1700517412027,
                "mdate": 1700517412027,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "Ql5KqNPhQl",
            "forum": "6yJuDK1DsK",
            "replyto": "6yJuDK1DsK",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission9237/Reviewer_M9Xj"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission9237/Reviewer_M9Xj"
            ],
            "content": {
                "summary": {
                    "value": "This work presents a novel FEATHER method for lifelong/continual test-time adaptation problems. With the lightweight adapter and freezing the base model, FEATHER is able to adapt the source pre-trained model to the non-stationary test distributions without forgetting the source knowledge and eliminate the error accumulation. More specifically, FEATHER inserts learnable adapter in to the source pre-trained model and only updates them with the unlabeled test data. And the work designs zero and identity initialization for adapters to preserving source knowledge. Experiments show that the FEATHER can achieve comparable performance with SOTA by adjusting few parameters."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "1. Leveraging adapters to address catastrophic forgetting and reduce the accumulation of errors is well motivated.\n2. The paper is well organized."
                },
                "weaknesses": {
                    "value": "1. How to determine where to insert adapter\uff1fIn the work, a combination of PWC and GCO servers as a basic adapter. And adapters will be inserted in to the model between layers. However, there is no mention of where in the network the adapter should be inserted which is one of the most important aspects of method based on adapters. Where to add, from shallow layer to deep layer, or from deep layer to shallow layer, there is no specific experiment to analyze.\n2. Why ZERO AND IDENTITY INITIALIZATION preserves the source knowledge? Maybe a residue architecture with zero initialization will be more simple and effective?\n3. Difference with ECoTTA [1]. In fact, adding adapters between layers has already been proposed in ecotta, and in their analysis experiments, they tried a similar variation of the method in their paper (refer to Architecture design in Section 4.2 in ECoTTA [1]). The choice and novelty of adapter structure is still open to question.\n4. What we should be noticed is that parameter efficient does not mean resource efficient! Inserting adapter into the original model will leads more computational resource including FLOPTS and memory of GPU. But there was little or no performance improvement. \n5. Over claim on the combination of other methods. Combined with tent and cotta, there is no performance improvement.\n6. What is the objective function in the experiments of Table 1,2,3,4,5?\n7. The formulation of Lifelong/Continual Test-time adaptation have some inconformity with existing literature. In CoTTA [2], it is define as adapting the model to the test samples and make predictions for them in an online manner. The description in section 2 seems like an offline fashion.\n\nRefecrence:\n[1] Song et al., Ecotta: Memory-efficient continual test-time adaptation via self-distilled regularization. In CVPR, 2023.\n[2] Wang et al., Continual test-time domain adaptation. In CVPR 2022."
                },
                "questions": {
                    "value": "Please refer to [Weakness]."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 2,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission9237/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698638390881,
            "cdate": 1698638390881,
            "tmdate": 1699637162140,
            "mdate": 1699637162140,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "L4hhG3KGIp",
                "forum": "6yJuDK1DsK",
                "replyto": "Ql5KqNPhQl",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission9237/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission9237/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Response to Reviewer M9Xj"
                    },
                    "comment": {
                        "value": "We thank the reviewer for the comments and suggestions. We request the reviewer to take a look at the common response and the updated version of the paper, which incorporates your and other reviewers\u2019 suggestions. Below, we provide some clarifications regarding the results and novelty of the proposed approach. We hope that you will consider revising your assessment and raising your score.\n\n**Deciding where to add adapters:** Our approach based on adding adapters in between the layers is generic. Based on the computational budget of the deployment environment, the adapters can be added to the main architecture. In the updated version of the paper, we report the locations of the added adapter layers in Appendix F, and the configs for all the architectures will be released with the code base. The location of adapter parameters is dependent on the TTA environment. For example, if the expected noise is corruption, the domain shifts are expected in the initial layers, whereas if the domain shifts occur in semantic space, the suitable adapter locations would be in the deep(er) layers (close to the output layer). In the TTA setting, all the information about the domain shifts is usually not available a priori. To be generic and comply with the TTA setting, this decision should be made based on the dataset and the architecture for which FEATHER is being used. In our experiments and lifelong TTA settings, it would be unfair to predefine/suggest/assume any details related to the domain shifts. Hence the location of the used adapters is generic. (As described in Appendix F)\n\n**Zero and Identity initialization vs residue architecture:** The zero and Identity initialization preserves source knowledge since it acts as an identity operation to begin with during the start. Even though a residue architecture with zero initialization is simpler, it is not as effective as our proposed PWC and GCO-based adapters. In our earlier experiments, we found that, when adding a residual layer, the network collapses when the domain changes occur in the continual setting and adapter parameters are updated. We speculate the primary reason to be the flow of signal to pass through the added parameters and, after the update, the network starts to collapse. We also tried some other initialization schemes like near zero init; however, those do not work well with the continual TTA setup.\n\n**Difference with EcoTTA:** As compared to EcoTTA, FEATHER employs more sophisticated adapters, which is supported by better performance in continual TTA, shown in Table 4 (Table 7 in the previous version), where we compare with EcoTTA as well. Please refer to general comments for more discussion and comparison with EcoTTA. Also, one may refer to section 4.2 of the EcoTTA paper for architecture-specific details, which are quite different from FEATHER.\n\n**Savings in terms of computational/memory requirements:** Thanks for pointing this out and making this suggestion. We report the memory and compute savings in the general response and have updated the paper to also include these results. Our approach is more resource-efficient in terms of computational resources such as memory and FLOPs, which are usually required during the backward passes done during adaptation in test time. Further, we perform better than EcoTTA and other SOTA approaches in continual TTA, as highlighted in Table 4. \n\n**Improvements when combining FEATHER with other methods:** We respectfully disagree that there is no improvement when FEATHER is combined with methods such as TENT and CoTTA. As compared to standard TENT and CoTTA, which require updating all the parameters (100%) during adaptation,  when these methods are augmented with FEATHER, significantly fewer parameters need to be updated, as shown in Table 6. Note that (as we mention in our common response as well as reported by the additional experiments) a reduction in trainable parameters directly affects the memory budget requirement as well as inference/adaptation time  (Table 7).\n\n**The objective function:** Thank you for pointing this out. The objective function in the experiments of Tables 1,2,3,4,5 is the same as that of CoTTA. We briefly mention this in the second line of Section 5.2. In the updated version of the paper, we highlight this in the table captions as well.\n\n**Inconformity in the formulation of Lifelong/Continual TTA:** Note that, in Section 2, we start by defining the standard (non-continual) TTA setting. However, in the second last paragraph, we define the continual/lifelong TTA setting. Since the primary focus of this work is the behavior of adapters in a continual setting, we follow the continual setup for the entire experiments and results section and report the observed findings."
                    }
                },
                "number": 4,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission9237/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700517405112,
                "cdate": 1700517405112,
                "tmdate": 1700517405112,
                "mdate": 1700517405112,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "3audJMIsSG",
                "forum": "6yJuDK1DsK",
                "replyto": "Ql5KqNPhQl",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission9237/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission9237/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Last day for the Discussion Period"
                    },
                    "comment": {
                        "value": "Dear Reviewer M9Xj,\n\nAs the author-reviewer discussion period is about to get over (Nov 22, end-of-day AoE time), we request you to please take a look at our author response (and the updated version of the paper, which incorporates your suggestions and includes the experiments you had suggested) and let us know it your concerns are addressed, and if you have any follow-up questions.\n\nThanks."
                    }
                },
                "number": 12,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission9237/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700634174359,
                "cdate": 1700634174359,
                "tmdate": 1700634174359,
                "mdate": 1700634174359,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "n5SvYEhssG",
            "forum": "6yJuDK1DsK",
            "replyto": "6yJuDK1DsK",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission9237/Reviewer_bPzr"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission9237/Reviewer_bPzr"
            ],
            "content": {
                "summary": {
                    "value": "This paper proposes an adapter-based method for lifelong test-time adaptation. The authors assume that the given source model is a CNN and insert adapters composed of group convolutions and 1x1 convolutions between the layers of the model. During test time, only the inserted adapter and the batch normalization (BN) parameters of the source model are updated, while the remaining weights are fixed. The experiments demonstrate that the proposed approach achieves performance comparable to state-of-the-art methods, despite updating a very small number of trainable parameters."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "2 fair"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "1. This paper is overall clearly clarified and well organized.\n2. The use of adapters for lifelong test-time adaptation seems novel."
                },
                "weaknesses": {
                    "value": "1. The proposed method is only applicable to CNNs.\n2. The authors argue for the importance of preserving the information of the source model in online TTA tasks. However, the proposed method does not exhibit outstanding performance compared to the CoTTA, which involves full fine-tuning of the model. Therefore, the authors fail to sufficiently explain why the use of adapters is suitable for online TTA tasks, apart from the fact that it reduces the number of trainable parameters.\n3. The authors claim that the proposed method excels in terms of parameter update costs; however, the cost of training the adapters inserted between the model's layers, in terms of memory and computation, is not significantly lighter compared to full fine-tuning."
                },
                "questions": {
                    "value": "1. Is it possible to apply the proposed method to Transformers?\n2. Why does CoTTA generally outperform the proposed method?\n3. Could you compare the proposed method with other methods in terms of memory and computation?"
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "3: reject, not good enough"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 3,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission9237/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698647183681,
            "cdate": 1698647183681,
            "tmdate": 1699637162036,
            "mdate": 1699637162036,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "fWXCYoEqBb",
                "forum": "6yJuDK1DsK",
                "replyto": "n5SvYEhssG",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission9237/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission9237/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Response to Reviewer bPzr"
                    },
                    "comment": {
                        "value": "We thank the reviewer for the comments and suggestions, and are glad that the reviewer finds our idea novel. Please refer to our common response as well as the updated version of the paper that has incorporated the various comments from all the reviewers. Below, we respond to your specific comments/concerns, and we hope that you will consider revising your opinion and consider increasing the score in light of our response.\n\n**Is FEATHER only applicable to CNNs?** As we mention in the common response, although we demonstrate our idea for generic CNN-based architectures for computer vision, our idea is general and can be applied to any deep learning architecture (including transformers) that allows the insertion of adapters between layers. Some implementational aspects will need to be changed based on the underlying architecture, but the rest of the idea is more broadly applicable.\n\n**Improvement over CoTTA:** Please refer to our common response.\n\n**Memory and computation savings:** Please refer to our common response.\n\n**Why CoTTA \u201coutperforms\u201d our method?** We respectfully disagree with this and would like to draw your attention to a few key points (also mentioned in our common response). Please note that, while CoTTA with **all** parameters trainable outperforms FEATHER marginally, CoTTA also has significantly more trainable parameters. In contrast, FEATHER only uses ~7.2% to 12.2% trainable parameters and yet performs comparably to CoTTA. Further, we demonstrate in Table 5 that with only 50.32% trainable parameters, FEATHER **outperforms** CoTTA, which highlights that even adapting just around half the number of parameters is enough."
                    }
                },
                "number": 3,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission9237/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700517396987,
                "cdate": 1700517396987,
                "tmdate": 1700517396987,
                "mdate": 1700517396987,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "7giuisyg75",
                "forum": "6yJuDK1DsK",
                "replyto": "n5SvYEhssG",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission9237/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission9237/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Last day for the Discussion Period"
                    },
                    "comment": {
                        "value": "Dear Reviewer bPzr,\n\nAs the author-reviewer discussion period is about to get over (Nov 22, end-of-day AoE time), we request you to please take a look at our author response (and the updated version of the paper, which incorporates your suggestions and includes some additional experiments) and let us know it your concerns are addressed, and if you have any follow-up questions.\n\nThanks."
                    }
                },
                "number": 11,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission9237/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700634134379,
                "cdate": 1700634134379,
                "tmdate": 1700634134379,
                "mdate": 1700634134379,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "FOBmGutt6B",
                "forum": "6yJuDK1DsK",
                "replyto": "7giuisyg75",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission9237/Reviewer_bPzr"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission9237/Reviewer_bPzr"
                ],
                "content": {
                    "title": {
                        "value": "Post-rebuttal"
                    },
                    "comment": {
                        "value": "Thanks to the authors for addressing my concerns. However, I still have some concerns regarding the following points:\n1. Of course, one can imagine applying a similar approach to different architectures, but I believe it is meaningful to actually implement and observe the effects. As far as I know, TTA experiments do not incur high costs, yet despite that, the authors do not provide experimental results for different architectures.\n2. The authors emphasize the importance of preserving source knowledge in TTA scenarios, proposing a method that freezes the source model and relies on adapters, but it does not surpass the performance of a full fine-tuning approach. There is a need to deliver contributions beyond confirming observations from existing adapter studies in the TTA scenario.\n3. The reduction in memory or computation cost does not proportionally align with the reduction in parameters. To enhance TTA efficiency, there are better adapter-based methods available [1, 2].  \n\n[1] Zhang, Jeffrey O., et al. \"Side-tuning: a baseline for network adaptation via additive side networks.\", ECCV 2020.  \n[2] Sung, Yi-Lin, Jaemin Cho, and Mohit Bansal. \"Lst: Ladder side-tuning for parameter and memory efficient transfer learning.\", NeurIPS 2022."
                    }
                },
                "number": 13,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission9237/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700647090954,
                "cdate": 1700647090954,
                "tmdate": 1700647090954,
                "mdate": 1700647090954,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "4xQkdeoeIh",
                "forum": "6yJuDK1DsK",
                "replyto": "n5SvYEhssG",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission9237/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission9237/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "Thank you for engaging in a discussion. We believe there is some potential misunderstanding about some of the key aspects, and we request you to look at our response below, which we hope will clarify the misunderstanding and we hope that you can do a fair assessment in light of these points.\n\n1. For our experiments, for a fair comparison and to assess the improvement of performance over existing methods, we follow the architectures proposed in existing methods on lifelong TTA on the popularly used RobustBench platform, where the architectures are CNN-based. Since the numbers reported by other methods in the lifelong TTA setting use such architectures, it would be unfair to compare them against another architecture, like a transformer-based architecture.\n \n2. We would reiterate that our aim is not to surpass the performance of the full fine-tuning approach but rather to perform at least comparably with a significantly smaller number of parameters (which also translates into memory and time savings, as our results show). Our experimental results show that FEATHER is flexible in terms of the available computational budget and even outperforms CoTTA if the computational budget is increased (roughly 50% of CoTTA budget; please refer to Table 5). Please note the primary aim here is to reduce the computational budget. Moreover, the results in Table 3 for the ImageNet-to-ImageNetC dataset show that FEATHER achieves an improvement with only ~10% of parameters being trained. \n\n3. We respectfully disagree that a reduction in memory or computation cost does not align with the reduction in parameters (as shown in Table 7 and explained in the text around it, we get improvements on these metrics, too).  We would also like to highlight that **both the papers mentioned by you are about standard fine-tuning for transfer learning and not for TTA or lifelong TTA**, whereas our work is about lifelong TTA. Lifelong TTA presents a very different set of challenges than standard fine-tuning, which is done during the training phase, whereas TTA or lifelong TTA must perform fine-tuning at inference time using the unlabeled test input(s).\n\nWe hope our response above clarifies the potential misunderstandings and that you reconsider your original assessment of our paper. We would be happy to answer any other concerns/comments you might have."
                    }
                },
                "number": 14,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission9237/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700662739786,
                "cdate": 1700662739786,
                "tmdate": 1700662903146,
                "mdate": 1700662903146,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "D7O3XKGyeO",
                "forum": "6yJuDK1DsK",
                "replyto": "4xQkdeoeIh",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission9237/Reviewer_bPzr"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission9237/Reviewer_bPzr"
                ],
                "content": {
                    "comment": {
                        "value": "Thank you for the comment. My last question is:\n1. How does the proposed adapter differ from previously suggested adapters in transfer learning research, and why is it superior in TTA scenarios?"
                    }
                },
                "number": 17,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission9237/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700727842640,
                "cdate": 1700727842640,
                "tmdate": 1700727842640,
                "mdate": 1700727842640,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "fnqRIk91Rj",
                "forum": "6yJuDK1DsK",
                "replyto": "n5SvYEhssG",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission9237/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission9237/Authors"
                ],
                "content": {
                    "comment": {
                        "value": "Thanks for going through our earlier response and the follow-up question. Our response to your question is given below, and we hope that it helps clarify the **difference** between adapter design and **update strategies used in lifelong TTA** and **standard transfer learning**.\n\nThe adapters used in our work are designed specifically, keeping in mind the challenges posed by TTA and lifelong TTA. Standard adapters used in transfer learning are not directly applicable in TTA (and especially lifelong TTA) because:\n\n(1) In TTA and lifelong TTA, the adapter parameters are trained at inference time using an **unsupervised loss** (which can be CoTTA, TENT, EATA, etc.), whereas, in transfer learning, during fine-tuning on the target domain, the adapter parameters are **trained using a supervised loss** defined on the target domain's labeled examples. Because of the need for unsupervised adapter parameter updates, we leverage learning objectives that are based on entropy or cross-entropy (utilizing pseudo labels).\n\n(2) Unlike standard transfer learning, in lifelong TTA, due to the need for unsupervised finetuning, there is a potential risk of error accumulation over longer horizons as the test domains keep drifting over time. Our framework FEATHER, because of the design strategies, such as **identity initialization** of the adapter, ensures that such error accumulation is mitigated effectively. \n\n(3) In transfer learning using adapters, the adapter updates can leverage the labeled examples for multiple iterations, whereas, in our lifelong TTA setting, we have to operate in an **online** setting where we do not have the luxury to revisit the unlabeled test samples more than once. In this aspect, too, FEATHER\u2019s adapter update strategy is different from the adapter update used by standard supervised fine-tuning-based transfer learning."
                    }
                },
                "number": 18,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission9237/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700737524262,
                "cdate": 1700737524262,
                "tmdate": 1700737726593,
                "mdate": 1700737726593,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    },
    {
        "review": {
            "id": "U3LI6iFppw",
            "forum": "6yJuDK1DsK",
            "replyto": "6yJuDK1DsK",
            "signatures": [
                "ICLR.cc/2024/Conference/Submission9237/Reviewer_CBjP"
            ],
            "nonreaders": [],
            "readers": [
                "everyone"
            ],
            "writers": [
                "ICLR.cc/2024/Conference",
                "ICLR.cc/2024/Conference/Submission9237/Reviewer_CBjP"
            ],
            "content": {
                "summary": {
                    "value": "The paper focuses on the continual test time adaptation (CTTA), where the test input has a time-varying domain. The authors propose cost-effective CTTA method, called FEATHER, which mitigates the forgetting issue of previous methods in CTTA scenarios. The proposed method is particularly useful in practice as it does not require any access to the source dataset, whereas most of the existing ones do. The authors demonstrate the efficacy of the proposed method in various CTTA scenarios. In addition, they empirically show a comparative advantage over existing methods, even including ones requiring access to the source domain in a TTA scenario."
                },
                "soundness": {
                    "value": "2 fair"
                },
                "presentation": {
                    "value": "3 good"
                },
                "contribution": {
                    "value": "2 fair"
                },
                "strengths": {
                    "value": "The proposed method, FEATHER, addresses the forgetting issue in CTTA with no access to the source domain, which is often limited in the practice of TTA yet is required for existing methods. Specifically, it proposes to employ a set of new parameters and clever initialization, that do not harm the performance at the beginning (without seeing the source dataset), while enabling an effective prevention of the forgetting issue. There was a similar approach (EcoTTA: Song et al. 2023) but it requires warm-up phase to find such a harmless initialization of additional parameters based on the source dataset. In addition, FEATHER is memory-efficient as it reduces the number of parameters to be updated in the procedure of TTA. Such benefit and efficacy of the proposed method have been demonstrated on a set of experiments (CIFAR10C, CIFAR100C, ImageNetC, ImageNet3DCC)."
                },
                "weaknesses": {
                    "value": "My major concern is the limited justification of the proposed method. In my understanding, the main selling point is to address CTTA problems at reduced computational complexity with no access to the training dataset. However, there seem no comparisons to SOTA algorithms in terms of CTTA performance and computational complexity, although they require some access to the training dataset. In addition, as the reduced number of updating parameters does not always imply reduced computational complexity, it is necessary to report time complexity (wall-clock time to process a batch). Lastly, the proposed method may have architecture-dependent effectiveness. Hence, it is also necessary to provide discussion or experiment with various model architectures."
                },
                "questions": {
                    "value": "In my understanding, Table 7 reports the performance on the most basic TTA scenario (i.e., no continual setup). Please clarify the setting for Table 7. If my understanding is correct, please provide a fair comparison to existing state-of-the-art (SOTA) methods in CTTA, although SOTA methods need some access to the training dataset. This would help to understand the effectiveness of the proposed method.\n\nThe proposed method seems an architecture-specific solution. Is it possible to apply FEATHER to other model architectures (e.g., ViT or other CNN-based ones)?\n\nCan you provide a comparison of TTA methods in terms of time complexity (wall-clock time) per batch? I do understand the time complexity would be proportional to the number of parameters. However, there can be other computational cost in TTA algorithms. For instance, in my understanding, COTTA is particularly slow due to the use of data augmentation to obtain a more robust pseudo-label.\n\nIn my understanding, it is straightforward to make a variant of COTTA, which updates only BN layers. Noting that adapting BN layers is parameter-effective in TTA, it is also interesting to compare FETHER to the COTTA variant, in terms of parameter complexity and TTA/CTTA performance."
                },
                "flag_for_ethics_review": {
                    "value": [
                        "No ethics review needed."
                    ]
                },
                "rating": {
                    "value": "5: marginally below the acceptance threshold"
                },
                "confidence": {
                    "value": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
                },
                "code_of_conduct": {
                    "value": "Yes"
                }
            },
            "number": 4,
            "invitations": [
                "ICLR.cc/2024/Conference/Submission9237/-/Official_Review",
                "ICLR.cc/2024/Conference/-/Edit"
            ],
            "domain": "ICLR.cc/2024/Conference",
            "tcdate": 1698823509245,
            "cdate": 1698823509245,
            "tmdate": 1699637161904,
            "mdate": 1699637161904,
            "license": "CC BY 4.0",
            "version": 2
        },
        "responses": [
            {
                "id": "e6enDupMES",
                "forum": "6yJuDK1DsK",
                "replyto": "U3LI6iFppw",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission9237/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission9237/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Response to Reviewer CBjP"
                    },
                    "comment": {
                        "value": "Thanks for your detailed and insightful comments. In addition to our common response to all the reviewers, we provide below our response to your specific concerns/questions and hope that you will reconsider your original assessment and revise your score as you deem appropriate.\n\n**Comparison with other SOTA methods that use source data:** Please see our common response.\n\n**Memory usage and wall-clock time comparisons:** In our common response, we have explained why we had shown results about savings in the number of parameters and how it results in reductions in memory usage and wall-clock time. We agree with your suggestion that it will be insightful to report these numbers as well, and have performed additional experiments and included these results in the updated version of the paper (Table 7). The table clearly shows that reducing the parameters (specifically _**updatable parameters**_) directly reduces the memory consumption by a significant margin, as well as the time required for the adaptation. Note that the reported wall-clock times are averaged over all 15 corruptions for all the methods.\n\n**Is the approach architecture-specific?** Please see our common response.\n\n**Clarification about Table 7:** We apologize for the misunderstanding. The experiments in Table 7 (of the original paper), as well as the rest of the paper, follow a **lifelong/continual TTA** setup (not standard TTA). We have updated the caption in Table 7 in the new version of the paper (Table 4 in the updated version of the paper).\n\n**Variant of CoTTA with only BN params updates:** Thanks for your suggestion. In the updated version, we report results (Table 10) not just for CoTTA with BN params but also for EATA (BN params), EATA (all params), and EATA + FEATHER (adapter params). Our experiments highlight that, with a significantly smaller number of trainable parameters, similar performance can be achieved while keeping the source knowledge intact."
                    }
                },
                "number": 2,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission9237/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700517390841,
                "cdate": 1700517390841,
                "tmdate": 1700517390841,
                "mdate": 1700517390841,
                "license": "CC BY 4.0",
                "version": 2
            },
            {
                "id": "lu72XGFTgv",
                "forum": "6yJuDK1DsK",
                "replyto": "U3LI6iFppw",
                "signatures": [
                    "ICLR.cc/2024/Conference/Submission9237/Authors"
                ],
                "readers": [
                    "everyone"
                ],
                "writers": [
                    "ICLR.cc/2024/Conference",
                    "ICLR.cc/2024/Conference/Submission9237/Authors"
                ],
                "content": {
                    "title": {
                        "value": "Last day for the Discussion Period"
                    },
                    "comment": {
                        "value": "Dear Reviewer CBjP,\n\nAs the author-reviewer discussion period is about to get over (Nov 22, end-of-day AoE time), we request you to please take a look at our author response (and the updated version of the paper, which incorporates your suggestions and includes the experiments you had suggested) and let us know it your concerns are addressed, and if you have any follow-up questions.\n\nThanks."
                    }
                },
                "number": 9,
                "invitations": [
                    "ICLR.cc/2024/Conference/Submission9237/-/Official_Comment"
                ],
                "domain": "ICLR.cc/2024/Conference",
                "tcdate": 1700633922757,
                "cdate": 1700633922757,
                "tmdate": 1700634113176,
                "mdate": 1700634113176,
                "license": "CC BY 4.0",
                "version": 2
            }
        ]
    }
]