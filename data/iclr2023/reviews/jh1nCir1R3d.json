[
    {
        "id": "GbgWCw5Zx5",
        "original": null,
        "number": 1,
        "cdate": 1666550567053,
        "mdate": null,
        "ddate": null,
        "tcdate": 1666550567053,
        "tmdate": 1669395659269,
        "tddate": null,
        "forum": "jh1nCir1R3d",
        "replyto": "jh1nCir1R3d",
        "invitation": "ICLR.cc/2023/Conference/Paper2216/-/Official_Review",
        "content": {
            "confidence": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked.",
            "summary_of_the_paper": "This paper proposes SWIFT, which is claimed to be a wait-free asynchronous decentralized optimization algorithm. This paper provides a theory for the convergence rate and uses experiments to show the effectiveness of the proposed algorithm.",
            "strength_and_weaknesses": "Strength:\n1. The proposed algorithm uses the ideas from local steps, which is well applied in federated learning scenarios.\n2. In the theory part, it tries to remove the bounded delay assumption used by most other asynchronous optimization algorithms. (See the weakness part for more discussion on this)\n3. The numerical experiment result seems interesting if the authors can justify their experiment is actually in the asynchronous setting. (See the weakness part for more discussion)\n\nWeakness:\n1. (Major) I think the setting in this paper considered is not the asynchronous setting, at least from the theory part. This is more like the \"partial participation\" case in the distributed optimization/federated learning but not the asynchronous setting, and thus I still think that it is a synchronous algorithm (or at least the analysis is for the synchronous setting). The reason is that, this paper seems to require that only a single agent/client can do the update during each round, but the asynchronous setting does not require this and the other clients can start updating even before the other client ends. Nonetheless, partial participation/client sampling is still interesting for decentralized optimization algorithms. From an empirical point of view, this partial participation/client sampling can indeed make communication faster (because do not need to wait for all), but from the theory side, it is very different from the asynchronous setting.\n2. (Major) It is not clear how the experiment is done (even in the appendix): for example if there is a notion of a round in the implementation. If yes (and it is exactly what is show in the algorithm), then the implementation is also not asynchronous but synchronous, and it should be compared to the synchronous algorithms.\n3. (Minor) Why not compare to the best synchronized decentralized algorithms like D2? D2 can better handle the data heterogeneity issue than D-SGD.\n4. (Minor) The theory needs the bounded dissimilarity between each client/agent, and thus may not handle arbitrary heterogeneity.\n5. (Minor) For theory, T needs to be larger than $n^2$, which seems not tight.",
            "clarity,_quality,_novelty_and_reproducibility": "Clarity:\nBased on the review and opinion in the weakness part, I don't think that the author did a great job making the setting of this paper clear (between the asynchronous and synchronous settings). The writing for other parts, e.g. proofs, algorithms, and experiments except the settings, is very clear to me.\n\nQuality:\nFor the theory part, I don't think that the contribution is very significant because I don't think the setting is asynchronous. (However, the client sampling/partial participation in decentralized optimization also seems interesting to me, see the summary part for more discussions and questions). For the empirical part, the results and experiment seem interesting to me, but my concern about the setting still holds.\n\nNovelty:\nEven though the setting is a little bit confusing to me, it is still interesting to consider for theoretical and empirical people. However, the synchronous nature of the setting should make the analysis much easier than the real asynchronous setting.\n\nReproducibility:\nCan be reproduced.",
            "summary_of_the_review": "Here I list the summary and my questions. I hope that the authors can point out my misunderstandings about the settings or clarify my questions during the author's response.\n\n1. (Major) The setting. To me, the setting considered in this paper is the synchronous setting, not the asynchronous setting. The asynchronous setting considered in [1] allows clients to grab the model \"before\" another client ends the round. The author should discuss much more why the setting considered in this paper is also asynchronous setting, e.g., by giving more citations.\n2. (Major) The author should also discuss how the experiment is done, e.g., if a client needs to wait until another client finishes its round. From the algorithm, it seems not but for the general understanding of the asynchronous algorithm, it should be yes.\n3. For comparison, I suggest the authors to compare with the best synchronous optimization algorithms that can also deal with data heterogeneity, e.g., D2 [2].\n4. Why the theory needs $T \\ge \\Omega(n^2)$. Naively thinking, $\\tilde O(n)$ rounds should be equivalent to a single round in the synchronous setting, and thus intuitively, $T$ should only larger than $\\Omega(n)$?\n\nGiven the questions above, I believe this paper does not reach the acceptance bar at this time. I am happy to adjust the score after the authors point out my conceptual misunderstanding or answer my questions.\n\n\nCitations\n\n[1] Asynchronous Stochastic Gradient Descent with Delay Compensation. Zheng et al., 2016\n\n[2] D2 : Decentralized Training over Decentralized Data. Tang et al., 2018",
            "correctness": "3: Some of the paper\u2019s claims have minor issues. A few statements are not well-supported, or require small changes to be made correct.",
            "technical_novelty_and_significance": "2: The contributions are only marginally significant or novel.",
            "empirical_novelty_and_significance": "3: The contributions are significant and somewhat new. Aspects of the contributions exist in prior work.",
            "flag_for_ethics_review": [
                "NO."
            ],
            "recommendation": "6: marginally above the acceptance threshold"
        },
        "signatures": [
            "ICLR.cc/2023/Conference/Paper2216/Reviewer_Cc5h"
        ],
        "readers": [
            "everyone"
        ],
        "nonreaders": [],
        "writers": [
            "ICLR.cc/2023/Conference",
            "ICLR.cc/2023/Conference/Paper2216/Reviewer_Cc5h"
        ]
    },
    {
        "id": "r4MPlTs4D1D",
        "original": null,
        "number": 2,
        "cdate": 1666683076152,
        "mdate": null,
        "ddate": null,
        "tcdate": 1666683076152,
        "tmdate": 1666683076152,
        "tddate": null,
        "forum": "jh1nCir1R3d",
        "replyto": "jh1nCir1R3d",
        "invitation": "ICLR.cc/2023/Conference/Paper2216/-/Official_Review",
        "content": {
            "confidence": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked.",
            "summary_of_the_paper": "This paper propose a novel wait-free decentralized FL algorithm, which is a decentralized SGD algorithm with heterogeneous local updates and asynchronous local model synchronization. Theoretical analysis is provided for both iid and non-iid cases. The empirical results show good performance.",
            "strength_and_weaknesses": "Strength:\n1. This paper propose a novel wait-free decentralized FL algorithm, which is a decentralized SGD algorithm with heterogeneous local updates and asynchronous local model synchronization. \n2. A novel client-communication weight selection algorithm is proposed.\n3. Theoretical analysis is provided for both iid and non-iid cases. \n4. The empirical results show good performance.\n\nWeakness (concerns and questions):\n1. In the experiments, 2 network topologies including ROC and ROC-xC are used. Are these 2 types of topologies common for the FL scenario? If so, is there any reference to support that? Otherwise, I would recommend the authors to explain why these 2 types of topologies are chosen for the experiments, or adding more experiments with other types of topologies.\n2. How is the convergence affected by the network topology, or the properties of the mixing matrix W (e.g., eigenvalues of its graph Laplacian)?\n3. The communication pattern of SWIFT actually have 2 kinds of uncertainty: 1. inactive clients; 2. randomly selected active client for communication. However, I could only find 1 expectation, namely the client-communication matrix. Does the expected client-communication matrix resolve the uncertainty for both inactive clients and random communication? If so, I believe that the expected client-communication matrix indicates the expected delay for all the clients. Given the expected delay, we surely do not need the upper bound of the delay for the theoretical analysis. I think this is a simple trick, but the authors' overclaim of the theoretical analysis without the bounded delay assumption may get the readers confused. I would recommend the authors to clarify it.",
            "clarity,_quality,_novelty_and_reproducibility": "In overall, I think this is a good paper with thorough theoretical and empirical analysis. \nThe supplementary material provides the source code and scripts to reproduce the experiments.\nThough I would recommend the authors to clarify how they get rid of the bound-delay assumption in the theoretical analysis, I don't think it is a big issue.",
            "summary_of_the_review": "In overall, I think this is a good paper with thorough theoretical and empirical analysis. ",
            "correctness": "3: Some of the paper\u2019s claims have minor issues. A few statements are not well-supported, or require small changes to be made correct.",
            "technical_novelty_and_significance": "3: The contributions are significant and somewhat new. Aspects of the contributions exist in prior work.",
            "empirical_novelty_and_significance": "3: The contributions are significant and somewhat new. Aspects of the contributions exist in prior work.",
            "flag_for_ethics_review": [
                "NO."
            ],
            "recommendation": "6: marginally above the acceptance threshold"
        },
        "signatures": [
            "ICLR.cc/2023/Conference/Paper2216/Reviewer_BZ9x"
        ],
        "readers": [
            "everyone"
        ],
        "nonreaders": [],
        "writers": [
            "ICLR.cc/2023/Conference",
            "ICLR.cc/2023/Conference/Paper2216/Reviewer_BZ9x"
        ]
    },
    {
        "id": "54V4urJLEPx",
        "original": null,
        "number": 3,
        "cdate": 1666891814779,
        "mdate": null,
        "ddate": null,
        "tcdate": 1666891814779,
        "tmdate": 1669328698119,
        "tddate": null,
        "forum": "jh1nCir1R3d",
        "replyto": "jh1nCir1R3d",
        "invitation": "ICLR.cc/2023/Conference/Paper2216/-/Official_Review",
        "content": {
            "confidence": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked.",
            "summary_of_the_paper": "This paper considers asynchronous training in the absence of a central server. They propose a novel algorithm SWIFT to address the problem and does not rely on the common bounded delay assumption. Convergence rates and empirical validations are provided ",
            "strength_and_weaknesses": "There are two aspects that concern me the most:\n\n- Algorithm 1 is not wait-free according to Line 11 and 12. As far as I can see, worker i has to wait for the models from all of its neighbors before averaging. If any update of its neighbor is delayed, which could be an unbounded delay, then worker i is blocked.  Then in the future communication rounds, all neighbors of i are blocked as they have to wait for worker i for updates. I didn't find how the asynchrony is actually addressed in the algorithm.\n\n- There is no theoretical benefit to use SWIFT. The convergence rate is $O(1/sqrt{T})$ which does not scale with the number of workers $n$.  It means SWIFT is not benefiting from the collaborative training and only have the same rate as training alone.",
            "clarity,_quality,_novelty_and_reproducibility": "There are two important questions that concern me. ",
            "summary_of_the_review": "I have listed two questions that concern me. I recommend rejection if the authors cannot address them. ",
            "correctness": "2: Several of the paper\u2019s claims are incorrect or not well-supported.",
            "technical_novelty_and_significance": "2: The contributions are only marginally significant or novel.",
            "empirical_novelty_and_significance": "2: The contributions are only marginally significant or novel.",
            "flag_for_ethics_review": [
                "NO."
            ],
            "recommendation": "6: marginally above the acceptance threshold"
        },
        "signatures": [
            "ICLR.cc/2023/Conference/Paper2216/Reviewer_1Mgi"
        ],
        "readers": [
            "everyone"
        ],
        "nonreaders": [],
        "writers": [
            "ICLR.cc/2023/Conference",
            "ICLR.cc/2023/Conference/Paper2216/Reviewer_1Mgi"
        ]
    },
    {
        "id": "m8hMI_b96aT",
        "original": null,
        "number": 4,
        "cdate": 1667416762751,
        "mdate": null,
        "ddate": null,
        "tcdate": 1667416762751,
        "tmdate": 1667416762751,
        "tddate": null,
        "forum": "jh1nCir1R3d",
        "replyto": "jh1nCir1R3d",
        "invitation": "ICLR.cc/2023/Conference/Paper2216/-/Official_Review",
        "content": {
            "confidence": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work.",
            "summary_of_the_paper": "This paper proposes a new asynchronous decentralized training algorithm with local updates, named SWIFT. Compared to previous works in this direction, the authors removed the bounded delay assumption in analysis, and hence, obtained better theoretical results. In order to ensure the convergence, a new technique is introduced to allow non-symmetric non-doubly stochastic mixing matrices. At the end, experiments on CIFAR10 dataset with a cluster of machines validate the superiority of the proposed algorithm.",
            "strength_and_weaknesses": "## Strength\n1. The authors removed the bounded delay assumption in nearly all previous works when analyzing asynchronous decentralized training algorithms.\n1. In order to ensure convergence, several new techniques are introduced to deal with non-symmetric and non-doubly stochastic mixing matrices.\n1. The authors are able to run experiments on a real cluster of machines, instead of just simulating runtimes on a single machine. So the experimental results are more convincing.\n\n\n## Weakness\n1. Asynchronous decentralized training is already a mature technique. As the authors mentioned in the paper, several papers already proposed, such as AD-PSGD, and [1]. After reading the paper, it is unclear why do we need a new asynchronous algorithm. I understand that it is an important contribution to remove the bounded delay assumption. But it should be clear whether the algorithmic changes or new analysis techniques enable this theory advancement. The authors are supposed to highlight the insights on how and why. \n2. The authors mentioned several places (e.g. in the abstract) that SWIFT reduces the communication time per round. But this statement is not accurate. As an asynchronous algorithm, SWIFT does not change the communication time but just reduce/remove the idle time in waiting for slow workers. I suggest the authors to refine the related statements.\n3. I did not get why SWIFT needs to randomly select an active client at each round. If so, there must be some idle time at some clients, as they are not selected but may already finish computation. In practice, the active clients should be determined by the randomness in the client computation time. Once a client finishes local computation, it can trigger a communication and be labeled as the active clients. Server cannot control this process. The authors are supposed to provide clarifications on this.\n4. If the above point is true, then that means the actual running SWIFT is different from what the authors analyze. The authors model the randomness in computing time by randomly selecting active clients. This can be a very rough approximation. The authors should justify why this theoretical approximation make sense and why this assumption is better than bounded delay assumption. Also, it should be made clear in the paper that their analysis is applied to a variant (possibly simplified version) of SWIFT.",
            "clarity,_quality,_novelty_and_reproducibility": "Overall the paper is well-written but I found that some details are unclear. While asynchronous decentralized training is not new, it is interesting to see a new variant, which does not need bounded delay assumption.",
            "summary_of_the_review": "I believe this paper make a good contribution in advancing asynchronous decentralized training algorithm, but some technical details are unclear such that I cannot accurately evaluate its significance.",
            "correctness": "3: Some of the paper\u2019s claims have minor issues. A few statements are not well-supported, or require small changes to be made correct.",
            "technical_novelty_and_significance": "3: The contributions are significant and somewhat new. Aspects of the contributions exist in prior work.",
            "empirical_novelty_and_significance": "3: The contributions are significant and somewhat new. Aspects of the contributions exist in prior work.",
            "flag_for_ethics_review": [
                "NO."
            ],
            "recommendation": "6: marginally above the acceptance threshold"
        },
        "signatures": [
            "ICLR.cc/2023/Conference/Paper2216/Reviewer_KnPQ"
        ],
        "readers": [
            "everyone"
        ],
        "nonreaders": [],
        "writers": [
            "ICLR.cc/2023/Conference",
            "ICLR.cc/2023/Conference/Paper2216/Reviewer_KnPQ"
        ]
    }
]